{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n\n        if (res.data.length === 0) {\n          setDep([]);\n        } else {\n          setDep(res.data);\n        }\n      } catch (error) {\n        console.error('Error fetching department data:', error);\n      }\n    };\n\n    getDeps();\n  }, []);\n  useEffect(() => {\n    // Функция для нахождения узла с выбранным id в дереве\n    const findNodeById = (nodes, id) => {\n      for (let node of nodes) {\n        if (node.department_tree_to_json.id === id) {\n          return node;\n        }\n\n        if (node.department_tree_to_json.Subclasses) {\n          const found = findNodeById(node.department_tree_to_json.Subclasses, id);\n          if (found) return found;\n        }\n      }\n\n      return null;\n    };\n\n    if (12 && dep.length > 0) {\n      const nodeToOpen = findNodeById(dep, 12);\n\n      if (nodeToOpen) {\n        // Функция для раскрытия узла\n        const openNode = node => {\n          node.isOpen = true; // Добавить поле isOpen в ваш объект узла, чтобы отслеживать состояние открытия\n\n          if (node.parent) openNode(node.parent);\n        };\n\n        openNode(nodeToOpen); // Устанавливаем новый state, чтобы компонент перерисовался с открытым узлом\n\n        setDep([...dep]);\n      }\n    }\n  }, [12, dep]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => /*#__PURE__*/_jsxDEV(TreeView, {\n            nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this),\n            defaultCollapsed: false,\n            isOpen: node.isOpen,\n            children: node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map(subNode => /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${subNode.id}`,\n                className: \"depsUser\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"node\",\n                  children: subNode.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 49\n              }, this),\n              defaultCollapsed: true,\n              isOpen: subNode.isOpen,\n              children: subNode.Subclasses && subNode.Subclasses.map(subSubNode => /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${subSubNode.id}`,\n                className: \"depsUser\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    paddingBottom: '8px'\n                  },\n                  children: subSubNode.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 53\n                }, this)\n              }, subSubNode.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 49\n              }, this))\n            }, subNode.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this))\n          }, node.department_tree_to_json.id + '|' + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"WJREAWVzbvLQkDmYawbenzKdGO8=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","getDeps","res","get","data","length","error","console","findNodeById","nodes","id","node","department_tree_to_json","Subclasses","found","nodeToOpen","openNode","isOpen","parent","map","i","Name","subNode","subSubNode","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                if (res.data.length === 0) {\r\n                    setDep([]);\r\n                } else {\r\n                    setDep(res.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching department data:', error);\r\n            }\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Функция для нахождения узла с выбранным id в дереве\r\n        const findNodeById = (nodes, id) => {\r\n            for (let node of nodes) {\r\n                if (node.department_tree_to_json.id === id) {\r\n                    return node;\r\n                }\r\n                if (node.department_tree_to_json.Subclasses) {\r\n                    const found = findNodeById(node.department_tree_to_json.Subclasses, id);\r\n                    if (found) return found;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n\r\n        if (12 && dep.length > 0) {\r\n            const nodeToOpen = findNodeById(dep, 12);\r\n            if (nodeToOpen) {\r\n                // Функция для раскрытия узла\r\n                const openNode = (node) => {\r\n                    node.isOpen = true; // Добавить поле isOpen в ваш объект узла, чтобы отслеживать состояние открытия\r\n                    if (node.parent) openNode(node.parent);\r\n                };\r\n\r\n                openNode(nodeToOpen);\r\n                // Устанавливаем новый state, чтобы компонент перерисовался с открытым узлом\r\n                setDep([...dep]);\r\n            }\r\n        }\r\n    }, [12, dep]);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length > 0 && (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.id + '|' + i}\r\n                                    nodeLabel={(\r\n                                        <Link\r\n                                            to={`/department/${node.department_tree_to_json.id}`}\r\n                                            className='level1'\r\n                                        >\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )}\r\n                                    defaultCollapsed={false}\r\n                                    isOpen={node.isOpen}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map((subNode) => (\r\n                                        <TreeView\r\n                                            key={subNode.id}\r\n                                            nodeLabel={(\r\n                                                <Link\r\n                                                    to={`/department/${subNode.id}`}\r\n                                                    className='depsUser'\r\n                                                >\r\n                                                    <span className=\"node\">{subNode.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={true}\r\n                                            isOpen={subNode.isOpen}\r\n                                        >\r\n                                            {subNode.Subclasses && subNode.Subclasses.map((subSubNode) => (\r\n                                                <Link\r\n                                                    key={subSubNode.id}\r\n                                                    to={`/department/${subSubNode.id}`}\r\n                                                    className='depsUser'\r\n                                                >\r\n                                                    <div style={{ paddingBottom: '8px' }}>{subSubNode.Name}</div>\r\n                                                </Link>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}