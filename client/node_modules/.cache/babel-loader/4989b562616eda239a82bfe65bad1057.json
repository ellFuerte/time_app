{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\AddNomination\\\\AddNomination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNomination({\n  modalVote,\n  setModalVote,\n  username\n}) {\n  _s();\n\n  const [checkedItems, setCheckedItems] = useState({});\n  const [check, setCheck] = useState();\n  const [er, setErr] = useState('');\n  const [user, setUser] = useState([]);\n  const [vote, setVote] = useState([]);\n  useEffect(() => {\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n      const resUser = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n    };\n\n    fetchVote();\n  }, []);\n  console.log('user.nomination_status=', user.nomination_status);\n\n  const secureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username,\n      id_nomination: null\n    };\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    setUser(prevState => ({ ...prevState,\n      nomination_status: checked ? voteId : null\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: modalVote,\n    setActive: setModalVote,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalError\",\n      children: er\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voteContainer\",\n        children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteItem\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            className: \"inputVote\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: vote.id,\n              value: vote.id,\n              onChange: e => inputClick(e, vote.id),\n              checked: user.nomination_status === vote.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `../images/${vote.id}.png`,\n              alt: `Image for ${vote.nominations_name}`,\n              className: \"images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: secureButton,\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: clearSecureButton,\n      children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNomination, \"0sPg8D1P0SFI8TA7i/iilbV6inU=\");\n\n_c = AddNomination;\nexport default AddNomination;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNomination\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/AddNomination/AddNomination.jsx"],"names":["React","useEffect","useState","Modal","axios","AddNomination","modalVote","setModalVote","username","checkedItems","setCheckedItems","check","setCheck","er","setErr","user","setUser","vote","setVote","fetchVote","res","get","data","resUser","console","log","nomination_status","secureButton","addNomination","userId","id_nomination","undefined","post","window","location","reload","clearSecureButton","inputClick","event","voteId","id","checked","target","value","prevState","map","e","nominations_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA,SAAD;AAAWC,EAAAA,YAAX;AAAwBC,EAAAA;AAAxB,CAAvB,EAA0D;AAAA;;AAEtD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,EAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,YAAV,CAAlB;AACAH,MAAAA,OAAO,CAACE,GAAG,CAACE,IAAL,CAAP;AACA,YAAMC,OAAO,GAAG,MAAMnB,KAAK,CAACiB,GAAN,CAAU,eAAeb,QAAQ,CAACA,QAAlC,CAAtB;AACAQ,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAL,CAAP;AACH,KALD;;AAMAH,IAAAA,SAAS;AACZ,GARQ,EAQN,EARM,CAAT;AAUAK,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCV,IAAI,CAACW,iBAA3C;;AACA,QAAMC,YAAY,GAAG,YAAY;AAE7B,UAAMP,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAeb,QAAQ,CAACA,QAAlC,CAAlB;AAEA,UAAMoB,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAErB,QADU;AAElBsB,MAAAA,aAAa,EAAEnB;AAFG,KAAtB;;AAKA,QAAIA,KAAK,KAAKoB,SAAd,EAAyB;AACrBjB,MAAAA,MAAM,CAAC,oBAAD,CAAN;AACH,KAFD,MAEO;AACH,YAAMV,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAyBJ,aAAzB,CAAN;AACArB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA0B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ,GAhBD;;AAqBA,QAAMC,iBAAiB,GAAG,YAAY;AAClC,UAAMhB,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAeb,QAAQ,CAACA,QAAlC,CAAlB;AACA,UAAMoB,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAErB,QADU;AAElBsB,MAAAA,aAAa,EAAE;AAFG,KAAtB;AAIH,GAND;;AAUA,QAAMO,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAgBH,KAAK,CAACI,MAA5B;;AACA,QAAID,OAAJ,EAAa;AACT/B,MAAAA,eAAe,CAAC+B,OAAD,CAAf;AACH,KAFD,MAEO;AACH/B,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;;AACDE,IAAAA,QAAQ,CAAC0B,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAR;AACAjC,IAAAA,eAAe,CAACkC,SAAS,KAAK,EAC1B,GAAGA,SADuB;AAE1B,OAACJ,EAAD,GAAMC;AAFoB,KAAL,CAAV,CAAf;AAKAzB,IAAAA,OAAO,CAAC4B,SAAS,KAAK,EACd,GAAGA,SADW;AAEdlB,MAAAA,iBAAiB,EAAEe,OAAO,GAAGF,MAAH,GAAY;AAFxB,KAAL,CAAV,CAAP;AAKH,GAlBD;;AAuBA,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEjC,SAAf;AAA0B,IAAA,SAAS,EAAEC,YAArC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKM,EAAE,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFX,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKI,IAAI,CAAC4B,GAAL,CAAS,CAAC5B,IAAD,EAAOuB,EAAP,kBACN;AAAc,UAAA,SAAS,EAAC,UAAxB;AAAA,iCACI;AAAgB,YAAA,OAAO,EAAEvB,IAAI,CAACuB,EAA9B;AAAkC,YAAA,SAAS,EAAC,WAA5C;AAAA,oCAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,EAAE,EAAEvB,IAAI,CAACuB,EAFb;AAGI,cAAA,KAAK,EAAEvB,IAAI,CAACuB,EAHhB;AAII,cAAA,QAAQ,EAAGM,CAAD,IAAOT,UAAU,CAACS,CAAD,EAAI7B,IAAI,CAACuB,EAAT,CAJ/B;AAKI,cAAA,OAAO,EAAEzB,IAAI,CAACW,iBAAL,KAA2BT,IAAI,CAACuB;AAL7C;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAUKvB,IAAI,CAAC8B,gBAVV,EAU4B,GAV5B,eAYI;AAAK,cAAA,GAAG,EAAG,aAAY9B,IAAI,CAACuB,EAAG,MAA/B;AAAsC,cAAA,GAAG,EAAG,aAAYvB,IAAI,CAAC8B,gBAAiB,EAA9E;AACK,cAAA,SAAS,EAAC;AADf;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA,aAAYP,EAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eA4BI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAA0C,MAAA,OAAO,EAAEb,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,eA6BI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAA0C,MAAA,OAAO,EAAES,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GA9GQ/B,a;;KAAAA,a;AAgHT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddNomination({modalVote,setModalVote,username}) {\r\n\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [check, setCheck] = useState();\r\n    const [er, setErr] = useState('')\r\n    const [user, setUser] = useState([])\r\n    const [vote, setVote] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchVote = async () => {\r\n            const res = await axios.get('/api/vote/')\r\n            setVote(res.data)\r\n            const resUser = await axios.get('/api/user/' + username.username)\r\n            setUser(res.data)\r\n        }\r\n        fetchVote()\r\n    }, [])\r\n\r\n    console.log('user.nomination_status=',user.nomination_status)\r\n    const secureButton = async () => {\r\n\r\n        const res = await axios.get('/api/user/' + username.username)\r\n\r\n        const addNomination = {\r\n            userId: username,\r\n            id_nomination: check\r\n        }\r\n\r\n        if (check === undefined) {\r\n            setErr('Выберите номинацию')\r\n        } else {\r\n            await axios.post('/api/vote/', addNomination)\r\n            setModalVote(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const clearSecureButton = async () => {\r\n        const res = await axios.get('/api/user/' + username.username)\r\n        const addNomination = {\r\n            userId: username,\r\n            id_nomination: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const inputClick = (event, voteId) => {\r\n        const {id, checked} = event.target\r\n        if (checked) {\r\n            setCheckedItems(checked)\r\n        } else {\r\n            setCheckedItems(null)\r\n        }\r\n        setCheck(event.target.value)\r\n        setCheckedItems(prevState => ({\r\n            ...prevState,\r\n            [id]: checked,\r\n        }))\r\n\r\n        setUser(prevState => ({\r\n                ...prevState,\r\n                nomination_status: checked ? voteId : null\r\n            }\r\n        ))\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal active={modalVote} setActive={setModalVote}>\r\n            <h1>Закрепить номинацию:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr/>\r\n            <div>\r\n                <div className='voteContainer'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id} className=\"voteItem\">\r\n                            <label key={id} htmlFor={vote.id} className=\"inputVote\">\r\n\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id={vote.id}\r\n                                    value={vote.id}\r\n                                    onChange={(e) => inputClick(e, vote.id)}\r\n                                    checked={user.nomination_status === vote.id}\r\n                                />\r\n\r\n                                {vote.nominations_name}{' '}\r\n\r\n                                <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\r\n                                     className='images'/>\r\n\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\"  onClick={secureButton}>Закрепить</button>\r\n            <button className=\"button\" type=\"submit\"  onClick={clearSecureButton}>Снять\r\n                номинацию\r\n            </button>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNomination;"]},"metadata":{},"sourceType":"module"}