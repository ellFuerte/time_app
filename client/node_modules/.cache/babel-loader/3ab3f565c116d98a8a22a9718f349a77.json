{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  console.log('users=', dep);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const handleClick = (name, grade, id, description, status_id) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n    }\n  };\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"angry-grid1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-01\",\n            children: vac.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-11\",\n            children: date === vac.create_date ? 'NEW' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-21\",\n            children: vac.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-31\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-41\",\n            children: moment(vac.create_date).format('DD.MM.YYYY')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divHistory\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalButton\",\n            type: \"submit\",\n            onClick: ChangeData,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(VacanciesItem, \"q1q0fh0qdDkLpcnW8xNJT4bZNhI=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","console","log","dep","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","handleClick","name","grade","id","description","status_id","isAdmin","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","handleStatusesInputChange","reset","current","handleStartDateChange","handleEndDateChange","selectValue","ChangeData","namevacanciesId","namevacancies","Statuses","statuses","res","put","date","format","map","vac","create_date"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n    console.log('users=',dep)\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>{department}</div>\r\n                {vacancies.map(vac => (\r\n                    <div className='VacationsContainer' onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                        <div className='angry-grid1'>\r\n                        <div id=\"item-01\">{vac.name}</div>\r\n                        <div id=\"item-11\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                        <div id=\"item-21\">{vac.description}</div>\r\n                        <div id=\"item-31\"></div>\r\n                        <div id=\"item-41\">{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n                    </div>\r\n                    </div>\r\n                ))}\r\n\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <hr/>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea  className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        Статус\r\n                    </div>\r\n                    <div>\r\n                        <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                            {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <label>Грейд</label>\r\n                        </div>\r\n                        <input type='number'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}