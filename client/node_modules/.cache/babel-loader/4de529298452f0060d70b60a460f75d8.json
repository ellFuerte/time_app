{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = async ({\n  vac,\n  department,\n  vacancies\n}) => {\n  _s();\n\n  const status = await axios.get('/api/Vacations/?status=status');\n  setStatus(status.data);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n\n  const handleClick = (name, grade, id, description, statuses) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(statuses);\n      setInputValueStatuses(statuses);\n    }\n  };\n\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const searchRef = useRef();\n  console.log('vac=', vac);\n  const date = moment().format('YYYY-MM-DD');\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-tree\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"department\",\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"vacancies-list\",\n        children: vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacancy\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new\",\n              children: date === vac.create_date ? 'NEW' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n              children: vac.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: moment(vac.create_date).format('DD.MM.YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, vac.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textDescription\",\n          value: inputValueDescription,\n          onChange: handleDescriptionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: statusRef,\n          value: inputValueStatuses,\n          onChange: selectValue,\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHistory\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeData,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"l251X26fsUOjO2QxJn9kx0PU4V4=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","vac","department","vacancies","status","get","setStatus","data","localUser","JSON","parse","localStorage","getItem","handleClick","name","grade","id","description","statuses","isAdmin","setModalVacations","setVacanciesId","setSelectedVacanciesName","setInputValue","setSelectedVacanciesDescription","setInputValueDescription","setSelectedVacanciesGrade","setInputValueGrade","setSelectedVacanciesStatuses","setInputValueStatuses","vacanciesId","modalVacations","inputValue","inputValueDescription","inputValueStatuses","inputValueGrade","selectedVacanciesName","selectedVacanciesStatuses","selectedVacanciesDescription","selectedVacanciesGrade","statusRef","searchRef","console","log","date","format","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","handleStatusesInputChange","selectValue","current","ChangeData","namevacanciesId","namevacancies","Statuses","res","put","map","create_date","status_id"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst VacanciesItem =async ({vac,department,vacancies})=> {\r\n    const status = await axios.get('/api/Vacations/?status=status')\r\n    setStatus(status.data)\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const handleClick = (name, grade,id,description,statuses) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(statuses)\r\n            setInputValueStatuses(statuses)\r\n\r\n        }\r\n\r\n    };\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n    console.log('vac=',vac)\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"vacancies-tree\">\r\n                <div className=\"department\">{department}</div>\r\n                <ul className=\"vacancies-list\">\r\n                    {vacancies.map(vac => (\r\n                        <li key={vac.id}>\r\n                            <div className=\"vacancy\">\r\n                                <div className=\"new\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                                <div className=\"name\" onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>{vac.name}</div>\r\n                                <div className=\"date\">{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n\r\n                    <textarea  className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                        <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                        Сохранить\r\n                    </button>\r\n                </div>\r\n            </ModalVacancies>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}