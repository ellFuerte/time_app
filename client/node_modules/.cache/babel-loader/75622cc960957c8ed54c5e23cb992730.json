{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [UsersDep, setUsersDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [modalMain, setModalMain] = useState(false);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const {\n    username: departId\n  } = useParams();\n  useEffect(() => {\n    const fetchStatistics = async () => {\n      if (localUser.isAdmin) {\n        const res = await axios.post('/api/get_statistics_all_users', {\n          id: localUser._id\n        });\n        const allUsers = res.data[0].get_statistics_all_users[0]['all_users'];\n\n        if (allUsers) {\n          const sortedUsers = allUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n          setStatisticsWork(filterUsers(sortedUsers));\n        } else {\n          handleNoUsersFound();\n        }\n      }\n    };\n\n    const fetchStatusChild = async () => {\n      const res = await axios.get(`/api/user/${localUser._id}`);\n      setChecked(res.data.see_child);\n    };\n\n    const fetchUsers = async () => {\n      const res = await axios.get('/api/user');\n      const sortedUsers = res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const filteredUsers = filterUsers(sortedUsers).filter(user => user.department_id === departId);\n      setUsers(filteredUsers);\n    };\n\n    const fetchUsersByDep = async () => {\n      if (checked && localUser.main_department === departId) {\n        var _res$data$;\n\n        const res = await axios.post('/api/get_users_by_dep/', {\n          depsId: departId\n        });\n        const depUsers = (_res$data$ = res.data[0]) === null || _res$data$ === void 0 ? void 0 : _res$data$.get_users_by_dep;\n\n        if (depUsers) {\n          const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n          setUsersDeps(filterUsers(sortedUsers));\n        }\n      } else {\n        setUsersDeps([]);\n      }\n    };\n\n    const handleNoUsersFound = () => {\n      if (window.location.href.includes('/all_users/')) {\n        alert('Нет ни одного пользователя в работе');\n      }\n\n      if (window.location.href.includes('/not_working_today/')) {\n        alert('Сегодня все в работе');\n        window.location.href = `/department/${localUser.departmentId}`;\n      } // Добавьте остальные проверки аналогично\n\n    };\n\n    fetchStatistics();\n    fetchStatusChild();\n    fetchUsers();\n    fetchUsersByDep();\n    setIsJob(true);\n    setIsOpen(false);\n  }, [departId, localUser.main_department, checked]);\n\n  const filterUsers = users => {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => ![1, 2, 3, 4].includes(user.status))).concat(users.filter(user => user.status === 4));\n  };\n\n  const toggleCheckbox = async () => {\n    setChecked(!checked);\n    await axios.post('/api/statusChild/', {\n      userId: localUser._id,\n      ischeked: !checked\n    });\n  };\n\n  const handleModalClick = async () => {\n    await axios.put('/api/user', {\n      id: localUser._id,\n      depsId: departId\n    });\n    setModalMain(false);\n  };\n\n  const toggleDepUsers = async () => {\n    if (isJob) {\n      var _res$data$2;\n\n      const res = await axios.post('/api/get_users_by_dep/', {\n        depsId: departId\n      });\n      const depUsers = (_res$data$2 = res.data[0]) === null || _res$data$2 === void 0 ? void 0 : _res$data$2.get_users_by_dep;\n\n      if (depUsers) {\n        const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        setUsersDeps(filterUsers(sortedUsers));\n        setIsJob(false);\n        setIsOpen(true);\n      }\n    } else {\n      window.location.href = `/department/${departId}`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDepUsers,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = `/department/${departId}`,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), localUser.isAdmin && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 42\n      }, this)), isOpen && UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 55\n      }, this)), !departId && statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 64\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: toggleCheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"button\",\n          onClick: handleModalClick,\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"6SquKgxyXdI/4niYOQVUmAXN2No=\", false, function () {\n  return [useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","UsersDep","setUsersDeps","isOpen","setIsOpen","isJob","setIsJob","modalMain","setModalMain","localUser","JSON","parse","localStorage","getItem","username","departId","fetchStatistics","isAdmin","res","post","id","_id","allUsers","data","get_statistics_all_users","sortedUsers","sort","a","b","user_name","localeCompare","filterUsers","handleNoUsersFound","fetchStatusChild","get","see_child","fetchUsers","filteredUsers","filter","user","department_id","fetchUsersByDep","main_department","depsId","depUsers","get_users_by_dep","window","location","href","includes","alert","departmentId","status","concat","toggleCheckbox","userId","ischeked","handleModalClick","put","toggleDepUsers","width","float","map"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [checked, setChecked] = useState(false);\r\n    const [statisticsWork, setStatisticsWork] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [UsersDep, setUsersDeps] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isJob, setIsJob] = useState(true);\r\n    const [modalMain, setModalMain] = useState(false);\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    const { username: departId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchStatistics = async () => {\r\n            if (localUser.isAdmin) {\r\n                const res = await axios.post('/api/get_statistics_all_users', { id: localUser._id });\r\n                const allUsers = res.data[0].get_statistics_all_users[0]['all_users'];\r\n                if (allUsers) {\r\n                    const sortedUsers = allUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                    setStatisticsWork(filterUsers(sortedUsers));\r\n                } else {\r\n                    handleNoUsersFound();\r\n                }\r\n            }\r\n        };\r\n\r\n        const fetchStatusChild = async () => {\r\n            const res = await axios.get(`/api/user/${localUser._id}`);\r\n            setChecked(res.data.see_child);\r\n        };\r\n\r\n        const fetchUsers = async () => {\r\n            const res = await axios.get('/api/user');\r\n            const sortedUsers = res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            const filteredUsers = filterUsers(sortedUsers).filter(user => user.department_id === departId);\r\n            setUsers(filteredUsers);\r\n        };\r\n\r\n        const fetchUsersByDep = async () => {\r\n            if (checked && localUser.main_department === departId) {\r\n                const res = await axios.post('/api/get_users_by_dep/', { depsId: departId });\r\n                const depUsers = res.data[0]?.get_users_by_dep;\r\n                if (depUsers) {\r\n                    const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                    setUsersDeps(filterUsers(sortedUsers));\r\n                }\r\n            } else {\r\n                setUsersDeps([]);\r\n            }\r\n        };\r\n\r\n        const handleNoUsersFound = () => {\r\n            if (window.location.href.includes('/all_users/')) {\r\n                alert('Нет ни одного пользователя в работе');\r\n            }\r\n            if (window.location.href.includes('/not_working_today/')) {\r\n                alert('Сегодня все в работе');\r\n                window.location.href = `/department/${localUser.departmentId}`;\r\n            }\r\n            // Добавьте остальные проверки аналогично\r\n        };\r\n\r\n        fetchStatistics();\r\n        fetchStatusChild();\r\n        fetchUsers();\r\n        fetchUsersByDep();\r\n\r\n        setIsJob(true);\r\n        setIsOpen(false);\r\n\r\n    }, [departId, localUser.main_department, checked]);\r\n\r\n    const filterUsers = (users) => {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => ![1, 2, 3, 4].includes(user.status)))\r\n            .concat(users.filter(user => user.status === 4));\r\n    };\r\n\r\n    const toggleCheckbox = async () => {\r\n        setChecked(!checked);\r\n        await axios.post('/api/statusChild/', {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        });\r\n    };\r\n\r\n    const handleModalClick = async () => {\r\n        await axios.put('/api/user', { id: localUser._id, depsId: departId });\r\n        setModalMain(false);\r\n    };\r\n\r\n    const toggleDepUsers = async () => {\r\n        if (isJob) {\r\n            const res = await axios.post('/api/get_users_by_dep/', { depsId: departId });\r\n            const depUsers = res.data[0]?.get_users_by_dep;\r\n            if (depUsers) {\r\n                const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                setUsersDeps(filterUsers(sortedUsers));\r\n                setIsJob(false);\r\n                setIsOpen(true);\r\n            }\r\n        } else {\r\n            window.location.href = `/department/${departId}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='staff'>\r\n            <>\r\n                {isJob ? (\r\n                    <button onClick={toggleDepUsers} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                        Показать дочерние\r\n                    </button>\r\n                ) : (\r\n                    <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\">\r\n                        Скрыть дочерние\r\n                    </button>\r\n                )}\r\n                <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>\r\n                    Сделать главной\r\n                </button>\r\n                {localUser.isAdmin && <Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link>}\r\n            </>\r\n\r\n            <div className=\"employeeWrapper\">\r\n                {users.map((user, id) => <Employee key={id} user={user} />)}\r\n                {isOpen && UsersDep.map((user, id) => <Employee key={id} user={user} />)}\r\n                {!departId && statisticsWork.map((user, id) => <Employee key={id} user={user} />)}\r\n            </div>\r\n\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr />\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input type='checkbox' onChange={toggleCheckbox} checked={checked} />\r\n                        Добавить дочерние\r\n                    </label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"button\" onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}