{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Create, Delete, Message } from '@material-ui/icons';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal';\nimport './ProfileInfo.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills';\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [error, setError] = useState('');\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [selectedValue, setSelectedValue] = useState('');\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [isAdmin, setIsadmin] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [email, setEmail] = useState([]);\n  const [emailChange, setEmailChange] = useState([]);\n  const [phone, setPhone] = useState([]);\n  const [phoneChange, setPhoneChange] = useState([]);\n  const [additional_contact, setAdditional_Contact] = useState([]);\n  const [additional_contact_change, setAdditional_Contact_Change] = useState([]);\n  const [distribution_group, setDistribution_Group] = useState([]);\n  const [distribution_group_change, setDistribution_Group_Change] = useState([]);\n  const [activity_profile, setActivity_Profile] = useState([]);\n  const [activity_profile_change, setActivity_Profile_Change] = useState([]);\n  const [CityPlace, setCityPlace] = useState([]);\n  const [CityPlace_Change, setCityPlace_Change] = useState([]);\n  const [surnameValue, setSurnameValue] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalActiveResetPass, setModalActiveResetPass] = useState(false);\n  const [modalActiveReset, setModalActiveReset] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalDep = useRef();\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const phoneNumber = useRef();\n  const additionalContact = useRef();\n  const distributionGroup = useRef();\n  const activityProfile = useRef();\n  const modalCity = useRef();\n  const modalCityPlace = useRef();\n  const [citiesId, setCitiesId] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [hasImage, setHasImage] = useState(false);\n\n  const handleUserClickCities = (city_name, id) => {\n    setCitiesId(id);\n    setSearchTermCities(city_name);\n    setFilteredCities([]);\n  };\n\n  const handleInputChangeCities = e => {\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n\n    if (termCities === '') {\n      setCitiesId('');\n      setFilteredCities([]);\n      setCityName('');\n      return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n    }\n\n    const filtered = cities.filter(city => city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase()));\n    setFilteredCities(filtered);\n  };\n\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const hasImageStatus = Object.keys(images).some(key => user.nomination_status === key || user.nomination_status === parseInt(key));\n    setHasImage(hasImageStatus);\n\n    const getNameAndSurname = () => {\n      if (user.user_name) {\n        const [name, surname] = user.user_name.split(\" \");\n        setSurnameValue(surname || \"\");\n        setNameValue(name);\n      }\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const data = res.data[0]['department_tree_to_json'];\n      const extractedOptions = extractOptions(data);\n      setOptions(extractedOptions);\n      setSelectedValue(user.department_id);\n    };\n\n    const extractOptions = node => {\n      let optionsList = [{\n        id: node.id,\n        name: node.Name\n      }];\n\n      if (node.Subclasses && node.Subclasses.length > 0) {\n        node.Subclasses.forEach(subclass => {\n          optionsList = optionsList.concat(extractOptions(subclass));\n        });\n      }\n\n      return optionsList;\n    };\n\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setTimeZone(res.data[0]['timezone']);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsadmin(res.data.isadmin);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n      const city = await axios.get('/api/Cities/');\n      setCities(city.data);\n    }; // Номинации\n\n\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    if (user && user.email && email) {\n      setEmail(user.email);\n    }\n\n    if (user && user.phone_number && phone) {\n      setPhone(user.phone_number);\n    }\n\n    if (user && user.additional_contact && additional_contact) {\n      setAdditional_Contact(user.additional_contact);\n    }\n\n    if (user && user.distribution_group && distribution_group) {\n      setDistribution_Group(user.distribution_group);\n    }\n\n    if (user && user.activity_profile && activity_profile) {\n      setActivity_Profile(user.activity_profile);\n    }\n\n    if (user && user.place_of_residence && CityPlace) {\n      setCityPlace(user.place_of_residence);\n    }\n\n    getNameAndSurname();\n    fetchVote();\n    fetchUser();\n    getDeps();\n    getNameDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username]); // изменить пароль\n\n  const handleClickPassword = async e => {\n    e.preventDefault();\n\n    if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n      setErr('Новые пароли не совпадают');\n      return;\n    }\n\n    const passwords = {\n      userId: localUse._id,\n      password: localUse.password,\n      oldPassword: modalOldPass.current.value,\n      newPassword: modalNewPass.current.value\n    };\n\n    try {\n      await axios.put('/api/newPassword/', passwords);\n      setModalActivePass(false);\n      /*      localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n    } catch (er) {\n      setErr('Старые пароли не совпадают');\n    }\n  }; // сбросить пароль\n\n\n  const handleResetPass = async e => {\n    e.preventDefault();\n    const resetPassword = {\n      userId: username.username,\n      newPassword: 'qwerty123'\n    };\n\n    try {\n      await axios.put('/api/resetPassword/', resetPassword);\n      setModalActiveResetPass(false);\n    } catch (error) {}\n  };\n\n  const status = async () => {\n    if (user.status === 1) {\n      const status = {\n        status: 2,\n        typework_id: 1,\n        userId: user.id,\n        healthEnd: '-',\n        commentEnd: '-',\n        workEnd: new Date(Date.now())\n      };\n      await axios.put(\"/api/post/\", status);\n    } else {\n      alert(\"Пользователь не в работе\");\n    }\n  }; // удалить пользователя\n\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    setIsFetching(true);\n    const newPost = {\n      userId: username.username,\n      healthEnd: 1,\n      status: 4\n    };\n\n    try {\n      await axios.put('/api/deluser/', newPost);\n      /*                  workEnd: new Date(Date.now()),\n                        workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n                   localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n      /*      if(user.status === 1){\n              await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n            }\n           localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n\n      setModalActiveDelete(false);\n      window.location.href = `/profile/${user.id}`;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n  /*    const button = () => {\n          if (votearray.length === 0 || votearray.length <= 9) {\n              setErr('Выберите участников номинации');\n              return;\n          }\n          if (votearray.length === 10 && er) {\n              return;\n          } else {\n              const duplicates = {};\n              let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n              votearray.forEach(async (vote) => {\n                  const arr = vote.split(\"_\");\n                  const vote_for_user = arr[1];\n                   // Проверяем, был ли уже такой элемент\n                  if (duplicates[vote_for_user]) {\n                      // Если был, устанавливаем флаг и завершаем итерацию\n                      hasDuplicates = true;\n                      return;\n                  } else {\n                      // Иначе, добавляем его в объект duplicates\n                      duplicates[vote_for_user] = true;\n                  }\n                   const voteUser = {\n                      user_id: localUse._id,\n                      vote_for_user: arr[1],\n                      nominations_id: arr[0]\n                  };\n                   await axios.post('/api/vote/', voteUser);\n              });\n               // Если есть повторяющиеся элементы, прекращаем выполнение функции\n              if (hasDuplicates) {\n                  setErr('Есть сотрудники которые участвуют больше одной номинации');\n                  return;\n              }\n               setModalActiveVote(false);\n          }\n      };*/\n\n  /*    const clickVote = (e) => {\n          e.preventDefault()\n          const data = e.target.value.toString()\n          const arr = data.split(\"_\")\n          let votearr = votearray\n          votearr.push(data)\n          const newArray = votearr.filter(element => element !== \"\")\n          console.log('newArray=', newArray)\n          setVotearray(newArray)\n      }*/\n\n\n  const clickVote = (e, id, user_name, selectIndex) => {\n    setFilteredCities([]);\n    console.log('index=', id, user_name);\n    setInputValues(prev => ({ ...prev,\n      [selectedInputIndex]: user_name\n    }));\n    e.preventDefault();\n    const data = id.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                      setErr('Такой сотрудник уже есть в другой номинации');\n                  }else{\n                      setErr('');\n                  }*/\n\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray); // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n\n    setSelectedOption(prevState => ({ ...prevState,\n      [selectIndex]: true\n    }));\n  };\n\n  const secureButton = async () => {\n    console.log('chek=', checkedItems);\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: null\n    };\n    await axios.post('/api/vote/', addNomination);\n    setModalVote(false);\n    window.location.reload();\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    setUser(prevState => ({ ...prevState,\n      nomination_status: checked ? voteId : null\n    }));\n  };\n\n  const nextModal = async () => {\n    setModalVote(true);\n    setModalActiveVote(false);\n  };\n\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  const handleInputChangeUsers = (e, id) => {\n    const index = id + 1;\n    const {\n      value\n    } = e.target;\n    setInputValues(prev => ({ ...prev,\n      [index]: value\n    }));\n    setSelectedInputIndex(index);\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = userVote.filter(city => city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const [allDateUser, setAllDateUser] = useState();\n\n  const getChangeVacancies = () => {\n    if (localUse.isAdmin) {\n      setModalVacancies(true);\n      setAllDateUser(user);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[key].src,\n      title: images[key].title,\n      alt: `Image for ${key}`,\n      className: \"imagesProfile\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }, this)), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileName\",\n        style: {\n          paddingTop: hasImage ? '30px' : '0px'\n        },\n        children: [user.user_name, localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(Create, {\n          style: {\n            marginLeft: '5px',\n            fontSize: 'large',\n            cursor: 'pointer'\n          },\n          onClick: () => setModalActive(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 33\n        }, this) : '', /*#__PURE__*/_jsxDEV(Editing, {\n          modalActive: modalActive,\n          setModalActive: setModalActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 33\n        }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(Delete, {\n          style: {\n            cursor: 'pointer',\n            fontSize: 'large'\n          },\n          onClick: () => setModalActiveDelete(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), localUse.isAdmin === true && localUse._id === user.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            style: {\n              cursor: 'pointer',\n              color: 'black',\n              fontSize: 'large'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: getChangeVacancies,\n          className: \"ProfileLinkVacancies\",\n          children: user.vacancy_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px dashed black',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"Email: \", name.charAt(0).toUpperCase() + name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438: \", user.distribution_group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438: \", user.activity_profile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F: \", cityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", depsName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 21\n      }, this), localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActivePass(true),\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 21\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveResetPass(true),\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveReset(true),\n        children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 25\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveVote(true),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: nextModal,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 41\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveSkills(true),\n        children: \"\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {\n        modalActiveSkills: modalActiveSkills,\n        setModalActiveSkills: setModalActiveSkills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActivePass,\n      setActive: setModalActivePass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClickPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalOldPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPass,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPassAgain,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonChangePassword\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveResetPass,\n      setActive: setModalActiveResetPass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleResetPass,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442: qwerty123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonRePasswordUser\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveReset,\n      setActive: setModalActiveReset,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: status,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u0442\\u043C\\u0435\\u0442\\u043A\\u0443 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveDelete,\n      setActive: setModalActiveDelete,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveVote,\n      setActive: setModalActiveVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"inputVote\",\n              children: vote.nominations_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 37\n            }, this), vote.description]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"di\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleInputChangeUsers(e, id),\n              value: inputValues[id + 1] || '',\n              className: \"select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 37\n            }, this), selectedInputIndex === id + 1 && filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              style: {\n                position: 'absolute',\n                top: '100%',\n                left: 0,\n                zIndex: 1000,\n                marginLeft: '20px'\n              },\n              children: filteredCities.map((city, cityId) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                onClick: e => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name),\n                children: city.user_name\n              }, cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 41\n            }, this)]\n          }, id + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: button,\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalVote,\n      setActive: setModalVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteContainer\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voteItem\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: vote.id,\n              className: \"inputVote\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: vote.id,\n                value: vote.id,\n                onChange: e => inputClick(e, vote.id),\n                checked: user.nomination_status === vote.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 37\n              }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `../images/${vote.id}.png`,\n                alt: `Image for ${vote.nominations_name}`,\n                className: \"images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 37\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: secureButton,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: clearSecureButton,\n        children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacancies,\n      setActive: setModalVacancies,\n      children: /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        allDateUser: allDateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 575,\n    columnNumber: 9\n  }, this);\n}\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/\n\n_s(ProfileInfo, \"tB7rBSUQ6i7BLXwVRfjEU4BDzbc=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Create","Delete","Message","ErrorIcon","Modal","Link","useParams","Skills","ModalVacanciesItem","ModalVacancies","Editing","ProfileInfo","timeZone","setTimeZone","selectedOption","setSelectedOption","error","setError","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","selectedValue","setSelectedValue","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","isAdmin","setIsadmin","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","user","setUser","nameValue","setNameValue","email","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","options","setOptions","er","setErr","username","localUser","_id","JSON","parse","localStorage","getItem","localUse","modalDep","modalOldPass","modalNewPass","modalNewPassAgain","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","hasImage","setHasImage","handleUserClickCities","city_name","id","handleInputChangeCities","e","termCities","target","value","filtered","filter","city","toLowerCase","includes","usersStatuses","findStatus","k","i","hasImageStatus","Object","keys","images","some","key","nomination_status","parseInt","getNameAndSurname","user_name","name","surname","split","getDeps","res","get","data","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","length","forEach","subclass","concat","getNameDeps","deps","post","fetchUser","isadmin","sort","a","b","localeCompare","mass","element","status","fetchVote","phone_number","place_of_residence","handleClickPassword","preventDefault","current","passwords","userId","password","oldPassword","newPassword","put","handleResetPass","resetPassword","typework_id","healthEnd","commentEnd","workEnd","Date","now","alert","handleDelete","newPost","window","location","href","console","log","Array","isArray","button","arr","voteUser","user_id","vote_for_user","nominations_id","clickVote","selectIndex","prev","toString","str","str1","existingIndex","findIndex","item","newArray","votearr","push","prevState","secureButton","addNomination","id_nomination","undefined","reload","clearSecureButton","inputClick","event","voteId","checked","nextModal","src","title","handleChange","handleInputChangeUsers","index","allDateUser","setAllDateUser","getChangeVacancies","map","paddingTop","marginLeft","fontSize","cursor","color","vacancy_code","border","padding","charAt","toUpperCase","slice","nominations_name","description","position","top","left","zIndex","cityId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useEffect, useRef, useState} from 'react'\nimport {Create, Delete, Message} from '@material-ui/icons'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal'\nimport './ProfileInfo.css'\nimport {Link, useParams} from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills'\n\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\"\n\nexport default function ProfileInfo() {\n\n    const [timeZone, setTimeZone] = useState([])\n    const [selectedOption, setSelectedOption] = useState({});\n    const [error, setError] = useState('')\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n    const [inputValues, setInputValues] = useState('');\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n    const [selectedValue, setSelectedValue] = useState('');\n\n\n\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [isAdmin, setIsadmin] = useState([])\n    const [userVote, setUserVote] = useState([])\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n    const [nameValue, setNameValue] = useState(\"\");\n\n\n    const [email, setEmail] = useState([])\n    const [emailChange, setEmailChange] = useState([])\n\n\n    const [phone, setPhone] = useState([])\n    const [phoneChange, setPhoneChange] = useState([])\n\n\n    const [additional_contact, setAdditional_Contact] = useState([])\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\n\n\n    const [distribution_group, setDistribution_Group] = useState([])\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\n\n\n    const [activity_profile, setActivity_Profile] = useState([])\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\n\n    const [CityPlace, setCityPlace] = useState([])\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\n\n\n    const [surnameValue, setSurnameValue] = useState([])\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\n    const [modalActiveReset, setModalActiveReset] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n\n    const [options, setOptions] = useState([]);\n    const [er, setErr] = useState('')\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n    const modalDep = useRef()\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n    const phoneNumber = useRef()\n    const additionalContact = useRef()\n    const distributionGroup = useRef()\n    const activityProfile = useRef()\n    const modalCity = useRef()\n    const modalCityPlace = useRef()\n\n\n    const [citiesId, setCitiesId] = useState([])\n    const [searchTermCities, setSearchTermCities] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [cities, setCities] = useState([])\n    const [hasImage, setHasImage] = useState(false);\n\n\n    const handleUserClickCities = (city_name, id) => {\n        setCitiesId(id)\n        setSearchTermCities(city_name)\n        setFilteredCities([])\n    }\n\n\n    const handleInputChangeCities = (e) => {\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n\n        if (termCities === '') {\n            setCitiesId('');\n            setFilteredCities([]);\n            setCityName('');\n            return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n        }\n\n        const filtered = cities.filter(city =>\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        setFilteredCities(filtered);\n    }\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n        const hasImageStatus = Object.keys(images).some(key =>\n            user.nomination_status === key || user.nomination_status === parseInt(key)\n        );\n        setHasImage(hasImageStatus);\n\n\n        const getNameAndSurname = () => {\n            if (user.user_name) {\n                const [name, surname] = user.user_name.split(\" \");\n                setSurnameValue(surname || \"\");\n                setNameValue(name);\n            }\n        }\n\n        const getDeps = async () => {\n\n                const res = await axios.get('/api/department_tree_to_json/');\n                const data = res.data[0]['department_tree_to_json'];\n                const extractedOptions = extractOptions(data);\n                setOptions(extractedOptions);\n                setSelectedValue(user.department_id);\n\n        }\n        const extractOptions = (node) => {\n            let optionsList = [{ id: node.id, name: node.Name }];\n            if (node.Subclasses && node.Subclasses.length > 0) {\n                node.Subclasses.forEach(subclass => {\n                    optionsList = optionsList.concat(extractOptions(subclass));\n                });\n            }\n            return optionsList;\n\n        };\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsadmin(res.data.isadmin)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\n            setUserVote(mass)\n\n            const city = await axios.get('/api/Cities/')\n            setCities(city.data)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n        if (user && user.email && email) {\n            setEmail(user.email);\n        }\n        if (user && user.phone_number && phone) {\n            setPhone(user.phone_number);\n        }\n\n        if (user && user.additional_contact && additional_contact) {\n            setAdditional_Contact(user.additional_contact);\n        }\n\n        if (user && user.distribution_group && distribution_group) {\n            setDistribution_Group(user.distribution_group);\n        }\n        if (user && user.activity_profile && activity_profile) {\n            setActivity_Profile(user.activity_profile);\n        }\n        if (user && user.place_of_residence && CityPlace) {\n            setCityPlace(user.place_of_residence);\n        }\n\n        getNameAndSurname();\n        fetchVote()\n        fetchUser()\n        getDeps()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n        username.username\n    ])\n\n\n    // изменить пароль\n    const handleClickPassword = async (e) => {\n        e.preventDefault()\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n            setErr('Новые пароли не совпадают')\n            return\n        }\n        const passwords = {\n            userId: localUse._id,\n            password: localUse.password,\n            oldPassword: modalOldPass.current.value,\n            newPassword: modalNewPass.current.value\n        }\n        try {\n            await axios.put('/api/newPassword/', passwords)\n            setModalActivePass(false)\n            /*      localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n        } catch (er) {\n            setErr('Старые пароли не совпадают')\n        }\n    }\n\n    // сбросить пароль\n    const handleResetPass = async (e) => {\n        e.preventDefault()\n\n        const resetPassword = {\n            userId: username.username,\n            newPassword: 'qwerty123'\n        }\n\n        try {\n            await axios.put('/api/resetPassword/', resetPassword)\n            setModalActiveResetPass(false)\n        } catch (error) {\n        }\n    }\n\n    const status = async () => {\n        if (user.status === 1) {\n            const status = {\n                status: 2,\n                typework_id: 1,\n                userId: user.id,\n                healthEnd: '-',\n                commentEnd: '-',\n                workEnd: new Date(Date.now())\n            }\n            await axios.put(\"/api/post/\", status)\n        } else {\n            alert(\"Пользователь не в работе\")\n        }\n    }\n\n    // удалить пользователя\n    const handleDelete = async (e) => {\n        e.preventDefault()\n        setIsFetching(true)\n\n        const newPost = {\n            userId: username.username,\n            healthEnd: 1,\n            status: 4\n        }\n        try {\n            await axios.put('/api/deluser/', newPost)\n\n            /*                  workEnd: new Date(Date.now()),\n                              workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n\n                        localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n\n            /*      if(user.status === 1){\n                    await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n                  }\n                 localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n\n\n            setModalActiveDelete(false)\n            window.location.href = `/profile/${user.id}`\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n\n\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n    /*    const button = () => {\n            if (votearray.length === 0 || votearray.length <= 9) {\n                setErr('Выберите участников номинации');\n                return;\n            }\n            if (votearray.length === 10 && er) {\n                return;\n            } else {\n                const duplicates = {};\n                let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n                votearray.forEach(async (vote) => {\n                    const arr = vote.split(\"_\");\n                    const vote_for_user = arr[1];\n\n                    // Проверяем, был ли уже такой элемент\n                    if (duplicates[vote_for_user]) {\n                        // Если был, устанавливаем флаг и завершаем итерацию\n                        hasDuplicates = true;\n                        return;\n                    } else {\n                        // Иначе, добавляем его в объект duplicates\n                        duplicates[vote_for_user] = true;\n                    }\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    };\n\n                    await axios.post('/api/vote/', voteUser);\n                });\n\n                // Если есть повторяющиеся элементы, прекращаем выполнение функции\n                if (hasDuplicates) {\n                    setErr('Есть сотрудники которые участвуют больше одной номинации');\n                    return;\n                }\n\n                setModalActiveVote(false);\n            }\n        };*/\n    /*    const clickVote = (e) => {\n            e.preventDefault()\n            const data = e.target.value.toString()\n            const arr = data.split(\"_\")\n            let votearr = votearray\n            votearr.push(data)\n            const newArray = votearr.filter(element => element !== \"\")\n            console.log('newArray=', newArray)\n            setVotearray(newArray)\n        }*/\n\n\n    const clickVote = (e, id,user_name,selectIndex) => {\n        setFilteredCities([])\n        console.log('index=',id,user_name)\n        setInputValues(prev => ({ ...prev, [selectedInputIndex]: user_name }));\n        e.preventDefault();\n        const data =id.toString();\n        const arr = data.split(\"_\");\n        if (arr[0] === '' || arr[1] === '') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n            /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                            setErr('Такой сотрудник уже есть в другой номинации');\n                        }else{\n                            setErr('');\n                        }*/\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n        // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n        setSelectedOption(prevState => ({\n            ...prevState,\n            [selectIndex]: true\n        }));\n\n    };\n\n\n    const secureButton = async () => {\n        console.log('chek=', checkedItems)\n\n        const res = await axios.get('/api/user/' + username.username)\n\n        const addNomination = {\n            userId: username.username,\n            id_nomination: check\n        }\n\n        if (check === undefined) {\n            setErr('Выберите номинацию')\n        } else {\n            await axios.post('/api/vote/', addNomination)\n            setModalVote(false)\n            window.location.reload()\n        }\n    }\n\n    const clearSecureButton = async () => {\n        const res = await axios.get('/api/user/' + username.username)\n        const addNomination = {\n            userId: username.username,\n            id_nomination: null\n        }\n\n        await axios.post('/api/vote/', addNomination)\n        setModalVote(false)\n        window.location.reload()\n\n    }\n\n\n    const inputClick = (event, voteId) => {\n        const {id, checked} = event.target\n        if (checked) {\n            setCheckedItems(checked)\n        } else {\n            setCheckedItems(null)\n        }\n        setCheck(event.target.value)\n        setCheckedItems(prevState => ({\n            ...prevState,\n            [id]: checked,\n        }))\n\n        setUser(prevState => ({\n                ...prevState,\n                nomination_status: checked ? voteId : null\n            }\n        ))\n    }\n\n\n    const nextModal = async () => {\n        setModalVote(true)\n        setModalActiveVote(false)\n    }\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n    const handleChange = (e) => {\n        setSelectedValue(e.target.value);\n    };\n\n\n    const handleInputChangeUsers = (e,id) => {\n        const index = id + 1\n        const { value } = e.target;\n        setInputValues(prev => ({ ...prev, [index]: value }));\n        setSelectedInputIndex(index);\n\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = userVote.filter(city =>\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n    const [allDateUser,setAllDateUser]=useState()\n    const getChangeVacancies =  () => {\n        if(localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                        <div className='ProfileName' style={{ paddingTop: hasImage ? '30px' : '0px' }}>\n                            {user.user_name}\n\n\n\n                            {localUse.isAdmin || localUse._id===username.username\n                                ?\n                                <Create style={{marginLeft: '5px', fontSize: 'large', cursor: 'pointer'}} onClick={() => setModalActive(true)}/>\n                                : ''}\n                                <Editing modalActive={modalActive} setModalActive={setModalActive} />\n\n\n                            {localUse.isAdmin ?\n                                <Delete style={{cursor: 'pointer', fontSize: 'large'}}\n                                                        onClick={() => setModalActiveDelete(true)}/>\n                                : <></>}\n\n                            {localUse.isAdmin === true && localUse._id === user.id ?\n                            <Link to={`/AdminPanel`}>\n                                <ErrorIcon\n                                style={{cursor: 'pointer', color: 'black', fontSize: 'large'}}/>\n                            </Link>\n                                : ''}\n                        </div>\n\n                        <div>\n                            <label style={{cursor:'pointer'}} onClick={getChangeVacancies} className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                        </div>\n\n                        {/*                {\n                    <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                }*/}\n\n\n                    <div style={{border: '3px dashed black',padding:'10px'}}>\n                    <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                    <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false || localUse._id===username.username? 'Доп.Контакт: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username? user.additional_contact : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                    <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                    <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false  || localUse._id===username.username ? 'Адрес фактического проживания: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username ? user.place_of_residence : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n\n\n                    {localUse.isAdmin || localUse._id===username.username ?\n                    <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>:''\n                    }\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveResetPass(true)}>Сбросить\n                            пароль</div> : ''}\n\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveReset(true)}>Закончить</div> :'' }\n\n\n                    {localUse._id === user.id ?\n                        <div className='changePass' onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''}\n\n\n                    {localUse.isAdmin ? <div className=\"changePass\" onClick={nextModal}>Закрепить номинацию</div> : ''}\n\n\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills} />\n\n\n                </div>\n            }\n\n\n            <Modal active={modalActivePass} setActive={setModalActivePass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {er && <div className='modalError'>{er}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClickPassword}>\n                    <input\n                        placeholder=\"Старый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalOldPass}\n                    />\n                    <input\n                        placeholder=\"Новый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPass}\n                        minLength='6'\n                    />\n                    <input\n                        placeholder=\"Новый пароль ещё раз\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPassAgain}\n                        minLength='6'\n                    />\n                    <button className=\"ModalButtonChangePassword\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveResetPass} setActive={setModalActiveResetPass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleResetPass}>\n                    <h2>Новый пароль будет: qwerty123</h2>\n                    <button className=\"ModalButtonRePasswordUser\" type=\"submit\" disabled={isFetching}>\n                        Сбросить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveReset} setActive={setModalActiveReset}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={status}>\n                    <h2>Вы хотите завершить отметку времени пользователя?</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Закончить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleDelete}>\n                    <h2>Пользователь будет удален</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Удалить\n                    </button>\n                </form>\n            </Modal>\n\n\n\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div>\n                        {\n                            vote.map((vote, id) =>\n\n                                <label key={id} htmlFor={vote.id}>\n                                    <h3 className='inputVote'>{vote.nominations_name}</h3>\n                                    {vote.description}\n                                </label>\n                            )}\n                    </div>\n                    <div className='di'>\n{/*                        {vote.map((vote, id) => (\n                                <select\n                                    onChange={(e) => clickVote(e, id)}\n                                    key={id}\n                                    value={userVote.id}\n                                    className='select'>\n\n                                    {!selectedOption[id] &&\n\n                                    <option value=''>Выберите участника</option>}\n\n                                    {userVote.map((userVote, id) => (\n\n                                        <option key={id} value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>\n                                    ))}\n                                </select>\n                            )\n                        )}*/}\n\n                            {vote.map((vote, id) => (\n                                <div key={id+1} style={{ position: 'relative' }}>\n                                    <input\n                                        onChange={(e) => handleInputChangeUsers(e, id)}\n                                        value={inputValues[id+1] || ''}\n                                        className='select'\n                                    />\n                                    {selectedInputIndex === id+1 && filteredCities.length > 0 && (\n                                        <div className='divSelectRegister' style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000,marginLeft:'20px' }}>\n                                            {filteredCities.map((city, cityId) => (\n                                                <div\n                                                    className='selectNameDiv'\n                                                    key={cityId}\n                                                    onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\n                                                    {city.user_name}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n            </Modal>\n            <Modal active={modalVote} setActive={setModalVote}>\n                <h1>Закрепить номинацию:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div>\n                    <div className='voteContainer'>\n                        {vote.map((vote, id) => (\n                            <div key={id} className=\"voteItem\">\n                                <label key={id} htmlFor={vote.id} className=\"inputVote\">\n\n                                    <input\n                                        type='checkbox'\n                                        id={vote.id}\n                                        value={vote.id}\n                                        onChange={(e) => inputClick(e, vote.id)}\n                                        checked={user.nomination_status === vote.id}\n                                    />\n\n                                    {vote.nominations_name}{' '}\n\n                                    <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\n                                         className='images'/>\n\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={secureButton}>Закрепить</button>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={clearSecureButton}>Снять\n                    номинацию\n                </button>\n            </Modal>\n\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem\n                    allDateUser={allDateUser}\n                />\n            </ModalVacancies>\n\n\n\n<Skills/>\n\n        </div>\n    )\n}\n\n\n\n\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/"]},"metadata":{},"sourceType":"module"}