{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [departments, setDepartments] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/department_tree_to_json/');\n        setDepartments(response.data);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const renderSubclasses = subclasses => {\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      children: subclasses.map(subclass => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: subclass.id.toString(),\n          children: subclass.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: subclass.id.toString(),\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: subclass.Subclasses.length > 0 ? renderSubclasses(subclass.Subclasses) : 'No subdepartments'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, subclass.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Department Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: departments.map(department => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: department.id.toString(),\n          children: department.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: department.id.toString(),\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: department.Subclasses.length > 0 ? renderSubclasses(department.Subclasses) : 'No departments'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, department.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"SfpP6hNiRXTltxSEo0gT7wEMq08=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","departments","setDepartments","fetchData","response","get","data","error","console","renderSubclasses","subclasses","map","subclass","Card","Header","id","toString","Name","Subclasses","length","department"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,mCAAP;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,+BAAV,CAAvB;AACAH,QAAAA,cAAc,CAACE,QAAQ,CAACE,IAAV,CAAd;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACH;AACJ,KAPD;;AASAJ,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMM,gBAAgB,GAAIC,UAAD,IAAgB;AACrC,wBACI,QAAC,SAAD;AAAA,gBACKA,UAAU,CAACC,GAAX,CAAgBC,QAAD,iBACZ,QAAC,IAAD;AAAA,gCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,EAAE,EAAEC,IAAI,CAACC,MAA3B;AAAmC,UAAA,QAAQ,EAAEF,QAAQ,CAACG,EAAT,CAAYC,QAAZ,EAA7C;AAAA,oBACKJ,QAAQ,CAACK;AADd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAEL,QAAQ,CAACG,EAAT,CAAYC,QAAZ,EAA9B;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKJ,QAAQ,CAACM,UAAT,CAAoBC,MAApB,GAA6B,CAA7B,GAAiCV,gBAAgB,CAACG,QAAQ,CAACM,UAAV,CAAjD,GAAyE;AAD9E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAWN,QAAQ,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD;;AAmBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,gBACKd,WAAW,CAACU,GAAZ,CAAiBS,UAAD,iBACb,QAAC,IAAD;AAAA,gCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,EAAE,EAAEP,IAAI,CAACC,MAA3B;AAAmC,UAAA,QAAQ,EAAEM,UAAU,CAACL,EAAX,CAAcC,QAAd,EAA7C;AAAA,oBACKI,UAAU,CAACH;AADhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAEG,UAAU,CAACL,EAAX,CAAcC,QAAd,EAA9B;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKI,UAAU,CAACF,UAAX,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCV,gBAAgB,CAACW,UAAU,CAACF,UAAZ,CAAnD,GAA6E;AADlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAWE,UAAU,CAACL,EAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtDD;;GAAMf,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('/api/department_tree_to_json/');\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const renderSubclasses = (subclasses) => {\r\n        return (\r\n            <Accordion>\r\n                {subclasses.map((subclass) => (\r\n                    <Card key={subclass.id}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey={subclass.id.toString()}>\r\n                            {subclass.Name}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={subclass.id.toString()}>\r\n                            <Card.Body>\r\n                                {subclass.Subclasses.length > 0 ? renderSubclasses(subclass.Subclasses) : 'No subdepartments'}\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                ))}\r\n            </Accordion>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Department Tree</h2>\r\n            <Accordion>\r\n                {departments.map((department) => (\r\n                    <Card key={department.id}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey={department.id.toString()}>\r\n                            {department.Name}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={department.id.toString()}>\r\n                            <Card.Body>\r\n                                {department.Subclasses.length > 0 ? renderSubclasses(department.Subclasses) : 'No departments'}\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                ))}\r\n            </Accordion>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}