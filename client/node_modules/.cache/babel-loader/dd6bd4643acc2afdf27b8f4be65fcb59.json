{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"dfdf\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this)\n  /*<div className='sidebar'>\r\n      <div className=\"sidebarWrapper\">\r\n          <div className=\"tree\">\r\n              <div className=\"treeWrapper\">\r\n                    {dep.map((node, i) => {\r\n                        const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                          className='level1'>\r\n                            <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n                        return (\r\n                            <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={false}>\r\n                              {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                    <TreeView nodeLabel={(<Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                      <span className=\"node\">{departments.Name}</span></Link>)} key={departments.id} defaultCollapsed={true}>\r\n                                        {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                          <TreeView nodeLabel={(\r\n                                                <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                    <span className=\"node\">{departments1.Name}</span>\r\n                                                </Link>\r\n                                          )} key={departments1.id} defaultCollapsed={true}>\r\n                                                {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                    <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                        <div\r\n                                                          style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                      </div>\r\n                                                    </Link>\r\n                                              ))}\r\n                                          </TreeView>\r\n                                      ))}\r\n                                  </TreeView>\r\n                              ))}\r\n                          </TreeView>\r\n                      );\r\n                  })}\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div>\r\n      </div>\r\n  </div>*/\n  ;\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","getDeps","res","get","data","department_tree_to_json","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,mCAAP;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B,CADkB,CAElB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMM,OAAO,GAAG,YAAY;AACxB,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,+BAAV,CAAlB;;AACA,UAAGD,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYC,uBAAZ,CAAoCC,MAApC,KAA6C,CAAhD,EAAkD;AAC9CN,QAAAA,MAAM,CAAC,EAAD,CAAN;AACH,OAFD,MAEM;AACFA,QAAAA,MAAM,CAACE,GAAG,CAACE,IAAL,CAAN;AACH;AACJ,KAPD;;AAQAH,IAAAA,OAAO;AACV,GAXQ,EAWN,EAXM,CAAT;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCI;AAwDH,CAzED;;GAAMH,O;;KAAAA,O;AA0EN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([])\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/')\r\n            if(res.data[0].department_tree_to_json.length===0){\r\n                setDep([])\r\n            }else {\r\n                setDep(res.data)\r\n            }\r\n        }\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>dfdf</div>\r\n        /*<div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n\r\n                        {dep.map((node, i) => {\r\n\r\n                            const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                                className='level1'>\r\n\r\n                                <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                            return (\r\n\r\n                                <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={false}>\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n\r\n                                        <TreeView nodeLabel={(<Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                            <span className=\"node\">{departments.Name}</span></Link>)} key={departments.id} defaultCollapsed={true}>\r\n\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView nodeLabel={(\r\n\r\n                                                    <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n\r\n                                                        <span className=\"node\">{departments1.Name}</span>\r\n\r\n                                                    </Link>\r\n                                                )} key={departments1.id} defaultCollapsed={true}>\r\n\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n\r\n                                                            <div\r\n                                                                style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                            </div>\r\n\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>*/\r\n    )\r\n}\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}