{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [checked, setChecked] = useState(false); // Убираем начальное значение из localStorage\n\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [UsersDep, setUsersDeps] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [modalMain, setModalMain] = useState(false);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const departId = useParams().username;\n  useEffect(() => {\n    const get_statistics_all_users = async () => {\n      if (localUser.isAdmin === true) {\n        const getUsers = {\n          id: localUser._id\n        };\n        const res = await axios.post('/api/get_statistics_all_users', getUsers);\n        const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let all_users = filterUsersFoo(all); // проверка на пустые категории\n\n        const categories = [{\n          key: 'all_users',\n          message: 'Нет не одного пользователя в работе',\n          path: '/all_users/'\n        }, {\n          key: 'not_working_today',\n          message: 'Сегодня все в работе',\n          path: '/not_working_today/'\n        }, {\n          key: 'not_worked_yesterday',\n          message: 'Вчера все работали',\n          path: '/not_worked_yesterday/'\n        }, {\n          key: 'sick_today',\n          message: 'Нет болеющих сегодня',\n          path: '/sick_today/'\n        }, {\n          key: 'sick_yesterday',\n          message: 'Вчера не было сотрудников на больничном',\n          path: '/sick_yesterday/'\n        }, {\n          key: 'vacation_today',\n          message: 'На сегодня нет сотрудников в отпуске',\n          path: '/vacation_today/'\n        }, {\n          key: 'vacation_yesterday',\n          message: 'Вчера не было сотрудников в отпуске',\n          path: '/vacation_yesterday/'\n        }];\n        categories.forEach(category => {\n          if (res.data[0].get_statistics_all_users[0][category.key] === null && !!~document.location.href.indexOf(category.path)) {\n            alert(category.message);\n            window.location.href = `/department/${localUser.departmentId}`;\n          }\n        }); // установка состояния\n\n        const setCategoryState = (key, sortedData) => {\n          if (!!~document.location.href.indexOf(`/${key}/`)) {\n            setIsJob(isJob);\n            setStatisticsWork(filterUsersFoo(sortedData));\n          }\n        };\n\n        categories.forEach(category => {\n          const data = res.data[0].get_statistics_all_users[0][category.key];\n\n          if (data !== null) {\n            const sortedData = data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setCategoryState(category.key, sortedData);\n          }\n        });\n      }\n    };\n\n    const statusChild = async () => {\n      const user = await axios.get('/api/user/' + localUser._id);\n      setChecked(user.data.see_child);\n      setUser(user.data);\n    };\n\n    const fetchUsers = async () => {\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const filteredUsers = filterUsersFoo(res.data);\n      const fill = filteredUsers.filter(user => user.department_id === departId);\n      return fill;\n    };\n\n    const getUsersByDepIsCheckedTrue = async () => {\n      const info = {\n        depsId: departId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const depUsers = res.data[0].get_users_by_dep;\n\n      if (depUsers === null) {\n        return [];\n      } else {\n        const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        const filteredUsers = filterUsersFoo(sortedUsers);\n        return filteredUsers;\n      }\n    };\n\n    const combineUsers = async () => {\n      try {\n        const users = await fetchUsers();\n        let combinedArray = [];\n\n        if (checked && user.main_department === departId) {\n          const us = await getUsersByDepIsCheckedTrue();\n          combinedArray = combinedArray.concat(us);\n        } else {\n          combinedArray = users;\n        }\n\n        setUsers(combinedArray);\n      } catch (error) {\n        console.error('Ошибка при объединении пользователей:', error);\n      }\n    };\n\n    combineUsers();\n    setIsJob(true);\n\n    if (departId) {\n      setUsersDeps([]);\n    }\n\n    get_statistics_all_users();\n    statusChild();\n  }, [departId, user.main_department, checked]);\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  }\n\n  const clickcheckbox = async () => {\n    setChecked(!checked);\n    const info = {\n      userId: localUser._id,\n      ischeked: !checked\n    };\n    await axios.post('/api/statusChild/', info);\n  };\n\n  const handleModalClick = async () => {\n    const add = {\n      id: localUser._id,\n      depsId: departId\n    };\n    await axios.put('/api/user', add);\n    setModalMain(false);\n  };\n\n  const get_users_by_depIsOpen = async () => {\n    if (isJob) {\n      const info = {\n        depsId: departId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {\n        setUsersDeps([]);\n      } else {\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let filterUsers = filterUsersFoo(dep_users);\n        setUsersDeps(filterUsers);\n        setUsers([]);\n        setIsJob(!isJob);\n        setIsOpen(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_depIsOpen,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = `/department/${departId}`,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 38\n      }, this) : '']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }, this)), isOpen ? UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 48\n      }, this)) : '', !departId ? statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 56\n      }, this)) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: clickcheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"submit\",\n          onClick: handleModalClick,\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"5A07b9yQv8BG5EB2fnF898tb1LE=\", false, function () {\n  return [useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","UsersDep","setUsersDeps","user","setUser","isOpen","setIsOpen","isJob","setIsJob","modalMain","setModalMain","localUser","JSON","parse","localStorage","getItem","departId","username","get_statistics_all_users","isAdmin","getUsers","id","_id","res","post","all","data","sort","a","b","user_name","localeCompare","all_users","filterUsersFoo","categories","key","message","path","forEach","category","document","location","href","indexOf","alert","window","departmentId","setCategoryState","sortedData","statusChild","get","see_child","fetchUsers","filteredUsers","fill","filter","department_id","getUsersByDepIsCheckedTrue","info","depsId","depUsers","get_users_by_dep","sortedUsers","combineUsers","combinedArray","main_department","us","concat","error","console","status","clickcheckbox","userId","ischeked","handleModalClick","add","put","get_users_by_depIsOpen","dep_users","filterUsers","width","float","map"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [checked, setChecked] = useState(false); // Убираем начальное значение из localStorage\r\n    const [statisticsWork, setStatisticsWork] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [UsersDep, setUsersDeps] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isJob, setIsJob] = useState(true);\r\n    const [modalMain, setModalMain] = useState(false);\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    const departId = useParams().username;\r\n\r\n    useEffect(() => {\r\n\r\n        const get_statistics_all_users = async () => {\r\n            if (localUser.isAdmin === true) {\r\n                const getUsers = { id: localUser._id };\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers);\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                let all_users = filterUsersFoo(all);\r\n\r\n                // проверка на пустые категории\r\n                const categories = [\r\n                    { key: 'all_users', message: 'Нет не одного пользователя в работе', path: '/all_users/' },\r\n                    { key: 'not_working_today', message: 'Сегодня все в работе', path: '/not_working_today/' },\r\n                    { key: 'not_worked_yesterday', message: 'Вчера все работали', path: '/not_worked_yesterday/' },\r\n                    { key: 'sick_today', message: 'Нет болеющих сегодня', path: '/sick_today/' },\r\n                    { key: 'sick_yesterday', message: 'Вчера не было сотрудников на больничном', path: '/sick_yesterday/' },\r\n                    { key: 'vacation_today', message: 'На сегодня нет сотрудников в отпуске', path: '/vacation_today/' },\r\n                    { key: 'vacation_yesterday', message: 'Вчера не было сотрудников в отпуске', path: '/vacation_yesterday/' }\r\n                ];\r\n\r\n                categories.forEach(category => {\r\n                    if (res.data[0].get_statistics_all_users[0][category.key] === null && !!~document.location.href.indexOf(category.path)) {\r\n                        alert(category.message);\r\n                        window.location.href = `/department/${localUser.departmentId}`;\r\n                    }\r\n                });\r\n\r\n                // установка состояния\r\n                const setCategoryState = (key, sortedData) => {\r\n                    if (!!~document.location.href.indexOf(`/${key}/`)) {\r\n                        setIsJob(isJob);\r\n                        setStatisticsWork(filterUsersFoo(sortedData));\r\n                    }\r\n                };\r\n\r\n                categories.forEach(category => {\r\n                    const data = res.data[0].get_statistics_all_users[0][category.key];\r\n                    if (data !== null) {\r\n                        const sortedData = data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setCategoryState(category.key, sortedData);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        const statusChild = async () => {\r\n            const user = await axios.get('/api/user/' + localUser._id);\r\n            setChecked(user.data.see_child);\r\n            setUser(user.data);\r\n        };\r\n\r\n        const fetchUsers = async () => {\r\n            const res = await axios.get('/api/user');\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            const filteredUsers = filterUsersFoo(res.data);\r\n            const fill = filteredUsers.filter(user => user.department_id === departId);\r\n            return fill;\r\n        };\r\n\r\n        const getUsersByDepIsCheckedTrue = async () => {\r\n            const info = { depsId: departId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const depUsers = res.data[0].get_users_by_dep;\r\n            if (depUsers === null) {\r\n                return [];\r\n            } else {\r\n                const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                const filteredUsers = filterUsersFoo(sortedUsers);\r\n                return filteredUsers;\r\n            }\r\n        };\r\n\r\n        const combineUsers = async () => {\r\n            try {\r\n                const users = await fetchUsers();\r\n                let combinedArray = [];\r\n                if (checked && user.main_department === departId) {\r\n                    const us = await getUsersByDepIsCheckedTrue();\r\n                    combinedArray = combinedArray.concat(us);\r\n                } else {\r\n                    combinedArray = users;\r\n                }\r\n                setUsers(combinedArray);\r\n            } catch (error) {\r\n                console.error('Ошибка при объединении пользователей:', error);\r\n            }\r\n        };\r\n\r\n        combineUsers();\r\n        setIsJob(true);\r\n\r\n        if (departId) {\r\n            setUsersDeps([]);\r\n        }\r\n        get_statistics_all_users();\r\n        statusChild();\r\n    }, [departId, user.main_department, checked]);\r\n\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4));\r\n    }\r\n\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked);\r\n\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n    };\r\n\r\n    const handleModalClick = async () => {\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: departId\r\n        };\r\n        await axios.put('/api/user', add);\r\n        setModalMain(false);\r\n    };\r\n\r\n    const get_users_by_depIsOpen = async () => {\r\n        if (isJob) {\r\n            const info = { depsId: departId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const dep_users = res.data[0]['get_users_by_dep'];\r\n            if (dep_users === null) {\r\n                setUsersDeps([]);\r\n            } else {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                let filterUsers = filterUsersFoo(dep_users);\r\n                setUsersDeps(filterUsers);\r\n                setUsers([]);\r\n                setIsJob(!isJob);\r\n                setIsOpen(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='staff'>\r\n            <>\r\n                {isJob ?\r\n                    <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                        Показать дочерние\r\n                    </button>\r\n                    :\r\n                    <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\">\r\n                        Скрыть дочерние\r\n                    </button>\r\n                }\r\n                <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n                {localUser.isAdmin ? <Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link> : ''}\r\n            </>\r\n            <div className=\"employeeWrapper\">\r\n                {\r\n                    users.map((user, id) => <Employee key={id} user={user} />)\r\n                }\r\n                {isOpen ?\r\n                    UsersDep.map((user, id) => <Employee key={id} user={user} />)\r\n                    : ''\r\n                }\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    : ''\r\n                }\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr />\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние\r\n                    </label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\" onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}