{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [user, setUser] = useState([]);\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedInnotech, setPressedInnotech] = useState(false);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      const resUser = await axios.get('/api/user/' + localUser._id);\n      setUser(resUser.data);\n    };\n\n    const VacanciesView = async () => {\n      const status = await axios.get('/api/Vacations/?status=status');\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      setStatus(status.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    getDeps();\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n    setFilterSelect([]);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickCompanyNameInnotech = () => {\n    setPressedInnotech(!pressedInnotech);\n\n    if (!pressedInnotech) {\n      function filterVacanciesByCompanyName(vacancies, companyName) {\n        // Используем метод map() для обхода каждого отдела и его вакансий\n        return vacancies.map(department => ({ // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\n          ...department,\n          vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\n        })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\n      } // Пример использования: фильтрация по компании \"ВТБ\"\n\n\n      const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"Иннотех\");\n      console.log(filteredVacancies);\n    } else {// Если кнопка уже была нажата, выполните другое действие\n    }\n  };\n\n  const handleClickCompanyNameVTB = () => {\n    setPressedCompany(!pressedCompany);\n\n    if (!pressedCompany) {\n      function filterVacanciesByCompanyName(vacancies, companyName) {\n        // Используем метод map() для обхода каждого отдела и его вакансий\n        return vacancies.map(department => ({ // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\n          ...department,\n          vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\n        })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\n      } // Пример использования: фильтрация по компании \"ВТБ\"\n\n\n      const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"ВТБ\");\n      console.log(filteredVacancies);\n    } else {// Если кнопка уже была нажата, выполните другое действие\n    }\n  };\n\n  const handleSelectChange = e => {\n    const selectedDepartmentId = parseInt(e.target.value);\n    const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\n    setFilterSelect(filter);\n    setIsOpen(false);\n    setFilteredData([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                onChange: handleSelectChange,\n                children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: dep.department_id === user.department_id,\n                  value: dep.department_id,\n                  children: dep.department\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filtersButton\",\n                style: {\n                  boxShadow: pressedCompany ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: pressedCompany ? 'gray' : '#1775ee'\n                },\n                onClick: handleClickCompanyNameVTB,\n                children: pressedCompany ? 'ВТБ' : 'ВТБ'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filtersButton\",\n                style: {\n                  boxShadow: pressedInnotech ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: pressedInnotech ? 'gray' : '#1775ee'\n                },\n                onClick: handleClickCompanyNameInnotech,\n                children: pressedInnotech ? 'Иннотех' : 'Иннотех'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 41\n          }, this)) : '', !isOpen ? filterSelect.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 37\n          }, this)) : '', filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 41\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)\n  /*        <>\r\n              <Topbar/>\r\n              <div className=\"mainContainer\">\r\n                  <Sidebar/>\r\n                  <div className='Vacations'>\r\n                      {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                      <div className=\"VacationsContainerTop\">\r\n  \r\n                          {isAddingVacancies ? (\r\n                              <VacanciesAdd />\r\n                          ) : (\r\n                              <>\r\n                                  <h2>Вакансии</h2>\r\n  \r\n                                  <div>\r\n                                      <input\r\n                                          type='date'\r\n                                          placeholder=\"Выберите дату\"\r\n                                          className=\"ModalInput\"\r\n                                          style={{'marginRight': '10px'}}\r\n                                          value={startDate} onChange={handleStartDateChange}\r\n                                      />— <input\r\n                                      type='date'\r\n                                      placeholder=\"Выберите дату\"\r\n                                      className=\"ModalInput\"\r\n                                      style={{'marginRight': '10px'}}\r\n                                      value={endDate} onChange={handleEndDateChange}\r\n                                  />\r\n                                      <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                      <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                  </div>\r\n  \r\n                                  {isOpen ? (\r\n                                      vacancies.map((vac, id) => (\r\n                                          <div className='VacationsContainer' key={id}>\r\n                                              <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                             department={vac.department} vacancies={vac.vacancies}\r\n                                                             users={departId.users}/>\r\n                                          </div>\r\n                                      ))\r\n                                  ) : ''}\r\n  \r\n                                  {filteredData.map(vac => (\r\n                                      <div className='VacationsContainer' key={vac.id}>\r\n                                          <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                         vacancies={vac.vacancies}/>\r\n                                      </div>\r\n                                  ))}\r\n                              </>\r\n                          )}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </>*/\n  ;\n}\n\n_s(VacanciesView, \"oLqu0GEpXqVnbo3QPHVeMEuEoE0=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","user","setUser","filterSelect","setFilterSelect","pressedInnotech","setPressedInnotech","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","getDeps","res","get","resUser","_id","data","vacancies_function","departmentId","user_id","getVacancies","post","get_vacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","filter","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleClickCompanyNameInnotech","filterVacanciesByCompanyName","companyName","company_name","length","filteredVacancies","console","log","handleClickCompanyNameVTB","handleSelectChange","selectedDepartmentId","parseInt","elm","department_id","window","location","href","dep","index","boxShadow","background","vac","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAIA,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAAA;;AAC7B,QAAMC,QAAQ,GAAGX,MAAM,EAAvB;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,IAAD,CAApC;AAGA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,iBAAD,EAAoBC,oBAApB,IAA4CxB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMmC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAEAzC,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAM0C,OAAO,GAAG,YAAY;AACxB,YAAMC,GAAG,GAAG,MAAMtC,KAAK,CAACuC,GAAN,CAAU,mBAAV,CAAlB;AACA,YAAMC,OAAO,GAAG,MAAMxC,KAAK,CAACuC,GAAN,CAAU,eAAeP,SAAS,CAACS,GAAnC,CAAtB;AACAhC,MAAAA,OAAO,CAAC+B,OAAO,CAACE,IAAT,CAAP;AACH,KAJD;;AAMA,UAAMrC,aAAa,GAAG,YAAY;AAE9B,YAAMuB,MAAM,GAAG,MAAM5B,KAAK,CAACuC,GAAN,CAAU,+BAAV,CAArB;AACA,YAAMT,OAAO,GAAG,MAAM9B,KAAK,CAACuC,GAAN,CAAU,iCAAV,CAAtB;AAEAR,MAAAA,UAAU,CAACD,OAAO,CAACY,IAAT,CAAV;AACAb,MAAAA,SAAS,CAACD,MAAM,CAACc,IAAR,CAAT;AAEA,YAAMC,kBAAkB,GAAC;AACrBrC,QAAAA,QAAQ,EAAE0B,SAAS,CAACY,YADC;AAErBC,QAAAA,OAAO,EAAEb,SAAS,CAACS;AAFE,OAAzB;AAKA,YAAMK,YAAY,GAAG,MAAM9C,KAAK,CAAC+C,IAAN,CAAW,0BAAX,EAAsCJ,kBAAtC,CAA3B;;AAEA,UAAI3B,MAAJ,EAAY;AACR;AACAG,QAAAA,YAAY,CAAC2B,YAAY,CAACJ,IAAb,CAAkB,CAAlB,EAAqBM,aAAtB,CAAZ,CAFQ,CAE0C;AACrD;AACJ,KAnBD;;AAqBAX,IAAAA,OAAO;AACPhC,IAAAA,aAAa;AAChB,GAhCQ,EAgCN,CAACW,MAAD,EAASV,QAAT,CAhCM,CAAT;;AAmCA,QAAM2C,KAAK,GAAG,MAAM;AAChB1B,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEH,GAJD;;AAOA,QAAMyB,qBAAqB,GAAIC,CAAD,IAAO;AACjC5B,IAAAA,YAAY,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAIH,CAAD,IAAO;AAC/B1B,IAAAA,UAAU,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAKA,QAAME,oBAAoB,GAAG,MAAM;AAC/B,aAASC,qBAAT,CAA+BlC,SAA/B,EAA0CE,OAA1C,EAAmD;AAC/C,aAAON,SAAS,CAACuC,GAAV,CAAcC,UAAU,KAAK,EAChC,GAAGA,UAD6B;AAEhCxC,QAAAA,SAAS,EAAEwC,UAAU,CAACxC,SAAX,CAAqByC,MAArB,CAA4BC,OAAO,IAAI;AAC9C,gBAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,WAAjB,CAApB;AACA,gBAAMC,KAAK,GAAG1C,SAAS,GAAG,IAAIwC,IAAJ,CAASxC,SAAT,CAAH,GAAyB,IAAhD;AACA,gBAAM2C,GAAG,GAAGzC,OAAO,GAAG,IAAIsC,IAAJ,CAAStC,OAAT,CAAH,GAAuB,IAA1C;AACA,iBAAO,CAAC,CAACwC,KAAD,IAAUH,WAAW,IAAIG,KAA1B,MAAqC,CAACC,GAAD,IAAQJ,WAAW,IAAII,GAA5D,CAAP;AACH,SALU;AAFqB,OAAL,CAAxB,CAAP;AASH;;AAGD,UAAMvC,YAAY,GAAG8B,qBAAqB,CAAClC,SAAD,EAAYE,OAAZ,CAA1C;AACAP,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAU,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAf,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAlBD;;AAoBA,QAAMuD,QAAQ,GAAG,MAAM;AACnB7C,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAIA,QAAM8C,eAAe,GAAG,MAAM;AAC1B9C,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAFD;;AAIA,QAAM+C,8BAA8B,GAAG,MAAM;AACzCvD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;;AACA,QAAI,CAACA,eAAL,EAAsB;AAClB,eAASyD,4BAAT,CAAsCnD,SAAtC,EAAiDoD,WAAjD,EAA8D;AAC1D;AACA,eAAOpD,SAAS,CAACuC,GAAV,CAAcC,UAAU,KAAK,EAChC;AACA,aAAGA,UAF6B;AAGhCxC,UAAAA,SAAS,EAAEwC,UAAU,CAACxC,SAAX,CAAqByC,MAArB,CAA4BC,OAAO,IAAIA,OAAO,CAACW,YAAR,KAAyBD,WAAhE;AAHqB,SAAL,CAAxB,EAIHX,MAJG,CAIID,UAAU,IAAIA,UAAU,CAACxC,SAAX,CAAqBsD,MAArB,GAA8B,CAJhD,CAAP,CAF0D,CAMC;AAC9D,OARiB,CAS9B;;;AACY,YAAMC,iBAAiB,GAAGJ,4BAA4B,CAACnD,SAAD,EAAY,SAAZ,CAAtD;AACAwD,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACH,KAZD,MAYO,CACH;AACH;AACJ,GAjBD;;AAoBA,QAAMG,yBAAyB,GAAG,MAAM;AACpC7D,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;;AACA,QAAI,CAACA,cAAL,EAAqB;AACjB,eAASuD,4BAAT,CAAsCnD,SAAtC,EAAiDoD,WAAjD,EAA8D;AAC1D;AACA,eAAOpD,SAAS,CAACuC,GAAV,CAAcC,UAAU,KAAK,EAChC;AACA,aAAGA,UAF6B;AAGhCxC,UAAAA,SAAS,EAAEwC,UAAU,CAACxC,SAAX,CAAqByC,MAArB,CAA4BC,OAAO,IAAIA,OAAO,CAACW,YAAR,KAAyBD,WAAhE;AAHqB,SAAL,CAAxB,EAIHX,MAJG,CAIID,UAAU,IAAIA,UAAU,CAACxC,SAAX,CAAqBsD,MAArB,GAA8B,CAJhD,CAAP,CAF0D,CAMC;AAC9D,OARgB,CAU7B;;;AACY,YAAMC,iBAAiB,GAAGJ,4BAA4B,CAACnD,SAAD,EAAY,KAAZ,CAAtD;AACAwD,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACH,KAbD,MAaO,CACH;AACH;AACJ,GAlBD;;AAqBA,QAAOI,kBAAkB,GAAI1B,CAAD,IAAO;AAC/B,UAAM2B,oBAAoB,GAAGC,QAAQ,CAAC5B,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;AACA,UAAMM,MAAM,GAAGzC,SAAS,CAACyC,MAAV,CAAiBqB,GAAG,IAAEA,GAAG,CAACC,aAAJ,KAAoBH,oBAA1C,CAAf;AACAnE,IAAAA,eAAe,CAACgD,MAAD,CAAf;AACA1C,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAU,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAND;;AASA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACKP,iBAAiB,gBACd;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAA6B,UAAA,OAAO,EAAE+C,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADc,gBAGd;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAE,MAAMe,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,eAAcpD,SAAS,CAACY,YAAa,EAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAEsB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,EASS9C,iBAAiB,gBACd,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADc,gBAGd;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,WAAW,EAAC,2EAFhB;AAGI,gBAAA,SAAS,EAAC,YAHd;AAII,gBAAA,KAAK,EAAE;AAAC,iCAAe;AAAhB,iBAJX;AAKI,gBAAA,KAAK,EAAEE,SALX;AAMI,gBAAA,QAAQ,EAAE4B;AANd;AAAA;AAAA;AAAA;AAAA,sBADJ,4BAQU;AACN,gBAAA,IAAI,EAAC,MADC;AAEN,gBAAA,WAAW,EAAC,2EAFN;AAGN,gBAAA,SAAS,EAAC,YAHJ;AAIN,gBAAA,KAAK,EAAE;AAAC,iCAAe;AAAhB,iBAJD;AAKN,gBAAA,KAAK,EAAE1B,OALD;AAMN,gBAAA,QAAQ,EAAE8B;AANJ;AAAA;AAAA;AAAA;AAAA,sBARV,eAgBI;AAAQ,gBAAA,SAAS,EAAC,cAAlB;AAAiC,gBAAA,OAAO,EAAEC,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBJ,eAiBI;AAAQ,gBAAA,SAAS,EAAC,cAAlB;AAAiC,gBAAA,OAAO,EAAEN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAqBI;AAAA;AAAA;AAAA;AAAA,oBArBJ,eAsBI;AAAA,sCAEI;AAAQ,gBAAA,GAAG,EAAE1C,QAAb;AAAuB,gBAAA,SAAS,EAAC,wBAAjC;AAA0D,gBAAA,QAAQ,EAAEsE,kBAApE;AAAA,0BACK3D,SAAS,CAACuC,GAAV,CAAc,CAAC4B,GAAD,EAAMC,KAAN,kBACX;AACI,kBAAA,QAAQ,EAAED,GAAG,CAACJ,aAAJ,KAAsBzE,IAAI,CAACyE,aADzC;AAGI,kBAAA,KAAK,EAAEI,GAAG,CAACJ,aAHf;AAAA,4BAKKI,GAAG,CAAC3B;AALT,mBAES4B,KAFT;AAAA;AAAA;AAAA;AAAA,wBADH;AADL;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAaI;AACI,gBAAA,SAAS,EAAC,eADd;AAEI,gBAAA,KAAK,EAAE;AACHC,kBAAAA,SAAS,EAAEzE,cAAc,GAAG,8FAAH,GACnB,EAFH;AAGH0E,kBAAAA,UAAU,EAAE1E,cAAc,GAAG,MAAH,GAAY;AAHnC,iBAFX;AAOI,gBAAA,OAAO,EAAE8D,yBAPb;AAAA,0BAQK9D,cAAc,GAAG,KAAH,GAAW;AAR9B;AAAA;AAAA;AAAA;AAAA,sBAbJ,eAyBI;AACI,gBAAA,SAAS,EAAC,eADd;AAEI,gBAAA,KAAK,EAAE;AACHyE,kBAAAA,SAAS,EAAE3E,eAAe,GAAG,8FAAH,GACpB,EAFH;AAGH4E,kBAAAA,UAAU,EAAE5E,eAAe,GAAG,MAAH,GAAY;AAHpC,iBAFX;AAOI,gBAAA,OAAO,EAAEwD,8BAPb;AAAA,0BAQKxD,eAAe,GAAG,SAAH,GAAe;AARnC;AAAA;AAAA;AAAA;AAAA,sBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EA+DQI,MAAM,GACDE,SAAS,CAACuC,GAAV,CAAc,CAACgC,GAAD,EAAMC,EAAN,kBACf;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI,QAAC,aAAD;AAAe,cAAA,GAAG,EAAED,GAApB;AAA8C,cAAA,MAAM,EAAE7D,MAAtD;AAA8D,cAAA,UAAU,EAAE6D,GAAG,CAAC/B,UAA9E;AAA0F,cAAA,SAAS,EAAE+B,GAAG,CAACvE;AAAzG,eAA8BuE,GAAG,CAAC/B,UAAlC;AAAA;AAAA;AAAA;AAAA;AADJ,aAAyCgC,EAAzC;AAAA;AAAA;AAAA;AAAA,kBADC,CADC,GAKA,EApEd,EAwEK,CAAC1E,MAAD,GAEGN,YAAY,CAAC+C,GAAb,CAAiB,CAACgC,GAAD,EAAMC,EAAN,kBACjB;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACA,QAAC,aAAD;AAAe,cAAA,GAAG,EAAED,GAApB;AAA8C,cAAA,MAAM,EAAE7D,MAAtD;AAA8D,cAAA,UAAU,EAAE6D,GAAG,CAAC/B,UAA9E;AAA0F,cAAA,SAAS,EAAE+B,GAAG,CAACvE;AAAzG,eAA8BuE,GAAG,CAAC/B,UAAlC;AAAA;AAAA;AAAA;AAAA;AADA,aAAyCgC,EAAzC;AAAA;AAAA;AAAA;AAAA,kBADA,CAFH,GAMQ,EA9Eb,EAmFQhE,YAAY,CAAC+B,GAAb,CAAiBgC,GAAG,iBACpB;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI,QAAC,aAAD;AAAe,cAAA,GAAG,EAAEA,GAApB;AAA8C,cAAA,MAAM,EAAE7D,MAAtD;AAA8D,cAAA,UAAU,EAAE6D,GAAG,CAAC/B,UAA9E;AAA0F,cAAA,SAAS,EAAE+B,GAAG,CAACvE;AAAzG,eAA8BuE,GAAG,CAAC/B,UAAlC;AAAA;AAAA;AAAA;AAAA;AADJ,aAAyC+B,GAAG,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA,kBADA,CAnFR;AAAA,wBAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAiHR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvKI;AA0KH;;GAhUQrF,a;;KAAAA,a;AAkUT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const modalDep = useRef()\r\n\r\n    const [user, setUser] = useState([])\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedInnotech, setPressedInnotech] = useState(false);\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/departments/')\r\n            const resUser = await axios.get('/api/user/' + localUser._id)\r\n            setUser(resUser.data)\r\n        }\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(company.data)\r\n            setStatus(status.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        getDeps()\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n        setFilterSelect([])\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n    const handleClickCompanyNameInnotech = () => {\r\n        setPressedInnotech(!pressedInnotech);\r\n        if (!pressedInnotech) {\r\n            function filterVacanciesByCompanyName(vacancies, companyName) {\r\n                // Используем метод map() для обхода каждого отдела и его вакансий\r\n                return vacancies.map(department => ({\r\n                    // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\r\n                })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\r\n            }\r\n// Пример использования: фильтрация по компании \"ВТБ\"\r\n            const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"Иннотех\");\r\n            console.log(filteredVacancies);\r\n        } else {\r\n            // Если кнопка уже была нажата, выполните другое действие\r\n        }\r\n    };\r\n\r\n\r\n    const handleClickCompanyNameVTB = () => {\r\n        setPressedCompany(!pressedCompany);\r\n        if (!pressedCompany) {\r\n            function filterVacanciesByCompanyName(vacancies, companyName) {\r\n                // Используем метод map() для обхода каждого отдела и его вакансий\r\n                return vacancies.map(department => ({\r\n                    // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\r\n                })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\r\n            }\r\n\r\n// Пример использования: фильтрация по компании \"ВТБ\"\r\n            const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"ВТБ\");\r\n            console.log(filteredVacancies);\r\n        } else {\r\n            // Если кнопка уже была нажата, выполните другое действие\r\n        }\r\n    }\r\n\r\n\r\n    const  handleSelectChange = (e) => {\r\n        const selectedDepartmentId = parseInt(e.target.value);\r\n        const filter = vacancies.filter(elm=>elm.department_id===selectedDepartmentId)\r\n        setFilterSelect(filter)\r\n        setIsOpen(false)\r\n        setFilteredData([])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select ref={modalDep} className=\"ModalInputUpdateSelect\" onChange={handleSelectChange}>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                selected={dep.department_id === user.department_id}\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <button\r\n                                        className=\"filtersButton\"\r\n                                        style={{\r\n                                            boxShadow: pressedCompany ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                                : \"\",\r\n                                            background: pressedCompany ? 'gray' : '#1775ee'\r\n                                        }}\r\n                                        onClick={handleClickCompanyNameVTB}>\r\n                                        {pressedCompany ? 'ВТБ' : 'ВТБ'}\r\n                                    </button>\r\n\r\n\r\n                                    <button\r\n                                        className=\"filtersButton\"\r\n                                        style={{\r\n                                            boxShadow: pressedInnotech ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                                : \"\",\r\n                                            background: pressedInnotech ? 'gray' : '#1775ee'\r\n                                        }}\r\n                                        onClick={handleClickCompanyNameInnotech}>\r\n                                        {pressedInnotech ? 'Иннотех' : 'Иннотех'}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {!isOpen ?\r\n\r\n                                    filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                                }\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n\r\n\r\n/*        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                    <div className=\"VacationsContainerTop\">\r\n\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                                <h2>Вакансии</h2>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate} onChange={handleStartDateChange}\r\n                                    />— <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate} onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n\r\n                                {isOpen ? (\r\n                                    vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                           department={vac.department} vacancies={vac.vacancies}\r\n                                                           users={departId.users}/>\r\n                                        </div>\r\n                                    ))\r\n                                ) : ''}\r\n\r\n                                {filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                       vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>*/\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}