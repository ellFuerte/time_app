{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\ModalVacanciesItem\\\\ModalVacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport ModalVacancies from \"../../Templates/ModalVacancies/ModalVacancies\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalVacanciesItem() {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [selectDep, setSelectDep] = useState(\"\");\n  const [company, setCompany] = useState([]);\n  const [selectCompany, setSelectCompany] = useState([]);\n  const [selectItc, setSelectItc] = useState([]);\n  const [projectItem, setProjectItem] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [plannedReleaseDate, setPlannedReleaseDate] = useState([]);\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [user_name, setUser_name] = useState('');\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const departRef = useRef();\n  const companyRef = useRef();\n  const ITCRef = useRef();\n  const projectRef = useRef();\n  const DateReleaseRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [deps, setDeps] = useState([]);\n  useEffect(() => {\n    const Department = async () => {\n      const departs = await axios.get('/api/departments/');\n      setDeps(departs.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      const user = await axios.get('/api/user');\n      setUsers(user.data);\n    };\n\n    Department();\n  }, []);\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    // Проверяем, является ли введенное значение числом (включая пустое значение)\n    if (/^\\d*$/.test(e.target.value)) {\n      setInputValueGrade(e.target.value);\n    }\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const selectDeps = () => {\n    setSelectDep(departRef.current.value);\n  };\n\n  const companySelect = () => {\n    setSelectCompany(companyRef.current.value);\n  };\n\n  const SelectITC = () => {\n    setSelectItc(ITCRef.current.value);\n  };\n\n  const Project = e => {\n    if (/^\\d*$/.test(e.target.value)) {\n      setProjectItem(e.target.value);\n    }\n  };\n\n  const DataCurrent = () => {\n    setPlannedReleaseDate(DateReleaseRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      search: searchTerm,\n      old_user: old_user,\n      deps: selectDep,\n      company_id: selectCompany,\n      vacancy_code: selectItc,\n      project_id: projectItem,\n      planned_release_date: plannedReleaseDate === '' ? null : plannedReleaseDate\n    };\n    console.log('cnahgedate=', ChangeData);\n\n    if (statusRef.current.value === '3' && old_user === null && userId.length < 1) {\n      setMessage('Сотрудник не назначен');\n    } else {\n      const res = await axios.put('/api/Vacations/', ChangeData);\n      setMessage('Сохранено');\n      window.location.reload();\n    }\n  };\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n\n    if (term === '') {\n      setSearchTerm(null);\n    } else {\n      setSearchTerm(term);\n    }\n\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setUser_name('');\n    } else {\n      setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessageItemVacancies\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textDescription\",\n          value: inputValueDescription,\n          onChange: handleDescriptionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: departRef,\n          value: selectDep,\n          onChange: selectDeps,\n          className: \"InputVacanciesItemDeps\",\n          children: deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep.id,\n            children: dep.department_name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: statusRef,\n          value: inputValueStatuses,\n          onChange: selectValue,\n          className: \"InputVacanciesItemSelect\",\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 59\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0413\\u0440\\u0435\\u0439\\u0434:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange,\n          placeholder: \"\\u0413\\u0440\\u0435\\u0439\\u0434\",\n          className: \"InputVacanciesItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: companyRef,\n          value: selectCompany,\n          onChange: companySelect,\n          className: \"InputVacanciesItemSelect\",\n          children: company.map((company, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.id,\n            children: company.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 61\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n              value: searchTerm || user_name,\n              onChange: handleInputChange,\n              className: \"InputVacanciesItem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), old_user ? /*#__PURE__*/_jsxDEV(Link, {\n              className: \"ProfileLinkVacancies\",\n              style: {\n                paddingLeft: '10px'\n              },\n              to: `/profile/${old_user}`,\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u0432 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 44\n            }, this) : '', filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userListContainer\",\n              children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: user.id,\n                onClick: () => handleUserClick(user.user_name, user.id),\n                children: user.user_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ref: DateReleaseRef,\n              placeholder: \"\\u0418\\u0422\\u0421\",\n              className: \"InputVacanciesItem\",\n              value: plannedReleaseDate || '',\n              onChange: DataCurrent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0418\\u0422\\u0421:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: ITCRef,\n              value: selectItc,\n              onChange: SelectITC,\n              placeholder: \"\\u0418\\u0422\\u0421\",\n              className: \"InputVacanciesItem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: projectRef,\n              value: projectItem,\n              onChange: Project,\n              placeholder: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442(\\u041D\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430=0)\",\n              className: \"InputVacanciesItem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divHistory\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalButton\",\n            type: \"submit\",\n            onClick: ChangeData,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ModalVacanciesItem, \"swyx7RWK/nPTcmyhSHhbkUb6YCs=\");\n\n_c = ModalVacanciesItem;\nexport default ModalVacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalVacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/ModalVacanciesItem/ModalVacanciesItem.jsx"],"names":["React","Component","useEffect","useRef","useState","ModalVacancies","Link","moment","axios","ModalVacanciesItem","localUser","JSON","parse","localStorage","getItem","selectDep","setSelectDep","company","setCompany","selectCompany","setSelectCompany","selectItc","setSelectItc","projectItem","setProjectItem","message","setMessage","plannedReleaseDate","setPlannedReleaseDate","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","old_user","setOld_user","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","user_name","setUser_name","date","format","searchTerm","setSearchTerm","userId","setUserId","filteredUsers","setFilteredUsers","users","setUsers","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","departRef","companyRef","ITCRef","projectRef","DateReleaseRef","searchRef","startDate","setStartDate","endDate","setEndDate","deps","setDeps","Department","departs","get","data","user","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","test","selectValue","current","selectDeps","companySelect","SelectITC","Project","DataCurrent","ChangeData","namevacanciesId","namevacancies","description","grade","statuses","search","company_id","vacancy_code","project_id","planned_release_date","console","log","length","res","put","window","location","reload","handleInputChange","term","filtered","filter","toLowerCase","includes","handleUserClick","userName","map","dep","name","id","department_name","status","paddingLeft","index"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useRef, useState} from 'react';\r\nimport ModalVacancies from \"../../Templates/ModalVacancies/ModalVacancies\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nfunction ModalVacanciesItem() {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValue,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: userId,\r\n            search: searchTerm,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:(plannedReleaseDate==='' ? null : plannedReleaseDate)\r\n        }\r\n        console.log('cnahgedate=',ChangeData)\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <div className='MessageItemVacancies'>\r\n                        <span >{message}</span>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <span>Подразделение:</span><br/>\r\n                        <select ref={departRef}\r\n                                value={selectDep}\r\n                                onChange={selectDeps}\r\n                                className='InputVacanciesItemDeps'>\r\n                            {deps.map((dep, name) => <option key={name}\r\n                                                             value={dep.id}>{dep.department_name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Статус:</span><br/>\r\n                        <select ref={statusRef}\r\n                                value={inputValueStatuses}\r\n                                onChange={selectValue}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {status.map((status, name) => <option key={name}\r\n                                                                  value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Грейд:</span><br/>\r\n                        <input type='text'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                               placeholder='Грейд'\r\n                               className='InputVacanciesItem'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <span>Компания:</span><br/>\r\n                        <select ref={companyRef}\r\n                                value={selectCompany}\r\n                                onChange={companySelect}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div>\r\n\r\n                            <span>Имя сотрудника:</span><br/>\r\n                            <div className='inputDiv'>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='Имя сотрудника'\r\n                                    value={searchTerm || user_name}\r\n                                    onChange={handleInputChange}\r\n                                    className='InputVacanciesItem'\r\n                                />\r\n\r\n                                {old_user ?<Link className='ProfileLinkVacancies' style={{paddingLeft:'10px'}} to={`/profile/${old_user}`}>Перейти в профиль</Link>:''}\r\n\r\n\r\n                                {filteredUsers.length > 0 && (\r\n                                    <div className=\"userListContainer\">\r\n                                        {filteredUsers.map((user, index) => (\r\n                                            <div className='selectNameDiv' key={index} value={user.id}\r\n                                                 onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                {user.user_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <span>Дата выхода:</span><br/>\r\n                                <input type='date'\r\n                                       ref={DateReleaseRef}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                       value={plannedReleaseDate || ''}\r\n                                       onChange={DataCurrent}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>ИТС:</span><br/>\r\n                                <input type='text'\r\n                                       ref={ITCRef}\r\n                                       value={selectItc}\r\n                                       onChange={SelectITC}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>Проект:</span><br/>\r\n                                <input type='text'\r\n                                       ref={projectRef}\r\n                                       value={projectItem}\r\n                                       onChange={Project}\r\n                                       placeholder='Проект(Нет проекта=0)'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className='divHistory'>\r\n                            История\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                                Сохранить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ModalVacanciesItem;"]},"metadata":{},"sourceType":"module"}