{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]); // Функция для открытия или закрытия узла\n\n  const toggleNode = index => {\n    const updatedDep = [...dep];\n    updatedDep[index].isOpen = !updatedDep[index].isOpen;\n    setDep(updatedDep);\n  }; // Функция для рекурсивного отображения дерева\n\n\n  const renderTree = nodes => {\n    return nodes.map(node => {\n      const label = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nodeLabel\",\n        onClick: () => toggleNode(node.index),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node\",\n          children: node.department_tree_to_json.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(TreeView, {\n        nodeLabel: label,\n        defaultCollapsed: false,\n        collapsed: !node.isOpen,\n        children: node.department_tree_to_json.Subclasses && renderTree(node.department_tree_to_json.Subclasses)\n      }, node.department_tree_to_json.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    });\n  }; // Загрузка всех департаментов\n\n\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n        const initialDepState = res.data.map((node, index) => ({ ...node,\n          isOpen: false,\n          index: index\n        }));\n        setDep(initialDepState);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: renderTree(dep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useEffect","useState","Link","axios","TreeView","Sidebar","dep","setDep","toggleNode","index","updatedDep","isOpen","renderTree","nodes","map","node","label","department_tree_to_json","Name","Subclasses","id","getDeps","res","get","initialDepState","data","error","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,mCAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B,CADkB,CAGlB;;AACA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC1B,UAAMC,UAAU,GAAG,CAAC,GAAGJ,GAAJ,CAAnB;AACAI,IAAAA,UAAU,CAACD,KAAD,CAAV,CAAkBE,MAAlB,GAA2B,CAACD,UAAU,CAACD,KAAD,CAAV,CAAkBE,MAA9C;AACAJ,IAAAA,MAAM,CAACG,UAAD,CAAN;AACH,GAJD,CAJkB,CAUlB;;;AACA,QAAME,UAAU,GAAIC,KAAD,IAAW;AAC1B,WAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACvB,YAAMC,KAAK,gBACP;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,OAAO,EAAE,MAAMR,UAAU,CAACO,IAAI,CAACN,KAAN,CAF7B;AAAA,+BAII;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBM,IAAI,CAACE,uBAAL,CAA6BC;AAArD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ;;AASA,0BACI,QAAC,QAAD;AAEI,QAAA,SAAS,EAAEF,KAFf;AAGI,QAAA,gBAAgB,EAAE,KAHtB;AAII,QAAA,SAAS,EAAE,CAACD,IAAI,CAACJ,MAJrB;AAAA,kBAMKI,IAAI,CAACE,uBAAL,CAA6BE,UAA7B,IACDP,UAAU,CAACG,IAAI,CAACE,uBAAL,CAA6BE,UAA9B;AAPd,SACSJ,IAAI,CAACE,uBAAL,CAA6BG,EADtC;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KArBM,CAAP;AAsBH,GAvBD,CAXkB,CAoClB;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,OAAO,GAAG,YAAY;AACxB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,+BAAV,CAAlB;AACA,cAAMC,eAAe,GAAGF,GAAG,CAACG,IAAJ,CAASX,GAAT,CAAa,CAACC,IAAD,EAAON,KAAP,MAAkB,EACnD,GAAGM,IADgD;AAEnDJ,UAAAA,MAAM,EAAE,KAF2C;AAGnDF,UAAAA,KAAK,EAAEA;AAH4C,SAAlB,CAAb,CAAxB;AAKAF,QAAAA,MAAM,CAACiB,eAAD,CAAN;AACH,OARD,CAQE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACH;AACJ,KAZD;;AAcAL,IAAAA,OAAO;AACV,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACKT,UAAU,CAACN,GAAD;AADf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnED;;GAAMD,O;;KAAAA,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    // Функция для открытия или закрытия узла\r\n    const toggleNode = (index) => {\r\n        const updatedDep = [...dep];\r\n        updatedDep[index].isOpen = !updatedDep[index].isOpen;\r\n        setDep(updatedDep);\r\n    };\r\n\r\n    // Функция для рекурсивного отображения дерева\r\n    const renderTree = (nodes) => {\r\n        return nodes.map((node) => {\r\n            const label = (\r\n                <div\r\n                    className=\"nodeLabel\"\r\n                    onClick={() => toggleNode(node.index)}\r\n                >\r\n                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <TreeView\r\n                    key={node.department_tree_to_json.id}\r\n                    nodeLabel={label}\r\n                    defaultCollapsed={false}\r\n                    collapsed={!node.isOpen}\r\n                >\r\n                    {node.department_tree_to_json.Subclasses &&\r\n                    renderTree(node.department_tree_to_json.Subclasses)}\r\n                </TreeView>\r\n            );\r\n        });\r\n    };\r\n\r\n    // Загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                const initialDepState = res.data.map((node, index) => ({\r\n                    ...node,\r\n                    isOpen: false,\r\n                    index: index,\r\n                }));\r\n                setDep(initialDepState);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {renderTree(dep)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}