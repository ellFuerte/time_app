{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Create, Delete, Message } from '@material-ui/icons';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal';\nimport './ProfileInfo.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills';\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [selectedValue, setSelectedValue] = useState('');\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [isAdmin, setIsadmin] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalActiveResetPass, setModalActiveResetPass] = useState(false);\n  const [modalActiveReset, setModalActiveReset] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [hasImage, setHasImage] = useState(false);\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const hasImageStatus = Object.keys(images).some(key => user.nomination_status === key || user.nomination_status === parseInt(key));\n    setHasImage(hasImageStatus);\n\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setTimeZone(res.data[0]['timezone']);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsadmin(res.data.isadmin);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n      const city = await axios.get('/api/Cities/');\n      setCities(city.data);\n    }; // Номинации\n\n\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    fetchVote();\n    fetchUser();\n    getNameDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username]); // изменить пароль\n\n  const handleClickPassword = async e => {\n    e.preventDefault();\n\n    if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n      setErr('Новые пароли не совпадают');\n      return;\n    }\n\n    const passwords = {\n      userId: localUse._id,\n      password: localUse.password,\n      oldPassword: modalOldPass.current.value,\n      newPassword: modalNewPass.current.value\n    };\n\n    try {\n      await axios.put('/api/newPassword/', passwords);\n      setModalActivePass(false);\n      /*      localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n    } catch (er) {\n      setErr('Старые пароли не совпадают');\n    }\n  }; // сбросить пароль\n\n\n  const handleResetPass = async e => {\n    e.preventDefault();\n    const resetPassword = {\n      userId: username.username,\n      newPassword: 'qwerty123'\n    };\n\n    try {\n      await axios.put('/api/resetPassword/', resetPassword);\n      setModalActiveResetPass(false);\n    } catch (error) {}\n  };\n\n  const status = async () => {\n    if (user.status === 1) {\n      const status = {\n        status: 2,\n        typework_id: 1,\n        userId: user.id,\n        healthEnd: '-',\n        commentEnd: '-',\n        workEnd: new Date(Date.now())\n      };\n      await axios.put(\"/api/post/\", status);\n    } else {\n      alert(\"Пользователь не в работе\");\n    }\n  }; // удалить пользователя\n\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    setIsFetching(true);\n    const newPost = {\n      userId: username.username,\n      healthEnd: 1,\n      status: 4\n    };\n\n    try {\n      await axios.put('/api/deluser/', newPost);\n      /*                  workEnd: new Date(Date.now()),\n                        workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n                   localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n      /*      if(user.status === 1){\n              await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n            }\n           localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n\n      setModalActiveDelete(false);\n      window.location.href = `/profile/${user.id}`;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n  /*    const button = () => {\n          if (votearray.length === 0 || votearray.length <= 9) {\n              setErr('Выберите участников номинации');\n              return;\n          }\n          if (votearray.length === 10 && er) {\n              return;\n          } else {\n              const duplicates = {};\n              let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n              votearray.forEach(async (vote) => {\n                  const arr = vote.split(\"_\");\n                  const vote_for_user = arr[1];\n                   // Проверяем, был ли уже такой элемент\n                  if (duplicates[vote_for_user]) {\n                      // Если был, устанавливаем флаг и завершаем итерацию\n                      hasDuplicates = true;\n                      return;\n                  } else {\n                      // Иначе, добавляем его в объект duplicates\n                      duplicates[vote_for_user] = true;\n                  }\n                   const voteUser = {\n                      user_id: localUse._id,\n                      vote_for_user: arr[1],\n                      nominations_id: arr[0]\n                  };\n                   await axios.post('/api/vote/', voteUser);\n              });\n               // Если есть повторяющиеся элементы, прекращаем выполнение функции\n              if (hasDuplicates) {\n                  setErr('Есть сотрудники которые участвуют больше одной номинации');\n                  return;\n              }\n               setModalActiveVote(false);\n          }\n      };*/\n\n  /*    const clickVote = (e) => {\n          e.preventDefault()\n          const data = e.target.value.toString()\n          const arr = data.split(\"_\")\n          let votearr = votearray\n          votearr.push(data)\n          const newArray = votearr.filter(element => element !== \"\")\n          console.log('newArray=', newArray)\n          setVotearray(newArray)\n      }*/\n\n\n  const clickVote = (e, id, user_name, selectIndex) => {\n    setFilteredCities([]);\n    console.log('index=', id, user_name);\n    setInputValues(prev => ({ ...prev,\n      [selectedInputIndex]: user_name\n    }));\n    e.preventDefault();\n    const data = id.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                      setErr('Такой сотрудник уже есть в другой номинации');\n                  }else{\n                      setErr('');\n                  }*/\n\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray); // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n\n    setSelectedOption(prevState => ({ ...prevState,\n      [selectIndex]: true\n    }));\n  };\n\n  const secureButton = async () => {\n    console.log('chek=', checkedItems);\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: null\n    };\n    await axios.post('/api/vote/', addNomination);\n    setModalVote(false);\n    window.location.reload();\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    setUser(prevState => ({ ...prevState,\n      nomination_status: checked ? voteId : null\n    }));\n  };\n\n  const nextModal = async () => {\n    setModalVote(true);\n    setModalActiveVote(false);\n  };\n\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  const handleInputChangeUsers = (e, id) => {\n    const index = id + 1;\n    const {\n      value\n    } = e.target;\n    setInputValues(prev => ({ ...prev,\n      [index]: value\n    }));\n    setSelectedInputIndex(index);\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = userVote.filter(city => city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const [allDateUser, setAllDateUser] = useState();\n\n  const getChangeVacancies = () => {\n    if (localUse.isAdmin) {\n      setModalVacancies(true);\n      setAllDateUser(user);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[key].src,\n      title: images[key].title,\n      alt: `Image for ${key}`,\n      className: \"imagesProfile\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }, this)), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileName\",\n        style: {\n          paddingTop: hasImage ? '30px' : '0px'\n        },\n        children: [user.user_name, localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(Create, {\n          style: {\n            marginLeft: '5px',\n            fontSize: 'large',\n            cursor: 'pointer'\n          },\n          onClick: () => setModalActive(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 33\n        }, this) : '', /*#__PURE__*/_jsxDEV(Editing, {\n          modalActive: modalActive,\n          setModalActive: setModalActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 33\n        }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(Delete, {\n          style: {\n            cursor: 'pointer',\n            fontSize: 'large'\n          },\n          onClick: () => setModalActiveDelete(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), localUse.isAdmin === true && localUse._id === user.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            style: {\n              cursor: 'pointer',\n              color: 'black',\n              fontSize: 'large'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: getChangeVacancies,\n          className: \"ProfileLinkVacancies\",\n          children: user.vacancy_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px dashed black',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"Email: \", name.charAt(0).toUpperCase() + name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438: \", user.distribution_group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438: \", user.activity_profile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F: \", cityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", depsName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }, this), localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActivePass(true),\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 21\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveResetPass(true),\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveReset(true),\n        children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 25\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveVote(true),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: nextModal,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 41\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveSkills(true),\n        children: \"\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {\n        modalActiveSkills: modalActiveSkills,\n        setModalActiveSkills: setModalActiveSkills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActivePass,\n      setActive: setModalActivePass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClickPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalOldPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPass,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPassAgain,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonChangePassword\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveResetPass,\n      setActive: setModalActiveResetPass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleResetPass,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442: qwerty123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonRePasswordUser\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveReset,\n      setActive: setModalActiveReset,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: status,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u0442\\u043C\\u0435\\u0442\\u043A\\u0443 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveDelete,\n      setActive: setModalActiveDelete,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveVote,\n      setActive: setModalActiveVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"inputVote\",\n              children: vote.nominations_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 37\n            }, this), vote.description]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"di\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleInputChangeUsers(e, id),\n              value: inputValues[id + 1] || '',\n              className: \"select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 37\n            }, this), selectedInputIndex === id + 1 && filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              style: {\n                position: 'absolute',\n                top: '100%',\n                left: 0,\n                zIndex: 1000,\n                marginLeft: '20px'\n              },\n              children: filteredCities.map((city, cityId) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                onClick: e => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name),\n                children: city.user_name\n              }, cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 41\n            }, this)]\n          }, id + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: button,\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalVote,\n      setActive: setModalVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteContainer\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voteItem\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: vote.id,\n              className: \"inputVote\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: vote.id,\n                value: vote.id,\n                onChange: e => inputClick(e, vote.id),\n                checked: user.nomination_status === vote.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 37\n              }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `../images/${vote.id}.png`,\n                alt: `Image for ${vote.nominations_name}`,\n                className: \"images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 37\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: secureButton,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: clearSecureButton,\n        children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacancies,\n      setActive: setModalVacancies,\n      children: /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        allDateUser: allDateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 9\n  }, this);\n}\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/\n\n_s(ProfileInfo, \"5+AduMejFjM04h3pzAQ0loTVVvs=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Create","Delete","Message","ErrorIcon","Modal","Link","useParams","Skills","ModalVacanciesItem","ModalVacancies","Editing","ProfileInfo","timeZone","setTimeZone","selectedOption","setSelectedOption","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","selectedValue","setSelectedValue","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","isAdmin","setIsadmin","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","user","setUser","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","er","setErr","username","localUser","_id","email","JSON","parse","localStorage","getItem","localUse","modalOldPass","modalNewPass","modalNewPassAgain","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","hasImage","setHasImage","usersStatuses","findStatus","k","i","hasImageStatus","Object","keys","images","some","key","nomination_status","parseInt","getNameDeps","deps","res","post","data","fetchUser","id","get","isadmin","sort","a","b","user_name","localeCompare","mass","filter","element","status","city","fetchVote","phone_number","additional_contact","distribution_group","activity_profile","place_of_residence","handleClickPassword","e","preventDefault","current","value","passwords","userId","password","oldPassword","newPassword","put","handleResetPass","resetPassword","error","typework_id","healthEnd","commentEnd","workEnd","Date","now","alert","handleDelete","newPost","window","location","href","console","log","Array","isArray","name","toLowerCase","button","length","forEach","arr","split","voteUser","user_id","vote_for_user","nominations_id","clickVote","selectIndex","prev","toString","str","str1","existingIndex","findIndex","item","newArray","votearr","push","prevState","secureButton","addNomination","id_nomination","undefined","reload","clearSecureButton","inputClick","event","voteId","checked","target","nextModal","src","title","handleChange","handleInputChangeUsers","index","termCities","filtered","includes","allDateUser","setAllDateUser","getChangeVacancies","map","paddingTop","marginLeft","fontSize","cursor","color","vacancy_code","border","padding","charAt","toUpperCase","slice","nominations_name","description","position","top","left","zIndex","cityId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useEffect, useRef, useState} from 'react'\nimport {Create, Delete, Message} from '@material-ui/icons'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal'\nimport './ProfileInfo.css'\nimport {Link, useParams} from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills'\n\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\"\n\nexport default function ProfileInfo() {\n\n    const [timeZone, setTimeZone] = useState([])\n    const [selectedOption, setSelectedOption] = useState({});\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n    const [inputValues, setInputValues] = useState('');\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n    const [selectedValue, setSelectedValue] = useState('');\n\n\n\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [isAdmin, setIsadmin] = useState([])\n    const [userVote, setUserVote] = useState([])\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n\n\n\n\n\n\n\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\n    const [modalActiveReset, setModalActiveReset] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n\n    const [er, setErr] = useState('')\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n\n\n\n\n    const [searchTermCities, setSearchTermCities] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [cities, setCities] = useState([])\n    const [hasImage, setHasImage] = useState(false);\n\n\n\n\n\n\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n        const hasImageStatus = Object.keys(images).some(key =>\n            user.nomination_status === key || user.nomination_status === parseInt(key)\n        );\n        setHasImage(hasImageStatus);\n\n\n\n\n\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsadmin(res.data.isadmin)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\n            setUserVote(mass)\n\n            const city = await axios.get('/api/Cities/')\n            setCities(city.data)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n\n        fetchVote()\n        fetchUser()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n        username.username\n    ])\n\n\n    // изменить пароль\n    const handleClickPassword = async (e) => {\n        e.preventDefault()\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n            setErr('Новые пароли не совпадают')\n            return\n        }\n        const passwords = {\n            userId: localUse._id,\n            password: localUse.password,\n            oldPassword: modalOldPass.current.value,\n            newPassword: modalNewPass.current.value\n        }\n        try {\n            await axios.put('/api/newPassword/', passwords)\n            setModalActivePass(false)\n            /*      localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n        } catch (er) {\n            setErr('Старые пароли не совпадают')\n        }\n    }\n\n    // сбросить пароль\n    const handleResetPass = async (e) => {\n        e.preventDefault()\n\n        const resetPassword = {\n            userId: username.username,\n            newPassword: 'qwerty123'\n        }\n\n        try {\n            await axios.put('/api/resetPassword/', resetPassword)\n            setModalActiveResetPass(false)\n        } catch (error) {\n        }\n    }\n\n    const status = async () => {\n        if (user.status === 1) {\n            const status = {\n                status: 2,\n                typework_id: 1,\n                userId: user.id,\n                healthEnd: '-',\n                commentEnd: '-',\n                workEnd: new Date(Date.now())\n            }\n            await axios.put(\"/api/post/\", status)\n        } else {\n            alert(\"Пользователь не в работе\")\n        }\n    }\n\n    // удалить пользователя\n    const handleDelete = async (e) => {\n        e.preventDefault()\n        setIsFetching(true)\n\n        const newPost = {\n            userId: username.username,\n            healthEnd: 1,\n            status: 4\n        }\n        try {\n            await axios.put('/api/deluser/', newPost)\n\n            /*                  workEnd: new Date(Date.now()),\n                              workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n\n                        localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n\n            /*      if(user.status === 1){\n                    await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n                  }\n                 localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n\n\n            setModalActiveDelete(false)\n            window.location.href = `/profile/${user.id}`\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n\n\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n    /*    const button = () => {\n            if (votearray.length === 0 || votearray.length <= 9) {\n                setErr('Выберите участников номинации');\n                return;\n            }\n            if (votearray.length === 10 && er) {\n                return;\n            } else {\n                const duplicates = {};\n                let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n                votearray.forEach(async (vote) => {\n                    const arr = vote.split(\"_\");\n                    const vote_for_user = arr[1];\n\n                    // Проверяем, был ли уже такой элемент\n                    if (duplicates[vote_for_user]) {\n                        // Если был, устанавливаем флаг и завершаем итерацию\n                        hasDuplicates = true;\n                        return;\n                    } else {\n                        // Иначе, добавляем его в объект duplicates\n                        duplicates[vote_for_user] = true;\n                    }\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    };\n\n                    await axios.post('/api/vote/', voteUser);\n                });\n\n                // Если есть повторяющиеся элементы, прекращаем выполнение функции\n                if (hasDuplicates) {\n                    setErr('Есть сотрудники которые участвуют больше одной номинации');\n                    return;\n                }\n\n                setModalActiveVote(false);\n            }\n        };*/\n    /*    const clickVote = (e) => {\n            e.preventDefault()\n            const data = e.target.value.toString()\n            const arr = data.split(\"_\")\n            let votearr = votearray\n            votearr.push(data)\n            const newArray = votearr.filter(element => element !== \"\")\n            console.log('newArray=', newArray)\n            setVotearray(newArray)\n        }*/\n\n\n    const clickVote = (e, id,user_name,selectIndex) => {\n        setFilteredCities([])\n        console.log('index=',id,user_name)\n        setInputValues(prev => ({ ...prev, [selectedInputIndex]: user_name }));\n        e.preventDefault();\n        const data =id.toString();\n        const arr = data.split(\"_\");\n        if (arr[0] === '' || arr[1] === '') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n            /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                            setErr('Такой сотрудник уже есть в другой номинации');\n                        }else{\n                            setErr('');\n                        }*/\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n        // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n        setSelectedOption(prevState => ({\n            ...prevState,\n            [selectIndex]: true\n        }));\n\n    };\n\n\n    const secureButton = async () => {\n        console.log('chek=', checkedItems)\n\n        const res = await axios.get('/api/user/' + username.username)\n\n        const addNomination = {\n            userId: username.username,\n            id_nomination: check\n        }\n\n        if (check === undefined) {\n            setErr('Выберите номинацию')\n        } else {\n            await axios.post('/api/vote/', addNomination)\n            setModalVote(false)\n            window.location.reload()\n        }\n    }\n\n    const clearSecureButton = async () => {\n        const res = await axios.get('/api/user/' + username.username)\n        const addNomination = {\n            userId: username.username,\n            id_nomination: null\n        }\n\n        await axios.post('/api/vote/', addNomination)\n        setModalVote(false)\n        window.location.reload()\n\n    }\n\n\n    const inputClick = (event, voteId) => {\n        const {id, checked} = event.target\n        if (checked) {\n            setCheckedItems(checked)\n        } else {\n            setCheckedItems(null)\n        }\n        setCheck(event.target.value)\n        setCheckedItems(prevState => ({\n            ...prevState,\n            [id]: checked,\n        }))\n\n        setUser(prevState => ({\n                ...prevState,\n                nomination_status: checked ? voteId : null\n            }\n        ))\n    }\n\n\n    const nextModal = async () => {\n        setModalVote(true)\n        setModalActiveVote(false)\n    }\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n    const handleChange = (e) => {\n        setSelectedValue(e.target.value);\n    };\n\n\n    const handleInputChangeUsers = (e,id) => {\n        const index = id + 1\n        const { value } = e.target;\n        setInputValues(prev => ({ ...prev, [index]: value }));\n        setSelectedInputIndex(index);\n\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = userVote.filter(city =>\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n    const [allDateUser,setAllDateUser]=useState()\n    const getChangeVacancies =  () => {\n        if(localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                        <div className='ProfileName' style={{ paddingTop: hasImage ? '30px' : '0px' }}>\n                            {user.user_name}\n\n\n\n                            {localUse.isAdmin || localUse._id===username.username\n                                ?\n                                <Create style={{marginLeft: '5px', fontSize: 'large', cursor: 'pointer'}} onClick={() => setModalActive(true)}/>\n                                : ''}\n                                <Editing modalActive={modalActive} setModalActive={setModalActive} />\n\n\n                            {localUse.isAdmin ?\n                                <Delete style={{cursor: 'pointer', fontSize: 'large'}}\n                                                        onClick={() => setModalActiveDelete(true)}/>\n                                : <></>}\n\n                            {localUse.isAdmin === true && localUse._id === user.id ?\n                            <Link to={`/AdminPanel`}>\n                                <ErrorIcon\n                                style={{cursor: 'pointer', color: 'black', fontSize: 'large'}}/>\n                            </Link>\n                                : ''}\n                        </div>\n\n                        <div>\n                            <label style={{cursor:'pointer'}} onClick={getChangeVacancies} className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                        </div>\n\n                        {/*                {\n                    <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                }*/}\n\n\n                    <div style={{border: '3px dashed black',padding:'10px'}}>\n                    <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                    <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false || localUse._id===username.username? 'Доп.Контакт: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username? user.additional_contact : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                    <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                    <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false  || localUse._id===username.username ? 'Адрес фактического проживания: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username ? user.place_of_residence : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n\n\n                    {localUse.isAdmin || localUse._id===username.username ?\n                    <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>:''\n                    }\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveResetPass(true)}>Сбросить\n                            пароль</div> : ''}\n\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveReset(true)}>Закончить</div> :'' }\n\n\n                    {localUse._id === user.id ?\n                        <div className='changePass' onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''}\n\n\n                    {localUse.isAdmin ? <div className=\"changePass\" onClick={nextModal}>Закрепить номинацию</div> : ''}\n\n\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills} />\n\n\n                </div>\n            }\n\n\n            <Modal active={modalActivePass} setActive={setModalActivePass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {er && <div className='modalError'>{er}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClickPassword}>\n                    <input\n                        placeholder=\"Старый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalOldPass}\n                    />\n                    <input\n                        placeholder=\"Новый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPass}\n                        minLength='6'\n                    />\n                    <input\n                        placeholder=\"Новый пароль ещё раз\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPassAgain}\n                        minLength='6'\n                    />\n                    <button className=\"ModalButtonChangePassword\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveResetPass} setActive={setModalActiveResetPass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleResetPass}>\n                    <h2>Новый пароль будет: qwerty123</h2>\n                    <button className=\"ModalButtonRePasswordUser\" type=\"submit\" disabled={isFetching}>\n                        Сбросить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveReset} setActive={setModalActiveReset}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={status}>\n                    <h2>Вы хотите завершить отметку времени пользователя?</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Закончить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleDelete}>\n                    <h2>Пользователь будет удален</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Удалить\n                    </button>\n                </form>\n            </Modal>\n\n\n\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div>\n                        {\n                            vote.map((vote, id) =>\n\n                                <label key={id} htmlFor={vote.id}>\n                                    <h3 className='inputVote'>{vote.nominations_name}</h3>\n                                    {vote.description}\n                                </label>\n                            )}\n                    </div>\n                    <div className='di'>\n{/*                        {vote.map((vote, id) => (\n                                <select\n                                    onChange={(e) => clickVote(e, id)}\n                                    key={id}\n                                    value={userVote.id}\n                                    className='select'>\n\n                                    {!selectedOption[id] &&\n\n                                    <option value=''>Выберите участника</option>}\n\n                                    {userVote.map((userVote, id) => (\n\n                                        <option key={id} value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>\n                                    ))}\n                                </select>\n                            )\n                        )}*/}\n\n                            {vote.map((vote, id) => (\n                                <div key={id+1} style={{ position: 'relative' }}>\n                                    <input\n                                        onChange={(e) => handleInputChangeUsers(e, id)}\n                                        value={inputValues[id+1] || ''}\n                                        className='select'\n                                    />\n                                    {selectedInputIndex === id+1 && filteredCities.length > 0 && (\n                                        <div className='divSelectRegister' style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000,marginLeft:'20px' }}>\n                                            {filteredCities.map((city, cityId) => (\n                                                <div\n                                                    className='selectNameDiv'\n                                                    key={cityId}\n                                                    onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\n                                                    {city.user_name}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n            </Modal>\n            <Modal active={modalVote} setActive={setModalVote}>\n                <h1>Закрепить номинацию:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div>\n                    <div className='voteContainer'>\n                        {vote.map((vote, id) => (\n                            <div key={id} className=\"voteItem\">\n                                <label key={id} htmlFor={vote.id} className=\"inputVote\">\n\n                                    <input\n                                        type='checkbox'\n                                        id={vote.id}\n                                        value={vote.id}\n                                        onChange={(e) => inputClick(e, vote.id)}\n                                        checked={user.nomination_status === vote.id}\n                                    />\n\n                                    {vote.nominations_name}{' '}\n\n                                    <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\n                                         className='images'/>\n\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={secureButton}>Закрепить</button>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={clearSecureButton}>Снять\n                    номинацию\n                </button>\n            </Modal>\n\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem\n                    allDateUser={allDateUser}\n                />\n            </ModalVacancies>\n\n\n\n<Skills/>\n\n        </div>\n    )\n}\n\n\n\n\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/"]},"metadata":{},"sourceType":"module"}