{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\VoteNominations\\\\VoteNominations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VoteNominations({\n  modalActiveVote,\n  setModalActiveVote\n}) {\n  _s();\n\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const [er, setErr] = useState('');\n  const [vote, setVote] = useState([]);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [userVote, setUserVote] = useState([]);\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [votearray, setVotearray] = useState([]);\n  useEffect(() => {\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    fetchVote();\n  }, []);\n\n  const handleInputChangeUsers = (e, id) => {\n    const index = id + 1;\n    const {\n      value\n    } = e.target;\n    setInputValues(prev => ({ ...prev,\n      [index]: value\n    }));\n    setSelectedInputIndex(index);\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = userVote.filter(city => city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const clickVote = (e, id, user_name) => {\n    setFilteredCities([]);\n    console.log('index=', id, user_name);\n    setInputValues(prev => ({ ...prev,\n      [selectedInputIndex]: user_name\n    }));\n    e.preventDefault();\n    const data = id.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray);\n  };\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: modalActiveVote,\n    setActive: setModalActiveVote,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalError\",\n      children: er\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: vote.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"inputVote\",\n            children: vote.nominations_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), vote.description]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"di\",\n        children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleInputChangeUsers(e, id),\n            value: inputValues[id + 1] || '',\n            className: \"select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), selectedInputIndex === id + 1 && filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divSelectRegister\",\n            style: {\n              position: 'absolute',\n              top: '100%',\n              left: 0,\n              zIndex: 1000,\n              marginLeft: '20px'\n            },\n            children: filteredCities.map((city, cityId) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectNameDiv\",\n              onClick: e => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name),\n              children: city.user_name\n            }, cityId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      disabled: isFetching,\n      onClick: button,\n      children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VoteNominations, \"XEQemhcaw/sUm1JapzGBnLyJxEs=\");\n\n_c = VoteNominations;\nexport default VoteNominations;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteNominations\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/VoteNominations/VoteNominations.jsx"],"names":["React","useEffect","useState","Modal","axios","VoteNominations","modalActiveVote","setModalActiveVote","localUse","JSON","parse","localStorage","getItem","er","setErr","vote","setVote","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","searchTermCities","setSearchTermCities","userVote","setUserVote","filteredCities","setFilteredCities","votearray","setVotearray","fetchVote","res","get","data","handleInputChangeUsers","e","id","index","value","target","prev","termCities","filtered","filter","city","user_name","toLowerCase","includes","clickVote","console","log","preventDefault","toString","arr","split","str","str1","existingIndex","findIndex","item","newArray","votearr","push","element","button","length","forEach","voteUser","user_id","_id","vote_for_user","nominations_id","post","map","nominations_name","description","position","top","left","zIndex","marginLeft","cityId","isFetching"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction VoteNominations({modalActiveVote,setModalActiveVote}) {\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n    const [er, setErr] = useState('')\r\n    const [vote, setVote] = useState([])\r\n    const [inputValues, setInputValues] = useState('');\r\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\r\n    const [searchTermCities, setSearchTermCities] = useState('');\r\n    const [userVote, setUserVote] = useState([])\r\n    const [filteredCities, setFilteredCities] = useState([]);\r\n    const [votearray, setVotearray] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n    const fetchVote = async () => {\r\n        const res = await axios.get('/api/vote/')\r\n        setVote(res.data)\r\n    }\r\n        fetchVote()\r\n    }, [])\r\n\r\n\r\n    const handleInputChangeUsers = (e, id) => {\r\n        const index = id + 1\r\n        const {value} = e.target;\r\n        setInputValues(prev => ({...prev, [index]: value}));\r\n        setSelectedInputIndex(index);\r\n\r\n        const termCities = e.target.value;\r\n        setSearchTermCities(termCities);\r\n        const filtered = userVote.filter(city =>\r\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        if (termCities === '') {\r\n            setFilteredCities([])\r\n        } else {\r\n            setFilteredCities(filtered);\r\n        }\r\n    }\r\n\r\n    const clickVote = (e, id, user_name) => {\r\n        setFilteredCities([])\r\n        console.log('index=', id, user_name)\r\n        setInputValues(prev => ({...prev, [selectedInputIndex]: user_name}));\r\n        e.preventDefault();\r\n        const data = id.toString();\r\n        const arr = data.split(\"_\");\r\n        if (arr[0] === '' || arr[1] === '') {\r\n            return;\r\n        } else {\r\n            const str = arr[1].toString();\r\n            const str1 = arr[0].toString();\r\n\r\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\r\n            if (existingIndex !== -1) {\r\n                const newArray = [...votearray];\r\n                newArray[existingIndex] = data;\r\n                console.log('Массив с обновленным элементом:', newArray);\r\n                setVotearray(newArray);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const votearr = [...votearray];\r\n        votearr.push(data);\r\n\r\n        const newArray = votearr.filter(element => element !== \"\");\r\n        console.log('newArray=', newArray);\r\n        setVotearray(newArray);\r\n\r\n    };\r\n\r\n    const button = () => {\r\n        if (votearray.length === 0) {\r\n            setErr('Выберите участников номинации')\r\n        } else {\r\n            votearray.forEach(async (vote) => {\r\n\r\n\r\n                    const arr = vote.split(\"_\")\r\n\r\n                    const voteUser = {\r\n                        user_id: localUse._id,\r\n                        vote_for_user: arr[1],\r\n                        nominations_id: arr[0]\r\n                    }\r\n                    await axios.post('/api/vote/', voteUser)\r\n                }\r\n            )\r\n            setModalActiveVote(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal active={modalActiveVote} setActive={setModalActiveVote}>\r\n            <h1>Номинации:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr/>\r\n            <div className='div'>\r\n                <div>\r\n                    {\r\n                        vote.map((vote, id) =>\r\n\r\n                            <label key={id} htmlFor={vote.id}>\r\n                                <h3 className='inputVote'>{vote.nominations_name}</h3>\r\n                                {vote.description}\r\n                            </label>\r\n                        )}\r\n                </div>\r\n                <div className='di'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id + 1} style={{position: 'relative'}}>\r\n                            <input\r\n                                onChange={(e) => handleInputChangeUsers(e, id)}\r\n                                value={inputValues[id + 1] || ''}\r\n                                className='select'\r\n                            />\r\n                            {selectedInputIndex === id + 1 && filteredCities.length > 0 && (\r\n                                <div className='divSelectRegister' style={{\r\n                                    position: 'absolute',\r\n                                    top: '100%',\r\n                                    left: 0,\r\n                                    zIndex: 1000,\r\n                                    marginLeft: '20px'\r\n                                }}>\r\n                                    {filteredCities.map((city, cityId) => (\r\n                                        <div\r\n                                            className='selectNameDiv'\r\n                                            key={cityId}\r\n                                            onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\r\n                                            {city.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n            <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default VoteNominations;"]},"metadata":{},"sourceType":"module"}