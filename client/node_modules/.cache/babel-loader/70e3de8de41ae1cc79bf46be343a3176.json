{"ast":null,"code":"import _slicedToArray from\"D:/Download/time_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Link,useParams}from'react-router-dom';import{ArrowBack}from'@material-ui/icons';import{useState}from'react';import'./SidebarDeps.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SidebarDeps(_ref){var dep=_ref.dep,users=_ref.users,setIsShowDeps=_ref.setIsShowDeps;var depsUsers=users.filter(function(user){return dep._id===user.departmentId&&user.status!==4;});var localUser=JSON.parse(localStorage.getItem('user'));var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShow=_useState2[0],setIsShow=_useState2[1];var depsId=useParams().username;// если выбран департамент\nif(depsId===dep._id){dep.backgroundColor='#e3e3e3';}else{dep.backgroundColor='';}return/*#__PURE__*/_jsxs(\"ul\",{className:\"depsName\",style:{paddingLeft:\"\".concat(dep.margin,\"px\")},children:[/*#__PURE__*/_jsx(Link,{to:\"/department/\".concat(dep._id),className:\"depsUser\",style:{fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(e){return setIsShowDeps(e);},value:dep.dep_id,style:{backgroundColor:\"\".concat(dep.backgroundColor)},children:dep.departmentName})}),/*#__PURE__*/_jsx(\"hr\",{className:\"depsHr\"}),/*#__PURE__*/_jsx(\"div\",{className:\"arrowDown\",onClick:function onClick(){return setIsShow(!isShow);},children:/*#__PURE__*/_jsx(ArrowBack,{className:\"arrowIcon \".concat(isShow?' open':''),style:{fontSize:'20px'}})}),isShow&&/*#__PURE__*/_jsx(\"ul\",{className:\"depsStaff\",children:depsUsers.map(function(user,id){return/*#__PURE__*/_jsx(\"li\",{children:localUser.isAdmin?/*#__PURE__*/_jsx(Link,{to:\"/profile/\".concat(user._id),className:\"depsUser\",children:user.username}):/*#__PURE__*/_jsx(\"div\",{className:\"depsUser\",children:user.username})},id);})})]});}","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/SidebarDeps/SidebarDeps.jsx"],"names":["Link","useParams","ArrowBack","useState","SidebarDeps","dep","users","setIsShowDeps","depsUsers","filter","user","_id","departmentId","status","localUser","JSON","parse","localStorage","getItem","isShow","setIsShow","depsId","username","backgroundColor","paddingLeft","margin","fontWeight","e","dep_id","departmentName","fontSize","map","id","isAdmin"],"mappings":"8GAAA,OAASA,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,MAAO,mBAAP,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,MAAkD,IAA5BC,CAAAA,GAA4B,MAA5BA,GAA4B,CAAvBC,KAAuB,MAAvBA,KAAuB,CAAhBC,aAAgB,MAAhBA,aAAgB,CAC/D,GAAMC,CAAAA,SAAS,CAAGF,KAAK,CAACG,MAAN,CAAa,SAACC,IAAD,QAAUL,CAAAA,GAAG,CAACM,GAAJ,GAAYD,IAAI,CAACE,YAAjB,EAAiCF,IAAI,CAACG,MAAL,GAAgB,CAA3D,EAAb,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB,CACA,cAA4Bf,QAAQ,CAAC,KAAD,CAApC,wCAAOgB,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,MAAM,CAAGpB,SAAS,GAAGqB,QAA3B,CAEA;AACA,GAAGD,MAAM,GAAKhB,GAAG,CAACM,GAAlB,CAAsB,CACpBN,GAAG,CAACkB,eAAJ,CAAsB,SAAtB,CACD,CAFD,IAEK,CACHlB,GAAG,CAACkB,eAAJ,CAAsB,EAAtB,CACD,CAGD,mBACE,YAAI,SAAS,CAAC,UAAd,CAAyB,KAAK,CAAE,CAACC,WAAW,WAAKnB,GAAG,CAACoB,MAAT,MAAZ,CAAhC,wBACE,KAAC,IAAD,EAAM,EAAE,uBAAiBpB,GAAG,CAACM,GAArB,CAAR,CAAoC,SAAS,CAAC,UAA9C,CAAyD,KAAK,CAAE,CAACe,UAAU,OAAX,CAAhE,uBACE,WAAI,OAAO,CAAE,iBAAAC,CAAC,QAAIpB,CAAAA,aAAa,CAACoB,CAAD,CAAjB,EAAd,CAAoC,KAAK,CAAEtB,GAAG,CAACuB,MAA/C,CAAuD,KAAK,CAAE,CAACL,eAAe,WAAKlB,GAAG,CAACkB,eAAT,CAAhB,CAA9D,UAA4GlB,GAAG,CAACwB,cAAhH,EADF,EADF,cAIE,WAAI,SAAS,CAAC,QAAd,EAJF,cAKE,YAAK,SAAS,CAAC,WAAf,CAA2B,OAAO,CAAE,yBAAMT,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAApC,uBACE,KAAC,SAAD,EAAW,SAAS,qBAAeA,MAAM,CAAG,OAAH,CAAa,EAAlC,CAApB,CAA4D,KAAK,CAAE,CAACW,QAAQ,CAAC,MAAV,CAAnE,EADF,EALF,CAQIX,MAAM,eAAI,WAAI,SAAS,CAAC,WAAd,UACTX,SAAS,CAACuB,GAAV,CAAc,SAACrB,IAAD,CAAOsB,EAAP,qBAAc,oBAAclB,SAAS,CAACmB,OAAV,cACvC,KAAC,IAAD,EAAM,EAAE,oBAAcvB,IAAI,CAACC,GAAnB,CAAR,CAAkC,SAAS,CAAC,UAA5C,UAAwDD,IAAI,CAACY,QAA7D,EADuC,cAExC,YAAK,SAAS,CAAC,UAAf,UAA2BZ,IAAI,CAACY,QAAhC,EAF0B,EAASU,EAAT,CAAd,EAAd,CADS,EARd,GADF,CAiBD","sourcesContent":["import { Link, useParams } from 'react-router-dom'\r\nimport { ArrowBack } from '@material-ui/icons'\r\nimport { useState } from 'react'\r\n\r\nimport './SidebarDeps.css'\r\n\r\nexport default function SidebarDeps({dep, users, setIsShowDeps}) {\r\n  const depsUsers = users.filter((user) => dep._id === user.departmentId && user.status !== 4)\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n  const [isShow, setIsShow] = useState(false)\r\n  const depsId = useParams().username\r\n\r\n  // если выбран департамент\r\n  if(depsId === dep._id){\r\n    dep.backgroundColor = '#e3e3e3'\r\n  }else{\r\n    dep.backgroundColor = ''\r\n  }\r\n\r\n\r\n  return (\r\n    <ul className='depsName' style={{paddingLeft: `${dep.margin}px`}}>\r\n      <Link to={`/department/${dep._id}`} className='depsUser' style={{fontWeight: `bold`}}>\r\n        <li onClick={e => setIsShowDeps(e)} value={dep.dep_id} style={{backgroundColor: `${dep.backgroundColor}`}}>{dep.departmentName}</li>\r\n      </Link>\r\n      <hr className='depsHr'/>\r\n      <div className='arrowDown' onClick={() => setIsShow(!isShow)}>\r\n        <ArrowBack className={`arrowIcon ${isShow ? ' open' : ''}`} style={{fontSize:'20px'}}/>\r\n      </div>\r\n      { isShow && <ul className='depsStaff'>\r\n        {depsUsers.map((user, id) => <li key={id}>{localUser.isAdmin \r\n          ? <Link to={`/profile/${user._id}`} className='depsUser'>{user.username}</Link>\r\n          :<div className='depsUser'>{user.username}</div>\r\n        }</li>)}\r\n      </ul>}\r\n    </ul>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}