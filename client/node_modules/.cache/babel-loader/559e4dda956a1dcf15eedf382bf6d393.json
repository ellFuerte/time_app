{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\ModalVacanciesItem\\\\ModalVacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalVacanciesItem = ({\n  nameChangeVacancies,\n  gradeChangeVacancies,\n  departmentChangeVacancies,\n  descriptionChangeVacancies,\n  statusChangeVacancies\n}) => {\n  _s();\n\n  useEffect(() => {\n    setInputValue(nameChangeVacancies);\n    setInputValueGrade(gradeChangeVacancies);\n    setSelectDep(departmentChangeVacancies);\n    setInputValueDescription(descriptionChangeVacancies);\n    setInputValueStatuses(statusChangeVacancies);\n  }, [nameChangeVacancies, gradeChangeVacancies, departmentChangeVacancies, descriptionChangeVacancies, statusChangeVacancies]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [status, setStatus] = useState([]);\n  const [selectDep, setSelectDep] = useState(\"\");\n  const [company, setCompany] = useState([]);\n  const [selectCompany, setSelectCompany] = useState([]);\n  const [selectItc, setSelectItc] = useState([]);\n  const [projectItem, setProjectItem] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [plannedReleaseDate, setPlannedReleaseDate] = useState([]);\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [inputValue, setInputValue] = useState('');\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [user_name, setUser_name] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const departRef = useRef();\n  const companyRef = useRef();\n  const ITCRef = useRef();\n  const projectRef = useRef();\n  const DateReleaseRef = useRef();\n  useEffect(() => {\n    const Department = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      setStatus(statuses.data);\n      const departs = await axios.get('/api/departments/');\n      setDeps(departs.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      const user = await axios.get('/api/user');\n      setUsers(user.data);\n    };\n\n    Department();\n  }, []);\n  const [deps, setDeps] = useState([]);\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    // Проверяем, является ли введенное значение числом (включая пустое значение)\n    if (/^\\d*$/.test(e.target.value)) {\n      setInputValueGrade(e.target.value);\n    }\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const selectDeps = () => {\n    setSelectDep(departRef.current.value);\n  };\n\n  const companySelect = () => {\n    setSelectCompany(companyRef.current.value);\n  };\n\n  const SelectITC = () => {\n    setSelectItc(ITCRef.current.value);\n  };\n\n  const Project = e => {\n    if (/^\\d*$/.test(e.target.value)) {\n      setProjectItem(e.target.value);\n    }\n  };\n\n  const DataCurrent = () => {\n    setPlannedReleaseDate(DateReleaseRef.current.value);\n  };\n\n  const ChangeDataButton = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      search: searchTerm,\n      old_user: old_user,\n      deps: selectDep,\n      company_id: selectCompany,\n      vacancy_code: selectItc,\n      project_id: projectItem,\n      planned_release_date: plannedReleaseDate === '' ? null : plannedReleaseDate\n    };\n    console.log('ChangeData=', ChangeData);\n\n    if (statusRef.current.value === '3' && old_user === null && userId.length < 1) {\n      setMessage('Сотрудник не назначен');\n    } else {\n      const res = await axios.put('/api/Vacations/', ChangeData);\n      setMessage('Сохранено');\n      window.location.reload();\n    }\n  };\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n\n    if (term === '') {\n      setSearchTerm(null);\n    } else {\n      setSearchTerm(term);\n    }\n\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setUser_name('');\n    } else {\n      setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MessageItemVacancies\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"ModalInputVacancies\",\n        value: inputValue,\n        onChange: handleNameInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textDescription\",\n        value: inputValueDescription,\n        onChange: handleDescriptionInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: departRef,\n        value: selectDep,\n        onChange: selectDeps,\n        className: \"InputVacanciesItemDeps\",\n        children: deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dep.id,\n          children: dep.department_name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: statusRef,\n        value: inputValueStatuses,\n        onChange: selectValue,\n        className: \"InputVacanciesItemSelect\",\n        children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status.id,\n          children: status.name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0413\\u0440\\u0435\\u0439\\u0434:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValueGrade || gradeChangeVacancies,\n        onChange: handleGradeInputChange,\n        placeholder: \"\\u0413\\u0440\\u0435\\u0439\\u0434\",\n        className: \"InputVacanciesItem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: companyRef,\n        value: selectCompany,\n        onChange: companySelect,\n        className: \"InputVacanciesItemSelect\",\n        children: company.map((company, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.id,\n          children: company.name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 57\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n            value: searchTerm || nameChangeVacancies,\n            onChange: handleInputChange,\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), old_user ? /*#__PURE__*/_jsxDEV(Link, {\n            className: \"ProfileLinkVacancies\",\n            style: {\n              paddingLeft: '10px'\n            },\n            to: `/profile/${old_user}`,\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u0432 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 40\n          }, this) : '', filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userListContainer\",\n            children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectNameDiv\",\n              value: user.id,\n              onClick: () => handleUserClick(user.user_name, user.id),\n              children: user.user_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            ref: DateReleaseRef,\n            placeholder: \"\\u0418\\u0422\\u0421\",\n            className: \"InputVacanciesItem\",\n            value: plannedReleaseDate || '',\n            onChange: DataCurrent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0418\\u0422\\u0421:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: ITCRef,\n            value: selectItc,\n            onChange: SelectITC,\n            placeholder: \"\\u0418\\u0422\\u0421\",\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: projectRef,\n            value: projectItem,\n            onChange: Project,\n            placeholder: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442(\\u041D\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430=0)\",\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHistory\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeDataButton,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ModalVacanciesItem, \"7VB+zuVLpOQOkHpa/fEMaOH2Rn4=\");\n\n_c = ModalVacanciesItem;\nexport default ModalVacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalVacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/ModalVacanciesItem/ModalVacanciesItem.jsx"],"names":["React","useEffect","useRef","useState","axios","Link","ModalVacanciesItem","nameChangeVacancies","gradeChangeVacancies","departmentChangeVacancies","descriptionChangeVacancies","statusChangeVacancies","setInputValue","setInputValueGrade","setSelectDep","setInputValueDescription","setInputValueStatuses","localUser","JSON","parse","localStorage","getItem","status","setStatus","selectDep","company","setCompany","selectCompany","setSelectCompany","selectItc","setSelectItc","projectItem","setProjectItem","message","setMessage","plannedReleaseDate","setPlannedReleaseDate","vacanciesId","setVacanciesId","inputValue","old_user","setOld_user","inputValueDescription","inputValueStatuses","inputValueGrade","user_name","setUser_name","searchTerm","setSearchTerm","userId","setUserId","filteredUsers","setFilteredUsers","users","setUsers","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","departRef","companyRef","ITCRef","projectRef","DateReleaseRef","Department","statuses","get","data","departs","setDeps","user","deps","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","test","selectValue","current","selectDeps","companySelect","SelectITC","Project","DataCurrent","ChangeDataButton","ChangeData","namevacanciesId","namevacancies","description","grade","search","company_id","vacancy_code","project_id","planned_release_date","console","log","length","res","put","window","location","reload","handleInputChange","term","filtered","filter","toLowerCase","includes","handleUserClick","userName","map","dep","name","id","department_name","paddingLeft","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ModalVacanciesItem =({nameChangeVacancies,gradeChangeVacancies,departmentChangeVacancies,descriptionChangeVacancies,statusChangeVacancies})=> {\r\n\r\n\r\n    useEffect(() => {\r\n        setInputValue(nameChangeVacancies);\r\n        setInputValueGrade(gradeChangeVacancies)\r\n        setSelectDep(departmentChangeVacancies)\r\n        setInputValueDescription(descriptionChangeVacancies)\r\n        setInputValueStatuses(statusChangeVacancies)\r\n\r\n\r\n    }, [nameChangeVacancies,gradeChangeVacancies,departmentChangeVacancies,descriptionChangeVacancies,statusChangeVacancies]);\r\n\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(statuses.data)\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n    const [deps, setDeps] = useState([])\r\n\r\n    const handleNameInputChange = (e) => {\r\n            setInputValue(e.target.value)\r\n    }\r\n\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeDataButton = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValue,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: userId,\r\n            search: searchTerm,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:(plannedReleaseDate==='' ? null : plannedReleaseDate)\r\n        }\r\n        console.log('ChangeData=',ChangeData)\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className='MessageItemVacancies'>\r\n                    <span >{message}</span>\r\n                </div>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Подразделение:</span><br/>\r\n                    <select ref={departRef}\r\n                            value={selectDep}\r\n                            onChange={selectDeps}\r\n                            className='InputVacanciesItemDeps'>\r\n                        {deps.map((dep, name) => <option key={name}\r\n                                                         value={dep.id}>{dep.department_name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Статус:</span><br/>\r\n                    <select ref={statusRef}\r\n                            value={inputValueStatuses}\r\n                            onChange={selectValue}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {status.map((status, name) => <option key={name}\r\n                                                              value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Грейд:</span><br/>\r\n                    <input type='text'\r\n                           value={inputValueGrade || gradeChangeVacancies}\r\n                           onChange={handleGradeInputChange}\r\n                           placeholder='Грейд'\r\n                           className='InputVacanciesItem'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Компания:</span><br/>\r\n                    <select ref={companyRef}\r\n                            value={selectCompany}\r\n                            onChange={companySelect}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div>\r\n\r\n                        <span>Имя сотрудника:</span><br/>\r\n                        <div className='inputDiv'>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Имя сотрудника'\r\n                                value={searchTerm || nameChangeVacancies}\r\n                                onChange={handleInputChange}\r\n                                className='InputVacanciesItem'\r\n                            />\r\n\r\n                            {old_user ?<Link className='ProfileLinkVacancies' style={{paddingLeft:'10px'}} to={`/profile/${old_user}`}>Перейти в профиль</Link>:''}\r\n\r\n\r\n                            {filteredUsers.length > 0 && (\r\n                                <div className=\"userListContainer\">\r\n                                    {filteredUsers.map((user, index) => (\r\n                                        <div className='selectNameDiv' key={index} value={user.id}\r\n                                             onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                            {user.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <span>Дата выхода:</span><br/>\r\n                            <input type='date'\r\n                                   ref={DateReleaseRef}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                                   value={plannedReleaseDate || ''}\r\n                                   onChange={DataCurrent}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>ИТС:</span><br/>\r\n                            <input type='text'\r\n                                   ref={ITCRef}\r\n                                   value={selectItc}\r\n                                   onChange={SelectITC}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>Проект:</span><br/>\r\n                            <input type='text'\r\n                                   ref={projectRef}\r\n                                   value={projectItem}\r\n                                   onChange={Project}\r\n                                   placeholder='Проект(Нет проекта=0)'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeDataButton}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ModalVacanciesItem;"]},"metadata":{},"sourceType":"module"}