{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  selectedDepartmentId\n}) => {\n  _s();\n\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n  }, []);\n\n  const isNodeOpen = node => {\n    // Проверяем, должен ли узел быть открытым\n    return selectedDepartmentId && node.department_tree_to_json.id === selectedDepartmentId;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: !isNodeOpen(node),\n              children: node.department_tree_to_json.Subclasses.map(department => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${department.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: department.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 53\n                  }, this)\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: !isNodeOpen(department),\n                children: !!department.Subclasses && department.Subclasses.map(department1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${department1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: department1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 61\n                    }, this)\n                  }, department1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: !isNodeOpen(department1),\n                  children: !!department1.Subclasses && department1.Subclasses.map(department2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${department2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: department2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 61\n                    }, this)\n                  }, department2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 57\n                  }, this))\n                }, department1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 49\n                }, this))\n              }, department.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","selectedDepartmentId","dep","setDep","getDeps","res","get","data","department_tree_to_json","length","isNodeOpen","node","id","map","i","label","Name","Subclasses","department","department1","department2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = ({ selectedDepartmentId }) => {\r\n    const [dep, setDep] = useState([])\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/')\r\n            if(res.data[0].department_tree_to_json.length===0){\r\n                setDep([])\r\n            }else {\r\n                setDep(res.data)\r\n            }\r\n        }\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    const isNodeOpen = (node) => {\r\n        // Проверяем, должен ли узел быть открытым\r\n        return selectedDepartmentId && node.department_tree_to_json.id === selectedDepartmentId;\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </Link>\r\n                            );\r\n                            return (\r\n                                <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={!isNodeOpen(node)}>\r\n                                    {node.department_tree_to_json.Subclasses.map((department) => (\r\n                                        <TreeView\r\n                                            key={department.id}\r\n                                            nodeLabel={(\r\n                                                <Link to={`/department/${department.id}`} className='depsUser' key={department.id}>\r\n                                                    <span className=\"node\">{department.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={!isNodeOpen(department)}>\r\n                                            {!!department.Subclasses && department.Subclasses.map((department1) => (\r\n                                                <TreeView\r\n                                                    key={department1.id}\r\n                                                    nodeLabel={(\r\n                                                        <Link to={`/department/${department1.id}`} className='depsUser' key={department1.id}>\r\n                                                            <span className=\"node\">{department1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    defaultCollapsed={!isNodeOpen(department1)}>\r\n                                                    {!!department1.Subclasses && department1.Subclasses.map((department2) => (\r\n                                                        <Link to={`/department/${department2.id}`} className='depsUser' key={department2.id}>\r\n                                                            <div style={{paddingBottom: '8px'}}>{department2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}