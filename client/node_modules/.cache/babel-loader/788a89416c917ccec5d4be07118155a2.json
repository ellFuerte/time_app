{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Create, Delete, Message } from '@material-ui/icons';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal';\nimport './ProfileInfo.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState({});\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [isAdmin, setIsadmin] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalActiveResetPass, setModalActiveResetPass] = useState(false);\n  const [modalActiveReset, setModalActiveReset] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [deps, setDeps] = useState([]);\n  const [error, setError] = useState('');\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalName = useRef();\n  const modalDep = useRef();\n  const modalEmail = useRef();\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const phoneNumber = useRef();\n  const additionalContact = useRef();\n  const distributionGroup = useRef();\n  const activityProfile = useRef();\n  const modalSurname = useRef();\n  const modalCity = useRef();\n  const [citiesId, setCitiesId] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  const handleUserClickCities = (city_name, id) => {\n    setCitiesId(id);\n    setSearchTermCities(city_name);\n    setFilteredCities([]);\n  };\n\n  const handleInputChangeCities = e => {\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = cities.filter(city => city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  } // данные о пользователе\n\n\n  const [nameValue, setNameValue] = useState(\"\"); // Список всех департаментов и получение департаментов по юзеру\n\n  useEffect(() => {\n    setNameValue(user.user_name || \"\");\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n    };\n\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setIsadmin(res.data.isadmin);\n      setUser(res.data);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n      const city = await axios.get('/api/Cities/');\n      setCities(city.data);\n    }; // Номинации\n\n\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    fetchVote();\n    fetchUser();\n    getDeps();\n    getNameDeps();\n  }, [user]);\n\n  const handleNameChange = e => {\n    setNameValue(e.target.value); // Обновляем состояние значения инпута\n  }; // изменение данных пользователя\n\n\n  const handleClick = async e => {\n    const name = user.user_name;\n    const part = name.split(' ');\n    e.preventDefault();\n    const newInfo = {\n      departmentId: modalDep.current.value || user.department_id,\n      email: modalEmail.current.value.toUpperCase() || user.email,\n      username: (modalSurname.current.value.length === 0 ? part[0] : modalSurname.current.value) + ' ' + (modalName.current.value.length === 0 ? part[1] : modalName.current.value),\n      _id: user.id,\n      isAdmin: user.isadmin,\n      see_child: user.see_child,\n      status: user.status,\n      main_department: user.main_department,\n      phone_number: phoneNumber.current.value,\n      additional_contact: additionalContact.current.value,\n      distribution_group: distributionGroup.current.value,\n      activity_profile: activityProfile.current.value,\n      city_id: citiesId\n    };\n\n    if (localUse._id !== username.username) {\n      const newInfo2 = {\n        departmentId: modalDep.current.value || user.department_id,\n        email: modalEmail.current.value.toUpperCase() || user.email,\n        username: (modalSurname.current.value.length === 0 ? part[0] : modalSurname.current.value) + ' ' + (modalName.current.value.length === 0 ? part[1] : modalName.current.value),\n        phone_number: phoneNumber.current.value,\n        additional_contact: additionalContact.current.value,\n        distribution_group: distributionGroup.current.value,\n        activity_profile: activityProfile.current.value,\n        city_id: citiesId,\n        _id: user.id\n      };\n      await axios.put('/api/user/', newInfo2);\n      window.location.reload();\n    } else {\n      await axios.put('/api/user/', newInfo);\n      /*    localStorage.setItem('user', JSON.stringify({...newInfo}))*/\n\n      setModalActive(false);\n      window.location.reload();\n    }\n  }; // изменить пароль\n\n\n  const handleClickPassword = async e => {\n    e.preventDefault();\n\n    if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n      setErr('Новые пароли не совпадают');\n      return;\n    }\n\n    const passwords = {\n      userId: localUse._id,\n      password: localUse.password,\n      oldPassword: modalOldPass.current.value,\n      newPassword: modalNewPass.current.value\n    };\n\n    try {\n      await axios.put('/api/newPassword/', passwords);\n      setModalActivePass(false);\n      /*      localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n    } catch (er) {\n      setErr('Старые пароли не совпадают');\n    }\n  }; // сбросить пароль\n\n\n  const handleResetPass = async e => {\n    e.preventDefault();\n    const resetPassword = {\n      userId: username.username,\n      newPassword: 'qwerty123'\n    };\n\n    try {\n      await axios.put('/api/resetPassword/', resetPassword);\n      setModalActiveResetPass(false);\n    } catch (error) {}\n  };\n\n  const status = async () => {\n    if (user.status === 1) {\n      const status = {\n        status: 2,\n        typework_id: 1,\n        userId: user.id,\n        healthEnd: '-',\n        commentEnd: '-',\n        workEnd: new Date(Date.now())\n      };\n      await axios.put(\"/api/post/\", status);\n    } else {\n      alert(\"Пользователь не в работе\");\n    }\n  }; // удалить пользователя\n\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    setIsFetching(true);\n    const newPost = {\n      userId: username.username,\n      healthEnd: 1,\n      status: 4\n    };\n\n    try {\n      await axios.put('/api/deluser/', newPost);\n      /*                  workEnd: new Date(Date.now()),\n                        workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n      \n                  localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n      /*      if(user.status === 1){\n              await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n            }\n           localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n\n      setModalActiveDelete(false);\n      window.location.href = `/profile/${user.id}`;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n  /*    const button = () => {\n          if (votearray.length === 0 || votearray.length <= 9) {\n              setErr('Выберите участников номинации');\n              return;\n          }\n          if (votearray.length === 10 && er) {\n              return;\n          } else {\n              const duplicates = {};\n              let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n              votearray.forEach(async (vote) => {\n                  const arr = vote.split(\"_\");\n                  const vote_for_user = arr[1];\n  \n                  // Проверяем, был ли уже такой элемент\n                  if (duplicates[vote_for_user]) {\n                      // Если был, устанавливаем флаг и завершаем итерацию\n                      hasDuplicates = true;\n                      return;\n                  } else {\n                      // Иначе, добавляем его в объект duplicates\n                      duplicates[vote_for_user] = true;\n                  }\n  \n                  const voteUser = {\n                      user_id: localUse._id,\n                      vote_for_user: arr[1],\n                      nominations_id: arr[0]\n                  };\n  \n                  await axios.post('/api/vote/', voteUser);\n              });\n  \n              // Если есть повторяющиеся элементы, прекращаем выполнение функции\n              if (hasDuplicates) {\n                  setErr('Есть сотрудники которые участвуют больше одной номинации');\n                  return;\n              }\n  \n              setModalActiveVote(false);\n          }\n      };*/\n\n  /*    const clickVote = (e) => {\n          e.preventDefault()\n          const data = e.target.value.toString()\n          const arr = data.split(\"_\")\n          let votearr = votearray\n          votearr.push(data)\n          const newArray = votearr.filter(element => element !== \"\")\n          console.log('newArray=', newArray)\n          setVotearray(newArray)\n      }*/\n\n\n  const clickVote = (e, selectIndex) => {\n    e.preventDefault();\n    const data = e.target.value.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                      setErr('Такой сотрудник уже есть в другой номинации');\n                  }else{\n                      setErr('');\n                  }*/\n\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray); // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n\n    setSelectedOption(prevState => ({ ...prevState,\n      [selectIndex]: true\n    }));\n  };\n\n  const secureButton = async () => {\n    console.log('chek=', checkedItems);\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: null\n    };\n    await axios.post('/api/vote/', addNomination);\n    setModalVote(false);\n    window.location.reload();\n  };\n\n  const inputClick = event => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    console.log('id=', event.target.value);\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n  };\n\n  const nextModal = () => {\n    setModalVote(true);\n    setModalActiveVote(false);\n  };\n\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n  const [projectItem, setProjectItem] = useState(user.user_name);\n\n  const NameItem = () => {\n    setProjectItem(modalName.current.value);\n    console.log('log=', projectItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: user.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }, this), localUser ? /*#__PURE__*/_jsxDEV(Create, {\n          style: {\n            marginLeft: '5px',\n            fontSize: 'large',\n            cursor: 'pointer'\n          },\n          onClick: () => setModalActive(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 38\n        }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(Delete, {\n          style: {\n            cursor: 'pointer',\n            fontSize: 'large'\n          },\n          onClick: () => setModalActiveDelete(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            style: {\n              cursor: 'pointer',\n              color: 'black',\n              fontSize: 'large'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 45\n        }, this) : '', Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[key].src,\n          title: images[key].title,\n          alt: `Image for ${key}`,\n          className: \"imagesProfile\"\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px'\n        },\n        className: \"email\",\n        children: name.charAt(0).toUpperCase() + name.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.phone_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: localUse.isAdmin !== false ? user.additional_contact : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.distribution_group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.activity_profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [depsName, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActivePass(true),\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveResetPass(true),\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin !== isAdmin || localUse._id !== user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 81\n      }, this) : '', localUse.isAdmin !== isAdmin || localUse._id !== user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveReset(true),\n        children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 25\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 49\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveVote(true),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 25\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 21\n      }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: nextModal,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 41\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            className: \"ModalInputUpdate\",\n            value: nameValue // Значение инпута устанавливается из состояния nameValue\n            ,\n            onChange: handleNameChange // Обработчик изменений\n            ,\n            ref: modalName // Привязываем ref\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            className: \"ModalInputUpdate\",\n            ref: modalSurname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            type: \"emailLogin\",\n            className: \"ModalInputUpdate\",\n            ref: modalEmail,\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n            type: \"number\",\n            className: \"ModalInputUpdate\",\n            ref: phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0414\\u043E\\u043F \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442(\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430,\\u0424\\u0418\\u041E,\\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430)\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: additionalContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: distributionGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: activityProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: modalCity,\n            value: searchTermCities,\n            onChange: handleInputChangeCities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              children: filteredCities.map((city, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: city.id,\n                onClick: () => handleUserClickCities(city.city_name, city.id),\n                children: city.city_name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: modalDep,\n            className: \"ModalInputUpdateSelect\",\n            children: deps.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: dep.id === localUse.departmentId,\n              value: dep.id,\n              children: dep.department_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 55\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActivePass,\n      setActive: setModalActivePass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClickPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalOldPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPass,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPassAgain,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonChangePassword\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveResetPass,\n      setActive: setModalActiveResetPass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleResetPass,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442: qwerty123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDeleteUser\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveReset,\n      setActive: setModalActiveReset,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: status,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u0442\\u043C\\u0435\\u0442\\u043A\\u0443 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveDelete,\n      setActive: setModalActiveDelete,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveVote,\n      setActive: setModalActiveVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"inputVote\",\n              children: vote.nominations_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 85\n            }, this), vote.description]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 51\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"di\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => clickVote(e, id),\n            value: userVote.id,\n            className: \"select\",\n            children: [!selectedOption[id] && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 37\n            }, this), userVote.map((userVote, id) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: vote.id + '_' + userVote.id,\n              children: userVote.user_name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 41\n            }, this))]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: button,\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalVote,\n      setActive: setModalVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteContainer\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voteItem\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: vote.id,\n              className: \"inputVote\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: vote.id,\n                value: vote.id,\n                onChange: inputClick,\n                checked: checkedItems[vote.id] || false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 37\n              }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `../images/${vote.id}.png`,\n                alt: `Image for ${vote.nominations_name}`,\n                className: \"images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 37\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: secureButton,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: clearSecureButton,\n        children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 9\n  }, this);\n}\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/\n\n_s(ProfileInfo, \"43snZbbmIt87NwG3VcpkyzjJjTk=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Create","Delete","Message","ErrorIcon","Modal","Link","useParams","ProfileInfo","selectedOption","setSelectedOption","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","isAdmin","setIsadmin","userVote","setUserVote","depsName","setDepsName","user","setUser","cityName","setCityName","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","deps","setDeps","error","setError","er","setErr","username","localUser","_id","email","JSON","parse","localStorage","getItem","localUse","modalName","modalDep","modalEmail","modalOldPass","modalNewPass","modalNewPassAgain","phoneNumber","additionalContact","distributionGroup","activityProfile","modalSurname","modalCity","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","handleUserClickCities","city_name","id","handleInputChangeCities","e","termCities","target","value","filtered","filter","city","toLowerCase","includes","usersStatuses","findStatus","k","i","nameValue","setNameValue","user_name","getDeps","res","get","data","getNameDeps","post","fetchUser","isadmin","sort","a","b","localeCompare","mass","element","status","fetchVote","handleNameChange","handleClick","name","part","split","preventDefault","newInfo","departmentId","current","department_id","toUpperCase","length","see_child","main_department","phone_number","additional_contact","distribution_group","activity_profile","city_id","newInfo2","put","window","location","reload","handleClickPassword","passwords","userId","password","oldPassword","newPassword","handleResetPass","resetPassword","typework_id","healthEnd","commentEnd","workEnd","Date","now","alert","handleDelete","newPost","href","console","log","Array","isArray","button","forEach","arr","voteUser","user_id","vote_for_user","nominations_id","clickVote","selectIndex","toString","str","str1","existingIndex","findIndex","item","newArray","votearr","push","prevState","secureButton","addNomination","id_nomination","undefined","clearSecureButton","inputClick","event","checked","nextModal","images","src","title","projectItem","setProjectItem","NameItem","marginLeft","fontSize","cursor","color","Object","keys","map","key","nomination_status","parseInt","charAt","slice","dep","index","department_name","nominations_name","description"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useEffect, useRef, useState} from 'react'\nimport {Create, Delete, Message} from '@material-ui/icons'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal'\nimport './ProfileInfo.css'\nimport {Link, useParams} from \"react-router-dom\";\n\n\n\n\n\nexport default function ProfileInfo() {\n    const [selectedOption, setSelectedOption] = useState({});\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [isAdmin, setIsadmin] = useState([])\n    const [userVote, setUserVote] = useState([])\n    const [depsName, setDepsName] = useState([])\n    const [user, setUser] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\n    const [modalActiveReset, setModalActiveReset] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [deps, setDeps] = useState([])\n    const [error, setError] = useState('')\n    const [er, setErr] = useState('')\n    const username = useParams()\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n    const modalName = useRef()\n    const modalDep = useRef()\n    const modalEmail = useRef()\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n    const phoneNumber = useRef()\n    const additionalContact = useRef()\n    const distributionGroup = useRef()\n    const activityProfile = useRef()\n    const modalSurname = useRef()\n    const modalCity = useRef()\n    const [citiesId, setCitiesId] = useState([])\n    const [searchTermCities, setSearchTermCities] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [cities, setCities] = useState([])\n    const handleUserClickCities = (city_name,id) => {\n        setCitiesId(id)\n        setSearchTermCities(city_name)\n        setFilteredCities([])\n    }\n\n\n    const handleInputChangeCities = (e) => {\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = cities.filter(city =>\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n\n    const usersStatuses = {\n\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n    // данные о пользователе\n\n    const [nameValue, setNameValue] = useState(\"\");\n    // Список всех департаментов и получение департаментов по юзеру\n    useEffect(() => {\n        setNameValue(user.user_name || \"\");\n        const getDeps = async () => {\n            const res = await axios.get('/api/departments/')\n            setDeps(res.data)\n\n        }\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setIsadmin(res.data.isadmin)\n            setUser(res.data)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status!==4)\n            setUserVote(mass)\n\n            const city =  await axios.get('/api/Cities/')\n            setCities(city.data)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n\n\n        fetchVote()\n        fetchUser()\n        getDeps()\n        getNameDeps()\n    }, [user])\n\n\n    const handleNameChange = (e) => {\n        setNameValue(e.target.value); // Обновляем состояние значения инпута\n    };\n\n\n\n    // изменение данных пользователя\n    const handleClick = async (e) => {\n        const name = user.user_name\n        const part = name.split(' ')\n        e.preventDefault()\n\n        const newInfo = {\n            departmentId: modalDep.current.value || user.department_id,\n            email: modalEmail.current.value.toUpperCase() || user.email,\n            username: (modalSurname.current.value.length===0 ? part[0] : modalSurname.current.value)+' '+ (modalName.current.value.length===0 ? part[1]:modalName.current.value),\n            _id: user.id,\n            isAdmin: user.isadmin,\n            see_child: user.see_child,\n            status: user.status,\n            main_department: user.main_department,\n            phone_number: phoneNumber.current.value,\n            additional_contact:additionalContact.current.value,\n            distribution_group:distributionGroup.current.value,\n            activity_profile:activityProfile.current.value,\n            city_id:citiesId\n        }\n\n        if (localUse._id !== username.username) {\n            const newInfo2 = {\n                departmentId: modalDep.current.value || user.department_id,\n                email: modalEmail.current.value.toUpperCase() || user.email,\n                username:(modalSurname.current.value.length===0 ? part[0] : modalSurname.current.value)+' '+ (modalName.current.value.length===0 ? part[1]:modalName.current.value),\n                phone_number: phoneNumber.current.value,\n                additional_contact:additionalContact.current.value,\n                distribution_group:distributionGroup.current.value,\n                activity_profile:activityProfile.current.value,\n                city_id:citiesId,\n                _id: user.id,\n            }\n\n            await axios.put('/api/user/', newInfo2)\n            window.location.reload()\n        } else {\n            await axios.put('/api/user/', newInfo)\n        /*    localStorage.setItem('user', JSON.stringify({...newInfo}))*/\n            setModalActive(false)\n            window.location.reload()\n        }\n    }\n\n    // изменить пароль\n    const handleClickPassword = async (e) => {\n        e.preventDefault()\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n            setErr('Новые пароли не совпадают')\n            return\n        }\n        const passwords = {\n            userId: localUse._id,\n            password: localUse.password,\n            oldPassword: modalOldPass.current.value,\n            newPassword: modalNewPass.current.value\n        }\n        try {\n            await axios.put('/api/newPassword/', passwords)\n            setModalActivePass(false)\n            /*      localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n        } catch (er) {\n            setErr('Старые пароли не совпадают')\n        }\n    }\n\n    // сбросить пароль\n    const handleResetPass = async (e) => {\n        e.preventDefault()\n\n        const resetPassword = {\n            userId: username.username,\n            newPassword: 'qwerty123'\n        }\n\n        try {\n            await axios.put('/api/resetPassword/', resetPassword)\n            setModalActiveResetPass(false)\n        } catch (error) {\n        }\n    }\n\n    const status = async () => {\n        if (user.status === 1) {\n            const status = {\n                status: 2,\n                typework_id: 1,\n                userId: user.id,\n                healthEnd: '-',\n                commentEnd: '-',\n                workEnd: new Date(Date.now())\n            }\n            await axios.put(\"/api/post/\", status)\n        } else {\n            alert(\"Пользователь не в работе\")\n        }\n    }\n\n\n    // удалить пользователя\n    const handleDelete = async (e) => {\n        e.preventDefault()\n        setIsFetching(true)\n\n        const newPost = {\n            userId: username.username,\n            healthEnd: 1,\n            status: 4\n        }\n        try {\n            await axios.put('/api/deluser/', newPost)\n\n/*                  workEnd: new Date(Date.now()),\n                  workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n\n            localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n\n\n            /*      if(user.status === 1){\n                    await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n                  }\n                 localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n\n\n\n            setModalActiveDelete(false)\n            window.location.href = `/profile/${user.id}`\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n/*    const button = () => {\n        if (votearray.length === 0 || votearray.length <= 9) {\n            setErr('Выберите участников номинации');\n            return;\n        }\n        if (votearray.length === 10 && er) {\n            return;\n        } else {\n            const duplicates = {};\n            let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n            votearray.forEach(async (vote) => {\n                const arr = vote.split(\"_\");\n                const vote_for_user = arr[1];\n\n                // Проверяем, был ли уже такой элемент\n                if (duplicates[vote_for_user]) {\n                    // Если был, устанавливаем флаг и завершаем итерацию\n                    hasDuplicates = true;\n                    return;\n                } else {\n                    // Иначе, добавляем его в объект duplicates\n                    duplicates[vote_for_user] = true;\n                }\n\n                const voteUser = {\n                    user_id: localUse._id,\n                    vote_for_user: arr[1],\n                    nominations_id: arr[0]\n                };\n\n                await axios.post('/api/vote/', voteUser);\n            });\n\n            // Если есть повторяющиеся элементы, прекращаем выполнение функции\n            if (hasDuplicates) {\n                setErr('Есть сотрудники которые участвуют больше одной номинации');\n                return;\n            }\n\n            setModalActiveVote(false);\n        }\n    };*/\n/*    const clickVote = (e) => {\n        e.preventDefault()\n        const data = e.target.value.toString()\n        const arr = data.split(\"_\")\n        let votearr = votearray\n        votearr.push(data)\n        const newArray = votearr.filter(element => element !== \"\")\n        console.log('newArray=', newArray)\n        setVotearray(newArray)\n    }*/\n\n    const clickVote = (e, selectIndex) => {\n        e.preventDefault();\n        const data = e.target.value.toString();\n        const arr = data.split(\"_\");\n        if(arr[0]==='' || arr[1]==='') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n/*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                setErr('Такой сотрудник уже есть в другой номинации');\n            }else{\n                setErr('');\n            }*/\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n        // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n        setSelectedOption(prevState => ({\n            ...prevState,\n            [selectIndex]: true\n        }));\n    };\n\n\n\n    const secureButton = async () => {\n        console.log('chek=', checkedItems)\n            const res = await axios.get('/api/user/' + username.username)\n            const addNomination = {\n                userId: username.username,\n                id_nomination: check\n            }\n\n            if (check === undefined) {\n            setErr('Выберите номинацию')\n            } else {\n                await axios.post('/api/vote/', addNomination)\n                setModalVote(false)\n                window.location.reload()\n            }\n        }\n\n    const clearSecureButton = async () => {\n        const res = await axios.get('/api/user/' + username.username)\n        const addNomination = {\n            userId: username.username,\n            id_nomination: null\n        }\n\n           await axios.post('/api/vote/', addNomination)\n            setModalVote(false)\n            window.location.reload()\n\n    }\n\n\n    const inputClick = (event) => {\n        const {id, checked} = event.target;\n        if (checked) {\n            setCheckedItems(checked);\n        } else {\n            setCheckedItems(null);\n        }\n\n        console.log('id=', event.target.value)\n        setCheck(event.target.value)\n        setCheckedItems(prevState => ({\n            ...prevState,\n            [id]: checked\n\n        }))\n    }\n\n\n  const nextModal = () => {\n    setModalVote(true)\n    setModalActiveVote(false)\n    }\n\n    const images = {\n        '1': { src: '../images/1.png', title: 'Тучка' },\n        '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\n        '3': { src: '../images/3.png', title: 'И так сойдет' },\n        '4': { src: '../images/4.png', title: 'Портной' },\n        '5': { src: '../images/5.png', title: 'Мама обезьянка' },\n        '6': { src: '../images/6.png', title: 'Кот Матроскин' },\n        '7': { src: '../images/7.png', title: 'Крот' },\n        '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\n        '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\n        '10': { src: '../images/10.png', title: 'Симка и нолик' }\n    };\n    const [projectItem, setProjectItem] = useState(user.user_name)\n\n    const NameItem = () => {\n        setProjectItem(modalName.current.value)\n        console.log('log=',projectItem)\n\n    }\n\n    return (\n\n        <div className='profileInfo'>\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                    <div className='top'>\n\n                        <span className='name'>{user.user_name}</span>\n\n                        {localUser ? <Create style={{marginLeft: '5px', fontSize: 'large', cursor: 'pointer'}}\n                                             onClick={() => setModalActive(true)}/> : ''}\n\n                        {localUse.isAdmin ? <Delete style={{cursor: 'pointer', fontSize: 'large'}}\n                                                    onClick={() => setModalActiveDelete(true)}/> : <></>}\n\n                        {localUse.isAdmin ? <Link to={`/AdminPanel`}><ErrorIcon\n                            style={{cursor: 'pointer', color: 'black', fontSize: 'large'}}/></Link> : ''}\n\n                        {Object.keys(images).map((key, id) => (\n                            (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                            <img\n                                key={id}\n                                src={images[key].src}\n                                title={images[key].title}\n                                alt={`Image for ${key}`}\n                                className='imagesProfile'\n                            />\n                        ))}\n                        {/*                {\n                    <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                }*/}\n\n                    </div>\n                    <div>\n                        <hr className=\"hr11\"/>\n                    </div>\n                    <div style={{fontSize: '18px'}}\n                         className='email'>{name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                    <div>{user.phone_number}</div>\n                    <div>{localUse.isAdmin!==false ?  user.additional_contact :''}</div>\n                    <div>{user.distribution_group}</div>\n                    <div>{user.activity_profile}</div>\n                    <div>{cityName}</div>\n                    <div>{depsName}\n                        <div>\n                            <hr className=\"hr\"/>\n                        </div>\n                    </div>\n                    {<div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>}\n\n                    <div className='PaddingDiv'></div>\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveResetPass(true)}>Сбросить пароль</div> : ''}\n\n                    {localUse.isAdmin !== isAdmin || localUse._id !== user.id ? <div className='PaddingDiv'></div> : ''}\n\n                    {localUse.isAdmin !== isAdmin || localUse._id !== user.id ?\n                        <div className='changePass' onClick={() => setModalActiveReset(true)}>Закончить</div> : ''}\n\n                    {localUse._id === user.id ? <div className='PaddingDiv'></div> : ''}\n\n                    {localUse._id === user.id ?\n                        <div className='changePass' onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''}\n\n                    <div className='PaddingDiv'></div>\n\n                    {localUse.isAdmin ? <div className=\"changePass\" onClick={nextModal}>Закрепить номинацию</div> : ''}\n\n                </div>\n            }\n            <Modal active={modalActive} setActive={setModalActive}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {error && <div className='modalError'>{error}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClick}>\n                    <div>\n                        <input\n                            placeholder=\"Имя\"\n                            className=\"ModalInputUpdate\"\n                            value={nameValue} // Значение инпута устанавливается из состояния nameValue\n                            onChange={handleNameChange} // Обработчик изменений\n                            ref={modalName} // Привязываем ref\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Фамилия\"\n                            className=\"ModalInputUpdate\"\n                            ref={modalSurname}\n                        />\n                    </div>\n                    <div>\n                    <input\n                        placeholder=\"Email\"\n                        type='emailLogin'\n                        className=\"ModalInputUpdate\"\n                        ref={modalEmail}\n                        minLength='6'\n                    />\n                    </div>\n                    <div>\n                        <input\n                        placeholder=\"Телефон\"\n                        type='number'\n                        className=\"ModalInputUpdate\"\n                        ref={phoneNumber}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={additionalContact}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Группа рассылки\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={distributionGroup}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Профиль деятельности\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={activityProfile}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Город\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={modalCity}\n                            value={searchTermCities}\n                            onChange={handleInputChangeCities}\n                        />\n                        <div>\n                            {filteredCities.length > 0 && (\n                                <div className='divSelectRegister'>\n                                    {filteredCities.map((city, id) => (\n                                        <div className='selectNameDiv' key={id} value={city.id} onClick={() => handleUserClickCities(city.city_name, city.id)}>\n                                            {city.city_name}\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div>\n                        <select ref={modalDep} className=\"ModalInputUpdateSelect\">\n                            {deps.map((dep, index) => <option selected={dep.id === localUse.departmentId} key={index}\n                                                              value={dep.id}>{dep.department_name}</option>)}\n                        </select>\n                    </div>\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActivePass} setActive={setModalActivePass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {er && <div className='modalError'>{er}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClickPassword}>\n                    <input\n                        placeholder=\"Старый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalOldPass}\n                    />\n                    <input\n                        placeholder=\"Новый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPass}\n                        minLength='6'\n                    />\n                    <input\n                        placeholder=\"Новый пароль ещё раз\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPassAgain}\n                        minLength='6'\n                    />\n                    <button className=\"ModalButtonChangePassword\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveResetPass} setActive={setModalActiveResetPass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleResetPass}>\n                    <h2>Новый пароль будет: qwerty123</h2>\n                    <button className=\"ModalButtonDeleteUser\" type=\"submit\" disabled={isFetching}>\n                        Сбросить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveReset} setActive={setModalActiveReset}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={status}>\n                    <h2>Вы хотите завершить отметку времени пользователя?</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Закончить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleDelete}>\n                    <h2>Пользователь будет удален</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Удалить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div> {vote.map((vote, id) => <label key={id} htmlFor={vote.id}><h3\n                        className='inputVote'>{vote.nominations_name}</h3>\n                        {vote.description}\n                    </label>)}\n                    </div>\n                    <div className='di'>\n                        {vote.map((vote, id) => (\n\n\n                                <select\n                                    onChange={(e) => clickVote(e, id)}\n                                    key={id}\n                                    value={userVote.id}\n                                    className='select'>\n\n                                    {!selectedOption[id] &&\n\n                                    <option value=''>Выберите участника</option>}\n\n                                    {userVote.map((userVote, id) => (\n\n                                        <option key={id} value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>\n\n                                    ))}\n                                </select>\n                            )\n                        )}\n\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n            </Modal>\n            <Modal active={modalVote} setActive={setModalVote}>\n                <h1>Закрепить номинацию</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div>\n                    <div className='voteContainer'>\n                        {vote.map((vote, id) => (\n                            <div key={id} className=\"voteItem\">\n                                <label key={id} htmlFor={vote.id} className=\"inputVote\">\n                                    <input\n                                        type='checkbox'\n                                        id={vote.id}\n                                        value={vote.id}\n                                        onChange={inputClick}\n                                        checked={checkedItems[vote.id] || false}\n                                    />\n                                    {vote.nominations_name}{' '}\n                                    <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\n                                         className='images'/>\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={secureButton}>Закрепить</button>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={clearSecureButton}>Снять номинацию</button>\n            </Modal>\n        </div>\n    )\n}\n\n\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/"]},"metadata":{},"sourceType":"module"}