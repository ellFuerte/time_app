{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    5: 'sick_leave',\n    4: 'deleted',\n    3: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null); // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user');\n      res.data.sort((p1, p2) => {\n        return new Date(p2.workStart) - new Date(p1.workStart);\n      });\n      /*      let data = (res.data[0].workEnd)\r\n            data = new Date(data)\r\n            data = data.toLocaleString()\r\n            data = data.split(',')\r\n            let dataF = data[0].split('.')\r\n            let dataS = data[1].split(':')\r\n            dataF = dataF[0]+'/'+dataF[1]\r\n            dataS = dataS[0]+':'+dataS[1]\r\n            setDate(dataF)\r\n            setTime(dataS)*/\n    };\n\n    if (user.status === 2) {\n      fetchUser();\n    }\n  }, [user._id]);\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user/' + localUser._id);\n      /*      res.data.sort((p1, p2) => {\r\n              return new Date(p2.start) - new Date(p1.start)\r\n            })*/\n\n      /*      let dataStart = (res.data[0].start)\r\n            let dataEnd = (res.data[0].end)\r\n            dataStart = new Date(dataStart)\r\n            dataStart = dataStart.toLocaleString()\r\n            dataStart = dataStart.split(',')\r\n            dataEnd = new Date(dataEnd)\r\n            dataEnd = dataEnd.toLocaleString()\r\n            dataEnd = dataEnd.split(',')\r\n            setDateStart(dataStart[0])\r\n            setDateEnd(dataEnd[0])*/\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n  }, [user._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [date, \" \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 39\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [dateStart, \" - \", dateEnd]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"b0uIMaFn4FS0bEZ2DtdlzGTU7W4=\");\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","Employee","user","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","date","setDate","time","setTime","fetchUser","res","get","data","sort","p1","p2","Date","workStart","status","_id","dateStart","setDateStart","dateEnd","setDateEnd","isAdmin","id","user_name"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAAA;;AACvC,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAEA,QAAMC,aAAa,GAAG;AAAC,OAAG,EAAJ;AAAQ,OAAG,OAAX;AAAoB,OAAG,KAAvB;AAA8B,OAAG,YAAjC;AAA+C,OAAG,SAAlD;AAA6D,OAAG,UAAhE;AAA2E,OAAG,UAA9E;AAAyF,OAAG;AAA5F,GAAtB;;AAEA,WAASC,UAAT,CAAoBC,CAApB,EAAsB;AACpB,SAAI,IAAIC,CAAR,IAAaH,aAAb,EAA2B;AACzB,UAAGG,CAAC,IAAID,CAAR,EAAU;AACR,eAAOF,aAAa,CAACG,CAAD,CAApB;AACD;AACF;AACF;;AAED,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC,CAduC,CAgBvC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,WAAV,CAAlB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAc,CAACC,EAAD,EAAKC,EAAL,KAAY;AACxB,eAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAAhC;AACD,OAFD;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAfD;;AAgBA,QAAGtB,IAAI,CAACuB,MAAL,KAAgB,CAAnB,EAAqB;AACnBT,MAAAA,SAAS;AACV;AACF,GApBQ,EAoBN,CAACd,IAAI,CAACwB,GAAN,CApBM,CAAT;AAsBA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,IAAD,CAAtC,CAxCuC,CA0CvC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,eAAaf,SAAS,CAACuB,GAAjC,CAAlB;AACN;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAfD;;AAgBA,QAAGxB,IAAI,CAACuB,MAAL,KAAgB,CAAnB,EAAqB;AACnBT,MAAAA,SAAS;AACV;AACF,GApBQ,EAoBN,CAACd,IAAI,CAACwB,GAAN,CApBM,CAAT;AAsBA,sBAAQ;AAAA,cACLxB,IAAI,CAACuB,MAAL,KAAgB,CAAhB,IAAqB,CAACtB,SAAS,CAAC4B,OAAhC,gBACG;AAAA;AAAA;AAAA;AAAA,YADH,gBAEK;AAAK,MAAA,SAAS,EAAE,cAAetB,UAAU,CAACP,IAAI,CAACuB,MAAN,CAAzC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGtB,SAAS,CAAC4B,OAAV,gBACG,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAW7B,IAAI,CAAC8B,EAAG,EAA9B;AAAiC,UAAA,SAAS,EAAC,MAA3C;AAAA,iCAAkD;AAAA,sBAAO9B,IAAI,CAAC+B;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADH,gBAEG;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCAAsB;AAAA,sBAAO/B,IAAI,CAAC+B;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,qBACG/B,IAAI,CAACuB,MAAL,KAAgB,CAAhB,iBAAqB;AAAA,uBAAMb,IAAN,OAAaE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADxB,EAEGZ,IAAI,CAACuB,MAAL,KAAgB,CAAhB,iBAAqB;AAAA,uBAAME,SAAN,SAAoBE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA,mBAAR;AAmBD;;GApFuB5B,Q;;KAAAA,Q","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Employee({user}) {\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 5: 'sick_leave', 4: 'deleted' ,3: 'vacation',6: 'time_off',7: 'other'}\r\n  \r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n/*      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)*/\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user/'+localUser._id)\r\n/*      res.data.sort((p1, p2) => {\r\n        return new Date(p2.start) - new Date(p1.start)\r\n      })*/\r\n/*      let dataStart = (res.data[0].start)\r\n      let dataEnd = (res.data[0].end)\r\n      dataStart = new Date(dataStart)\r\n      dataStart = dataStart.toLocaleString()\r\n      dataStart = dataStart.split(',')\r\n      dataEnd = new Date(dataEnd)\r\n      dataEnd = dataEnd.toLocaleString()\r\n      dataEnd = dataEnd.split(',')\r\n      setDateStart(dataStart[0])\r\n      setDateEnd(dataEnd[0])*/\r\n    }\r\n    if(user.status === 3){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])\r\n\r\n  return (<>\r\n    {user.status === 4 && !localUser.isAdmin\r\n      ? <div></div> \r\n        : <div className={'employee ' + (findStatus(user.status))}>\r\n          <div className='top'>\r\n            {localUser.isAdmin\r\n              ? <Link to={`/profile/${user.id}`} className='name'><span>{user.user_name}</span></Link>\r\n              : <div className='name'><span>{user.user_name}</span></div>\r\n            }\r\n          </div>\r\n          <div className='down'>\r\n              <div className='downRight'>\r\n                {user.status === 2 && <div>{date} {time}</div>}\r\n                {user.status === 3 && <div>{dateStart} - {dateEnd}</div>}\r\n                </div>\r\n          </div>\r\n        </div>\r\n    }</>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}