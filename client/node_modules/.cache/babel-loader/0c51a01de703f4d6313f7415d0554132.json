{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\AddNomination\\\\AddNomination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNomination({\n  modalVote,\n  setModalVote,\n  username\n}) {\n  _s();\n\n  const [checkedItems, setCheckedItems] = useState({});\n  const [check, setCheck] = useState();\n  const [er, setErr] = useState('');\n\n  const handleAddNomination = async () => {\n    setModalVote(false);\n  };\n\n  const secureButton = async () => {\n    const res = await axios.get('/api/user/' + username);\n    const addNomination = {\n      userId: username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username);\n    const addNomination = {\n      userId: username,\n      id_nomination: null\n    };\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    setUser(prevState => ({ ...prevState,\n      nomination_status: checked ? voteId : null\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: modalVote,\n    setActive: setModalVote,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalError\",\n      children: er\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voteContainer\",\n        children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteItem\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            className: \"inputVote\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: vote.id,\n              value: vote.id,\n              onChange: e => inputClick(e, vote.id),\n              checked: user.nomination_status === vote.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `../images/${vote.id}.png`,\n              alt: `Image for ${vote.nominations_name}`,\n              className: \"images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: secureButton,\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: clearSecureButton,\n      children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNomination, \"5V3au7Z1qpYpNdkrV2hbHJ0GYnk=\");\n\n_c = AddNomination;\nexport default AddNomination;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNomination\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/AddNomination/AddNomination.jsx"],"names":["React","useState","Modal","axios","AddNomination","modalVote","setModalVote","username","checkedItems","setCheckedItems","check","setCheck","er","setErr","handleAddNomination","secureButton","res","get","addNomination","userId","id_nomination","undefined","post","window","location","reload","clearSecureButton","inputClick","event","voteId","id","checked","target","value","prevState","setUser","nomination_status","vote","map","e","user","nominations_name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddNomination({modalVote,setModalVote,username}) {\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [check, setCheck] = useState();\r\n    const [er, setErr] = useState('')\r\n\r\n\r\n    const handleAddNomination = async () => {\r\n\r\n        setModalVote(false)\r\n\r\n    }\r\n\r\n    const secureButton = async () => {\r\n\r\n        const res = await axios.get('/api/user/' + username)\r\n\r\n        const addNomination = {\r\n            userId: username,\r\n            id_nomination: check\r\n        }\r\n\r\n        if (check === undefined) {\r\n            setErr('Выберите номинацию')\r\n        } else {\r\n            await axios.post('/api/vote/', addNomination)\r\n            setModalVote(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const clearSecureButton = async () => {\r\n        const res = await axios.get('/api/user/' + username)\r\n        const addNomination = {\r\n            userId: username,\r\n            id_nomination: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const inputClick = (event, voteId) => {\r\n        const {id, checked} = event.target\r\n        if (checked) {\r\n            setCheckedItems(checked)\r\n        } else {\r\n            setCheckedItems(null)\r\n        }\r\n        setCheck(event.target.value)\r\n        setCheckedItems(prevState => ({\r\n            ...prevState,\r\n            [id]: checked,\r\n        }))\r\n\r\n        setUser(prevState => ({\r\n                ...prevState,\r\n                nomination_status: checked ? voteId : null\r\n            }\r\n        ))\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal active={modalVote} setActive={setModalVote}>\r\n            <h1>Закрепить номинацию:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr/>\r\n            <div>\r\n                <div className='voteContainer'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id} className=\"voteItem\">\r\n                            <label key={id} htmlFor={vote.id} className=\"inputVote\">\r\n\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id={vote.id}\r\n                                    value={vote.id}\r\n                                    onChange={(e) => inputClick(e, vote.id)}\r\n                                    checked={user.nomination_status === vote.id}\r\n                                />\r\n\r\n                                {vote.nominations_name}{' '}\r\n\r\n                                <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\r\n                                     className='images'/>\r\n\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\"  onClick={secureButton}>Закрепить</button>\r\n            <button className=\"button\" type=\"submit\"  onClick={clearSecureButton}>Снять\r\n                номинацию\r\n            </button>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNomination;"]},"metadata":{},"sourceType":"module"}