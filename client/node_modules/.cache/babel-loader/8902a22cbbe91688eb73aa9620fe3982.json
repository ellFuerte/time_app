{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [expandedIds, setExpandedIds] = useState([]);\n  useEffect(() => {\n    const findDepartmentById = (departments, idToFind) => {\n      // Проверяем каждый уровень иерархии\n      for (const node of departments) {\n        // Проверяем текущий узел\n        if (node.department_tree_to_json.id === idToFind) {\n          return node; // Нашли департамент, возвращаем его\n        } // Рекурсивно проверяем поддепартаменты\n\n\n        if (node.department_tree_to_json.Subclasses) {\n          const found = findDepartmentById(node.department_tree_to_json.Subclasses, idToFind);\n\n          if (found) {\n            return found; // Нашли вложенный департамент, возвращаем его\n          }\n        }\n      }\n\n      return null; // Департамент не найден\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n        const idToExpand = 15; // id департамента для раскрытия\n\n        const depToExpand = findDepartmentById(res.data, idToExpand);\n\n        if (depToExpand) {\n          setExpandedIds([depToExpand.department_tree_to_json.id]);\n        }\n      }\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 47\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 53\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 61\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 65\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 61\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 53\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"zgiPLKBnYQpcR/0CqLnLqlRHh2o=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","expandedIds","setExpandedIds","findDepartmentById","departments","idToFind","node","department_tree_to_json","id","Subclasses","found","getDeps","res","get","data","length","idToExpand","depToExpand","map","i","label","Name","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([])\r\n    const [expandedIds, setExpandedIds] = useState([]);\r\n    useEffect(() => {\r\n        const findDepartmentById = (departments, idToFind) => {\r\n            // Проверяем каждый уровень иерархии\r\n            for (const node of departments) {\r\n                // Проверяем текущий узел\r\n                if (node.department_tree_to_json.id === idToFind) {\r\n                    return node; // Нашли департамент, возвращаем его\r\n                }\r\n                // Рекурсивно проверяем поддепартаменты\r\n                if (node.department_tree_to_json.Subclasses) {\r\n                    const found = findDepartmentById(node.department_tree_to_json.Subclasses, idToFind);\r\n                    if (found) {\r\n                        return found; // Нашли вложенный департамент, возвращаем его\r\n                    }\r\n                }\r\n            }\r\n            return null; // Департамент не найден\r\n        };\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n                const idToExpand = 15; // id департамента для раскрытия\r\n                const depToExpand = findDepartmentById(res.data, idToExpand);\r\n                if (depToExpand) {\r\n                    setExpandedIds([depToExpand.department_tree_to_json.id]);\r\n                }\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n\r\n                            {dep.map((node, i) => {\r\n\r\n                                const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                                    className='level1'>\r\n\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                                return (\r\n\r\n                                    <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label}\r\n                                              defaultCollapsed={false}>\r\n                                        {node.department_tree_to_json.Subclasses.map((departments) => (\r\n\r\n                                            <TreeView nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser'\r\n                                                      key={departments.id}>\r\n                                                    <span className=\"node\">{departments.Name}</span></Link>)}\r\n                                                      key={departments.id} defaultCollapsed={true}>\r\n\r\n                                                {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                    <TreeView nodeLabel={(\r\n\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser'\r\n                                                              key={departments1.id}>\r\n\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n\r\n                                                        </Link>\r\n                                                    )} key={departments1.id} defaultCollapsed={true}>\r\n\r\n                                                        {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n\r\n                                                            <Link to={`/department/${departments2.id}`} className='depsUser'\r\n                                                                  key={departments2.id}>\r\n\r\n                                                                <div\r\n                                                                    style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                                </div>\r\n\r\n                                                            </Link>\r\n                                                        ))}\r\n                                                    </TreeView>\r\n                                                ))}\r\n                                            </TreeView>\r\n                                        ))}\r\n                                    </TreeView>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n                }\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}