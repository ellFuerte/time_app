{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [selectedValue, setSelectedValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedInnotech, setPressedInnotech] = useState(false);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [vacanciesName, setVacanciesName] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [filters, setFilters] = useState({\n    department: [],\n    company: [],\n    status: []\n  });\n  useEffect(() => {\n    var _filters$department, _filters$company, _filters$status;\n\n    let filtered = vacancies;\n    console.log('filtered=', filtered);\n\n    if ((_filters$department = filters.department) === null || _filters$department === void 0 ? void 0 : _filters$department.length) {\n      filtered = filtered.filter(vacancy => filters.department.includes(vacancy.department_id));\n    }\n\n    if ((_filters$company = filters.company) === null || _filters$company === void 0 ? void 0 : _filters$company.length) {\n      filtered = filtered.filter(vacancy => filters.company.includes(vacancy.company_id));\n    }\n\n    if ((_filters$status = filters.status) === null || _filters$status === void 0 ? void 0 : _filters$status.length) {\n      filtered = filtered.filter(vacancy => filters.status.includes(vacancy.status_id));\n    }\n\n    setFilteredData(filtered);\n\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId, filters, vacancies]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n    setFilterSelect([]);\n    setVacanciesName([]);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickFilter = (type, id, name, vacancies, companyName) => {\n    setPressedCompany(prevState => ({ ...prevState,\n      [id]: !prevState[id]\n    }));\n    setFilters(prevFilters => {\n      var _newFilters$type;\n\n      const newFilters = { ...prevFilters\n      };\n\n      if ((_newFilters$type = newFilters[type]) === null || _newFilters$type === void 0 ? void 0 : _newFilters$type.includes(id)) {\n        newFilters[type] = newFilters[type].filter(item => item !== id);\n      } else {\n        newFilters[type] = [...(newFilters[type] || []), id];\n      }\n\n      return newFilters;\n    });\n  };\n\n  const handleSelectChange = e => {\n    const selectedDepartmentId = parseInt(e.target.value);\n    setFilters(prevFilters => ({ ...prevFilters,\n      department: [selectedDepartmentId]\n    }));\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 1:\n        return 'Reserve';\n      //  Резерв Установите Белый цвет для статуса 1\n\n      case 2:\n        return 'Selection';\n      // Подбор Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Securely';\n      // Обеспеченно Установите зелёный цвет для статуса 3\n\n      case 4:\n        return 'Liquidated';\n      // Ликвидированно Установите белый прозрачный цвет для статуса 4\n\n      case 5:\n        return 'Finalist';\n      //  Финалист Установите красный цвет для статуса 5\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                onChange: handleClickFilter,\n                children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.department_id,\n                  children: dep.department\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filtersButton\",\n                  onClick: () => handleClickFilter(company.name, company.id),\n                  style: {\n                    boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedCompany[company.name] ? 'gray' : '#1775ee'\n                  },\n                  children: company.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'filtersButton' + getColorByStatusId(status.id),\n                  onClick: () => handleClickFilter(status.name, status.id),\n                  style: {\n                    boxShadow: pressedCompany[status.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedCompany[status.name] ? 'gray' : '',\n                    opacity: pressedCompany[status.name] ? '1' : ''\n                  },\n                  children: status.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 41\n          }, this)) : '', filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 45\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 41\n          }, this)), !isOpen ? filterSelect.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }, this)) : '', vacanciesName.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 41\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"yc5XGszucQSpSroGLsmOtI8AUJE=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","selectedValue","setSelectedValue","options","setOptions","filterSelect","setFilterSelect","pressedInnotech","setPressedInnotech","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","vacanciesName","setVacanciesName","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","filters","setFilters","department","filtered","console","log","length","filter","vacancy","includes","department_id","company_id","status_id","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleClickFilter","type","id","name","companyName","prevState","prevFilters","newFilters","item","handleSelectChange","selectedDepartmentId","parseInt","getColorByStatusId","statusId","Number","window","location","href","dep","index","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const modalDep = useRef()\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedInnotech, setPressedInnotech] = useState(false);\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [vacanciesName, setVacanciesName] = useState([]);\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [filters, setFilters] = useState({\r\n        department: [],\r\n        company: [],\r\n        status: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n        let filtered = vacancies;\r\n        console.log('filtered=',filtered)\r\n\r\n        if (filters.department?.length) {\r\n            filtered = filtered.filter(vacancy => filters.department.includes(vacancy.department_id));\r\n        }\r\n\r\n        if (filters.company?.length) {\r\n            filtered = filtered.filter(vacancy => filters.company.includes(vacancy.company_id));\r\n        }\r\n\r\n        if (filters.status?.length) {\r\n            filtered = filtered.filter(vacancy => filters.status.includes(vacancy.status_id));\r\n        }\r\n\r\n        setFilteredData(filtered);\r\n\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId,filters, vacancies])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n        setFilterSelect([])\r\n        setVacanciesName([])\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n\r\n    const handleClickFilter = (type, id, name, vacancies, companyName) => {\r\n        setPressedCompany(prevState => ({\r\n            ...prevState,\r\n            [id]: !prevState[id],\r\n        }));\r\n\r\n        setFilters(prevFilters => {\r\n            const newFilters = { ...prevFilters };\r\n            if (newFilters[type]?.includes(id)) {\r\n                newFilters[type] = newFilters[type].filter(item => item !== id);\r\n            } else {\r\n                newFilters[type] = [...(newFilters[type] || []), id];\r\n            }\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n\r\n    const handleSelectChange = (e) => {\r\n        const selectedDepartmentId = parseInt(e.target.value);\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            department: [selectedDepartmentId]\r\n        }));\r\n    };\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n\r\n        switch (Number(statusId)) {\r\n            case 1:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 2:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 4:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 5:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select ref={modalDep}\r\n                                            className=\"ModalInputUpdateSelect\"\r\n                                            onChange={handleClickFilter}>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <div>\r\n\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                            key={id}\r\n                                            className='filtersButton'\r\n                                            onClick={() => handleClickFilter(company.name,company.id)}\r\n\r\n                                            style={{\r\n                                                boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                background: pressedCompany[company.name] ? 'gray' : '#1775ee'\r\n                                            }}\r\n\r\n                                        >{company.name}</button>\r\n                                    ))}\r\n\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n\r\n                                    {status.map((status, id) => (\r\n                                        <button\r\n                                            key={id}\r\n                                            className={'filtersButton'+getColorByStatusId(status.id)}\r\n                                            onClick={() => handleClickFilter(status.name,status.id)}\r\n\r\n                                            style={{\r\n                                                boxShadow: pressedCompany[status.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                background: pressedCompany[status.name] ? 'gray' : '',\r\n                                                opacity: pressedCompany[status.name] ? '1' : ''\r\n                                            }}\r\n\r\n                                        >{status.name}</button>\r\n                                    ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n\r\n                                {\r\n                                    !isOpen ?\r\n                                        filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    vacanciesName.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                                }\r\n\r\n\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}