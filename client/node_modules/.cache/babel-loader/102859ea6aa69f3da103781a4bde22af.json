{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useEffect, useState } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport loginCall from '../../apiCalls';\nimport { AuthContext } from '../../context/AuthContext';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState();\n  const [serverError, setServerError] = useState(false);\n  useEffect(() => {\n    fetch('/healthcheck').then(response => {\n      if (!response.ok) {\n        if (response.status === 401) {\n          throw new Error('Неправильный логин или пароль');\n        } else {\n          throw new Error('Сервер недоступен');\n        }\n      } // Если сервер доступен, вы можете продолжить выполнение кода здесь\n\n    }).catch(error => {\n      // Обновить состояние с сообщением об ошибке\n      setServerError(true);\n      setErrorMessage('Ошибка: ' + error.message); // Дополнительные действия при ошибке, если необходимо\n    });\n  }, []);\n  const email = useRef();\n  const password = useRef();\n  const {\n    isFetching,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n\n  const handleClick = e => {\n    e.preventDefault();\n    loginCall({\n      email: email.current.value.toUpperCase(),\n      password: password.current.value\n    }, dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [!errorMessage && error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"\\u041D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"\\u0421\\u0435\\u0440\\u0432\\u0435\\u0440 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginCenter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            className: \"loginInput\",\n            type: \"emailLogin\",\n            ref: email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            className: \"loginInput\",\n            ref: password,\n            required: true,\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            type: \"submit\",\n            disabled: isFetching,\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this) : 'Войти'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            style: {\n              width: '167%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"loginRegisterButton\",\n              disabled: isFetching,\n              children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 31\n              }, this) : 'Создать новый аккаунт'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"GwdhB8DZftuQtNSimgPa29sfsHw=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/time_app/client/src/pages/Login/Login.jsx"],"names":["useContext","useRef","useEffect","useState","CircularProgress","Link","loginCall","AuthContext","Login","errorMessage","setErrorMessage","serverError","setServerError","fetch","then","response","ok","status","Error","catch","error","message","email","password","isFetching","dispatch","handleClick","e","preventDefault","current","value","toUpperCase","color","width"],"mappings":"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","sourcesContent":["import {useContext, useRef, useEffect,useState} from 'react';\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport  loginCall  from '../../apiCalls';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport './Login.css'\r\n\r\n\r\nexport default function Login() {\r\n  const [errorMessage, setErrorMessage] = useState();\r\n    const [serverError, setServerError] = useState(false);\r\n    useEffect(() => {\r\n        fetch('/healthcheck')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 401) {\r\n                        throw new Error('Неправильный логин или пароль');\r\n                    } else {\r\n                        throw new Error('Сервер недоступен');\r\n                    }\r\n                }\r\n                // Если сервер доступен, вы можете продолжить выполнение кода здесь\r\n            })\r\n            .catch(error => {\r\n                // Обновить состояние с сообщением об ошибке\r\n                setServerError(true);\r\n                setErrorMessage('Ошибка: ' + error.message);\r\n                // Дополнительные действия при ошибке, если необходимо\r\n            });\r\n    }, []);\r\n\r\n\r\n  const email = useRef()\r\n  const password = useRef()\r\n\r\n  const {isFetching, error, dispatch } = useContext(AuthContext)\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    loginCall({email:email.current.value.toUpperCase(), password:password.current.value}, dispatch)\r\n  }\r\n\r\n  return (\r\n      <div className=\"login\">\r\n          {!errorMessage && error &&\r\n              <div className='error'>\r\n                  Неправильный логин или пароль\r\n              </div>}\r\n\r\n          {serverError &&\r\n              <div className='error'>\r\n                  Сервер недоступен\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginCenter\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input \r\n              placeholder=\"Email\"\r\n              className=\"loginInput\" \r\n              type='emailLogin'\r\n              ref={email} \r\n              required\r\n            />\r\n            <input \r\n              placeholder=\"Password\" \r\n              type='password' \r\n              className=\"loginInput\" \r\n              ref={password} \r\n              required\r\n              minLength='6'\r\n            />\r\n            <button  className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n\r\n              {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Войти'}\r\n\r\n            </button>\r\n\r\n            {/* <span className=\"loginForgot\">Забыли пароль?</span> */}\r\n            <Link to='/register' style={{width:'167%'}}>\r\n              <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n                {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Создать новый аккаунт'}\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}