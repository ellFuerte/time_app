{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\AddNomination\\\\AddNomination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNomination({\n  checkedItems,\n  setCheckedItems,\n  user,\n  updateNominationStatus\n}) {\n  _s();\n\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setCheckedItems(prevCheckedItems => ({ ...prevCheckedItems,\n      [name]: checked\n    })); // Обновляем статус номинации пользователя при изменении чекбокса\n\n    if (checked) {\n      updateNominationStatus(name); // передаем новое значение статуса\n    }\n  };\n\n  useEffect(() => {\n    // Инициализация состояния чекбоксов на основе текущего статуса номинации пользователя\n    setCheckedItems(prevCheckedItems => ({ ...prevCheckedItems,\n      [user.nomination_status]: true\n    }));\n  }, [user.nomination_status, setCheckedItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"1\",\n        checked: checkedItems['1'] || false,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \"\\u0422\\u0443\\u0447\\u043A\\u0430\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"2\",\n        checked: checkedItems['2'] || false,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \"\\u0410\\u0440\\u043A\\u0430\\u0434\\u0438\\u0439 \\u041F\\u0430\\u0440\\u043E\\u0432\\u043E\\u0437\\u043E\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNomination, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AddNomination;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNomination\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/AddNomination/AddNomination.jsx"],"names":["React","useEffect","useState","Modal","axios","AddNomination","checkedItems","setCheckedItems","user","updateNominationStatus","handleCheckboxChange","event","name","checked","target","prevCheckedItems","nomination_status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,eAAhB;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA;AAAvC,CAAvB,EAAwF;AAAA;;AACnG,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBF,KAAK,CAACG,MAAhC;AACAP,IAAAA,eAAe,CAAEQ,gBAAD,KAAuB,EACnC,GAAGA,gBADgC;AAEnC,OAACH,IAAD,GAAQC;AAF2B,KAAvB,CAAD,CAAf,CAFoC,CAOpC;;AACA,QAAIA,OAAJ,EAAa;AACTJ,MAAAA,sBAAsB,CAACG,IAAD,CAAtB,CADS,CACqB;AACjC;AACJ,GAXD;;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,eAAe,CAAEQ,gBAAD,KAAuB,EACnC,GAAGA,gBADgC;AAEnC,OAACP,IAAI,CAACQ,iBAAN,GAA0B;AAFS,KAAvB,CAAD,CAAf;AAIH,GANQ,EAMN,CAACR,IAAI,CAACQ,iBAAN,EAAyBT,eAAzB,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,GAFT;AAGI,QAAA,OAAO,EAAED,YAAY,CAAC,GAAD,CAAZ,IAAqB,KAHlC;AAII,QAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,GAFT;AAGI,QAAA,OAAO,EAAEJ,YAAY,CAAC,GAAD,CAAZ,IAAqB,KAHlC;AAII,QAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA7CuBL,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function AddNomination({ checkedItems, setCheckedItems, user, updateNominationStatus }) {\r\n    const handleCheckboxChange = (event) => {\r\n        const { name, checked } = event.target;\r\n        setCheckedItems((prevCheckedItems) => ({\r\n            ...prevCheckedItems,\r\n            [name]: checked\r\n        }));\r\n\r\n        // Обновляем статус номинации пользователя при изменении чекбокса\r\n        if (checked) {\r\n            updateNominationStatus(name); // передаем новое значение статуса\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Инициализация состояния чекбоксов на основе текущего статуса номинации пользователя\r\n        setCheckedItems((prevCheckedItems) => ({\r\n            ...prevCheckedItems,\r\n            [user.nomination_status]: true\r\n        }));\r\n    }, [user.nomination_status, setCheckedItems]);\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"1\"\r\n                    checked={checkedItems['1'] || false}\r\n                    onChange={handleCheckboxChange}\r\n                />\r\n                Тучка\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"2\"\r\n                    checked={checkedItems['2'] || false}\r\n                    onChange={handleCheckboxChange}\r\n                />\r\n                Аркадий Паровозов\r\n            </label>\r\n            {/* Добавьте остальные чекбоксы аналогичным образом */}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}