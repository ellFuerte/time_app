{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      console.log(\"DEPARTMENTS=\", res.data[0]);\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []); // загрузка всех департаментов\n\n  useEffect(() => {\n    // загрузка пользователей и сортировка по департаментам\n    const fetchUser = async () => {\n      setIsFetching(true);\n      const res = await axios.get('/api/user/');\n      const id = res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      setUsers(res.data);\n      setIsFetching(false);\n    };\n\n    fetchUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"depsUser\",\n              style: {\n                fontWeight: `bold`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 143\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map((departments, index) => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 39\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 35\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map((departments1, index1) => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 47\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 43\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map((departments2, index2) => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 51\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 47\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 39\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 31\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"9ji1YCQKxa35FP64zmn7viD3eu8=\");\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","useParams","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","users","setUsers","isFetching","setIsFetching","getDeps","res","get","console","log","data","fetchUser","id","sort","a","b","user_name","localeCompare","map","node","i","label","department_tree_to_json","fontWeight","Name","Subclasses","departments","index","departments1","index1","departments2","index2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\nexport default function Sidebar() {\r\n  const [dep, setDep] = useState([])\r\n  const [users, setUsers] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n           const res = await axios.get('/api/department_tree_to_json/')\r\n            console.log(\"DEPARTMENTS=\",res.data[0])\r\n            setDep(res.data)\r\n        }\r\n        getDeps()\r\n        }, [])\r\n\r\n\r\n  // загрузка всех департаментов\r\n  useEffect(() => {\r\n    // загрузка пользователей и сортировка по департаментам\r\n    const fetchUser = async () => {\r\n      setIsFetching(true)\r\n      const res = await axios.get('/api/user/')\r\n      const id=res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n      setUsers(res.data)\r\n      setIsFetching(false)\r\n\r\n    }\r\n\r\n    fetchUser()\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className=\"sidebarWrapper\">\r\n        <div className=\"tree\">\r\n          <div className=\"treeWrapper\">\r\n\r\n              {dep.map((node, i) => {\r\n\r\n                  const label = <Link to={`/department/${node.department_tree_to_json.id}`} className='depsUser' style={{fontWeight: `bold`}}><span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                  return (\r\n\r\n                      <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={false}>\r\n                          {node.department_tree_to_json.Subclasses.map((departments, index) => (\r\n                              <TreeView nodeLabel={(\r\n                                  <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                      <span className=\"node\">{departments.Name}</span>\r\n                                  </Link>\r\n                              )} key={departments.id} defaultCollapsed={true}>\r\n                                  {!!departments.Subclasses && departments.Subclasses.map((departments1, index1) => (\r\n                                      <TreeView nodeLabel={(\r\n                                          <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                              <span className=\"node\">{departments1.Name}</span>\r\n                                          </Link>\r\n                                      )} key={departments1.id} defaultCollapsed={true}>\r\n                                          {!!departments1.Subclasses && departments1.Subclasses.map((departments2, index2) => (\r\n                                              <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                  <div style={{paddingBottom:'8px'}}>{departments2.Name}</div>\r\n                                              </Link>\r\n                                          ))}\r\n                                      </TreeView>\r\n                                  ))}\r\n                              </TreeView>\r\n                          ))}\r\n                      </TreeView>\r\n                  );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}