{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\AddNomination\\\\AddNomination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNomination({\n  modalVote,\n  setModalVote,\n  username,\n  setUserNominationStatus\n}) {\n  _s();\n\n  const [checkedItems, setCheckedItems] = useState({});\n  const [check, setCheck] = useState();\n  const [er, setErr] = useState('');\n  const [user, setUser] = useState([]);\n  const [vote, setVote] = useState([]);\n  useEffect(() => {\n    const fetchVote = async () => {\n      try {\n        const rez = await axios.get('/api/vote/');\n        const res = await axios.get('/api/user/' + username.username);\n        setUser(res.data);\n        setVote(rez.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchVote();\n  }, [username]);\n\n  const secureButton = async () => {\n    const addNomination = {\n      userId: username.username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      try {\n        await axios.post('/api/vote/', addNomination);\n        setModalVote(false);\n        window.location.reload();\n      } catch (error) {\n        console.error(\"Error posting nomination:\", error);\n      }\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const addNomination = {\n      userId: username.username,\n      id_nomination: null\n    };\n\n    try {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error clearing nomination:\", error);\n    }\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    const newNominationStatus = checked ? voteId : null;\n    setUserNominationStatus(newNominationStatus);\n    setUser(prevState => ({ ...prevState,\n      nomination_status: newNominationStatus\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: modalVote,\n    setActive: setModalVote,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalError\",\n      children: er\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voteContainer\",\n        children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteItem\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            className: \"inputVote\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: vote.id,\n              value: vote.id,\n              onChange: e => inputClick(e, vote.id),\n              checked: user.nomination_status === vote.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `../images/${vote.id}.png`,\n              alt: `Image for ${vote.nominations_name}`,\n              className: \"images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: secureButton,\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: clearSecureButton,\n      children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNomination, \"0sPg8D1P0SFI8TA7i/iilbV6inU=\");\n\n_c = AddNomination;\nexport default AddNomination;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNomination\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/AddNomination/AddNomination.jsx"],"names":["React","useEffect","useState","Modal","axios","AddNomination","modalVote","setModalVote","username","setUserNominationStatus","checkedItems","setCheckedItems","check","setCheck","er","setErr","user","setUser","vote","setVote","fetchVote","rez","get","res","data","error","console","secureButton","addNomination","userId","id_nomination","undefined","post","window","location","reload","clearSecureButton","inputClick","event","voteId","id","checked","target","value","prevState","newNominationStatus","nomination_status","map","e","nominations_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddNomination({ modalVote, setModalVote, username, setUserNominationStatus }) {\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [check, setCheck] = useState();\r\n    const [er, setErr] = useState('');\r\n    const [user, setUser] = useState([]);\r\n    const [vote, setVote] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchVote = async () => {\r\n            try {\r\n                const rez = await axios.get('/api/vote/');\r\n                const res = await axios.get('/api/user/' + username.username);\r\n                setUser(res.data);\r\n                setVote(rez.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n        fetchVote();\r\n    }, [username]);\r\n\r\n    const secureButton = async () => {\r\n        const addNomination = {\r\n            userId: username.username,\r\n            id_nomination: check\r\n        };\r\n\r\n        if (check === undefined) {\r\n            setErr('Выберите номинацию');\r\n        } else {\r\n            try {\r\n                await axios.post('/api/vote/', addNomination);\r\n                setModalVote(false);\r\n                window.location.reload();\r\n            } catch (error) {\r\n                console.error(\"Error posting nomination:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearSecureButton = async () => {\r\n        const addNomination = {\r\n            userId: username.username,\r\n            id_nomination: null\r\n        };\r\n\r\n        try {\r\n            await axios.post('/api/vote/', addNomination);\r\n            setModalVote(false);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error(\"Error clearing nomination:\", error);\r\n        }\r\n    };\r\n\r\n    const inputClick = (event, voteId) => {\r\n        const { id, checked } = event.target;\r\n        setCheck(event.target.value);\r\n        setCheckedItems(prevState => ({\r\n            ...prevState,\r\n            [id]: checked,\r\n        }));\r\n\r\n        const newNominationStatus = checked ? voteId : null;\r\n        setUserNominationStatus(newNominationStatus);\r\n\r\n        setUser(prevState => ({\r\n            ...prevState,\r\n            nomination_status: newNominationStatus\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Modal active={modalVote} setActive={setModalVote}>\r\n            <h1>Закрепить номинацию:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr />\r\n            <div>\r\n                <div className='voteContainer'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id} className=\"voteItem\">\r\n                            <label key={id} htmlFor={vote.id} className=\"inputVote\">\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id={vote.id}\r\n                                    value={vote.id}\r\n                                    onChange={(e) => inputClick(e, vote.id)}\r\n                                    checked={user.nomination_status === vote.id}\r\n                                />\r\n                                {vote.nominations_name}{' '}\r\n                                <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`} className='images' />\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\" onClick={secureButton}>Закрепить</button>\r\n            <button className=\"button\" type=\"submit\" onClick={clearSecureButton}>Снять номинацию</button>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddNomination;"]},"metadata":{},"sourceType":"module"}