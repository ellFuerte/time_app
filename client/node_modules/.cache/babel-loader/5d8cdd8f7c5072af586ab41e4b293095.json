{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { Create, Delete, Settings, Message } from '@material-ui/icons';\nimport Skills from '../ProfileInfo/Skills/Skills';\nimport Modal from '../Templates/Modal/Modal';\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\";\nimport './ProfileInfo.css';\nimport DeleteUser from \"./DeleteUser/DeleteUser\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport FinishTime from \"./FinishTime/FinishTime\";\nimport AddNomination from \"./AddNomination/AddNomination\";\nimport ChangePassword from \"./СhangePassword/СhangePassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [allDateUser, setAllDateUser] = useState();\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalResetPassword, setModalResetPassword] = useState(false);\n  const [modalFinishTime, setModalFinishTime] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [hasImage, setHasImage] = useState(false);\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const [userNominationStatus, setUserNominationStatus] = useState(user.nomination_status);\n  useEffect(() => {\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setTimeZone(res.data[0]['timezone']);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n    }; // Номинации\n\n\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    fetchVote();\n    fetchUser();\n    getNameDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username, userNominationStatus]);\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n\n  const clickVote = (e, id, user_name) => {\n    setFilteredCities([]);\n    console.log('index=', id, user_name);\n    setInputValues(prev => ({ ...prev,\n      [selectedInputIndex]: user_name\n    }));\n    e.preventDefault();\n    const data = id.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray);\n  };\n\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n\n  const handleInputChangeUsers = (e, id) => {\n    const index = id + 1;\n    const {\n      value\n    } = e.target;\n    setInputValues(prev => ({ ...prev,\n      [index]: value\n    }));\n    setSelectedInputIndex(index);\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = userVote.filter(city => city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const getChangeVacancies = () => {\n    if (localUse.isAdmin) {\n      setModalVacancies(true);\n      setAllDateUser(user);\n    }\n  };\n\n  const updateNominationStatus = newStatus => {\n    setUser(prevState => ({ ...prevState,\n      nomination_status: newStatus\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[key].src,\n      title: images[key].title,\n      alt: `Image for ${key}`,\n      className: \"imagesProfile\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this)), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileName\",\n        children: [user.user_name, localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Create, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px',\n              paddingLeft: '5px'\n            },\n            onClick: () => setModalActive(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Editing, {\n            modalActive: modalActive,\n            setModalActive: setModalActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Delete, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px'\n            },\n            onClick: () => setModalActiveDelete(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DeleteUser, {\n            modalActiveDelete: modalActiveDelete,\n            setModalActiveDelete: setModalActiveDelete,\n            username: username.username,\n            user: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : '', localUse.isAdmin === true && localUse._id === user.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px',\n              paddingTop: '5px',\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: getChangeVacancies,\n          className: \"ProfileLinkVacancies\",\n          children: user.vacancy_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px dashed black',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"Email: \", name.charAt(0).toUpperCase() + name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438: \", user.distribution_group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438: \", user.activity_profile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F: \", cityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", depsName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this), localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalActivePass(true),\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n          modalActivePass: modalActivePass,\n          setModalActivePass: setModalActivePass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalResetPassword(true),\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ResetPassword, {\n          modalResetPassword: modalResetPassword,\n          setModalResetPassword: setModalResetPassword,\n          username: username.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalFinishTime(true),\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(FinishTime, {\n          modalFinishTime: modalFinishTime,\n          setModalFinishTime: setModalFinishTime,\n          user: user.id,\n          status: user.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveVote(true),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalVote(true),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(AddNomination, {\n          modalVote: modalVote,\n          setModalVote: setModalVote,\n          username: username,\n          updateNominationStatus: updateNominationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveSkills(true),\n        children: \"\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {\n        modalActiveSkills: modalActiveSkills,\n        setModalActiveSkills: setModalActiveSkills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveVote,\n      setActive: setModalActiveVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"inputVote\",\n              children: vote.nominations_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 37\n            }, this), vote.description]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"di\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleInputChangeUsers(e, id),\n              value: inputValues[id + 1] || '',\n              className: \"select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this), selectedInputIndex === id + 1 && filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              style: {\n                position: 'absolute',\n                top: '100%',\n                left: 0,\n                zIndex: 1000,\n                marginLeft: '20px'\n              },\n              children: filteredCities.map((city, cityId) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                onClick: e => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name),\n                children: city.user_name\n              }, cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 37\n            }, this)]\n          }, id + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: button,\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacancies,\n      setActive: setModalVacancies,\n      children: /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        allDateUser: allDateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileInfo, \"qgqpqDlsv50a5P5w8t0aN7oydc0=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Link","useParams","Create","Delete","Settings","Message","Skills","Modal","ModalVacanciesItem","ModalVacancies","Editing","DeleteUser","ResetPassword","FinishTime","AddNomination","ChangePassword","ProfileInfo","timeZone","setTimeZone","searchTermCities","setSearchTermCities","allDateUser","setAllDateUser","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","user","setUser","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalResetPassword","setModalResetPassword","modalFinishTime","setModalFinishTime","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","er","setErr","username","localUser","_id","email","JSON","parse","localStorage","getItem","localUse","modalOldPass","modalNewPass","modalNewPassAgain","filteredCities","setFilteredCities","hasImage","setHasImage","usersStatuses","findStatus","k","i","userNominationStatus","setUserNominationStatus","nomination_status","getNameDeps","deps","res","post","data","fetchUser","id","get","sort","a","b","user_name","localeCompare","mass","filter","element","status","fetchVote","phone_number","additional_contact","distribution_group","activity_profile","place_of_residence","Array","isArray","name","toLowerCase","button","length","forEach","arr","split","voteUser","user_id","vote_for_user","nominations_id","clickVote","e","console","log","prev","preventDefault","toString","str","str1","existingIndex","findIndex","item","newArray","votearr","push","images","src","title","handleInputChangeUsers","index","value","target","termCities","filtered","city","includes","getChangeVacancies","isAdmin","updateNominationStatus","newStatus","prevState","Object","keys","map","key","parseInt","cursor","fontSize","paddingLeft","paddingTop","color","vacancy_code","border","padding","charAt","toUpperCase","slice","nominations_name","description","position","top","left","zIndex","marginLeft","cityId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { Create, Delete, Settings, Message } from '@material-ui/icons'\n\n\nimport Skills from '../ProfileInfo/Skills/Skills'\nimport Modal from '../Templates/Modal/Modal'\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\"\n\nimport './ProfileInfo.css'\nimport DeleteUser from \"./DeleteUser/DeleteUser\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport FinishTime from \"./FinishTime/FinishTime\";\nimport AddNomination from \"./AddNomination/AddNomination\";\nimport ChangePassword from \"./СhangePassword/СhangePassword\";\n\nexport default function ProfileInfo() {\n\n    const [timeZone, setTimeZone] = useState([])\n    const [searchTermCities, setSearchTermCities] = useState('');\n\n    const [allDateUser, setAllDateUser] = useState()\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n    const [inputValues, setInputValues] = useState('');\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [userVote, setUserVote] = useState([])\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalResetPassword, setModalResetPassword] = useState(false)\n    const [modalFinishTime, setModalFinishTime] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n\n    const [er, setErr] = useState('')\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n\n\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [hasImage, setHasImage] = useState(false);\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n    const [userNominationStatus, setUserNominationStatus] = useState(user.nomination_status);\n    useEffect(() => {\n\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\n            setUserVote(mass)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n\n        fetchVote()\n        fetchUser()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n        username.username,\n        userNominationStatus\n    ])\n\n\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n\n\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n\n    const clickVote = (e, id, user_name) => {\n        setFilteredCities([])\n        console.log('index=', id, user_name)\n        setInputValues(prev => ({...prev, [selectedInputIndex]: user_name}));\n        e.preventDefault();\n        const data = id.toString();\n        const arr = data.split(\"_\");\n        if (arr[0] === '' || arr[1] === '') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n    };\n\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n    const handleInputChangeUsers = (e, id) => {\n        const index = id + 1\n        const {value} = e.target;\n        setInputValues(prev => ({...prev, [index]: value}));\n        setSelectedInputIndex(index);\n\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = userVote.filter(city =>\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n\n    const getChangeVacancies = () => {\n        if (localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n    const updateNominationStatus = (newStatus) => {\n        setUser(prevState => ({\n            ...prevState,\n            nomination_status: newStatus\n        }));\n    };\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                    <div className='ProfileName'>\n\n                        {user.user_name}\n\n                        {localUse.isAdmin || localUse._id === username.username\n                            ?\n                            <>\n                                <Create style={{cursor: 'pointer', fontSize: '20px', paddingLeft: '5px'}}\n                                        onClick={() => setModalActive(true)}/>\n                                <Editing modalActive={modalActive} setModalActive={setModalActive}/>\n                            </>\n                            : ''}\n\n\n                        {localUse.isAdmin ?\n                            <>\n                                <Delete style={{cursor: 'pointer', fontSize: '20px'}}\n                                        onClick={() => setModalActiveDelete(true)}/>\n                                <DeleteUser modalActiveDelete={modalActiveDelete}\n                                            setModalActiveDelete={setModalActiveDelete} username={username.username}\n                                            user={user.id}/>\n                            </>\n                            : ''}\n\n\n                        {localUse.isAdmin === true && localUse._id === user.id ?\n                            <Link to={`/AdminPanel`}>\n                                <Settings\n                                    style={{cursor: 'pointer', fontSize: '20px', paddingTop: '5px', color: 'black'}}/>\n                            </Link>\n                            : ''}\n                    </div>\n\n\n                    <div>\n                        <label style={{cursor: 'pointer'}} onClick={getChangeVacancies}\n                               className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                    </div>\n\n\n                    {/*                    {\n                        <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                    }*/}\n\n\n                    <div style={{border: '3px dashed black', padding: '10px'}}>\n                        <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                        <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                        <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                        <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n                    {\n                        localUse.isAdmin || localUse._id === username.username ? <>\n                            <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>\n                            <ChangePassword modalActivePass={modalActivePass} setModalActivePass={setModalActivePass}/>\n                        </> : ''\n\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalResetPassword(true)}>Сбросить\n                                    пароль\n                                </div>\n                                <ResetPassword modalResetPassword={modalResetPassword}\n                                               setModalResetPassword={setModalResetPassword}\n                                               username={username.username}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalFinishTime(true)}>Закончить</div>\n                                <FinishTime modalFinishTime={modalFinishTime} setModalFinishTime={setModalFinishTime}\n                                            user={user.id} status={user.status}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse._id === user.id ?\n                            <div className='changePass'\n                                 onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className=\"changePass\" onClick={() => setModalVote(true)}>Закрепить номинацию</div>\n                                <AddNomination modalVote={modalVote} setModalVote={setModalVote} username={username}\n                                               updateNominationStatus={updateNominationStatus}/>\n                            </> : ''\n                    }\n\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills}/>\n\n                </div>\n            }\n\n\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div>\n                        {\n                            vote.map((vote, id) =>\n\n                                <label key={id} htmlFor={vote.id}>\n                                    <h3 className='inputVote'>{vote.nominations_name}</h3>\n                                    {vote.description}\n                                </label>\n                            )}\n                    </div>\n                    <div className='di'>\n                        {vote.map((vote, id) => (\n                            <div key={id + 1} style={{position: 'relative'}}>\n                                <input\n                                    onChange={(e) => handleInputChangeUsers(e, id)}\n                                    value={inputValues[id + 1] || ''}\n                                    className='select'\n                                />\n                                {selectedInputIndex === id + 1 && filteredCities.length > 0 && (\n                                    <div className='divSelectRegister' style={{\n                                        position: 'absolute',\n                                        top: '100%',\n                                        left: 0,\n                                        zIndex: 1000,\n                                        marginLeft: '20px'\n                                    }}>\n                                        {filteredCities.map((city, cityId) => (\n                                            <div\n                                                className='selectNameDiv'\n                                                key={cityId}\n                                                onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\n                                                {city.user_name}\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n            </Modal>\n\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem\n                    allDateUser={allDateUser}\n                />\n            </ModalVacancies>\n\n\n            <Skills/>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}