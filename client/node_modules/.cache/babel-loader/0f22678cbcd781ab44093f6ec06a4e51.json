{"ast":null,"code":"import _objectSpread from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/time_app/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import Pagination from\"../Pagination/Pagination\";import ModalVacancies from\"../Templates/ModalVacancies/ModalVacancies\";import axios from\"axios\";import'./VacanciesView.css';import VacanciesItem from\"../VacanciesItem/VacanciesItem\";import Topbar from\"../Topbar/Topbar\";import Sidebar from\"../Sidebar/Sidebar\";import VacanciesAdd from\"../VacanciesAdd/VacanciesAdd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function VacanciesView(departId){var modalDep=useRef();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filterSelect=_useState4[0],setFilterSelect=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),pressedDate=_useState6[0],setPressedDate=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),pressedCompany=_useState8[0],setPressedCompany=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isOpen=_useState10[0],setIsOpen=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),vacancies=_useState12[0],setVacancies=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isAddingVacancies=_useState14[0],setIsAddingVacancies=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),startDate=_useState16[0],setStartDate=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),endDate=_useState18[0],setEndDate=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),filteredData=_useState20[0],setFilteredData=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),status=_useState22[0],setStatus=_useState22[1];var localUser=JSON.parse(localStorage.getItem('user'));useEffect(function(){var getDeps=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,resUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/departments/');case 2:res=_context.sent;_context.next=5;return axios.get('/api/user/'+localUser._id);case 5:resUser=_context.sent;setUser(resUser.data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getDeps(){return _ref.apply(this,arguments);};}();var VacanciesView=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var status,vacancies_function,getVacancies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('/api/Vacations/?status=status');case 2:status=_context2.sent;setStatus(status.data);vacancies_function={departId:localUser.departmentId,user_id:localUser._id};_context2.next=7;return axios.post('/api/Vacations_function/',vacancies_function);case 7:getVacancies=_context2.sent;if(isOpen){// Фильтрация вакансий по departId\nsetVacancies(getVacancies.data[0].get_vacancies);// Установка нового массива вакансий\n}case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function VacanciesView(){return _ref2.apply(this,arguments);};}();getDeps();VacanciesView();},[isOpen,departId]);var reset=function reset(){setStartDate('');setEndDate('');};var handleStartDateChange=function handleStartDateChange(e){setStartDate(e.target.value);};var handleEndDateChange=function handleEndDateChange(e){setEndDate(e.target.value);};var handleCombinedFilter=function handleCombinedFilter(){function filterVacanciesByDate(startDate,endDate){return vacancies.map(function(department){return _objectSpread(_objectSpread({},department),{},{vacancies:department.vacancies.filter(function(vacancy){var vacancyDate=new Date(vacancy.create_date);var start=startDate?new Date(startDate):null;var end=endDate?new Date(endDate):null;return(!start||vacancyDate>=start)&&(!end||vacancyDate<=end);})});});}var filteredData=filterVacanciesByDate(startDate,endDate);setIsOpen(false);setFilteredData(filteredData);};var clickAdd=function clickAdd(){setIsAddingVacancies(true);};var clickBackButton=function clickBackButton(){setIsAddingVacancies(false);};var handleClickDate=function handleClickDate(){setPressedDate(!pressedDate);};var handleClickCompany=function handleClickCompany(){setPressedCompany(!pressedCompany);if(!pressedCompany){vacancies.map(function(vac){return _objectSpread(_objectSpread({},vac),{},{vacancies:vac.vacancies.sort(function(vacancy){return console.log(vacancy.company_name);})});});}else{}};var handleSelectChange=function handleSelectChange(e){var selectedDepartmentId=parseInt(e.target.value);var filter=vacancies.filter(function(elm){return elm.department_id===selectedDepartmentId;});setFilterSelect(filter);setIsOpen(false);setFilteredData([]);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Topbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"mainContainer\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Vacations\",children:[isAddingVacancies?/*#__PURE__*/_jsx(\"button\",{className:\"btnStaff\",onClick:clickBackButton,children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btnStaff\",onClick:function onClick(){return window.location.href=\"/department/\".concat(localUser.departmentId);},children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btnStaff\",onClick:clickAdd,children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"})]}),isAddingVacancies?/*#__PURE__*/_jsx(VacanciesAdd,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"VacationsContainerTop\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",className:\"ModalInput\",style:{'marginRight':'10px'},value:startDate,onChange:handleStartDateChange}),\"\\u2014   \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",className:\"ModalInput\",style:{'marginRight':'10px'},value:endDate,onChange:handleEndDateChange}),/*#__PURE__*/_jsx(\"button\",{className:\"filterButton\",onClick:handleCombinedFilter,children:\"\\u041F\\u043E\\u0438\\u0441\\u043A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"filterButton\",onClick:reset,children:\"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"select\",{ref:modalDep,className:\"ModalInputUpdateSelect\",onChange:handleSelectChange,children:vacancies.map(function(dep,index){return/*#__PURE__*/_jsx(\"option\",{selected:dep.department_id===user.department_id,value:dep.department_id,children:dep.department},index);})}),/*#__PURE__*/_jsx(\"button\",{className:\"filtersButton\",style:{boxShadow:pressedDate?\"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\":\"\",background:pressedDate?'gray':'#1775ee'},onClick:handleClickDate,children:pressedDate?'ВТБ':'ВТБ'}),/*#__PURE__*/_jsx(\"button\",{className:\"filtersButton\",style:{boxShadow:pressedCompany?\"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\":\"\",background:pressedCompany?'gray':'#1775ee'},onClick:handleClickCompany,children:pressedCompany?'Иннотех':'Иннотех'})]})]}),isOpen?vacancies.map(function(vac,id){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac,status:status,department:vac.department,vacancies:vac.vacancies},vac.department)},id);}):'',!isOpen?filterSelect.map(function(vac,id){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac,status:status,department:vac.department,vacancies:vac.vacancies},vac.department)},id);}):'',filteredData.map(function(vac){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac,status:status,department:vac.department,vacancies:vac.vacancies},vac.department)},vac.id);})]})]})]})]})/*        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                    <div className=\"VacationsContainerTop\">\r\n\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                                <h2>Вакансии</h2>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate} onChange={handleStartDateChange}\r\n                                    />— <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate} onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n\r\n                                {isOpen ? (\r\n                                    vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                           department={vac.department} vacancies={vac.vacancies}\r\n                                                           users={departId.users}/>\r\n                                        </div>\r\n                                    ))\r\n                                ) : ''}\r\n\r\n                                {filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                       vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>*/;}export default VacanciesView;","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","user","setUser","filterSelect","setFilterSelect","pressedDate","setPressedDate","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","localUser","JSON","parse","localStorage","getItem","getDeps","get","res","_id","resUser","data","vacancies_function","departmentId","user_id","post","getVacancies","get_vacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","filter","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleClickDate","handleClickCompany","vac","sort","console","log","company_name","handleSelectChange","selectedDepartmentId","parseInt","elm","department_id","window","location","href","dep","index","boxShadow","background","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const modalDep = useRef()\r\n    const [user, setUser] = useState([])\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedDate, setPressedDate] = useState(false);\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/departments/')\r\n            const resUser = await axios.get('/api/user/' + localUser._id)\r\n            setUser(resUser.data)\r\n        }\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        getDeps()\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n    const handleClickDate = () => {\r\n        setPressedDate(!pressedDate);\r\n    };\r\n\r\n    const handleClickCompany = () => {\r\n        setPressedCompany(!pressedCompany);\r\n        if(!pressedCompany) {\r\n\r\n            vacancies.map(vac => ({\r\n                    ...vac,\r\n                    vacancies: vac.vacancies.sort(vacancy => console.log(vacancy.company_name))\r\n                }\r\n            ))\r\n        }else{\r\n\r\n        }}\r\n\r\n\r\n    const  handleSelectChange = (e) => {\r\n        const selectedDepartmentId = parseInt(e.target.value);\r\n        const filter = vacancies.filter(elm=>elm.department_id===selectedDepartmentId)\r\n        setFilterSelect(filter)\r\n        setIsOpen(false)\r\n        setFilteredData([])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select ref={modalDep} className=\"ModalInputUpdateSelect\" onChange={handleSelectChange}>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                selected={dep.department_id === user.department_id}\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                <button\r\n                                    className=\"filtersButton\"\r\n                                    style={{boxShadow: pressedDate ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                            : \"\",\r\n                                        background: pressedDate ? 'gray' : '#1775ee'}}\r\n                                    onClick={handleClickDate}>\r\n                                    {pressedDate ? 'ВТБ' : 'ВТБ'}\r\n                                </button>\r\n                                <button\r\n                                    className=\"filtersButton\"\r\n                                    style={{boxShadow: pressedCompany ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                            : \"\",\r\n                                        background: pressedCompany ? 'gray' : '#1775ee'}}\r\n                                    onClick={handleClickCompany}>\r\n                                    {pressedCompany ? 'Иннотех' : 'Иннотех'}\r\n                                </button>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {!isOpen ?\r\n\r\n                                    filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                                }\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n\r\n\r\n/*        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                    <div className=\"VacationsContainerTop\">\r\n\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                                <h2>Вакансии</h2>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate} onChange={handleStartDateChange}\r\n                                    />— <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate} onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n\r\n                                {isOpen ? (\r\n                                    vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                           department={vac.department} vacancies={vac.vacancies}\r\n                                                           users={departId.users}/>\r\n                                        </div>\r\n                                    ))\r\n                                ) : ''}\r\n\r\n                                {filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                       vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>*/\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}