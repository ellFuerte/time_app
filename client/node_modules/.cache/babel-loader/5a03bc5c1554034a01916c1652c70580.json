{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [activeDepartment, setActiveDepartment] = useState(7);\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n\n        if (res.data && res.data.length > 0) {\n          setDep(res.data);\n        } else {\n          setDep([]);\n        }\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n\n    getDeps();\n  }, []);\n\n  const handleDepartmentClick = departmentId => {\n    setActiveDepartment(departmentId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              onClick: () => handleDepartmentClick(node.department_tree_to_json.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: activeDepartment !== node.department_tree_to_json.id,\n              children: node.department_tree_to_json.Subclasses.map(department => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${department.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: department.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 57\n                  }, this)\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 53\n                }, this),\n                defaultCollapsed: true,\n                children: !!department.Subclasses && department.Subclasses.map(subDepartment => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${subDepartment.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: subDepartment.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 65\n                    }, this)\n                  }, subDepartment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 61\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!subDepartment.Subclasses && subDepartment.Subclasses.map(subSubDepartment => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${subSubDepartment.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: subSubDepartment.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 65\n                    }, this)\n                  }, subSubDepartment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 61\n                  }, this))\n                }, subDepartment.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 53\n                }, this))\n              }, department.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"iX4+JZoEnT/13XpJninjFNAoPq0=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","activeDepartment","setActiveDepartment","getDeps","res","get","data","length","error","console","handleDepartmentClick","departmentId","map","node","i","label","department_tree_to_json","id","Name","Subclasses","department","subDepartment","subSubDepartment","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [activeDepartment, setActiveDepartment] = useState(7);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                if (res.data && res.data.length > 0) {\r\n                    setDep(res.data);\r\n                } else {\r\n                    setDep([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const handleDepartmentClick = (departmentId) => {\r\n        setActiveDepartment(departmentId);\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => {\r\n                                const label = (\r\n                                    <Link\r\n                                        to={`/department/${node.department_tree_to_json.id}`}\r\n                                        className='level1'\r\n                                        onClick={() => handleDepartmentClick(node.department_tree_to_json.id)}\r\n                                    >\r\n                                        <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                    </Link>\r\n                                );\r\n\r\n                                return (\r\n                                    <TreeView\r\n                                        key={node.department_tree_to_json.Name + '|' + i}\r\n                                        nodeLabel={label}\r\n                                        defaultCollapsed={activeDepartment !== node.department_tree_to_json.id}\r\n                                    >\r\n                                        {node.department_tree_to_json.Subclasses.map((department) => (\r\n                                            <TreeView\r\n                                                key={department.id}\r\n                                                nodeLabel={(\r\n                                                    <Link\r\n                                                        to={`/department/${department.id}`}\r\n                                                        className='depsUser'\r\n                                                        key={department.id}\r\n                                                    >\r\n                                                        <span className=\"node\">{department.Name}</span>\r\n                                                    </Link>\r\n                                                )}\r\n                                                defaultCollapsed={true}\r\n                                            >\r\n                                                {!!department.Subclasses && department.Subclasses.map((subDepartment) => (\r\n                                                    <TreeView\r\n                                                        key={subDepartment.id}\r\n                                                        nodeLabel={(\r\n                                                            <Link\r\n                                                                to={`/department/${subDepartment.id}`}\r\n                                                                className='depsUser'\r\n                                                                key={subDepartment.id}\r\n                                                            >\r\n                                                                <span className=\"node\">{subDepartment.Name}</span>\r\n                                                            </Link>\r\n                                                        )}\r\n                                                        defaultCollapsed={true}\r\n                                                    >\r\n                                                        {!!subDepartment.Subclasses && subDepartment.Subclasses.map((subSubDepartment) => (\r\n                                                            <Link\r\n                                                                to={`/department/${subSubDepartment.id}`}\r\n                                                                className='depsUser'\r\n                                                                key={subSubDepartment.id}\r\n                                                            >\r\n                                                                <div style={{ paddingBottom: '8px' }}>\r\n                                                                    {subSubDepartment.Name}\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        ))}\r\n                                                    </TreeView>\r\n                                                ))}\r\n                                            </TreeView>\r\n                                        ))}\r\n                                    </TreeView>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}