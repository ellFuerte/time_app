{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\pages\\\\Reports\\\\Reports.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Topbar from '../../components/Topbar/Topbar';\nimport './Reports.css';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reports() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(30);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex);\n  const historyStartWork = useRef(null);\n  const historyEndWork = useRef(null);\n  const [isFilter, setIsFilter] = useState(false);\n  const [newPosts, setNewPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [modalError, setModalError] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const [vacationPosts, setVacationPosts] = useState([]);\n  const [isJob, setIsJob] = useState(true);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalName, setModalName] = useState(null);\n  const modalComment = useRef();\n  const vacationStart = useRef();\n  const vacationEnd = useRef();\n\n  const handleClick = async () => {\n    const start = historyStartWork.current.value;\n    const end = historyEndWork.current.value;\n\n    if (start === \"\" || end === \"\") {\n      setError('Введите дату');\n    } else {\n      if (start !== '' || end !== '') {\n        setError('Выберите дату');\n      }\n\n      if (end < start) {\n        setError('Конечная дата меньше начальной');\n      } else {\n        const filter = {\n          startdate: historyStartWork.current.value,\n          enddate: historyEndWork.current.value,\n          userId: localUser._id,\n          typework: isJob\n        };\n        setError('');\n\n        const fill = async () => {\n          const res = await axios.post('/api/post/filter', filter);\n          console.log(res);\n          setVacationPosts(res.data.sort((p1, p2) => {\n            return new Date(p2.workstart) - new Date(p1.workstart);\n          }));\n          setPosts(res.data.sort((p1, p2) => {\n            return new Date(p2.workstart) - new Date(p1.workstart);\n          }));\n          /*handleClickCancel()*/\n\n          setError('');\n        };\n\n        fill();\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n        className: \"ModalInput\",\n        ref: historyStartWork,\n        style: {\n          'marginRight': '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n        className: \"ModalInput\",\n        ref: historyEndWork,\n        style: {\n          'marginRight': '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n}\n\n_s(Reports, \"CA0yIaFnwOA02QtnmR5QVjn4HWI=\", false, function () {\n  return [useParams];\n});\n\n_c = Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/pages/Reports/Reports.jsx"],"names":["React","useRef","useState","Topbar","Sidebar","axios","useParams","Reports","posts","setPosts","isFetching","setIsFetching","currentPage","setCurrentPage","postsPerPage","lastPostIndex","firstPostIndex","currentlyPosts","slice","historyStartWork","historyEndWork","isFilter","setIsFilter","newPosts","setNewPosts","error","setError","modalError","setModalError","username","localUser","_id","email","JSON","parse","localStorage","getItem","vacationPosts","setVacationPosts","isJob","setIsJob","modalActive","setModalActive","modalName","setModalName","modalComment","vacationStart","vacationEnd","handleClick","start","current","value","end","filter","startdate","enddate","userId","typework","fill","res","post","console","log","data","sort","p1","p2","Date","workstart"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport './Reports.css'\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport default function Reports() {\r\n    const [posts, setPosts] = useState([])\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [newPosts, setNewPosts] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [modalError, setModalError] = useState('')\r\n\r\n    const username=useParams()\r\n\r\n    let localUser = !!username ? {_id:username.username,email:\"\"} : JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n    const [vacationPosts, setVacationPosts] = useState([])\r\n    const [isJob, setIsJob] = useState(true)\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalName, setModalName] = useState(null)\r\n    const modalComment = useRef()\r\n    const vacationStart = useRef()\r\n    const vacationEnd = useRef()\r\n    \r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\" ) {\r\n            setError('Введите дату')\r\n        } else{\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')}\r\n            if (end< start) {\r\n                setError('Конечная дата меньше начальной')}\r\n\r\n            else{\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                    userId: localUser._id,\r\n                    typework:isJob\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/filter',filter)\r\n                    console.log(res)\r\n                    setVacationPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n                    setPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n                    /*handleClickCancel()*/\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }}\r\n\r\n        return (\r\n        <>\r\n\r\n            <Topbar/>\r\n            <input\r\n                type='date'\r\n                placeholder=\"Начало работы\"\r\n                className=\"ModalInput\"\r\n                ref={historyStartWork}\r\n                style={{'marginRight': '10px'}}\r\n            />\r\n            <input\r\n                type='date'\r\n                placeholder=\"Конец работы\"\r\n                className=\"ModalInput\"\r\n                ref={historyEndWork}\r\n                style={{'marginRight': '10px'}}\r\n            />\r\n        </>\r\n    )\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}