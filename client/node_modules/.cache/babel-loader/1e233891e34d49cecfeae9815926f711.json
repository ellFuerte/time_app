{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [see_childs, setSee_child] = useState();\n  const [checked, setChecked] = useState(false);\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [UsersDep, setUsersDeps] = useState([]);\n  const [us, setUs] = useState([]);\n  const [user, setUser] = useState([]);\n  const [getUser, setGetUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [hideButtons, setHideButtons] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const depsId = useParams().username; // фильтр нужных департаментов\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep);\n  useEffect(() => {\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // получение всех пользователей\n    const fetchUsers = async () => {\n      const info = {\n        depsId: depsId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {}\n\n      console.log('dep_users=', dep_users);\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(dep_users);\n      setIsFetching(false);\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////////\n    //Вывод статистики для админов\n\n\n    const get_statistics_all_users = async () => {\n      if (localUser.isAdmin === true) {\n        const getUsers = {\n          id: localUser._id\n        };\n        const res = await axios.post('/api/get_statistics_all_users', getUsers);\n        const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let all_users = filterUsersFoo(all);\n\n        if (res.data[0].get_statistics_all_users[0]['all_users'] === null && !!~document.location.href.indexOf('/all_users/')) {\n          alert('Нет не одного пользователя в работе');\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && !!~document.location.href.indexOf('/not_working_today/')) {\n          alert('Сегодня все в работе');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && !!~document.location.href.indexOf('/not_worked_yesterday/')) {\n          alert('Вчера все работали');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && !!~document.location.href.indexOf('/sick_today/')) {\n          alert('Нет болеющих сегодня');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && !!~document.location.href.indexOf('/sick_yesterday')) {\n          alert('Вчера не было сотрудников на больничном');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && !!~document.location.href.indexOf('/vacation_today')) {\n          alert('На сегодня нет сотрудников в отпуске');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && !!~document.location.href.indexOf('/vacation_yesterday')) {\n          alert('Вчера не было сотрудников в отпуске');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (!!~document.location.href.indexOf('/all_users/')) {\n          setIsJob(isJob);\n          setStatisticsWork(all_users);\n        }\n\n        if (!!~document.location.href.indexOf('/not_working_today/')) {\n          if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['not_working_today'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n\n        if (!!~document.location.href.indexOf('/not_worked_yesterday/')) {\n          if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n\n        if (!!~document.location.href.indexOf('/sick_today/')) {\n          if (res.data[0].get_statistics_all_users[0]['sick_today'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['sick_today'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n\n        if (!!~document.location.href.indexOf('/sick_yesterday/')) {\n          if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['sick_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n\n        if (!!~document.location.href.indexOf('/vacation_today/')) {\n          if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['vacation_today'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n\n        if (!!~document.location.href.indexOf('/vacation_yesterday/')) {\n          if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null) {} else {\n            setIsJob(isJob);\n            const sort = res.data[0].get_statistics_all_users[0]['vacation_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sort));\n          }\n        }\n      }\n    }; // функция показывает нажата ли галочка показать дочернии\n\n\n    const statusChild = async () => {\n      const user = await axios.get('/api/user/' + localUser._id);\n      setChecked(user.data.see_child);\n      setSee_child(user.data.see_child);\n    }; // Функция фиксирует всех пользоватей если стоит галочка добавить дочернии в модальном окне\n\n\n    const get_users_by_depIsCheckedTrue = async () => {\n      const info = {\n        depsId: depsId\n      };\n      const addchild = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = addchild.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {\n        setUs([]);\n      } else {\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        const filterUsers = filterUsersFoo(dep_users);\n        setUs(filterUsers);\n      }\n    };\n\n    if (user.main_department === departId) {\n      setUsers([]);\n    } else {\n      setGetUser([]);\n      fetchUsers();\n      setIsOpen(false);\n    }\n\n    if (departId && !isOpen) {\n      setIsJob(isJob);\n    } else {\n      setIsJob(!isJob);\n    }\n\n    get_users_by_depIsCheckedTrue();\n    get_statistics_all_users();\n    statusChild();\n  }, [departId]); //Сортировка пользователей по статусам\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  } // Добавление дочерних по checkbox\n\n\n  const clickcheckbox = async () => {\n    setChecked(!checked);\n    const info = {\n      userId: localUser._id,\n      ischeked: !checked\n    };\n    await axios.post('/api/statusChild/', info);\n    const inf = {\n      depsId: depsId\n    };\n    const res = await axios.post('/api/get_users_by_dep/', inf);\n    const dep_users = res.data[0]['get_users_by_dep'];\n\n    if (dep_users === null) {\n      setUs([]);\n    } else {\n      dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(dep_users);\n      setUs(filterUsers);\n    }\n\n    if (checked === true) {\n      setIsJob(!isJob);\n    }\n\n    if (!checked === false) {\n      setIsJob(isJob);\n    }\n  }; // Обновляем main department по кнопке изменить в модальном окне\n\n\n  const handleModalClick = async () => {\n    const add = {\n      id: localUser._id,\n      depsId: depsId\n    };\n    const res = await axios.put('/api/user', add);\n    setModalMain(false);\n  }; // Функция get_users_by_dep по кнопке показать дочернии\n\n\n  const get_users_by_depIsOpen = async () => {\n    if (checked === true) {\n      setUs([]);\n    } else {}\n\n    if (isJob) {\n      const info = {\n        depsId: depsId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {} else {\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let filterUsers = filterUsersFoo(dep_users);\n        setUsersDeps(filterUsers);\n        setIsOpen(true);\n        setIsJob(!isJob);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: !hideButtons ? 'staff' : 'stafff',\n    children: [departId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!hideButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = `/department/${departId}`,\n          className: \"btnStaff\",\n          children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: get_users_by_depIsOpen,\n          className: \"btnStaff\",\n          style: {\n            width: '155px'\n          },\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalMain(true),\n          className: \"btnStaff\",\n          style: {\n            float: 'right'\n          },\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 40\n      }, this) : '']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 58\n      }, this)), !departId ? statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 56\n      }, this)) : '', checked && !hideButtons ? us.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 48\n      }, this)) : '', !!isOpen && !hideButtons ? UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 52\n      }, this)) : \"\", !!getUser ? getUser.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 51\n      }, this)) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: clickcheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"LMpsKTrVj9GwB3HovQLxJeNRRic=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","see_childs","setSee_child","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","UsersDep","setUsersDeps","us","setUs","user","setUser","getUser","setGetUser","deps","setDeps","isOpen","setIsOpen","hideButtons","setHideButtons","isJob","setIsJob","isFetching","setIsFetching","modalMain","setModalMain","departId","username","localUser","JSON","parse","localStorage","getItem","depsId","currentDep","filter","dep","_id","departmentId","filterDeps","find","i","dep_id","push","fetchUsers","info","res","post","dep_users","data","console","log","sort","a","b","user_name","localeCompare","filterUsers","filterUsersFoo","get_statistics_all_users","isAdmin","getUsers","id","all","all_users","document","location","href","indexOf","alert","window","main_department","statusChild","get","see_child","get_users_by_depIsCheckedTrue","addchild","status","concat","clickcheckbox","userId","ischeked","inf","handleModalClick","add","put","get_users_by_depIsOpen","width","float","map"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAIA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BR,QAAQ,EAA3C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,YAAX,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACiB,EAAD,EAAKC,KAAL,IAAclB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMmC,QAAQ,GAAG/B,SAAS,GAAGgC,QAA7B;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACA,QAAMC,MAAM,GAAGtC,SAAS,GAAGgC,QAA3B,CAnB4B,CAsB5B;;AACA,QAAMO,UAAU,GAAGpB,IAAI,CAACqB,MAAL,CAAYC,GAAG,IAAIV,QAAQ,GAAGU,GAAG,CAACC,GAAJ,KAAYX,QAAf,GAA0BU,GAAG,CAACC,GAAJ,KAAYT,SAAS,CAACU,YAA3E,CAAnB;AACA,MAAIC,UAAU,GAAGzB,IAAI,CAACqB,MAAL,CAAYC,GAAG,IAAIF,UAAU,CAACM,IAAX,CAAgBC,CAAC,IAAIA,CAAC,KAAKL,GAAG,CAACM,MAAV,IAAoBD,CAAC,KAAKP,UAAU,CAAC,CAAD,CAAV,CAAcQ,MAA7D,CAAnB,CAAjB;AACAH,EAAAA,UAAU,CAACI,IAAX,CAAgB,GAAGT,UAAnB;AAEA5C,EAAAA,SAAS,CAAC,MAAM;AAEpB;AACQ;AACA,UAAMsD,UAAU,GAAG,YAAY;AAE3B,YAAMC,IAAI,GAAG;AACTZ,QAAAA,MAAM,EAAEA;AADC,OAAb;AAGA,YAAMa,GAAG,GAAG,MAAMtD,KAAK,CAACuD,IAAN,CAAW,wBAAX,EAAqCF,IAArC,CAAlB;AACA,YAAMG,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,kBAAZ,CAAlB;;AACZ,UAAGD,SAAS,KAAG,IAAf,EAAoB,CAEnB;;AACWE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,SAAzB;AACAF,MAAAA,GAAG,CAACG,IAAJ,CAASG,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAxB;AACA,UAAIE,WAAW,GAAGC,cAAc,CAACZ,GAAG,CAACG,IAAL,CAAhC;AACA5C,MAAAA,QAAQ,CAAC2C,SAAD,CAAR;AACAzB,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,KAhBD,CAJY,CAsBpB;AACQ;;;AACA,UAAMoC,wBAAwB,GAAG,YAAY;AAEzC,UAAI/B,SAAS,CAACgC,OAAV,KAAsB,IAA1B,EAAgC;AAC5B,cAAMC,QAAQ,GAAG;AACbC,UAAAA,EAAE,EAAElC,SAAS,CAACS;AADD,SAAjB;AAGA,cAAMS,GAAG,GAAG,MAAMtD,KAAK,CAACuD,IAAN,CAAW,+BAAX,EAA4Cc,QAA5C,CAAlB;AACA,cAAME,GAAG,GAAGjB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,WAAxC,EAAqDP,IAArD,CAA0D,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAApE,CAAZ;AAEA,YAAIS,SAAS,GAAGN,cAAc,CAACK,GAAD,CAA9B;;AAEA,YAAIjB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,WAAxC,MAAyD,IAAzD,IAAiE,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,aAA/B,CAAxE,EAAuH;AACnHC,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;;AACD,YAAIvB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,mBAAxC,MAAiE,IAAjE,IAAyE,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,qBAA/B,CAAhF,EAAuI;AACnIC,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAACU,YAAa,EAA7D;AACH;;AACD,YAAIQ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,sBAAxC,MAAoE,IAApE,IAA4E,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,wBAA/B,CAAnF,EAA6I;AACzIC,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAACU,YAAa,EAA7D;AACH;;AACD,YAAIQ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,YAAxC,MAA0D,IAA1D,IAAkE,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,cAA/B,CAAzE,EAAyH;AACrHC,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAACU,YAAa,EAA7D;AACH;;AACD,YAAIQ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,MAA8D,IAA9D,IAAsE,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,iBAA/B,CAA7E,EAAgI;AAC5HC,UAAAA,KAAK,CAAC,yCAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAAC2C,eAAgB,EAAhE;AACH;;AACD,YAAIzB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,MAA8D,IAA9D,IAAsE,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,iBAA/B,CAA7E,EAAgI;AAC5HC,UAAAA,KAAK,CAAC,sCAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAAC2C,eAAgB,EAAhE;AACH;;AACD,YAAIzB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,oBAAxC,MAAkE,IAAlE,IAA0E,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,qBAA/B,CAAjF,EAAwI;AACpIC,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACAC,UAAAA,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAcvC,SAAS,CAAC2C,eAAgB,EAAhE;AACH;;AACD,YAAI,CAAC,CAAC,CAACN,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,aAA/B,CAAP,EAAsD;AAC9C/C,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACAjB,UAAAA,iBAAiB,CAAC6D,SAAD,CAAjB;AACP;;AACD,YAAI,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,qBAA/B,CAAP,EAA8D;AAC1D,cAAGtB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,mBAAxC,MAA+D,IAAlE,EAAuE,CAEtE,CAFD,MAEK;AACDtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,mBAAxC,EAA6DP,IAA7D,CAAkE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAA5E,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;;AAED,YAAI,CAAC,CAAC,CAACa,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,wBAA/B,CAAP,EAAiE;AAC7D,cAAItB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,sBAAxC,MAAoE,IAAxE,EAA8E,CAE7E,CAFD,MAEO;AACHtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,sBAAxC,EAAgEP,IAAhE,CAAqE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAA/E,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;;AAED,YAAI,CAAC,CAAC,CAACa,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,cAA/B,CAAP,EAAuD;AACnD,cAAGtB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,YAAxC,MAAwD,IAA3D,EACA,CAEC,CAHD,MAGK;AACDtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,YAAxC,EAAsDP,IAAtD,CAA2D,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAArE,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;;AAED,YAAI,CAAC,CAAC,CAACa,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,kBAA/B,CAAP,EAA2D;AACvD,cAAGtB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,MAA4D,IAA/D,EACA,CAEC,CAHD,MAGK;AACDtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,EAA0DP,IAA1D,CAA+D,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAzE,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;;AAED,YAAI,CAAC,CAAC,CAACa,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,kBAA/B,CAAP,EAA2D;AACvD,cAAGtB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,MAA4D,IAA/D,EACA,CAEC,CAHD,MAGK;AACDtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,gBAAxC,EAA0DP,IAA1D,CAA+D,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAzE,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;;AAED,YAAI,CAAC,CAAC,CAACa,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,sBAA/B,CAAP,EAA+D;AAC3D,cAAGtB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,oBAAxC,MAAgE,IAAnE,EACA,CAEC,CAHD,MAGK;AACDtC,YAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,kBAAMgC,IAAI,GAAGN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,wBAAZ,CAAqC,CAArC,EAAwC,oBAAxC,EAA8DP,IAA9D,CAAmE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAA7E,CAAb;AACApD,YAAAA,iBAAiB,CAACuD,cAAc,CAACN,IAAD,CAAf,CAAjB;AACH;AACJ;AACJ;AACJ,KA1GD,CAxBY,CAqIZ;;;AACA,UAAMoB,WAAW,GAAG,YAAY;AAC5B,YAAM9D,IAAI,GAAG,MAAMlB,KAAK,CAACiF,GAAN,CAAU,eAAe7C,SAAS,CAACS,GAAnC,CAAnB;AACApC,MAAAA,UAAU,CAACS,IAAI,CAACuC,IAAL,CAAUyB,SAAX,CAAV;AACA3E,MAAAA,YAAY,CAACW,IAAI,CAACuC,IAAL,CAAUyB,SAAX,CAAZ;AAEH,KALD,CAtIY,CA8IZ;;;AACA,UAAMC,6BAA6B,GAAE,YAAY;AAC7C,YAAM9B,IAAI,GAAG;AACTZ,QAAAA,MAAM,EAAEA;AADC,OAAb;AAGA,YAAM2C,QAAQ,GAAG,MAAMpF,KAAK,CAACuD,IAAN,CAAW,wBAAX,EAAqCF,IAArC,CAAvB;AAEA,YAAMG,SAAS,GAAG4B,QAAQ,CAAC3B,IAAT,CAAc,CAAd,EAAiB,kBAAjB,CAAlB;;AACA,UAAID,SAAS,KAAK,IAAlB,EAAwB;AACpBvC,QAAAA,KAAK,CAAC,EAAD,CAAL;AACH,OAFD,MAEO;AACHuC,QAAAA,SAAS,CAACI,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAzB;AACA,cAAME,WAAW,GAAGC,cAAc,CAACV,SAAD,CAAlC;AACAvC,QAAAA,KAAK,CAACgD,WAAD,CAAL;AACH;AACJ,KAdD;;AAgBA,QAAI/C,IAAI,CAAC6D,eAAL,KAAyB7C,QAA7B,EAAuC;AACnCrB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,KAHD,MAGO;AACHQ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA+B,MAAAA,UAAU;AACV3B,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;;AACT,QAAGS,QAAQ,IAAI,CAACV,MAAhB,EAAuB;AACnBK,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAFD,MAEK;AACDC,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH;;AACOuD,IAAAA,6BAA6B;AAC7BhB,IAAAA,wBAAwB;AACxBa,IAAAA,WAAW;AAEd,GAhLQ,EAgLN,CAAC9C,QAAD,CAhLM,CAAT,CA3B4B,CA8M5B;;AACA,WAASgC,cAAT,CAAwBtD,KAAxB,EAA+B;AAC3B,WAAOA,KAAK,CAAC+B,MAAN,CAAazB,IAAI,IAAIA,IAAI,CAACmE,MAAL,KAAgB,CAArC,EACFC,MADE,CACK1E,KAAK,CAAC+B,MAAN,CAAazB,IAAI,IAAIA,IAAI,CAACmE,MAAL,KAAgB,CAArC,CADL,EAEFC,MAFE,CAEK1E,KAAK,CAAC+B,MAAN,CAAazB,IAAI,IAAIA,IAAI,CAACmE,MAAL,KAAgB,CAArC,CAFL,EAGFC,MAHE,CAGK1E,KAAK,CAAC+B,MAAN,CAAazB,IAAI,IAAIA,IAAI,CAACmE,MAAL,KAAgB,CAAhB,IAAqBnE,IAAI,CAACmE,MAAL,KAAgB,CAArC,IAA0CnE,IAAI,CAACmE,MAAL,KAAgB,CAA1D,IAA+DnE,IAAI,CAACmE,MAAL,KAAgB,CAApG,CAHL,EAIFC,MAJE,CAIK1E,KAAK,CAAC+B,MAAN,CAAazB,IAAI,IAAIA,IAAI,CAACmE,MAAL,KAAgB,CAArC,CAJL,CAAP;AAKH,GArN2B,CAwN5B;;;AACA,QAAME,aAAa,GAAG,YAAY;AAC9B9E,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEA,UAAM6C,IAAI,GAAG;AACTmC,MAAAA,MAAM,EAAEpD,SAAS,CAACS,GADT;AAET4C,MAAAA,QAAQ,EAAE,CAACjF;AAFF,KAAb;AAIA,UAAMR,KAAK,CAACuD,IAAN,CAAW,mBAAX,EAAgCF,IAAhC,CAAN;AAEA,UAAMqC,GAAG,GAAG;AACRjD,MAAAA,MAAM,EAAEA;AADA,KAAZ;AAGA,UAAMa,GAAG,GAAG,MAAMtD,KAAK,CAACuD,IAAN,CAAW,wBAAX,EAAqCmC,GAArC,CAAlB;AACA,UAAMlC,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,kBAAZ,CAAlB;;AAEA,QAAID,SAAS,KAAK,IAAlB,EAAwB;AACpBvC,MAAAA,KAAK,CAAC,EAAD,CAAL;AACH,KAFD,MAEO;AACHuC,MAAAA,SAAS,CAACI,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAzB;AACA,UAAIE,WAAW,GAAGC,cAAc,CAACV,SAAD,CAAhC;AACAvC,MAAAA,KAAK,CAACgD,WAAD,CAAL;AACH;;AACD,QAAGzD,OAAO,KAAG,IAAb,EAAmB;AACfqB,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH;;AACD,QAAG,CAACpB,OAAD,KAAW,KAAd,EAAoB;AAChBqB,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GA5BD,CAzN4B,CAwP5B;;;AACA,QAAM+D,gBAAgB,GAAG,YAAY;AAEjC,UAAMC,GAAG,GAAG;AACRtB,MAAAA,EAAE,EAAElC,SAAS,CAACS,GADN;AAERJ,MAAAA,MAAM,EAAEA;AAFA,KAAZ;AAKA,UAAMa,GAAG,GAAG,MAAMtD,KAAK,CAAC6F,GAAN,CAAU,WAAV,EAAuBD,GAAvB,CAAlB;AACA3D,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GATD,CAzP4B,CAoQ5B;;;AACA,QAAM6D,sBAAsB,GAAG,YAAY;AAC3C,QAAGtF,OAAO,KAAG,IAAb,EAAkB;AACdS,MAAAA,KAAK,CAAC,EAAD,CAAL;AACH,KAFD,MAEK,CAEJ;;AACG,QAAIW,KAAJ,EAAW;AACP,YAAMyB,IAAI,GAAG;AACTZ,QAAAA,MAAM,EAAEA;AADC,OAAb;AAGA,YAAMa,GAAG,GAAG,MAAMtD,KAAK,CAACuD,IAAN,CAAW,wBAAX,EAAqCF,IAArC,CAAlB;AACA,YAAMG,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,kBAAZ,CAAlB;;AAEA,UAAID,SAAS,KAAK,IAAlB,EAAwB,CAEvB,CAFD,MAEO;AACHA,QAAAA,SAAS,CAACI,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAzB;AACA,YAAIE,WAAW,GAAGC,cAAc,CAACV,SAAD,CAAhC;AACAzC,QAAAA,YAAY,CAACkD,WAAD,CAAZ;AACAxC,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,QAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAEH;AACJ;AACJ,GAxBD;;AA6BA,sBAEI;AAAK,IAAA,SAAS,EAAE,CAACF,WAAD,GAAa,OAAb,GAAqB,QAArC;AAAA,eACKQ,QAAQ,iBACL;AAAA,iBACK,CAACR,WAAD,iBACG;AAAA,mBACK,CAACE,KAAD,gBACG;AAAQ,UAAA,OAAO,EAAE,MAAMkD,MAAM,CAACJ,QAAP,CAAgBC,IAAhB,GAAwB,eAAczC,QAAS,EAAtE;AAAyE,UAAA,SAAS,EAAC,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAMG;AAAQ,UAAA,OAAO,EAAE4D,sBAAjB;AAAyC,UAAA,SAAS,EAAC,UAAnD;AAA8D,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPR,eAWI;AAAQ,UAAA,OAAO,EAAE,MAAM9D,YAAY,CAAC,IAAD,CAAnC;AAA2C,UAAA,SAAS,EAAC,UAArD;AAAgE,UAAA,KAAK,EAAE;AAAE+D,YAAAA,KAAK,EAAE;AAAT,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,sBAFR,EAiBK5D,SAAS,CAACgC,OAAV,gBAAkB,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,iBAAX;AAAA,+BAA6B;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAlB,GAA8G,EAjBnH;AAAA,oBAFR,eA8BI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBAGqBxD,KAAK,CAACqF,GAAN,CAAU,CAAC/E,IAAD,EAAOoD,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAEpD;AAAzB,SAAeoD,EAAf;AAAA;AAAA;AAAA;AAAA,cAAxB,CAHrB,EAOK,CAACpC,QAAD,GACKxB,cAAc,CAACuF,GAAf,CAAmB,CAAC/E,IAAD,EAAOoD,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAEpD;AAAzB,SAAeoD,EAAf;AAAA;AAAA;AAAA;AAAA,cAAjC,CADL,GAEI,EATT,EAeQ9D,OAAO,IAAI,CAACkB,WAAZ,GACMV,EAAE,CAACiF,GAAH,CAAO,CAAC/E,IAAD,EAAOoD,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAEpD;AAAzB,SAAeoD,EAAf;AAAA;AAAA;AAAA;AAAA,cAArB,CADN,GAEM,EAjBd,EAqBQ,CAAC,CAAC9C,MAAF,IAAY,CAACE,WAAb,GAEIZ,QAAQ,CAACmF,GAAT,CAAa,CAAC/E,IAAD,EAAOoD,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAEpD;AAAzB,SAAeoD,EAAf;AAAA;AAAA;AAAA;AAAA,cAA3B,CAFJ,GAGM,EAxBd,EA4BQ,CAAC,CAAClD,OAAF,GAEIA,OAAO,CAAC6E,GAAR,CAAY,CAAC/E,IAAD,EAAOoD,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAEpD;AAAzB,SAAeoD,EAAf;AAAA;AAAA;AAAA;AAAA,cAA1B,CAFJ,GAGM,EA/Bd;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAiEI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEtC,SAAf;AAA0B,MAAA,SAAS,EAAEC,YAArC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACI;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,QAAQ,EAAEsD,aAFd;AAGI,YAAA,OAAO,EAAE/E;AAHb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,IAAI,EAAC,QAA/C;AAAwD,UAAA,QAAQ,EAAEsB,UAAlE;AAA8E,UAAA,OAAO,EAAE6D,gBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsFH;;GAxXuBtF,K;UAiBHF,S,EAEFA,S;;;KAnBKE,K","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [see_childs, setSee_child] = useState()\r\n    const [checked, setChecked] = useState(false)\r\n    const [statisticsWork, setStatisticsWork] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [UsersDep, setUsersDeps] = useState([])\r\n    const [us, setUs] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [getUser, setGetUser] = useState([])\r\n    const [deps, setDeps] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const [hideButtons, setHideButtons] = useState(false)\r\n\r\n    const [isJob, setIsJob] = useState(true)\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [modalMain, setModalMain] = useState(false)\r\n    const departId = useParams().username\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const depsId = useParams().username\r\n\r\n\r\n    // фильтр нужных департаментов\r\n    const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n    let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n    filterDeps.push(...currentDep)\r\n\r\n    useEffect(() => {\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // получение всех пользователей\r\n        const fetchUsers = async () => {\r\n\r\n            const info = {\r\n                depsId: depsId\r\n            }\r\n            const res = await axios.post('/api/get_users_by_dep/', info)\r\n            const dep_users = res.data[0]['get_users_by_dep']\r\nif(dep_users===null){\r\n\r\n}\r\n            console.log('dep_users=',dep_users)\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n            let filterUsers = filterUsersFoo(res.data)\r\n            setUsers(dep_users)\r\n            setIsFetching(false)\r\n\r\n        }\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////\r\n        //Вывод статистики для админов\r\n        const get_statistics_all_users = async () => {\r\n\r\n            if (localUser.isAdmin === true) {\r\n                const getUsers = {\r\n                    id: localUser._id\r\n                }\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers)\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n\r\n                let all_users = filterUsersFoo(all)\r\n\r\n                if (res.data[0].get_statistics_all_users[0]['all_users'] === null && !!~document.location.href.indexOf('/all_users/')) {\r\n                    alert('Нет не одного пользователя в работе')\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && !!~document.location.href.indexOf('/not_working_today/')) {\r\n                    alert('Сегодня все в работе')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && !!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    alert('Вчера все работали')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && !!~document.location.href.indexOf('/sick_today/')) {\r\n                    alert('Нет болеющих сегодня')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && !!~document.location.href.indexOf('/sick_yesterday')) {\r\n                    alert('Вчера не было сотрудников на больничном')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && !!~document.location.href.indexOf('/vacation_today')) {\r\n                    alert('На сегодня нет сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && !!~document.location.href.indexOf('/vacation_yesterday')) {\r\n                    alert('Вчера не было сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (!!~document.location.href.indexOf('/all_users/')) {\r\n                        setIsJob(isJob)\r\n                        setStatisticsWork(all_users)\r\n                }\r\n                if (!!~document.location.href.indexOf('/not_working_today/')) {\r\n                    if(res.data[0].get_statistics_all_users[0]['not_working_today']===null){\r\n\r\n                    }else{\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_working_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_today/')) {\r\n                    if(res.data[0].get_statistics_all_users[0]['sick_today']===null)\r\n                    {\r\n\r\n                    }else{\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_yesterday/')) {\r\n                    if(res.data[0].get_statistics_all_users[0]['sick_yesterday']===null)\r\n                    {\r\n\r\n                    }else{\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_today/')) {\r\n                    if(res.data[0].get_statistics_all_users[0]['vacation_today']===null)\r\n                    {\r\n\r\n                    }else{\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_yesterday/')) {\r\n                    if(res.data[0].get_statistics_all_users[0]['vacation_yesterday']===null)\r\n                    {\r\n\r\n                    }else{\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // функция показывает нажата ли галочка показать дочернии\r\n        const statusChild = async () => {\r\n            const user = await axios.get('/api/user/' + localUser._id)\r\n            setChecked(user.data.see_child)\r\n            setSee_child(user.data.see_child)\r\n\r\n        }\r\n\r\n\r\n        // Функция фиксирует всех пользоватей если стоит галочка добавить дочернии в модальном окне\r\n        const get_users_by_depIsCheckedTrue= async () => {\r\n            const info = {\r\n                depsId: depsId\r\n            }\r\n            const addchild = await axios.post('/api/get_users_by_dep/', info)\r\n\r\n            const dep_users = addchild.data[0]['get_users_by_dep']\r\n            if (dep_users === null) {\r\n                setUs([])\r\n            } else {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                const filterUsers = filterUsersFoo(dep_users)\r\n                setUs(filterUsers)\r\n            }\r\n        }\r\n\r\n        if (user.main_department === departId) {\r\n            setUsers([])\r\n\r\n        } else {\r\n            setGetUser([])\r\n            fetchUsers()\r\n            setIsOpen(false)\r\n        }\r\nif(departId && !isOpen){\r\n    setIsJob(isJob)\r\n}else{\r\n    setIsJob(!isJob)\r\n}\r\n        get_users_by_depIsCheckedTrue()\r\n        get_statistics_all_users()\r\n        statusChild()\r\n\r\n    }, [departId])\r\n\r\n\r\n    //Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4))\r\n    }\r\n\r\n\r\n    // Добавление дочерних по checkbox\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked);\r\n\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n        const inf = {\r\n            depsId: depsId\r\n        };\r\n        const res = await axios.post('/api/get_users_by_dep/', inf);\r\n        const dep_users = res.data[0]['get_users_by_dep'];\r\n\r\n        if (dep_users === null) {\r\n            setUs([]);\r\n        } else {\r\n            dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            let filterUsers = filterUsersFoo(dep_users);\r\n            setUs(filterUsers);\r\n        }\r\n        if(checked===true) {\r\n            setIsJob(!isJob)\r\n        }\r\n        if(!checked===false){\r\n            setIsJob(isJob)\r\n        }\r\n    }\r\n\r\n\r\n    // Обновляем main department по кнопке изменить в модальном окне\r\n    const handleModalClick = async () => {\r\n\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: depsId\r\n        }\r\n\r\n        const res = await axios.put('/api/user', add)\r\n        setModalMain(false)\r\n    }\r\n\r\n    // Функция get_users_by_dep по кнопке показать дочернии\r\n    const get_users_by_depIsOpen = async () => {\r\n    if(checked===true){\r\n        setUs([])\r\n    }else{\r\n\r\n    }\r\n        if (isJob) {\r\n            const info = {\r\n                depsId: depsId\r\n            }\r\n            const res = await axios.post('/api/get_users_by_dep/', info)\r\n            const dep_users = res.data[0]['get_users_by_dep']\r\n\r\n            if (dep_users === null) {\r\n\r\n            } else {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                let filterUsers = filterUsersFoo(dep_users)\r\n                setUsersDeps(filterUsers)\r\n                setIsOpen(true)\r\n                setIsJob(!isJob)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={!hideButtons?'staff':'stafff'}>\r\n            {departId && (\r\n                <>\r\n                    {!hideButtons && (\r\n                        <>\r\n                            {!isJob ? (\r\n                                <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\">\r\n                                    Скрыть дочерние\r\n                              </button>\r\n                            ) : (\r\n\r\n                                <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                                    Показать дочерние\r\n                                </button>\r\n                            )}\r\n                            <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n                        </>\r\n                    )}\r\n\r\n                    {localUser.isAdmin?<Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link>:''}\r\n\r\n{/*                    {localUser.isAdmin ? <button className=\"btnStaff\" onClick={hideButtons ? handleReturn : handleShowVacancies} style={{ width: '155px' }}>\r\n                        {hideButtons ? 'Вернуться' : 'Показать вакансии'}</button>:''}*/}\r\n\r\n\r\n                    {/*{hideButtons && (localUser || username === localUser._id) && !openAdd && <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}*/}\r\n\r\n                </>\r\n            )}\r\n\r\n            <div className=\"employeeWrapper\">\r\n\r\n                {\r\n                                 users.map((user, id) => <Employee key={id} user={user}/>)\r\n\r\n                }\r\n\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n\r\n\r\n                {\r\n                    checked && !hideButtons\r\n                        ? us.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : ''\r\n                }\r\n\r\n                {\r\n                    !!isOpen && !hideButtons\r\n                        ?\r\n                        UsersDep.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : \"\"\r\n                }\r\n\r\n                {\r\n                    !!getUser\r\n                        ?\r\n                        getUser.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : \"\"\r\n                }\r\n\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние</label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}