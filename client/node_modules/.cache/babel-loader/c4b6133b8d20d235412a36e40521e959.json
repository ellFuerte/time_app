{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\pages\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport \"./Register.css\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const email = useRef();\n  const password = useRef();\n  const passwordAgain = useRef();\n  const username = useRef();\n  const department = useRef();\n  const [deps, setDeps] = useState([]);\n  const [error, setError] = useState('');\n  const [checkVal, setCheckVal] = useState(false);\n\n  const changeVal = e => {\n    setCheckVal(!checkVal);\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    if (password.current.value !== passwordAgain.current.value) {\n      passwordAgain.current.setCustomValidity('Пароли не совпадают');\n    } else if (department.current.value === '') {\n      setError('Не все поля заполнены');\n      return;\n    } else {\n      const user = {\n        user_name: username.current.value,\n        email: email.current.value.toUpperCase(),\n        department_id: department.current.value,\n        password: password.current.value,\n        isadmin: checkVal\n      };\n      const res = await axios.post('/api/Register/', user);\n\n      if (res.data.status === \"Username taken\") {\n        setError(\"Такой email уже существует\");\n      } else {\n        await axios.post('/api/Register/', user);\n        history.push('/login');\n      }\n    }\n  };\n\n  function handleSubmit() {\n    setCount(count + 1);\n\n    if (count <= 0) {\n      setError('Email должен содержать формат домена vtb');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"\\u041D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginCenter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            className: \"loginInput\",\n            type: \"emailLogin\",\n            ref: email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            className: \"loginInput\",\n            ref: password,\n            required: true,\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            type: \"submit\",\n            disabled: isFetching,\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 31\n            }, this) : 'Войти'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            style: {\n              width: '167%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"loginRegisterButton\",\n              disabled: isFetching,\n              children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this) : 'Создать новый аккаунт'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"ldUrsxn+tYpiCxv6VlSz8oWM+KI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/time_app/client/src/pages/Register/Register.jsx"],"names":["axios","useEffect","useRef","useState","Link","useHistory","CircularProgress","Register","count","setCount","email","password","passwordAgain","username","department","deps","setDeps","error","setError","checkVal","setCheckVal","changeVal","e","history","getDeps","res","get","data","handleClick","preventDefault","current","value","setCustomValidity","user","user_name","toUpperCase","department_id","isadmin","post","status","push","handleSubmit","isFetching","color","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAgC,kBAAhC;AACA,OAAO,gBAAP;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,KAAK,GAAGR,MAAM,EAApB;AACA,QAAMS,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAMU,aAAa,GAAGV,MAAM,EAA5B;AACA,QAAMW,QAAQ,GAAGX,MAAM,EAAvB;AACA,QAAMY,UAAU,GAAGZ,MAAM,EAAzB;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMkB,SAAS,GAAIC,CAAD,IAAO;AACvBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAGA,QAAMI,OAAO,GAAGlB,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAU,mBAAV,CAAlB;AACAV,MAAAA,OAAO,CAACS,GAAG,CAACE,IAAL,CAAP;AACD,KAHD;;AAKAH,IAAAA,OAAO;AACR,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMI,WAAW,GAAG,MAAON,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAGlB,QAAQ,CAACmB,OAAT,CAAiBC,KAAjB,KAA2BnB,aAAa,CAACkB,OAAd,CAAsBC,KAApD,EAA0D;AACxDnB,MAAAA,aAAa,CAACkB,OAAd,CAAsBE,iBAAtB,CAAwC,qBAAxC;AACD,KAFD,MAEO,IAAGlB,UAAU,CAACgB,OAAX,CAAmBC,KAAnB,KAA6B,EAAhC,EAAmC;AACxCb,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACA;AACD,KAHM,MAGA;AAEL,YAAMe,IAAI,GAAG;AACXC,QAAAA,SAAS,EAAErB,QAAQ,CAACiB,OAAT,CAAiBC,KADjB;AAEXrB,QAAAA,KAAK,EAAEA,KAAK,CAACoB,OAAN,CAAcC,KAAd,CAAoBI,WAApB,EAFI;AAGXC,QAAAA,aAAa,EAAEtB,UAAU,CAACgB,OAAX,CAAmBC,KAHvB;AAIXpB,QAAAA,QAAQ,EAAEA,QAAQ,CAACmB,OAAT,CAAiBC,KAJhB;AAKXM,QAAAA,OAAO,EAAElB;AALE,OAAb;AAQE,YAAMM,GAAG,GAAG,MAAMzB,KAAK,CAACsC,IAAN,CAAW,gBAAX,EAA6BL,IAA7B,CAAlB;;AACA,UAAIR,GAAG,CAACE,IAAJ,CAASY,MAAT,KAAoB,gBAAxB,EAAyC;AACvCrB,QAAAA,QAAQ,CAAC,4BAAD,CAAR;AAED,OAHD,MAGK;AACH,cAAMlB,KAAK,CAACsC,IAAN,CAAW,gBAAX,EAA6BL,IAA7B,CAAN;AACAV,QAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACD;AAEJ;AACF,GA3BD;;AA4BA,WAASC,YAAT,GAAwB;AAC1BhC,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;;AACI,QAAGA,KAAK,IAAE,CAAV,EAAY;AACVU,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACD;AACF;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGD,KAAK,iBACN;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,QAAQ,EAAEW,WAArC;AAAA,kCACE;AACI,YAAA,WAAW,EAAC,OADhB;AAEI,YAAA,SAAS,EAAC,YAFd;AAGI,YAAA,IAAI,EAAC,YAHT;AAII,YAAA,GAAG,EAAElB,KAJT;AAKI,YAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACI,YAAA,WAAW,EAAC,UADhB;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,SAAS,EAAC,YAHd;AAII,YAAA,GAAG,EAAEC,QAJT;AAKI,YAAA,QAAQ,MALZ;AAMI,YAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,kBARF,eAgBE;AAAS,YAAA,SAAS,EAAC,aAAnB;AAAiC,YAAA,IAAI,EAAC,QAAtC;AAA+C,YAAA,QAAQ,EAAE+B,UAAzD;AAAA,sBAEGA,UAAU,gBAAG,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAC;AAAP;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAAH,GAAiD;AAF9D;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAuBE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAqB,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC;AAAP,aAA5B;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAwC,cAAA,QAAQ,EAAEF,UAAlD;AAAA,wBACGA,UAAU,gBAAG,QAAC,gBAAD;AAAkB,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAC;AAAP;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAAH,GAAiD;AAD9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CD;;GAtGuBpC,Q;UAaNF,U;;;KAbME,Q","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport \"./Register.css\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport default function Register() {\r\n  const [count, setCount] = useState(0)\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordAgain = useRef()\r\n  const username = useRef()\r\n  const department = useRef()\r\n  const [deps, setDeps] = useState([])\r\n  const [error, setError] = useState('')\r\n  const [checkVal, setCheckVal] = useState(false)\r\n  const changeVal = (e) => {\r\n    setCheckVal(!checkVal)\r\n  }\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const getDeps = async () => {\r\n      const res = await axios.get('/api/departments/')\r\n      setDeps(res.data)\r\n    }\r\n\r\n    getDeps()\r\n  }, [])\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault()\r\n    if(password.current.value !== passwordAgain.current.value){\r\n      passwordAgain.current.setCustomValidity('Пароли не совпадают')\r\n    } else if(department.current.value === ''){\r\n      setError('Не все поля заполнены')\r\n      return\r\n    } else {\r\n\r\n      const user = {\r\n        user_name: username.current.value,\r\n        email: email.current.value.toUpperCase(),\r\n        department_id: department.current.value,\r\n        password: password.current.value,\r\n        isadmin: checkVal\r\n      }\r\n\r\n        const res = await axios.post('/api/Register/', user)\r\n        if (res.data.status === \"Username taken\"){\r\n          setError(\"Такой email уже существует\")\r\n\r\n        }else{\r\n          await axios.post('/api/Register/', user)\r\n          history.push('/login')\r\n        }\r\n\r\n    }\r\n  }\r\n  function handleSubmit() {\r\nsetCount(count+1)\r\n    if(count<=0){\r\n      setError('Email должен содержать формат домена vtb')\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"login\">\r\n        {error  &&\r\n        <div className='error'>\r\n          Неправильный логин или пароль\r\n        </div>\r\n        }\r\n\r\n        <div className=\"loginWrapper\">\r\n          <div className=\"loginCenter\">\r\n            <form className=\"loginBox\" onSubmit={handleClick}>\r\n              <input\r\n                  placeholder=\"Email\"\r\n                  className=\"loginInput\"\r\n                  type='emailLogin'\r\n                  ref={email}\r\n                  required\r\n              />\r\n              <input\r\n                  placeholder=\"Password\"\r\n                  type='password'\r\n                  className=\"loginInput\"\r\n                  ref={password}\r\n                  required\r\n                  minLength='6'\r\n              />\r\n              <button  className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n\r\n                {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Войти'}\r\n\r\n              </button>\r\n\r\n              {/* <span className=\"loginForgot\">Забыли пароль?</span> */}\r\n              <Link to='/register' style={{width:'167%'}}>\r\n                <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n                  {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Создать новый аккаунт'}\r\n                </button>\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}