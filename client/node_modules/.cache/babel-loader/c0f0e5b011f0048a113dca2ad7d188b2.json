{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const fetchUserpost = async () => {\n    const res = await axios.get('/api/post?type=1&id=' + user.id);\n    console.log('RES___DATA=', res.data);\n    global.postend = '';\n    global.workstart = '';\n\n    try {\n      global.postend = res.data[0].workdate;\n      global.workstart = res.data[0].workstart;\n      console.log('res.data=', global.postend);\n    } catch {}\n\n    setPosts(res.data.sort((p1, p2) => {\n      return new Date(p2.workstart) - new Date(p1.workstart);\n    }));\n    setIsFetching(false);\n  };\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const setDat = new Date(); //Сегодняшнея дата\n\n  setDat.setDate(setDat.getDate()); //\n\n  const dat = setDat.toLocaleDateString(); //\n\n  /*  console.log(\"SETDATE\",dat)     */\n  //\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setDate.setDate(setDate.getDate() + 1);\n      const res = await axios.get('/api/vacation?id=' + user.id);\n      console.log('VACATION=', res.data);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        global.workdate = res.data[0].workdate;\n        global.worked = res.data[0].worked;\n        console.log(\"res.data[0].workdate=\", res.data[0].workdate);\n        setDateStart(global.workdate);\n        setDateEnd(global.worked);\n      }\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n\n    if (user.status === 7) {\n      fetchUser();\n    }\n\n    if (user.status === 6) {\n      fetchUser();\n    }\n\n    if (user.status === 5) {\n      fetchUser();\n    }\n\n    if (user.status === 2) {\n      fetchUserpost();\n    }\n  }, [user._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [user.status === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A:\", global.workdate, \"-\", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 41\n          }, this), user.status === 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u041E\\u0442\\u0433\\u0443\\u043B:\", global.workdate, \"-\", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 41\n          }, this), user.status === 7 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430:\", global.workdate, \"-\", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 41\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439:\", global.workdate, \"-\", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 41\n          }, this), user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [global.postend, \"  \", global.workstart]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"lQEKdED0E8lqhmcFEnDS9SiYBfY=\");\n\n_c = Employee;\n{\n  /*<div className='emailEmployee'>{user.email}</div>*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","Employee","user","posts","setPosts","isFetching","setIsFetching","fetchUserpost","res","get","id","console","log","data","global","postend","workstart","workdate","sort","p1","p2","Date","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","setDat","setDate","getDate","dat","toLocaleDateString","date","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","fetchUser","length","worked","status","_id","isAdmin","user_name"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\nexport default function Employee({user}) {\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n\r\n  const fetchUserpost = async () => {\r\n    const res = await axios.get('/api/post?type=1&id='+user.id)\r\n    console.log('RES___DATA=',res.data)\r\n    global.postend=''\r\n    global.workstart=''\r\ntry{\r\n  global.postend = res.data[0].workdate\r\n  global.workstart = res.data[0].workstart\r\n  console.log('res.data=', global.postend)\r\n}\r\ncatch {\r\n\r\n}\r\n    setPosts(res.data.sort((p1, p2) => {\r\n      return new Date(p2.workstart) - new Date(p1.workstart)\r\n    }))\r\n    setIsFetching(false)\r\n  }\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const setDat = new Date()                     //Сегодняшнея дата\r\n  setDat.setDate(setDat.getDate())              //\r\n  const dat=setDat.toLocaleDateString()         //\r\n/*  console.log(\"SETDATE\",dat)     */               //\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setDate.setDate(setDate.getDate() + 1)\r\n      const res = await axios.get('/api/vacation?id='+user.id)\r\n      console.log('VACATION=',res.data)\r\n      if(res.data.length===0){\r\n        setDateStart(global.workdate='')\r\n        setDateEnd(global.worked='')\r\n      }else{\r\n    global.workdate=res.data[0].workdate\r\n    global.worked=res.data[0].worked\r\n        console.log(\"res.data[0].workdate=\",res.data[0].workdate)\r\n        setDateStart(global.workdate)\r\n        setDateEnd(global.worked)\r\n  }}\r\n\r\n    if(user.status===3){\r\n      fetchUser()}\r\n\r\n      if(user.status===7){\r\n      fetchUser()\r\n      }\r\n    if(user.status===6){\r\n      fetchUser()}\r\n\r\n    if(user.status===5){\r\n      fetchUser()\r\n    }\r\n    if(user.status===2){\r\n      fetchUserpost()\r\n    }\r\n\r\n  }, [user._id])\r\n\r\n\r\n\r\n  return (<>\r\n\r\n        {user.status === 4 && !localUser.isAdmin\r\n            ?\r\n            <div></div>\r\n            :\r\n            <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className='top'>{localUser.isAdmin\r\n                  ?\r\n                  <Link to={`/profile/${user.id}`} className='name'><span className='name'>{user.user_name}</span></Link>\r\n                  : <div className='name'><span className='name'>{user.user_name}</span></div>\r\n              }\r\n              </div>\r\n              <div className='down'>\r\n                <div className='downRight'>\r\n                  {/*<div className='emailEmployee'>{user.email}</div>*/}\r\n                  {user.status === 5 && <div className='vacationText'>Отпуск:{global.workdate}-{global.worked}</div>}\r\n                  {user.status === 6 && <div className='vacationText'>Отгул:{global.workdate}-{global.worked}</div>}\r\n                  {user.status === 7 && <div className='vacationText'>Другая причина:{global.workdate}-{global.worked}</div>}\r\n                  {user.status === 3 && <div className='vacationText' >Больничный:{global.workdate}-{global.worked}</div>}\r\n                  {user.status === 2 && <div className='vacationText' >{global.postend}  {global.workstart}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        }</>\r\n  )\r\n}\r\n\r\n\r\n{/*<div className='emailEmployee'>{user.email}</div>*/}\r\n"]},"metadata":{},"sourceType":"module"}