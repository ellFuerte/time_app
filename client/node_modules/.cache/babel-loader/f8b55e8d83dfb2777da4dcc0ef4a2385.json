{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\AdminPanel\\\\Role\\\\Role.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Role() {\n  _s();\n\n  const [roles, setRoles] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [searchTermUsers, setSearchTermUsers] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const resRoles = await axios.get('/api/roles/');\n        const rolesData = resRoles.data[0].get_roles;\n        setRoles(rolesData);\n        const resUsers = await axios.get('/api/user/');\n        setUsers(resUsers.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleInputChangeUsers = e => {\n    const termCities = e.target.value;\n    setSearchTermUsers(termCities);\n\n    if (termCities === '') {\n      setFilteredUsers([]);\n      return;\n    }\n\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(termCities.toLowerCase()));\n    setFilteredUsers(filtered);\n  };\n\n  const handleUserClickCities = (user_name, user_id) => {\n    setSearchTermUsers(user_name);\n    setFilteredUsers([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReportsButton\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ModalInputUpdate\",\n          type: \"text\",\n          value: searchTermUsers,\n          onChange: handleInputChangeUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divSelectRegister\",\n          children: filteredUsers.map((user, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectNameDiv\",\n            onClick: () => handleUserClickCities(user.user_name, user.id),\n            children: user.user_name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0420\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"ModalInputUpdate\",\n          children: roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role.id,\n            children: role.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Role, \"wU9IQzVhqpUHqQnMJt+a+Oiy40k=\");\n\n_c = Role;\nexport default Role;\n\nvar _c;\n\n$RefreshReg$(_c, \"Role\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/AdminPanel/Role/Role.jsx"],"names":["React","useEffect","useState","axios","Role","roles","setRoles","users","setUsers","filteredUsers","setFilteredUsers","searchTermUsers","setSearchTermUsers","fetchData","resRoles","get","rolesData","data","get_roles","resUsers","error","console","handleInputChangeUsers","e","termCities","target","value","filtered","filter","user","user_name","toLowerCase","includes","handleUserClickCities","user_id","display","gap","length","map","id","role","index","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction Role() {\r\n    const [roles, setRoles] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [searchTermUsers, setSearchTermUsers] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const resRoles = await axios.get('/api/roles/');\r\n                const rolesData = resRoles.data[0].get_roles;\r\n                setRoles(rolesData);\r\n\r\n                const resUsers = await axios.get('/api/user/');\r\n                setUsers(resUsers.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleInputChangeUsers = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermUsers(termCities);\r\n\r\n        if (termCities === '') {\r\n            setFilteredUsers([]);\r\n            return;\r\n        }\r\n\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        setFilteredUsers(filtered);\r\n    };\r\n    const handleUserClickCities = (user_name, user_id) => {\r\n            setSearchTermUsers(user_name)\r\n            setFilteredUsers([])\r\n    }\r\n    return (\r\n        <div className=\"ReportsButton\">\r\n            <div style={{ display: 'flex', gap: '200px' }}>\r\n                <div>\r\n                    <label>Имя сотрудника</label>\r\n                    <input className=\"ModalInputUpdate\" type=\"text\"\r\n                           value={searchTermUsers}\r\n                           onChange={handleInputChangeUsers} />\r\n                    {filteredUsers.length > 0 && (\r\n                        <div className='divSelectRegister'>\r\n                            {filteredUsers.map((user, id) => (\r\n                                <div className='selectNameDiv' key={id} onClick={() => handleUserClickCities(user.user_name, user.id)}>\r\n                                    {user.user_name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <label>Роль</label>\r\n                    <select className=\"ModalInputUpdate\">\r\n                        {roles.map((role, index) => (\r\n                            <option key={index} value={role.id}>\r\n                                {role.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <button>\r\n                        Добавить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Role;"]},"metadata":{},"sourceType":"module"}