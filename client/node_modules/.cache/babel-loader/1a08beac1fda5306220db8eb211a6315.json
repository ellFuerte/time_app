{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\Editing\\\\Editing.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { Create } from \"@material-ui/icons\";\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editing({\n  modalActive,\n  setModalActive\n}) {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [error, setError] = useState('');\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [selectedValue, setSelectedValue] = useState('');\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [isAdmin, setIsadmin] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [email, setEmail] = useState([]);\n  const [emailChange, setEmailChange] = useState([]);\n  const [phone, setPhone] = useState([]);\n  const [phoneChange, setPhoneChange] = useState([]);\n  const [additional_contact, setAdditional_Contact] = useState([]);\n  const [additional_contact_change, setAdditional_Contact_Change] = useState([]);\n  const [distribution_group, setDistribution_Group] = useState([]);\n  const [distribution_group_change, setDistribution_Group_Change] = useState([]);\n  const [activity_profile, setActivity_Profile] = useState([]);\n  const [activity_profile_change, setActivity_Profile_Change] = useState([]);\n  const [CityPlace, setCityPlace] = useState([]);\n  const [CityPlace_Change, setCityPlace_Change] = useState([]);\n  const [surnameValue, setSurnameValue] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalActiveResetPass, setModalActiveResetPass] = useState(false);\n  const [modalActiveReset, setModalActiveReset] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalDep = useRef();\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const phoneNumber = useRef();\n  const additionalContact = useRef();\n  const distributionGroup = useRef();\n  const activityProfile = useRef();\n  const modalCity = useRef();\n  const modalCityPlace = useRef();\n  const [citiesId, setCitiesId] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [hasImage, setHasImage] = useState(false);\n\n  const handleUserClickCities = (city_name, id) => {\n    setCitiesId(id);\n    setSearchTermCities(city_name);\n    setFilteredCities([]);\n  };\n\n  const handleInputChangeCities = e => {\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n\n    if (termCities === '') {\n      setCitiesId('');\n      setFilteredCities([]);\n      setCityName('');\n      return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n    }\n\n    const filtered = cities.filter(city => city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase()));\n    setFilteredCities(filtered);\n  };\n\n  useEffect(() => {\n    const getNameAndSurname = () => {\n      if (user.user_name) {\n        const [name, surname] = user.user_name.split(\" \");\n        setSurnameValue(surname || \"\");\n        setNameValue(name);\n      }\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const data = res.data[0]['department_tree_to_json'];\n      const extractedOptions = extractOptions(data);\n      setOptions(extractedOptions);\n      setSelectedValue(user.department_id);\n    };\n\n    const extractOptions = node => {\n      let optionsList = [{\n        id: node.id,\n        name: node.Name\n      }];\n\n      if (node.Subclasses && node.Subclasses.length > 0) {\n        node.Subclasses.forEach(subclass => {\n          optionsList = optionsList.concat(extractOptions(subclass));\n        });\n      }\n\n      return optionsList;\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsadmin(res.data.isadmin);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n      const city = await axios.get('/api/Cities/');\n      setCities(city.data);\n    }; // Номинации\n\n\n    if (user && user.email && email) {\n      setEmail(user.email);\n    }\n\n    if (user && user.phone_number && phone) {\n      setPhone(user.phone_number);\n    }\n\n    if (user && user.additional_contact && additional_contact) {\n      setAdditional_Contact(user.additional_contact);\n    }\n\n    if (user && user.distribution_group && distribution_group) {\n      setDistribution_Group(user.distribution_group);\n    }\n\n    if (user && user.activity_profile && activity_profile) {\n      setActivity_Profile(user.activity_profile);\n    }\n\n    if (user && user.place_of_residence && CityPlace) {\n      setCityPlace(user.place_of_residence);\n    }\n\n    getNameAndSurname();\n    fetchUser();\n    getDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username]);\n\n  const handleEmailChange = e => {\n    if (e.target.value) {\n      setEmail('');\n      setEmailChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setEmail('');\n      setEmailChange('');\n    }\n  };\n\n  const formatPhoneNumber = value => {\n    // Убираем все символы, кроме цифр\n    let cleaned = value.replace(/\\D/g, '');\n\n    if (cleaned.startsWith('7')) {\n      cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\n    } // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\n\n\n    cleaned = cleaned.slice(0, 10); // Разделяем на части, добавляя дефисы\n\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\n\n    if (match) {\n      return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\n    }\n\n    return '+7 ' + cleaned;\n  };\n\n  const handlePhoneChange = e => {\n    if (e.target.value) {\n      setPhone('');\n      setPhoneChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setPhone('');\n      setPhoneChange('');\n    }\n\n    const value = e.target.value;\n\n    if (value.length < 1) {\n      setPhoneChange('');\n    } else {\n      const formattedValue = formatPhoneNumber(value);\n      setPhoneChange(formattedValue);\n    }\n  };\n\n  const additional_Contact = e => {\n    if (e.target.value) {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change('');\n    }\n  };\n\n  const distribution_Group = e => {\n    if (e.target.value) {\n      setDistribution_Group('');\n      setDistribution_Group_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setDistribution_Group('');\n      setDistribution_Group_Change('');\n    }\n  };\n\n  const activity_Profile = e => {\n    if (e.target.value) {\n      setActivity_Profile('');\n      setActivity_Profile_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setActivity_Profile('');\n      setActivity_Profile_Change('');\n    }\n  };\n\n  const cityPlace = e => {\n    if (e.target.value) {\n      setCityPlace('');\n      setCityPlace_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setCityPlace('');\n      setCityPlace_Change('');\n    }\n  };\n\n  const handleNameChange = e => {\n    setNameValue(e.target.value);\n  };\n\n  const handleSurnameChange = e => {\n    setSurnameValue(e.target.value);\n  }; // изменение данных пользователя\n\n\n  const handleClick = async e => {\n    const name = user.user_name;\n    const part = name.split(' ');\n    e.preventDefault();\n    const newInfo = {\n      departmentId: modalDep.current.value || user.department_id,\n      email: email ? email : emailChange.toUpperCase(),\n      username: nameValue + ' ' + surnameValue,\n      _id: user.id,\n      isAdmin: user.isadmin,\n      see_child: user.see_child,\n      status: user.status,\n      main_department: user.main_department,\n      phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n      additional_contact: additionalContact.current.value,\n      distribution_group: distributionGroup.current.value,\n      activity_profile: activityProfile.current.value,\n      city_id: citiesId,\n      cityPlaceChange: modalCityPlace.current.value\n    };\n\n    if (localUse._id !== username.username) {\n      const newInfo2 = {\n        departmentId: modalDep.current.value || user.department_id,\n        email: email ? email : emailChange.toUpperCase(),\n        username: nameValue + ' ' + surnameValue,\n        phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n        additional_contact: additionalContact.current.value,\n        distribution_group: distributionGroup.current.value,\n        activity_profile: activityProfile.current.value,\n        city_id: citiesId,\n        _id: user.id,\n        cityPlaceChange: modalCityPlace.current.value\n      };\n      await axios.put('/api/user/', newInfo2);\n      window.location.reload();\n    } else {\n      await axios.put('/api/user/', newInfo);\n      delete newInfo.phone_number;\n      delete newInfo.additional_contact;\n      delete newInfo.distribution_group;\n      delete newInfo.activity_profile;\n      delete newInfo.city_id;\n      delete newInfo.cityPlaceChange;\n      localStorage.setItem('user', JSON.stringify({ ...newInfo\n      }));\n      setModalActive(false);\n      window.location.reload();\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            className: \"ModalInputUpdate\",\n            onChange: handleNameChange,\n            value: nameValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            className: \"ModalInputUpdate\",\n            onChange: handleSurnameChange,\n            value: surnameValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            type: \"email\",\n            className: \"ModalInputUpdate\",\n            onChange: handleEmailChange,\n            value: email || emailChange,\n            minLength: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: phoneNumber,\n            onChange: handlePhoneChange,\n            value: phone || phoneChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0414\\u043E\\u043F \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442(\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430,\\u0424\\u0418\\u041E,\\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430)\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: additionalContact,\n            onChange: additional_Contact,\n            value: additional_contact || additional_contact_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: distributionGroup,\n            onChange: distribution_Group,\n            value: distribution_group || distribution_group_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: activityProfile,\n            onChange: activity_Profile,\n            value: activity_profile || activity_profile_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: modalCity,\n            value: searchTermCities || cityName,\n            onChange: handleInputChangeCities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              children: filteredCities.map((city, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: city.id,\n                onClick: () => handleUserClickCities(city.city_name, city.id),\n                children: city.city_name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0444\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F\",\n              type: \"text\",\n              className: \"ModalInputUpdate\",\n              ref: modalCityPlace,\n              onChange: cityPlace,\n              value: CityPlace || CityPlace_Change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedValue // Привязываем значение к selectedValue\n            ,\n            onChange: handleChange,\n            ref: modalDep,\n            className: \"ModalInputUpdateSelect\",\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.id,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Editing, \"XDtPK7fB8htNOqPiFLFD8agQVsQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Editing;\nexport default Editing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editing\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/Editing/Editing.jsx"],"names":["React","Component","useEffect","useRef","useState","Create","Modal","axios","useParams","Editing","modalActive","setModalActive","timeZone","setTimeZone","selectedOption","setSelectedOption","error","setError","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","selectedValue","setSelectedValue","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","isAdmin","setIsadmin","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","user","setUser","nameValue","setNameValue","email","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","isFetching","setIsFetching","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","options","setOptions","er","setErr","username","localUser","_id","JSON","parse","localStorage","getItem","localUse","modalDep","modalOldPass","modalNewPass","modalNewPassAgain","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","hasImage","setHasImage","handleUserClickCities","city_name","id","handleInputChangeCities","e","termCities","target","value","filtered","filter","city","toLowerCase","includes","getNameAndSurname","user_name","name","surname","split","getDeps","res","get","data","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","length","forEach","subclass","concat","fetchUser","isadmin","sort","a","b","localeCompare","mass","element","status","phone_number","place_of_residence","handleEmailChange","formatPhoneNumber","cleaned","replace","startsWith","slice","match","Boolean","join","handlePhoneChange","formattedValue","additional_Contact","distribution_Group","activity_Profile","cityPlace","handleNameChange","handleSurnameChange","handleClick","part","preventDefault","newInfo","departmentId","current","toUpperCase","see_child","main_department","city_id","cityPlaceChange","newInfo2","put","window","location","reload","setItem","stringify","handleChange","map","option"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useRef, useState } from 'react';\r\nimport { Create } from \"@material-ui/icons\";\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Editing({modalActive,setModalActive}) {\r\n\r\n    const [timeZone, setTimeZone] = useState([])\r\n    const [selectedOption, setSelectedOption] = useState({});\r\n    const [error, setError] = useState('')\r\n\r\n    const [modalVacancies, setModalVacancies] = useState(false)\r\n    const [inputValues, setInputValues] = useState('');\r\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n\r\n\r\n    const [check, setCheck] = useState();\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [votearray, setVotearray] = useState([])\r\n    const [isAdmin, setIsadmin] = useState([])\r\n    const [userVote, setUserVote] = useState([])\r\n\r\n\r\n    const [depsName, setDepsName] = useState([])\r\n    const [cityName, setCityName] = useState([])\r\n\r\n    const [user, setUser] = useState([])\r\n\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n\r\n\r\n    const [email, setEmail] = useState([])\r\n    const [emailChange, setEmailChange] = useState([])\r\n\r\n\r\n    const [phone, setPhone] = useState([])\r\n    const [phoneChange, setPhoneChange] = useState([])\r\n\r\n\r\n    const [additional_contact, setAdditional_Contact] = useState([])\r\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\r\n\r\n\r\n    const [distribution_group, setDistribution_Group] = useState([])\r\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\r\n\r\n\r\n    const [activity_profile, setActivity_Profile] = useState([])\r\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\r\n\r\n    const [CityPlace, setCityPlace] = useState([])\r\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\r\n\r\n\r\n    const [surnameValue, setSurnameValue] = useState([])\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    const [modalActivePass, setModalActivePass] = useState(false)\r\n    const [modalActiveVote, setModalActiveVote] = useState(false)\r\n    const [modalVote, setModalVote] = useState(false)\r\n    const [vote, setVote] = useState([])\r\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\r\n    const [modalActiveReset, setModalActiveReset] = useState(false)\r\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\r\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\r\n\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [er, setErr] = useState('')\r\n    const username = useParams()\r\n\r\n\r\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const modalDep = useRef()\r\n    const modalOldPass = useRef()\r\n    const modalNewPass = useRef()\r\n    const modalNewPassAgain = useRef()\r\n    const phoneNumber = useRef()\r\n    const additionalContact = useRef()\r\n    const distributionGroup = useRef()\r\n    const activityProfile = useRef()\r\n    const modalCity = useRef()\r\n    const modalCityPlace = useRef()\r\n\r\n\r\n    const [citiesId, setCitiesId] = useState([])\r\n    const [searchTermCities, setSearchTermCities] = useState('');\r\n    const [filteredCities, setFilteredCities] = useState([]);\r\n    const [cities, setCities] = useState([])\r\n    const [hasImage, setHasImage] = useState(false);\r\n\r\n\r\n    const handleUserClickCities = (city_name, id) => {\r\n        setCitiesId(id)\r\n        setSearchTermCities(city_name)\r\n        setFilteredCities([])\r\n    }\r\n\r\n\r\n    const handleInputChangeCities = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermCities(termCities);\r\n\r\n        if (termCities === '') {\r\n            setCitiesId('');\r\n            setFilteredCities([]);\r\n            setCityName('');\r\n            return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\r\n        }\r\n\r\n        const filtered = cities.filter(city =>\r\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        setFilteredCities(filtered);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        const getNameAndSurname = () => {\r\n            if (user.user_name) {\r\n                const [name, surname] = user.user_name.split(\" \");\r\n                setSurnameValue(surname || \"\");\r\n                setNameValue(name);\r\n            }\r\n        }\r\n\r\n        const getDeps = async () => {\r\n\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const data = res.data[0]['department_tree_to_json'];\r\n            const extractedOptions = extractOptions(data);\r\n            setOptions(extractedOptions);\r\n            setSelectedValue(user.department_id);\r\n\r\n        }\r\n        const extractOptions = (node) => {\r\n            let optionsList = [{ id: node.id, name: node.Name }];\r\n            if (node.Subclasses && node.Subclasses.length > 0) {\r\n                node.Subclasses.forEach(subclass => {\r\n                    optionsList = optionsList.concat(extractOptions(subclass));\r\n                });\r\n            }\r\n            return optionsList;\r\n\r\n        };\r\n\r\n\r\n\r\n        const fetchUser = async () => {\r\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\r\n            localUser._id = !!username ? username.username : localUser._id\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            setUser(res.data)\r\n            setIsadmin(res.data.isadmin)\r\n            setIsFetching(false)\r\n\r\n            const user = await axios.get('/api/user/')\r\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\r\n            setUserVote(mass)\r\n\r\n            const city = await axios.get('/api/Cities/')\r\n            setCities(city.data)\r\n        }\r\n        // Номинации\r\n\r\n        if (user && user.email && email) {\r\n            setEmail(user.email);\r\n        }\r\n        if (user && user.phone_number && phone) {\r\n            setPhone(user.phone_number);\r\n        }\r\n\r\n        if (user && user.additional_contact && additional_contact) {\r\n            setAdditional_Contact(user.additional_contact);\r\n        }\r\n\r\n        if (user && user.distribution_group && distribution_group) {\r\n            setDistribution_Group(user.distribution_group);\r\n        }\r\n        if (user && user.activity_profile && activity_profile) {\r\n            setActivity_Profile(user.activity_profile);\r\n        }\r\n        if (user && user.place_of_residence && CityPlace) {\r\n            setCityPlace(user.place_of_residence);\r\n        }\r\n\r\n        getNameAndSurname();\r\n        fetchUser()\r\n        getDeps()\r\n\r\n    }, [\r\n        user.user_name,\r\n        user.email,\r\n        user.phone_number,\r\n        user.additional_contact,\r\n        user.distribution_group,\r\n        user.activity_profile,\r\n        user.place_of_residence,\r\n        username.username\r\n    ])\r\n\r\n    const handleEmailChange = (e) => {\r\n\r\n        if (e.target.value) {\r\n            setEmail('')\r\n            setEmailChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setEmail('')\r\n            setEmailChange('')\r\n        }\r\n\r\n    }\r\n    const formatPhoneNumber = (value) => {\r\n        // Убираем все символы, кроме цифр\r\n        let cleaned = value.replace(/\\D/g, '');\r\n        if (cleaned.startsWith('7')) {\r\n            cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\r\n        }\r\n        // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\r\n        cleaned = cleaned.slice(0, 10);\r\n        // Разделяем на части, добавляя дефисы\r\n        const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\r\n        if (match) {\r\n            return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\r\n        }\r\n        return '+7 ' + cleaned;\r\n    };\r\n    const handlePhoneChange = (e) => {\r\n        if (e.target.value) {\r\n            setPhone('')\r\n            setPhoneChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setPhone('')\r\n            setPhoneChange('')\r\n        }\r\n        const value = e.target.value;\r\n        if (value.length < 1) {\r\n            setPhoneChange('')\r\n        } else {\r\n            const formattedValue = formatPhoneNumber(value);\r\n            setPhoneChange(formattedValue);\r\n        }\r\n    }\r\n\r\n    const additional_Contact = (e) => {\r\n        if (e.target.value) {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change('')\r\n        }\r\n    }\r\n\r\n    const distribution_Group = (e) => {\r\n        if (e.target.value) {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change('')\r\n        }\r\n    }\r\n\r\n    const activity_Profile = (e) => {\r\n        if (e.target.value) {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change('')\r\n        }\r\n    }\r\n\r\n    const cityPlace = (e) => {\r\n        if (e.target.value) {\r\n            setCityPlace('')\r\n            setCityPlace_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setCityPlace('')\r\n            setCityPlace_Change('')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setNameValue(e.target.value);\r\n    }\r\n\r\n    const handleSurnameChange = (e) => {\r\n        setSurnameValue(e.target.value)\r\n    }\r\n\r\n\r\n    // изменение данных пользователя\r\n    const handleClick = async (e) => {\r\n\r\n        const name = user.user_name\r\n        const part = name.split(' ')\r\n        e.preventDefault()\r\n        const newInfo = {\r\n            departmentId: modalDep.current.value || user.department_id,\r\n            email: (email ? email : emailChange.toUpperCase()),\r\n            username: nameValue + ' ' + surnameValue,\r\n            _id: user.id,\r\n            isAdmin: user.isadmin,\r\n            see_child: user.see_child,\r\n            status: user.status,\r\n            main_department: user.main_department,\r\n            phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n            additional_contact: additionalContact.current.value,\r\n            distribution_group: distributionGroup.current.value,\r\n            activity_profile: activityProfile.current.value,\r\n            city_id: citiesId,\r\n            cityPlaceChange:modalCityPlace.current.value\r\n        }\r\n\r\n        if (localUse._id !== username.username) {\r\n            const newInfo2 = {\r\n                departmentId: modalDep.current.value || user.department_id,\r\n                email: (email ? email : emailChange.toUpperCase()),\r\n                username: nameValue + ' ' + surnameValue,\r\n                phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n                additional_contact: additionalContact.current.value,\r\n                distribution_group: distributionGroup.current.value,\r\n                activity_profile: activityProfile.current.value,\r\n                city_id: citiesId,\r\n                _id: user.id,\r\n                cityPlaceChange:modalCityPlace.current.value\r\n            }\r\n\r\n            await axios.put('/api/user/', newInfo2)\r\n            window.location.reload()\r\n        } else {\r\n            await axios.put('/api/user/', newInfo)\r\n            delete newInfo.phone_number\r\n            delete newInfo.additional_contact\r\n            delete newInfo.distribution_group\r\n            delete newInfo.activity_profile\r\n            delete newInfo.city_id\r\n            delete newInfo.cityPlaceChange\r\n            localStorage.setItem('user', JSON.stringify({...newInfo}))\r\n            setModalActive(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedValue(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n            <div>\r\n\r\n\r\n\r\n                <Modal active={modalActive} setActive={setModalActive}>\r\n                    <h1>Изменение информации:</h1>\r\n                    <hr/>\r\n                    {error && <div className='modalError'>{error}</div>}\r\n                    <form className=\"modalLoginBox\" onSubmit={handleClick}>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Фамилия\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleNameChange}\r\n                                value={nameValue}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Имя\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleSurnameChange}\r\n                                value={surnameValue}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleEmailChange}\r\n                                value={email || emailChange}\r\n                                minLength={6}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Телефон\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={phoneNumber}\r\n                                onChange={handlePhoneChange}\r\n                                value={phone || phoneChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={additionalContact}\r\n                                onChange={additional_Contact}\r\n                                value={additional_contact || additional_contact_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Группа рассылки\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={distributionGroup}\r\n                                onChange={distribution_Group}\r\n                                value={distribution_group || distribution_group_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Профиль деятельности\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={activityProfile}\r\n                                onChange={activity_Profile}\r\n                                value={activity_profile || activity_profile_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Город\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={modalCity}\r\n                                value={searchTermCities || cityName}\r\n                                onChange={handleInputChangeCities}\r\n                            />\r\n                            <div>\r\n                                {filteredCities.length > 0 && (\r\n                                    <div className='divSelectRegister'>\r\n                                        {filteredCities.map((city, id) => (\r\n                                            <div className='selectNameDiv' key={id} value={city.id}\r\n                                                 onClick={() => handleUserClickCities(city.city_name, city.id)}>\r\n                                                {city.city_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                <input\r\n                                    placeholder=\"Адрес фактического проживания\"\r\n                                    type='text'\r\n                                    className=\"ModalInputUpdate\"\r\n                                    ref={modalCityPlace}\r\n                                    onChange={cityPlace}\r\n                                    value={CityPlace || CityPlace_Change}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <select\r\n                                value={selectedValue} // Привязываем значение к selectedValue\r\n                                onChange={handleChange}\r\n                                ref={modalDep}\r\n                                className=\"ModalInputUpdateSelect\"\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <option key={option.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n                            Изменить\r\n                        </button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default Editing;"]},"metadata":{},"sourceType":"module"}