{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  const [selectDep, setSelectDep] = useState(\"\");\n  const [company, setCompany] = useState([]);\n  const [selectCompany, setSelectCompany] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [user_name, setUser_name] = useState('');\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const departRef = useRef();\n  const companyRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [deps, setDeps] = useState([]);\n  useEffect(() => {\n    const Department = async () => {\n      const departs = await axios.get('/api/departments/');\n      setDeps(departs.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n    };\n\n    Department();\n  }, []);\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const selectDeps = () => {\n    setSelectDep(departRef.current.value);\n  };\n\n  const companySelect = () => {\n    setSelectCompany(companyRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      old_user: old_user,\n      deps: selectDep,\n      company_id: selectCompany\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n    setMessage('Сохранено');\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setUser_name('');\n    } else {\n      setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\n    }\n  };\n\n  const handleClick = (name, grade, id, description, status_id, user_name, user_id, department_id, company_id) => {\n    console.log('dep', company_id);\n\n    if (localUser.isAdmin === true) {\n      if (user_name === null) {\n        setUser_name([]);\n      } else {\n        setUser_name(user_name);\n      }\n\n      setFilteredUsers([]);\n      setMessage([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setOld_user(user_id);\n      setSelectDep(department_id);\n      setSelectCompany(company_id);\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    console.log('user=', userId);\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Reserve';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Selection';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Securely';\n      // Установите оранжевый цвет для статуса 3\n\n      case 4:\n        return 'Liquidated';\n      // Установите красный цвет для статуса 4\n\n      case 5:\n        return 'Finalist';\n      // Установите красный цвет для статуса 4\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"departmentName\",\n      children: department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-container\",\n      children: [vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angry-grid1\" + getColorByStatusId(vac.status_id),\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id, vac.user_name, vac.user_id, vac.department_id, vac.company_id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cssportal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div1\",\n            children: [vac.user_name ? `${vac.user_name} (${vac.vacancy_code})` : vac.name + '(' + vac.vacancy_code + ')', /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"New\",\n              children: date === vac.create_date ? 'NEW' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div2\",\n            children: [\"\\u0413\\u0440\\u0435\\u0439\\u0434: \", vac.grade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div3\",\n            children: vac.status_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div4\",\n            children: [\"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442: \", vac.project_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div5\",\n            children: vac.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: departRef,\n            value: selectDep,\n            onChange: selectDeps,\n            className: \"InputVacanciesItemDeps\",\n            children: deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dep.id,\n              children: dep.department_name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            className: \"InputVacanciesItem\",\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 63\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange,\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: companyRef,\n            value: selectCompany,\n            onChange: companySelect,\n            className: \"InputVacanciesItem\",\n            children: company.map((company, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: company.id,\n              children: company.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 65\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n                value: searchTerm || user_name,\n                onChange: handleInputChange,\n                className: \"InputVacanciesItem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 37\n              }, this), filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"userListContainer\",\n                children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selectNameDiv\",\n                  value: user.id,\n                  onClick: () => handleUserClick(user.user_name, user.id),\n                  children: user.user_name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divHistory\",\n            children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ModalButton\",\n              type: \"submit\",\n              onClick: ChangeData,\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"QWqN1tfdz8FgzXqaSGZZ7nYburw=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useEffect","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","selectDep","setSelectDep","company","setCompany","selectCompany","setSelectCompany","message","setMessage","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","old_user","setOld_user","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","user_name","setUser_name","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","departRef","companyRef","searchRef","startDate","setStartDate","endDate","setEndDate","deps","setDeps","Department","departs","get","data","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","selectValue","current","selectDeps","companySelect","ChangeData","namevacanciesId","namevacancies","description","Statuses","grade","statuses","userId","company_id","res","put","date","format","searchTerm","setSearchTerm","setUserId","filteredUsers","setFilteredUsers","handleInputChange","term","filtered","filter","user","toLowerCase","includes","handleClick","name","id","status_id","user_id","department_id","console","log","isAdmin","handleUserClick","userName","getColorByStatusId","statusId","map","vac","vacancy_code","create_date","status_name","project_id","company_name","dep","department_name","length","index"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value,\r\n            users:userId,\r\n            old_user:old_user,\r\n            deps:selectDep,\r\n            company_id:selectCompany\r\n        }\r\n\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n        setMessage('Сохранено')\r\n    }\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id,department_id,company_id) => {\r\n        console.log('dep',company_id)\r\n        if(localUser.isAdmin===true) {\r\n\r\n            if(user_name===null){\r\n                setUser_name([])\r\n            }else {\r\n                setUser_name(user_name)\r\n            }\r\n\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n\r\n            setSelectDep(department_id)\r\n\r\n            setSelectCompany(company_id)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        console.log('user=',userId)\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 1:\r\n                return 'Reserve'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Selection'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Securely'; // Установите оранжевый цвет для статуса 3\r\n            case 4:\r\n                return 'Liquidated'; // Установите красный цвет для статуса 4\r\n            case 5:\r\n                return 'Finalist'; // Установите красный цвет для статуса 4\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                <h2 className='departmentName'>{department}</h2>\r\n                <div className=\"vacancies-container\" >\r\n                    {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)}\r\n                         onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,vac.user_name,vac.user_id,vac.department_id,vac.company_id)}>\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\">{vac.user_name ? `${vac.user_name} (${vac.vacancy_code})` : vac.name+'('+vac.vacancy_code+')'}\r\n                                <label className='New'>{date === vac.create_date ? 'NEW' : ''}</label></div>\r\n                            <div id=\"div2\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div3\">{vac.status_name}</div>\r\n                            <div id=\"div4\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div5\">{vac.company_name}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                        ))}\r\n\r\n\r\n                    <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                        <span className='error'>{message}</span>\r\n                        <div>\r\n                            <input type='text' className=\"ModalInputVacancies\"\r\n                                   value={inputValue}\r\n                                   onChange={handleNameInputChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div>\r\n                            <span>Подразделение:</span><br/>\r\n                            <select ref={departRef}\r\n                                    value={selectDep}\r\n                                    onChange={selectDeps}\r\n                                    className='InputVacanciesItemDeps'>\r\n                                {deps.map((dep, name) => <option key={name}\r\n                                                                 value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div>\r\n                            <span>Статус:</span><br/>\r\n                            <select ref={statusRef}\r\n                                    value={inputValueStatuses}\r\n                                    onChange={selectValue}\r\n                                    className='InputVacanciesItem'>\r\n                                {status.map((status, name) => <option key={name}\r\n                                                                      value={status.id}>{status.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <span>Грейд:</span><br/>\r\n                            <input type='number'\r\n                                   value={inputValueGrade}\r\n                                   onChange={handleGradeInputChange}\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>Компания:</span><br/>\r\n                            <select ref={companyRef}\r\n                                    value={selectCompany}\r\n                                    onChange={companySelect}\r\n                                    className='InputVacanciesItem'>\r\n                                {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"container\">\r\n                            <div>\r\n\r\n                                <span>Имя сотрудника</span><br/>\r\n                                <div className='inputDiv'>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='Имя сотрудника'\r\n                                        value={searchTerm || user_name}\r\n                                        onChange={handleInputChange}\r\n                                        className='InputVacanciesItem'\r\n                                    />\r\n                                    {filteredUsers.length > 0 && (\r\n                                        <div className=\"userListContainer\">\r\n                                            {filteredUsers.map((user, index) => (\r\n                                                <div className='selectNameDiv' key={index} value={user.id}\r\n                                                     onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                    {user.user_name}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <div className='divHistory'>\r\n                                История\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                                    Сохранить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </ModalVacancies>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}