{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\SearchBlock\\\\SearchBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './SearchBlock.css';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst usersStatuses = {\n  0: '',\n  1: 'start',\n  2: 'end',\n  3: 'sick_leave',\n  4: 'deleted',\n  5: 'vacation',\n  6: 'time_off',\n  7: 'other'\n};\nexport default function SearchBlock({\n  user\n}) {\n  _s();\n\n  const [nominations, setNominations] = useState([]);\n  const [admin, setAdmin] = useState();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [dateStart, setDateStart] = useState();\n  const [dateEnd, setDateEnd] = useState();\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  } // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const users = await axios.get('/api/user/' + user.id);\n      const res = await axios.get('/api/vacation?id=' + user.id);\n      const post = await axios.get('/api/post?type=1&id=' + user.id);\n      setNominations(users.data.nomination_status);\n\n      if (users.data.isadmin !== true) {\n        setAdmin('');\n      } else {\n        setAdmin('*');\n      }\n\n      if (res.data.length === 0) {\n        setDateStart('');\n        setDateEnd('');\n      } else {\n        setDateStart(res.data[0].workdate);\n        setDateEnd(res.data[0].worked);\n      }\n\n      if (post.data.length === 0) {\n        setDate('');\n        setTime('');\n      } else {\n        setDate(post.data[0].workdate);\n        setTime(post.data[0].workend);\n      }\n    };\n\n    if (user.status === 1 || user.status === 2 || user.status === 3 || user.status === 5 || user.status === 6 || user.status === 7) {\n      fetchUser();\n    }\n  }, [user.id]);\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBlockContainer\",\n      children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user.id}`,\n        className: \"name\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'employee ' + findStatus(user.status),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"angry-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"item-0\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"searchName\",\n                children: [user.user_name, localUser.isAdmin ? admin : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"item-1\",\n              children: [user.status === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vacationText\",\n                children: [\"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A:\", dateStart, \"-\", dateEnd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 59\n              }, this), user.status === 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vacationText\",\n                children: [\"\\u041E\\u0442\\u0433\\u0443\\u043B:\", dateStart, \"-\", dateEnd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 59\n              }, this), user.status === 7 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vacationText\",\n                children: [\"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430:\", dateStart, \"-\", dateEnd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 59\n              }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vacationText\",\n                children: [\"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439:\", dateStart, \"-\", dateEnd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 59\n              }, this), user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vacationText\",\n                children: [date, \" \", time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"item-2\",\n              children: Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations === key || nominations === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: images[key].src,\n                title: images[key].title,\n                alt: `Image for ${key}`\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'employee ' + findStatus(user.status),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"angry-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-0\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"searchName\",\n              children: [user.user_name, admin]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-1\",\n            children: [user.status === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vacationText\",\n              children: [\"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A:\", dateStart, \"-\", dateEnd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 55\n            }, this), user.status === 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vacationText\",\n              children: [\"\\u041E\\u0442\\u0433\\u0443\\u043B:\", dateStart, \"-\", dateEnd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 55\n            }, this), user.status === 7 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vacationText\",\n              children: [\"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430:\", dateStart, \"-\", dateEnd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 55\n            }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vacationText\",\n              children: [\"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439:\", dateStart, \"-\", dateEnd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 55\n            }, this), user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vacationText\",\n              children: [date, \" \", time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-2\",\n            children: Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations === key || nominations === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: images[key].src,\n              title: images[key].title,\n              alt: `Image for ${key}`,\n              className: \"images\"\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchBlock, \"uf80q9PdAt5CCaPBscGpnFnYdxc=\");\n\n_c = SearchBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBlock\");","map":{"version":3,"sources":["D:/time_app/client/src/components/SearchBlock/SearchBlock.jsx"],"names":["Link","useEffect","useState","axios","usersStatuses","SearchBlock","user","nominations","setNominations","admin","setAdmin","date","setDate","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","localUser","JSON","parse","localStorage","getItem","findStatus","k","i","fetchUser","users","get","id","res","post","data","nomination_status","isadmin","length","workdate","worked","workend","status","images","src","title","isAdmin","user_name","Object","keys","map","key","parseInt"],"mappings":"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","sourcesContent":["import {Link} from 'react-router-dom'\r\nimport './SearchBlock.css'\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n\r\n\r\nexport default function SearchBlock({user}) {\r\n    const [nominations, setNominations] = useState([])\r\n    const [admin, setAdmin] = useState()\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [dateStart, setDateStart] = useState()\r\n    const [dateEnd, setDateEnd] = useState()\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const usersStatuses = {\r\n        0: '',\r\n        1: 'start',\r\n        2: 'end',\r\n        3: 'sick_leave',\r\n        4: 'deleted',\r\n        5: 'vacation',\r\n        6: 'time_off',\r\n        7: 'other'\r\n    }\r\n\r\n    function findStatus(k) {\r\n        for (let i in usersStatuses) {\r\n            if (i == k) {\r\n                return usersStatuses[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n    useEffect(() => {\r\n\r\n        const fetchUser = async () => {\r\n            const users = await axios.get('/api/user/' + user.id)\r\n            const res = await axios.get('/api/vacation?id=' + user.id);\r\n            const post = await axios.get('/api/post?type=1&id=' + user.id);\r\n            setNominations(users.data.nomination_status)\r\n\r\n            if (users.data.isadmin !== true) {\r\n                setAdmin('');\r\n            } else {\r\n                setAdmin('*');\r\n            }\r\n\r\n\r\n            if (res.data.length === 0) {\r\n                setDateStart('')\r\n                setDateEnd('')\r\n            } else {\r\n                setDateStart(res.data[0].workdate)\r\n                setDateEnd(res.data[0].worked)\r\n            }\r\n\r\n\r\n\r\n            if (post.data.length === 0) {\r\n                setDate('')\r\n                setTime('')\r\n            } else {\r\n                setDate(post.data[0].workdate)\r\n                setTime(post.data[0].workend)\r\n            }\r\n        }\r\n\r\n        if (user.status === 1 || user.status === 2 || user.status === 3\r\n            || user.status === 5 || user.status === 6 || user.status === 7)\r\n        {\r\n            fetchUser()\r\n        }\r\n\r\n    }, [user.id])\r\n\r\n\r\n    const images = {\r\n        '1': { src: '../images/1.png', title: 'Тучка' },\r\n        '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n        '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n        '4': { src: '../images/4.png', title: 'Портной' },\r\n        '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n        '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n        '7': { src: '../images/7.png', title: 'Крот' },\r\n        '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n        '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n        '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"searchBlockContainer\">\r\n            {\r\n                localUser.isAdmin ? (\r\n                    <Link to={`/profile/${user.id}`} className='name'>\r\n                        <div className={'employee ' + (findStatus(user.status))}>\r\n                            <div className=\"angry-grid\">\r\n                                <div id=\"item-0\">\r\n                                    <span className='searchName'>{user.user_name}{localUser.isAdmin ? admin:''}</span>\r\n                                </div>\r\n                                <div id=\"item-1\">\r\n\r\n                                    {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n\r\n                                </div>\r\n                                <div id=\"item-2\">\r\n\r\n                                    {Object.keys(images).map((key, id) => (\r\n\r\n                                        (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations===key || nominations===parseInt(key)) &&\r\n                                        <img\r\n                                            key={id}\r\n                                            src={images[key].src}\r\n                                            title={images[key].title}\r\n                                            alt={`Image for ${key}`}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ) : (\r\n                    <div className={'employee ' + (findStatus(user.status))}>\r\n                        <div className=\"angry-grid\">\r\n                            <div id=\"item-0\">\r\n                                <span className='searchName'>{user.user_name}{admin}</span>\r\n                            </div>\r\n                            <div id=\"item-1\">\r\n                                {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                                {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                                {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                                {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                                {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n\r\n                            </div>\r\n                            <div id=\"item-2\">\r\n\r\n                                {\r\n                                    Object.keys(images).map((key, id) => (\r\n                                        (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations === key || nominations === parseInt(key) )\r\n\r\n                                        &&\r\n                                        <img\r\n                                            key={id}\r\n                                            src={images[key].src}\r\n                                            title={images[key].title}\r\n                                            alt={`Image for ${key}`}\r\n                                            className='images'\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}