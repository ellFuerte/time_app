{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const status = await axios.get('/api/Vacations/?status=status');\n      setStatus(status.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n  };\n\n  const [hideButtons, setHideButtons] = useState(false);\n\n  const handleShowVacancies = () => {\n    setHideButtons(true);\n  };\n\n  const handleReturn = () => {\n    setHideButtons(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnStaff\",\n        onClick: hideButtons ? handleReturn : handleShowVacancies,\n        style: {\n          width: '155px'\n        },\n        children: hideButtons ? 'Вернуться' : 'Добавить Вакансию'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), hideButtons ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 32\n      }, this) : handleReturn, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCombinedFilter,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: reset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          status: status,\n          department: vac.department,\n          vacancies: vac.vacancies,\n          users: departId.users\n        }, vac.department, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this)) : '', filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          status: status,\n          department: vac.department,\n          vacancies: vac.vacancies\n        }, vac.department, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"aj/ZvQuwKMuphtYZrQSJCI3mdXw=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesAdd","VacanciesView","departId","isOpen","setIsOpen","vacancies","setVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","localUser","JSON","parse","localStorage","getItem","get","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","filter","vacancy","vacancyDate","Date","create_date","start","end","hideButtons","setHideButtons","handleShowVacancies","handleReturn","width","vac","id","users"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n\r\n\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n    }\r\n    const [hideButtons, setHideButtons] = useState(false);\r\n\r\n\r\n    const handleShowVacancies = () => {\r\n\r\n        setHideButtons(true);\r\n\r\n    }\r\n    const handleReturn = () => {\r\n        setHideButtons(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <button className=\"btnStaff\" onClick={hideButtons ? handleReturn : handleShowVacancies} style={{ width: '155px' }}>\r\n                    {hideButtons ? 'Вернуться' : 'Добавить Вакансию'}\r\n                </button>\r\n                {hideButtons ? <VacanciesAdd />:handleReturn}\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n\r\n                    <br/>\r\n{/*                    <div className=\"VacationsMain\">\r\n\r\n                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />\r\n                           <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n\r\n                    </div>*/}\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {isOpen ? (\r\n                    vacancies.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id}>\r\n                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies} users={departId.users}/>\r\n                        </div>\r\n                    ))\r\n                ) :''}\r\n\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}>\r\n                        <VacanciesItem vac={vac} key={vac.department}  status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n\r\n\r\n\r\n{/*                <div style={{textAlign:'center'}}>\r\n\r\n                {isOpen ?\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={vacancies.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n                    :\r\n\r\n                    <Pagination postsPerPage={postsPerPageVacancies} totalPosts={find.length}\r\n                                paginate={paginateVacancies}\r\n                                currentPage={currentPageVacancies}/>}\r\n                </div>*/}\r\n\r\n\r\n{/*            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                           value={inputValueDescription}\r\n                           onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                    <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>*/}\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}