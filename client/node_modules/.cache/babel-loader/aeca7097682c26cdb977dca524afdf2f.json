{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const setDat = new Date(); //Сегодняшнея дата\n\n  setDat.setDate(setDat.getDate()); //\n\n  const dat = setDat.toLocaleDateString(); //\n\n  /*  console.log(\"SETDATE\",dat)     */\n  //\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + user.id);\n      console.log(\"RES.DATA=\", res.data);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        global.workdate = res.data[0].workdate;\n        global.worked = res.data[0].worked;\n        setDateStart(global.workdate);\n        setDateEnd(global.worked);\n      }\n    };\n\n    fetchUser();\n  }, [user._id]);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n    };\n\n    getDeps();\n  }, []);\n  /*console.log('global.workdate=',global.workdate)*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 49\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 107\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 57\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 178\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 173\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [date, \" \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }, this), user.status === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 41\n          }, this), user.status === 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: \"\\u041E\\u0442\\u0433\\u0443\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 41\n          }, this), user.status === 7 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: \"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439:\", global.workdate, \"-\", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 63\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"WsXZ/Ir7otDyQ9B3jzUqCkp8sYc=\");\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","Employee","user","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","setDat","Date","setDate","getDate","dat","toLocaleDateString","date","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","fetchUser","res","get","id","console","log","data","length","global","workdate","worked","_id","getDeps","setDeps","status","isAdmin","textAlign","user_name"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Employee({user}) {\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const setDat = new Date()                     //Сегодняшнея дата\r\n  setDat.setDate(setDat.getDate())              //\r\n  const dat=setDat.toLocaleDateString()         //\r\n/*  console.log(\"SETDATE\",dat)     */               //\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n    const res = await axios.get('/api/vacation?id='+user.id)\r\n\r\n    console.log(\"RES.DATA=\",res.data)\r\n\r\n      if(res.data.length===0){\r\n        setDateStart(global.workdate='')\r\n        setDateEnd(global.worked='')\r\n      }else{\r\n    global.workdate=res.data[0].workdate\r\n    global.worked=res.data[0].worked\r\n        setDateStart(global.workdate)\r\n        setDateEnd(global.worked)\r\n  }}\r\n\r\n\r\n\r\n      fetchUser()\r\n\r\n  }, [user._id])\r\n\r\n  useEffect(() => {\r\n    const getDeps = async () => {\r\n      const res = await axios.get('/api/departments/')\r\n      setDeps(res.data)\r\n    }\r\n    getDeps()\r\n  }, [])\r\n\r\n\r\n\r\n/*console.log('global.workdate=',global.workdate)*/\r\n  return (<>\r\n     {user.status === 4 && !localUser.isAdmin ? <div></div> : <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className='top'>{localUser.isAdmin ? <Link to={`/profile/${user.id}`} className='name'><div style={{textAlign:'center'}}>{user.user_name}</div></Link> : <div><span>{user.user_name}</span></div>\r\n              }\r\n              </div>\r\n              <div className='down'>\r\n                <div className='downRight'>\r\n                  {/*<div className='emailEmployee'>{user.email}</div>*/}\r\n                  {user.status === 2 && <div>{date} {time}</div>}\r\n                  {user.status === 5 && <div className='vacationText'>Отпуск</div>}\r\n                  {user.status === 6 && <div className='vacationText'>Отгул</div>}\r\n                  {user.status === 7 && <div className='vacationText'>Другая причина</div>}\r\n                  {user.status === 3 && <div className='vacationText'>Больничный:{global.workdate}-{global.worked}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n    }</>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}