{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [seeChilds, setSeeChilds] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [UsersDep, setUsersDeps] = useState([]);\n  const [us, setUs] = useState([]);\n  const [user, setUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const {\n    username: departId\n  } = useParams();\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const {\n    username: depsId\n  } = useParams(); // фильтр нужных департаментов\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep);\n  useEffect(() => {\n    // получение всех пользователей\n    const fetchUsers = async () => {\n      setIsFetching(true);\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(filterUsers);\n      setIsFetching(false);\n    }; // Вывод статистики для админов\n\n\n    const getStatisticsAllUsers = async () => {\n      if (localUser.isAdmin) {\n        const getUsers = {\n          id: localUser._id\n        };\n        const res = await axios.post('/api/get_statistics_all_users', getUsers);\n        const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let allUsers = filterUsersFoo(all);\n\n        if (res.data[0].get_statistics_all_users[0]['all_users'] === null && document.location.href.includes('/all_users/')) {\n          alert('Нет не одного пользователя в работе');\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && document.location.href.includes('/not_working_today/')) {\n          alert('Сегодня все в работе');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && document.location.href.includes('/not_worked_yesterday/')) {\n          alert('Вчера все работали');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && document.location.href.includes('/sick_today/')) {\n          alert('Нет болеющих сегодня');\n          window.location.href = `/department/${localUser.departmentId}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && document.location.href.includes('/sick_yesterday')) {\n          alert('Вчера не было сотрудников на больничном');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && document.location.href.includes('/vacation_today')) {\n          alert('На сегодня нет сотрудников в отпуске');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && document.location.href.includes('/vacation_yesterday')) {\n          alert('Вчера не было сотрудников в отпуске');\n          window.location.href = `/department/${localUser.main_department}`;\n        }\n\n        if (document.location.href.includes('/all_users/')) {\n          setIsJob(true);\n          setStatisticsWork(allUsers);\n        }\n\n        if (document.location.href.includes('/not_working_today/')) {\n          const notWorkingToday = res.data[0].get_statistics_all_users[0]['not_working_today'];\n\n          if (notWorkingToday !== null) {\n            setIsJob(true);\n            const sorted = notWorkingToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n\n        if (document.location.href.includes('/not_worked_yesterday/')) {\n          const notWorkedYesterday = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'];\n\n          if (notWorkedYesterday !== null) {\n            setIsJob(true);\n            const sorted = notWorkedYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n\n        if (document.location.href.includes('/sick_today/')) {\n          const sickToday = res.data[0].get_statistics_all_users[0]['sick_today'];\n\n          if (sickToday !== null) {\n            setIsJob(true);\n            const sorted = sickToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n\n        if (document.location.href.includes('/sick_yesterday/')) {\n          const sickYesterday = res.data[0].get_statistics_all_users[0]['sick_yesterday'];\n\n          if (sickYesterday !== null) {\n            setIsJob(true);\n            const sorted = sickYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n\n        if (document.location.href.includes('/vacation_today/')) {\n          const vacationToday = res.data[0].get_statistics_all_users[0]['vacation_today'];\n\n          if (vacationToday !== null) {\n            setIsJob(true);\n            const sorted = vacationToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n\n        if (document.location.href.includes('/vacation_yesterday/')) {\n          const vacationYesterday = res.data[0].get_statistics_all_users[0]['vacation_yesterday'];\n\n          if (vacationYesterday !== null) {\n            setIsJob(true);\n            const sorted = vacationYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\n            setStatisticsWork(filterUsersFoo(sorted));\n          }\n        }\n      }\n    }; // функция показывает нажата ли галочка показать дочернии\n\n\n    const statusChild = async () => {\n      const user = await axios.get(`/api/user/${localUser._id}`);\n      setChecked(user.data.see_child);\n      setSeeChilds(user.data.see_child);\n      setUser(user.data);\n    }; // Функция фиксирует всех пользователей если стоит галочка добавить дочернии в модальном окне\n\n\n    const getUsersByDepIsCheckedTrue = async () => {\n      const info = {\n        depsId\n      };\n      const addchild = await axios.post('/api/get_users_by_dep/', info);\n      const depUsers = addchild.data[0]['get_users_by_dep'];\n\n      if (depUsers === null) {\n        setUs([]);\n      } else {\n        depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        const filterUsers = filterUsersFoo(depUsers);\n        setUs(filterUsers);\n        setUsersDeps([]);\n        setIsFetching(true);\n      }\n    };\n\n    setIsJob(true);\n    fetchUsers();\n    getUsersByDepIsCheckedTrue();\n    getStatisticsAllUsers();\n    statusChild();\n  }, [departId]); //Сортировка пользователей по статусам\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  } // Добавление дочерних по checkbox\n\n\n  const clickcheckbox = async () => {\n    setChecked(!checked);\n    const info = {\n      userId: localUser._id,\n      ischeked: !checked\n    };\n    await axios.post('/api/statusChild/', info);\n    const inf = {\n      depsId: depsId\n    };\n    const res = await axios.post('/api/get_users_by_dep/', inf);\n    const dep_users = res.data[0]['get_users_by_dep'];\n\n    if (dep_users === null) {\n      setUs([]);\n    } else {\n      dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(dep_users);\n      setUs(filterUsers);\n    }\n\n    if (checked === true) {\n      setIsJob(!isJob);\n    }\n\n    if (!checked === false) {\n      setIsJob(isJob);\n    }\n  }; // Обновляем main department по кнопке изменить в модальном окне\n\n\n  const handleModalClick = async () => {\n    const add = {\n      id: localUser._id,\n      depsId: depsId\n    };\n    const res = await axios.put('/api/user', add);\n    setModalMain(false);\n  }; // Функция get_users_by_dep по кнопке показать дочернии\n\n\n  const get_users_by_depIsOpen = async () => {\n    if (checked === true) {\n      setUs([]);\n    } else {}\n\n    if (isJob) {\n      const info = {\n        depsId: depsId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {} else {\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let filterUsers = filterUsersFoo(dep_users);\n        setUsersDeps(filterUsers);\n        setUsers([]);\n        setIsOpen(true);\n        setIsJob(!isJob);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_depIsOpen,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = `/department/${departId}`,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }, this), localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 40\n      }, this) : '']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [user.main_department === departId && checked && !isOpen ? us.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 42\n      }, this)) : users.filter(user => user.department_id === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 90\n      }, this)), !departId ? statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 56\n      }, this)) : '', !!isOpen ? UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 52\n      }, this)) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: clickcheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"submit\",\n          onClick: handleModalClick,\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"xuShrF1S7Mrc+JPYvD2zd8Vd9+k=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","seeChilds","setSeeChilds","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","UsersDep","setUsersDeps","us","setUs","user","setUser","deps","setDeps","isOpen","setIsOpen","isJob","setIsJob","isFetching","setIsFetching","modalMain","setModalMain","username","departId","localUser","JSON","parse","localStorage","getItem","depsId","currentDep","filter","dep","_id","departmentId","filterDeps","find","i","dep_id","push","fetchUsers","res","get","data","sort","a","b","user_name","localeCompare","filterUsers","filterUsersFoo","getStatisticsAllUsers","isAdmin","getUsers","id","post","all","get_statistics_all_users","allUsers","document","location","href","includes","alert","window","main_department","notWorkingToday","sorted","notWorkedYesterday","sickToday","sickYesterday","vacationToday","vacationYesterday","statusChild","see_child","getUsersByDepIsCheckedTrue","info","addchild","depUsers","status","concat","clickcheckbox","userId","ischeked","inf","dep_users","handleModalClick","add","put","get_users_by_depIsOpen","width","float","map","department_id"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [seeChilds, setSeeChilds] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const [statisticsWork, setStatisticsWork] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [UsersDep, setUsersDeps] = useState([]);\r\n    const [us, setUs] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const [deps, setDeps] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isJob, setIsJob] = useState(true);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [modalMain, setModalMain] = useState(false);\r\n\r\n    const { username: departId } = useParams();\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    const { username: depsId } = useParams();\r\n\r\n    // фильтр нужных департаментов\r\n    const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\r\n    let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\r\n    filterDeps.push(...currentDep);\r\n\r\n    useEffect(() => {\r\n        // получение всех пользователей\r\n        const fetchUsers = async () => {\r\n            setIsFetching(true);\r\n            const res = await axios.get('/api/user');\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            let filterUsers = filterUsersFoo(res.data);\r\n            setUsers(filterUsers);\r\n            setIsFetching(false);\r\n        };\r\n\r\n        // Вывод статистики для админов\r\n        const getStatisticsAllUsers = async () => {\r\n            if (localUser.isAdmin) {\r\n                const getUsers = { id: localUser._id };\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers);\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                let allUsers = filterUsersFoo(all);\r\n\r\n                if (res.data[0].get_statistics_all_users[0]['all_users'] === null && document.location.href.includes('/all_users/')) {\r\n                    alert('Нет не одного пользователя в работе');\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && document.location.href.includes('/not_working_today/')) {\r\n                    alert('Сегодня все в работе');\r\n                    window.location.href = `/department/${localUser.departmentId}`;\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && document.location.href.includes('/not_worked_yesterday/')) {\r\n                    alert('Вчера все работали');\r\n                    window.location.href = `/department/${localUser.departmentId}`;\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && document.location.href.includes('/sick_today/')) {\r\n                    alert('Нет болеющих сегодня');\r\n                    window.location.href = `/department/${localUser.departmentId}`;\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && document.location.href.includes('/sick_yesterday')) {\r\n                    alert('Вчера не было сотрудников на больничном');\r\n                    window.location.href = `/department/${localUser.main_department}`;\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && document.location.href.includes('/vacation_today')) {\r\n                    alert('На сегодня нет сотрудников в отпуске');\r\n                    window.location.href = `/department/${localUser.main_department}`;\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && document.location.href.includes('/vacation_yesterday')) {\r\n                    alert('Вчера не было сотрудников в отпуске');\r\n                    window.location.href = `/department/${localUser.main_department}`;\r\n                }\r\n                if (document.location.href.includes('/all_users/')) {\r\n                    setIsJob(true);\r\n                    setStatisticsWork(allUsers);\r\n                }\r\n                if (document.location.href.includes('/not_working_today/')) {\r\n                    const notWorkingToday = res.data[0].get_statistics_all_users[0]['not_working_today'];\r\n                    if (notWorkingToday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = notWorkingToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n                if (document.location.href.includes('/not_worked_yesterday/')) {\r\n                    const notWorkedYesterday = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'];\r\n                    if (notWorkedYesterday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = notWorkedYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n                if (document.location.href.includes('/sick_today/')) {\r\n                    const sickToday = res.data[0].get_statistics_all_users[0]['sick_today'];\r\n                    if (sickToday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = sickToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n                if (document.location.href.includes('/sick_yesterday/')) {\r\n                    const sickYesterday = res.data[0].get_statistics_all_users[0]['sick_yesterday'];\r\n                    if (sickYesterday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = sickYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n                if (document.location.href.includes('/vacation_today/')) {\r\n                    const vacationToday = res.data[0].get_statistics_all_users[0]['vacation_today'];\r\n                    if (vacationToday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = vacationToday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n                if (document.location.href.includes('/vacation_yesterday/')) {\r\n                    const vacationYesterday = res.data[0].get_statistics_all_users[0]['vacation_yesterday'];\r\n                    if (vacationYesterday !== null) {\r\n                        setIsJob(true);\r\n                        const sorted = vacationYesterday.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                        setStatisticsWork(filterUsersFoo(sorted));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // функция показывает нажата ли галочка показать дочернии\r\n        const statusChild = async () => {\r\n            const user = await axios.get(`/api/user/${localUser._id}`);\r\n            setChecked(user.data.see_child);\r\n            setSeeChilds(user.data.see_child);\r\n            setUser(user.data);\r\n        };\r\n\r\n        // Функция фиксирует всех пользователей если стоит галочка добавить дочернии в модальном окне\r\n        const getUsersByDepIsCheckedTrue = async () => {\r\n            const info = { depsId };\r\n            const addchild = await axios.post('/api/get_users_by_dep/', info);\r\n            const depUsers = addchild.data[0]['get_users_by_dep'];\r\n            if (depUsers === null) {\r\n                setUs([]);\r\n            } else {\r\n                depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                const filterUsers = filterUsersFoo(depUsers);\r\n                setUs(filterUsers);\r\n                setUsersDeps([]);\r\n                setIsFetching(true);\r\n            }\r\n        };\r\n\r\n        setIsJob(true);\r\n        fetchUsers();\r\n        getUsersByDepIsCheckedTrue();\r\n        getStatisticsAllUsers();\r\n        statusChild();\r\n    }, [departId]);\r\n\r\n    //Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4));\r\n    }\r\n\r\n\r\n    // Добавление дочерних по checkbox\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked);\r\n\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n        const inf = {\r\n            depsId: depsId\r\n        };\r\n        const res = await axios.post('/api/get_users_by_dep/', inf);\r\n        const dep_users = res.data[0]['get_users_by_dep'];\r\n\r\n        if (dep_users === null) {\r\n            setUs([]);\r\n        } else {\r\n            dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            let filterUsers = filterUsersFoo(dep_users);\r\n            setUs(filterUsers);\r\n        }\r\n        if(checked===true) {\r\n            setIsJob(!isJob)\r\n        }\r\n        if(!checked===false){\r\n            setIsJob(isJob)\r\n        }\r\n    }\r\n\r\n\r\n    // Обновляем main department по кнопке изменить в модальном окне\r\n    const handleModalClick = async () => {\r\n\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: depsId\r\n        }\r\n\r\n        const res = await axios.put('/api/user', add)\r\n        setModalMain(false)\r\n    }\r\n\r\n    // Функция get_users_by_dep по кнопке показать дочернии\r\n    const get_users_by_depIsOpen = async () => {\r\n        if(checked===true){\r\n            setUs([])\r\n        }else{\r\n\r\n        }\r\n        if (isJob) {\r\n            const info = {\r\n                depsId: depsId\r\n            }\r\n            const res = await axios.post('/api/get_users_by_dep/', info)\r\n            const dep_users = res.data[0]['get_users_by_dep']\r\n\r\n            if (dep_users === null) {\r\n\r\n            } else {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                let filterUsers = filterUsersFoo(dep_users)\r\n                setUsersDeps(filterUsers)\r\n                setUsers([])\r\n                setIsOpen(true)\r\n                setIsJob(!isJob)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='staff'>\r\n                <>\r\n                            {isJob ?\r\n                                <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                                    Показать дочерние\r\n                                </button>\r\n\r\n                            :\r\n\r\n                                <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\">\r\n                                    Скрыть дочерние\r\n                                </button>\r\n                            }\r\n                            <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n\r\n\r\n\r\n                    {localUser.isAdmin?<Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link>:''}\r\n\r\n{/*                    {localUser.isAdmin ? <button className=\"btnStaff\" onClick={hideButtons ? handleReturn : handleShowVacancies} style={{ width: '155px' }}>\r\n                        {hideButtons ? 'Вернуться' : 'Показать вакансии'}</button>:''}*/}\r\n\r\n\r\n                    {/*{hideButtons && (localUser || username === localUser._id) && !openAdd && <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}*/}\r\n\r\n                </>\r\n\r\n\r\n            <div className=\"employeeWrapper\">\r\n\r\n                {user.main_department===departId && checked && !isOpen ?\r\n                    us.map((user, id) => <Employee key={id} user={user}/>)\r\n                :users.filter(user => user.department_id === departId).map((user, id) => <Employee key={id} user={user}/>)\r\n\r\n                }\r\n\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n\r\n                {\r\n                    !!isOpen\r\n                        ?\r\n                        UsersDep.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : \"\"\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние</label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\"  onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}