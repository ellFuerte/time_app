{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localUser = JSON.parse(localStorage.getItem('user'));\nconst xz = localUser.departmentId;\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 43\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 39\n                }, this),\n                defaultCollapsed: xz === departments.id // Открываем вложенность, если идентификатор департамента совпадает с заданным числом\n                ,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 51\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 47\n                  }, this),\n                  defaultCollapsed: xz === departments1.id,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 51\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 47\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 39\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 31\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","useParams","axios","useEffect","useState","TreeView","localUser","JSON","parse","localStorage","getItem","xz","departmentId","Sidebar","dep","setDep","getDeps","res","get","data","map","node","i","label","department_tree_to_json","id","Name","Subclasses","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\nconst localUser = JSON.parse(localStorage.getItem('user'))\r\nconst xz = localUser.departmentId\r\nconst Sidebar =()=> {\r\n  const [dep, setDep] = useState([])\r\n\r\n  // загрузка всех департаментов\r\n  useEffect(() => {\r\n\r\n      const getDeps = async () => {\r\n          const res = await axios.get('/api/department_tree_to_json/')\r\n          setDep(res.data)\r\n      }\r\n\r\n      getDeps()\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className=\"sidebarWrapper\">\r\n        <div className=\"tree\">\r\n          <div className=\"treeWrapper\">\r\n\r\n              {dep.map((node, i) => {\r\n\r\n                  const label = <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                      <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                  return (\r\n\r\n                      <TreeView\r\n                          key={node.department_tree_to_json.Name + '|' + i}\r\n                          nodeLabel={label}\r\n                          defaultCollapsed={false}\r\n                      >\r\n                          {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                              <TreeView\r\n                                  key={departments.id}\r\n                                  nodeLabel={(\r\n                                      <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                          <span className=\"node\">{departments.Name}</span>\r\n                                      </Link>\r\n                                  )}\r\n                                  defaultCollapsed={xz === departments.id} // Открываем вложенность, если идентификатор департамента совпадает с заданным числом\r\n                              >\r\n                                  {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                      <TreeView\r\n                                          key={departments1.id}\r\n                                          nodeLabel={(\r\n                                              <Link to={`/department/${departments.id}`} className='depsUser' key={departments1.id}>\r\n                                                  <span className=\"node\">{departments1.Name}</span>\r\n                                              </Link>\r\n                                          )}\r\n                                          defaultCollapsed={xz === departments1.id}\r\n                                      >\r\n                                          {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                              <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                  <div style={{paddingBottom:'8px'}}>{departments2.Name}</div>\r\n                                              </Link>\r\n                                          ))}\r\n                                      </TreeView>\r\n                                  ))}\r\n                              </TreeView>\r\n                          ))}\r\n                      </TreeView>\r\n                  );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}