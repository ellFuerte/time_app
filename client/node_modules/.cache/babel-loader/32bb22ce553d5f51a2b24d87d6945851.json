{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  /*    const localUser = JSON.parse(localStorage.getItem('user'))\r\n  \r\n  \r\n      const [vacanciesId, setVacanciesId] = useState(\"\")\r\n  \r\n      const [modalVacations, setModalVacations] = useState(false)\r\n  \r\n      const [inputValue, setInputValue] = useState(\"\")\r\n  \r\n      const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n  \r\n      const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n  \r\n      const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n  \r\n  \r\n  \r\n      const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n      const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n      const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n      const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n  \r\n  \r\n      const [searchValue, setSearchValue] = useState(\"\")\r\n      const [isOpen, setIsOpen] = useState(true)\r\n  \r\n      const [currentPage, setCurrentPage] = useState(1)\r\n      const [postsPerPage] = useState(5)\r\n  \r\n      const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n      const [postsPerPageVacancies] = useState(5)\r\n  \r\n      const [vacancies, setVacancies] = useState([])\r\n      const [find, setFind] = useState([])\r\n  \r\n      const lastPostIndex = currentPage * postsPerPage\r\n      const firstPostIndex = lastPostIndex - postsPerPage\r\n      const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex)\r\n  \r\n      const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies\r\n      const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies\r\n      const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies)\r\n  \r\n      const paginate = pageNumber => setCurrentPage(pageNumber)\r\n      const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies)\r\n  \r\n  \r\n      const statusRef = useRef()\r\n  \r\n      const searchRef = useRef()\r\n  \r\n  \r\n  \r\n      const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n      const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n  \r\n  \r\n      const [filteredData, setFilteredData] = useState([]);\r\n  \r\n      const [status, setStatus] = useState([])*/\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      setStatus(statuses.data);\n      const getVacancies = await axios.get('/api/Vacations/');\n      const getVacancies1 = await axios.get('/api/Vacations_function/');\n      console.log('getVacancies1=', getVacancies1.data[0].get_vacancies);\n      const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        const filteredVacancies = sortedVacancies.filter(item => item.team_id === departId.departId);\n        setVacancies(getVacancies1.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const handleClick = (name, grade, id, description, statuses) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(statuses);\n      setInputValueStatuses(statuses);\n    }\n  }; // Обработчик изменения значения для поля ввода с именем\n\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setSearchValue('');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const handleCombinedFilter = () => {\n    if (searchValue.length === 0 && !startDate && !endDate) {\n      // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\n      setFilteredData([]);\n      setFind([]);\n      setIsOpen(true);\n      return;\n    }\n\n    if (searchValue.length !== 0) {\n      // Если есть поисковой запрос, выполняем фильтрацию по нему\n      setFind(vacancies.filter(vac => {\n        return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n      }));\n      setFilteredData([]);\n      setIsOpen(false);\n    } else {\n      // Если нет поискового запроса, выполняем фильтрацию по дате\n      setFilteredData(vacancies.filter(item => {\n        const itemDate = new Date(item.create_date);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        return (!start || itemDate >= start) && (!end || itemDate <= end);\n      }));\n      setFind([]);\n      setIsOpen(false);\n    }\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsMain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCombinedFilter,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: reset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          department: vac.department,\n          vacancies: vac.vacancies,\n          vac: vac,\n          status: status\n        }, vac.department, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentlySearch.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsContainer\",\n          onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n          children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n            vac: vac,\n            departId: departId.departId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 60\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textDescription\",\n          value: inputValueDescription,\n          onChange: handleDescriptionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: statusRef,\n          value: inputValueStatuses,\n          onChange: selectValue,\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHistory\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeData,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesView","departId","statuses","get","setStatus","data","getVacancies","getVacancies1","console","log","get_vacancies","sortedVacancies","sort","a","b","create_date","localeCompare","isOpen","filteredVacancies","filter","item","team_id","setVacancies","handleClick","name","grade","id","description","localUser","isAdmin","setModalVacations","setVacanciesId","setSelectedVacanciesName","setInputValue","setSelectedVacanciesDescription","setInputValueDescription","setSelectedVacanciesGrade","setInputValueGrade","setSelectedVacanciesStatuses","setInputValueStatuses","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","handleStatusesInputChange","reset","searchRef","current","setSearchValue","setStartDate","setEndDate","handleStartDateChange","handleEndDateChange","selectValue","statusRef","handleCombinedFilter","searchValue","length","startDate","endDate","setFilteredData","setFind","setIsOpen","vacancies","vac","toLowerCase","includes","itemDate","Date","start","end","ChangeData","namevacanciesId","vacanciesId","namevacancies","inputValue","inputValueDescription","Statuses","inputValueStatuses","inputValueGrade","res","put","map","department","status","currentlySearch","status_id","filteredData","textAlign","modalVacations"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n/*    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(5)\r\n\r\n    const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n    const [postsPerPageVacancies] = useState(5)\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [find, setFind] = useState([])\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex)\r\n\r\n    const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies\r\n    const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies\r\n    const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies)\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n    const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies)\r\n\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])*/\r\n\r\n\r\n    useEffect(() => {\r\n        const VacanciesView = async () => {\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(statuses.data)\r\n\r\n            const getVacancies = await axios.get('/api/Vacations/')\r\n\r\n            const getVacancies1 = await axios.get('/api/Vacations_function/')\r\n\r\n            console.log('getVacancies1=',getVacancies1.data[0].get_vacancies)\r\n\r\n            const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                const filteredVacancies = sortedVacancies.filter(item => item.team_id === departId.departId);\r\n                setVacancies(getVacancies1.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const handleClick = (name, grade,id,description,statuses) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(statuses)\r\n            setInputValueStatuses(statuses)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Обработчик изменения значения для поля ввода с именем\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setSearchValue('')\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n            setFilteredData([]);\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n            setFind([]);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n    const ChangeData ={\r\n    namevacanciesId:vacanciesId,\r\n    namevacancies:inputValue,\r\n    description:inputValueDescription,\r\n    Statuses:inputValueStatuses,\r\n    grade:inputValueGrade,\r\n    statuses:statusRef.current.value\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n                    <div className=\"VacationsMain\">\r\n\r\n{/*                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />*/}\r\n{/*                            <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>*/}\r\n                    </div>\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n                {isOpen ? (\r\n                    vacancies.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id} >\r\n                            <VacanciesItem key={vac.department} department={vac.department} vacancies={vac.vacancies} vac={vac} status={status}/>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>\r\n                        {currentlySearch.map((vac, id) => (<div className='VacationsContainer' key={id} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                                <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}\r\n                         onClick={() => handleClick(vac.name, vac.grade)}>\r\n                        <VacanciesItem vac={vac}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n                <div style={{textAlign:'center'}}>\r\n{/*                {isOpen ?\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={vacancies.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n                    :\r\n\r\n                    <Pagination postsPerPage={postsPerPageVacancies} totalPosts={find.length}\r\n                                paginate={paginateVacancies}\r\n                                currentPage={currentPageVacancies}/>}*/}\r\n                </div>\r\n\r\n\r\n            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                           value={inputValueDescription}\r\n                           onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                    <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}