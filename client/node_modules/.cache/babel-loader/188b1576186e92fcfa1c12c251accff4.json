{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [openPath, setOpenPath] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n  }, []);\n  useEffect(() => {\n    if (selectedId !== null) {\n      const path = findDepartmentById(dep, selectedId);\n\n      if (path) {\n        setOpenPath(path.map(d => d.department_tree_to_json.id));\n      }\n    }\n  }, [selectedId, dep]);\n\n  const handleSelect = () => {\n    setSelectedId(21);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const isOpen = openPath.includes(node.department_tree_to_json.id);\n\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                onClick: () => handleSelect(node.department_tree_to_json.id),\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: !isOpen,\n              children: node.department_tree_to_json.Subclasses.map(departments => {\n                const isSubOpen = openPath.includes(departments.id);\n                return /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      onClick: () => handleSelect(departments.id),\n                      children: departments.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 61\n                    }, this)\n                  }, departments.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: !isSubOpen,\n                  children: !!departments.Subclasses && departments.Subclasses.map(departments1 => {\n                    const isSub1Open = openPath.includes(departments1.id);\n                    return /*#__PURE__*/_jsxDEV(TreeView, {\n                      nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                        to: `/department/${departments1.id}`,\n                        className: \"depsUser\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"node\",\n                          onClick: () => handleSelect(departments1.id),\n                          children: departments1.Name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 78,\n                          columnNumber: 73\n                        }, this)\n                      }, departments1.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 69\n                      }, this),\n                      defaultCollapsed: !isSub1Open,\n                      children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                        to: `/department/${departments2.id}`,\n                        className: \"depsUser\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            paddingBottom: '8px'\n                          },\n                          onClick: () => handleSelect(departments2.id),\n                          children: departments2.Name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 88,\n                          columnNumber: 73\n                        }, this)\n                      }, departments2.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 69\n                      }, this))\n                    }, departments1.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 49\n                }, this);\n              })\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"2X+bFjKLmD3LInT+EP8cVBXJ8ss=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","selectedId","setSelectedId","openPath","setOpenPath","getDeps","res","get","data","department_tree_to_json","length","path","findDepartmentById","map","d","id","handleSelect","node","i","isOpen","includes","label","Name","Subclasses","departments","isSubOpen","departments1","isSub1Open","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const [openPath, setOpenPath] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedId !== null) {\r\n            const path = findDepartmentById(dep, selectedId);\r\n            if (path) {\r\n                setOpenPath(path.map(d => d.department_tree_to_json.id));\r\n            }\r\n        }\r\n    }, [selectedId, dep]);\r\n\r\n    const handleSelect = () => {\r\n        setSelectedId(21);\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => {\r\n                                const isOpen = openPath.includes(node.department_tree_to_json.id);\r\n                                const label = (\r\n                                    <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                        <span className=\"node\" onClick={() => handleSelect(node.department_tree_to_json.id)}>\r\n                                            {node.department_tree_to_json.Name}\r\n                                        </span>\r\n                                    </Link>\r\n                                );\r\n\r\n                                return (\r\n                                    <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={!isOpen}>\r\n                                        {node.department_tree_to_json.Subclasses.map((departments) => {\r\n                                            const isSubOpen = openPath.includes(departments.id);\r\n                                            return (\r\n                                                <TreeView\r\n                                                    nodeLabel={\r\n                                                        <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                                            <span className=\"node\" onClick={() => handleSelect(departments.id)}>\r\n                                                                {departments.Name}\r\n                                                            </span>\r\n                                                        </Link>\r\n                                                    }\r\n                                                    key={departments.id}\r\n                                                    defaultCollapsed={!isSubOpen}\r\n                                                >\r\n                                                    {!!departments.Subclasses && departments.Subclasses.map((departments1) => {\r\n                                                        const isSub1Open = openPath.includes(departments1.id);\r\n                                                        return (\r\n                                                            <TreeView\r\n                                                                nodeLabel={\r\n                                                                    <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                                        <span className=\"node\" onClick={() => handleSelect(departments1.id)}>\r\n                                                                            {departments1.Name}\r\n                                                                        </span>\r\n                                                                    </Link>\r\n                                                                }\r\n                                                                key={departments1.id}\r\n                                                                defaultCollapsed={!isSub1Open}\r\n                                                            >\r\n                                                                {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                                    <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                                        <div style={{ paddingBottom: '8px' }} onClick={() => handleSelect(departments2.id)}>\r\n                                                                            {departments2.Name}\r\n                                                                        </div>\r\n                                                                    </Link>\r\n                                                                ))}\r\n                                                            </TreeView>\r\n                                                        );\r\n                                                    })}\r\n                                                </TreeView>\r\n                                            );\r\n                                        })}\r\n                                    </TreeView>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}