{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  var _localUser$checkedDep5;\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [modalActive, setModalActive] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const changedArr = [];\n  const [isModalFetching, setIsModalFetching] = useState(false);\n\n  for (let i = 0; i < ((_localUser$checkedDep = localUser.checkedDeps) === null || _localUser$checkedDep === void 0 ? void 0 : _localUser$checkedDep.length); i++) {\n    var _localUser$checkedDep;\n\n    changedArr.push(localUser.checkedDeps[i]);\n  } // ставит галочки в модалке\n\n\n  function addChecked(deps) {\n    for (let i = 0; i < deps.length; i++) {\n      for (let j = 0; j < ((_localUser$checkedDep2 = localUser.checkedDeps) === null || _localUser$checkedDep2 === void 0 ? void 0 : _localUser$checkedDep2.length); j++) {\n        var _localUser$checkedDep2;\n\n        if (deps[i]._id === localUser.checkedDeps[j]) {\n          deps[i].checked = true;\n        }\n      }\n    }\n  } // фильтр нужных департаментов\n\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep[0].children.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep); // фильтр нужных людей\n\n  const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId));\n  const usersFilterDeps = users.filter(user => {\n    var _localUser$checkedDep3;\n\n    return (_localUser$checkedDep3 = localUser.checkedDeps) === null || _localUser$checkedDep3 === void 0 ? void 0 : _localUser$checkedDep3.find(f => f === user.departmentId);\n  });\n  const depsFilterDeps = deps.filter(dep => {\n    var _localUser$checkedDep4;\n\n    return (_localUser$checkedDep4 = localUser.checkedDeps) === null || _localUser$checkedDep4 === void 0 ? void 0 : _localUser$checkedDep4.find(f => f === dep._id);\n  });\n  const isLockDeps = localUser.checkedDeps !== null && ((_localUser$checkedDep5 = localUser.checkedDeps) === null || _localUser$checkedDep5 === void 0 ? void 0 : _localUser$checkedDep5.length) > 0;\n  let addChildrenArr = [];\n  useEffect(() => {\n    // получение всех пользователей\n    const fetchUsers = async () => {\n      setIsFetching(true);\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(filterUsers);\n      setIsFetching(false);\n    }; // получение данных о себе\n\n\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user/' + localUser._id);\n      setUser(res.data);\n      setIsFetching(false);\n    }; // получение и фильтр департаментов\n\n\n    fetchUser();\n    setIsOpen(false);\n    fetchUsers();\n  }, [departId]); // фильтр пользователей по статусу\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  }\n\n  const handleClick = () => {\n    if (departId) {\n      setIsOpen(true);\n    } else {\n      setModalActive(true);\n    }\n  }; // добавляем/удаляем департамент в модалке\n\n\n  const handlePush = e => {\n    if (e.target.checked) {\n      changedArr.push(e.target.value);\n    } else {\n      const index = changedArr.indexOf(e.target.value);\n      changedArr.splice(index, 1);\n      delete e.target.checked;\n    }\n  }; // добавление дочерних\n\n\n  const handleAddChildren = e => {\n    if (e.target.checked) {\n      const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n      addChildrenArr = deps.filter(dep => currentDep[0].children.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n    } else {\n      addChildrenArr = [];\n    }\n  }; // обновляем данные модального окна\n\n\n  const handleModalClick = async e => {\n    e.preventDefault();\n    let newInfo;\n\n    if (departId) {\n      addChildrenArr = addChildrenArr.map(i => i._id);\n      newInfo = {\n        userId: user._id,\n        checkedDeps: [departId, ...addChildrenArr]\n      };\n    } else {\n      newInfo = {\n        userId: user._id,\n        checkedDeps: changedArr\n      };\n    }\n\n    try {\n      await axios.put('/api/users/' + localUser._id, newInfo);\n\n      if (user._id === localUser._id) {\n        localStorage.setItem('user', JSON.stringify({ ...user,\n          ...newInfo\n        }));\n      }\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [!departId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"changeDepsContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"changeDeps\",\n          onClick: handleClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 28\n    }, this), departId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"btnStaff\",\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isFetching\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }, this) : users.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyStaff\",\n        children: \"\\u0421\\u043F\\u0438c\\u043E\\u043A \\u043F\\u0443\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }, this) : departId ? !isOpen ? users.filter(user => user.departmentId === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 106\n      }, this)) : usersFilter.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 65\n      }, this)) : isLockDeps ? usersFilterDeps.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 69\n      }, this)) : users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 59\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [isModalFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 26\n        }, this) : deps.map((dep, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: dep.departmentName,\n          style: {\n            paddingLeft: `${dep.margin}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: dep._id,\n            id: dep.departmentName,\n            name: dep.departmentName,\n            onChange: handlePush,\n            checked: dep.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), dep.departmentName]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 49\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleAddChildren\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"BrHvh6o9yqmekn+UTJ2D+5MDt8M=\", false, function () {\n  return [useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","useParams","Modal","Staff","users","setUsers","user","setUser","deps","setDeps","isOpen","setIsOpen","isFetching","setIsFetching","departId","username","localUser","JSON","parse","localStorage","getItem","modalActive","setModalActive","modalMain","setModalMain","changedArr","isModalFetching","setIsModalFetching","i","checkedDeps","length","push","addChecked","j","_id","checked","currentDep","filter","dep","departmentId","filterDeps","children","find","dep_id","usersFilter","f","usersFilterDeps","depsFilterDeps","isLockDeps","addChildrenArr","fetchUsers","res","get","data","sort","a","b","user_name","localeCompare","filterUsers","filterUsersFoo","fetchUser","status","concat","handleClick","handlePush","e","target","value","index","indexOf","splice","handleAddChildren","handleModalClick","preventDefault","newInfo","map","userId","put","setItem","stringify","window","location","reload","error","console","log","float","id","departmentName","paddingLeft","margin"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\nexport default function Staff() {\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [deps, setDeps] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const departId = useParams().username\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalMain, setModalMain] = useState(false)\r\n    const changedArr = []\r\n    const [isModalFetching, setIsModalFetching] = useState(false)\r\n\r\n    for(let i=0; i<localUser.checkedDeps?.length; i++){\r\n        changedArr.push(localUser.checkedDeps[i])\r\n    }\r\n\r\n    // ставит галочки в модалке\r\n    function addChecked(deps){\r\n        for(let i=0; i < deps.length; i++){\r\n            for(let j=0; j < localUser.checkedDeps?.length; j++){\r\n                if(deps[i]._id === localUser.checkedDeps[j]){\r\n                    deps[i].checked = true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // фильтр нужных департаментов\r\n    const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n    let filterDeps = deps.filter(dep => currentDep[0].children.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n    filterDeps.push(...currentDep)\r\n\r\n    // фильтр нужных людей\r\n    const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId))\r\n    const usersFilterDeps = users.filter(user => localUser.checkedDeps?.find(f => f === user.departmentId))\r\n    const depsFilterDeps = deps.filter(dep => localUser.checkedDeps?.find(f => f === dep._id))\r\n\r\n    const isLockDeps = localUser.checkedDeps !== null && localUser.checkedDeps?.length > 0\r\n\r\n    let addChildrenArr = []\r\n\r\n    useEffect(() => {\r\n        // получение всех пользователей\r\n        const fetchUsers = async () => {\r\n            setIsFetching(true)\r\n            const res = await axios.get('/api/user')\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n            let filterUsers = filterUsersFoo(res.data)\r\n            setUsers(filterUsers)\r\n            setIsFetching(false)\r\n        }\r\n\r\n        // получение данных о себе\r\n        const fetchUser = async () => {\r\n            const res = await axios.get('/api/user/'+localUser._id)\r\n            setUser(res.data)\r\n            setIsFetching(false)\r\n        }\r\n\r\n        // получение и фильтр департаментов\r\n\r\n\r\n        fetchUser()\r\n        setIsOpen(false)\r\n        fetchUsers()\r\n    }, [departId])\r\n\r\n    // фильтр пользователей по статусу\r\n    function filterUsersFoo(users){\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4))\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if(departId){\r\n            setIsOpen(true)\r\n        }else{\r\n            setModalActive(true)\r\n        }\r\n    }\r\n\r\n    // добавляем/удаляем департамент в модалке\r\n    const handlePush = e => {\r\n        if (e.target.checked) {\r\n            changedArr.push(e.target.value)\r\n        }else{\r\n            const index = changedArr.indexOf(e.target.value)\r\n            changedArr.splice(index, 1)\r\n            delete e.target.checked\r\n        }\r\n    }\r\n\r\n    // добавление дочерних\r\n    const handleAddChildren = e => {\r\n        if (e.target.checked) {\r\n            const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n            addChildrenArr = deps.filter(dep => currentDep[0].children.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n        }else{\r\n            addChildrenArr = []\r\n        }\r\n    }\r\n\r\n    // обновляем данные модального окна\r\n    const handleModalClick = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let newInfo\r\n\r\n        if(departId){\r\n            addChildrenArr = addChildrenArr.map(i => i._id)\r\n            newInfo= {\r\n                userId: user._id,\r\n                checkedDeps: [departId, ...addChildrenArr]\r\n            }\r\n        }else{\r\n            newInfo= {\r\n                userId: user._id,\r\n                checkedDeps: changedArr\r\n            }\r\n        }\r\n\r\n        try {\r\n            await axios.put('/api/users/'+localUser._id, newInfo)\r\n            if(user._id === localUser._id){\r\n                localStorage.setItem('user', JSON.stringify({...user, ...newInfo}))\r\n            }\r\n            window.location.reload()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='staff'>\r\n            { !departId && <div className='changeDepsContainer'>\r\n                <div><span className='changeDeps' onClick={handleClick}>Изменить</span></div>\r\n            </div>}\r\n            {departId && <>\r\n                <button onClick={handleClick} className='btnStaff'>Показать дочерние</button>\r\n                <button onClick={() => setIsOpen(false)} className='btnStaff'>Скрыть дочерние</button>\r\n                <button onClick={() => setModalMain(true)} className='btnStaff' style={{float: 'right'}}>Сделать главной</button>\r\n            </>}\r\n            <div className=\"employeeWrapper\">\r\n                {isFetching\r\n                    ? <div className='isFetching'>Загрузка...</div>\r\n                    : users.length === 0\r\n                        ? <div className='emptyStaff'>Спиcок пуст</div>\r\n                        : departId\r\n                            ? !isOpen\r\n                                ? users.filter(user => user.departmentId === departId).map((user, id) => <Employee key={id} user={user}/>)\r\n                                : usersFilter.map((user, id) => <Employee key={id} user={user}/>)\r\n                            : isLockDeps\r\n                                ? usersFilterDeps.map((user, id) => <Employee key={id} user={user}/>)\r\n                                : users.map((user, id) => <Employee key={id} user={user}/>)\r\n                }\r\n            </div>\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    {isModalFetching\r\n                        ?<div>Загрузка</div>\r\n                        : deps.map((dep, id) => <label key={id} htmlFor={dep.departmentName} style={{paddingLeft: `${dep.margin}px`}}>\r\n                            <input\r\n                                type='checkbox'\r\n                                value={dep._id}\r\n                                id={dep.departmentName}\r\n                                name={dep.departmentName}\r\n                                onChange={handlePush}\r\n                                checked={dep.checked}\r\n                            />{dep.departmentName}</label>)\r\n                    }\r\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n                        Изменить\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={handleAddChildren}\r\n                        />Добавить дочерние</label>\r\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n                        Изменить\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}