{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Link, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Employee.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const [vote, setVote] = useState([]);\n  const [admin, setAdmin] = useState(['']);\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null);\n  const username = useParams();\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const setDat = new Date();\n  setDat.setDate(setDat.getDate());\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  } // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n\n  useEffect(() => {\n    const fetchUserpost = async () => {\n      const res = await axios.get('/api/post?type=1&id=' + user.id);\n      const users = await axios.get('/api/user/' + user.id);\n\n      if (users.data.isadmin === true) {\n        setAdmin('*');\n      } else {\n        setAdmin('');\n      }\n\n      setDate('');\n      setTime('');\n\n      try {\n        setDate(res.data[0].workdate);\n        setTime(res.data[0].workend);\n      } catch {}\n\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.workstart) - new Date(p1.workstart);\n      }));\n      setIsFetching(false);\n    };\n\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + user.id);\n      const vt = await axios.get('/api/vote');\n      setVote(vt.data);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        setDateStart(res.data[0].workdate);\n        setDateEnd(res.data[0].worked);\n      }\n    };\n\n    if (user.status === 1) {\n      fetchUser();\n    }\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n\n    if (user.status === 7) {\n      fetchUser();\n    }\n\n    if (user.status === 6) {\n      fetchUser();\n    }\n\n    if (user.status === 5) {\n      fetchUser();\n    }\n\n    if (user.status === 2 || user.nomination_status) {\n      fetchUserpost();\n    }\n  }, [username._id]);\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Employee, \"ZfzOKFCVQcGF9NJ2mePcup9vMh0=\", false, function () {\n  return [useParams];\n});\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","useParams","useEffect","useState","axios","Employee","user","vote","setVote","admin","setAdmin","posts","setPosts","isFetching","setIsFetching","date","setDate","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","username","localUser","JSON","parse","localStorage","getItem","setDat","Date","getDate","usersStatuses","findStatus","k","i","fetchUserpost","res","get","id","users","data","isadmin","workdate","workend","sort","p1","p2","workstart","fetchUser","vt","length","global","worked","status","nomination_status","_id","images","src","title"],"mappings":"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","sourcesContent":["import {Link, useParams} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\n\r\nimport axios from 'axios'\r\nimport './Employee.css'\r\n\r\n\r\nexport default function Employee({user}) {\r\n\r\n  const [vote, setVote] = useState([])\r\n  const [admin, setAdmin] = useState([''])\r\n  const [posts, setPosts] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n  const username = useParams()\r\n\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const setDat = new Date()\r\n  setDat.setDate(setDat.getDate())\r\n\r\n\r\n  const usersStatuses = {\r\n    0: '',\r\n    1: 'start',\r\n    2: 'end',\r\n    3: 'sick_leave',\r\n    4: 'deleted',\r\n    5: 'vacation',\r\n    6: 'time_off',\r\n    7: 'other'\r\n  }\r\n\r\n  function findStatus(k) {\r\n    for (let i in usersStatuses) {\r\n      if (i == k) {\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUserpost = async () => {\r\n      const res = await axios.get('/api/post?type=1&id=' + user.id)\r\n      const users = await axios.get('/api/user/' + user.id)\r\n\r\n      if (users.data.isadmin === true) {\r\n        setAdmin('*')\r\n      } else {\r\n        setAdmin('')\r\n      }\r\n\r\n      setDate('')\r\n      setTime('')\r\n      try {\r\n        setDate(res.data[0].workdate)\r\n        setTime(res.data[0].workend)\r\n      } catch {\r\n      }\r\n      setPosts(res.data.sort((p1, p2) => {\r\n        return new Date(p2.workstart) - new Date(p1.workstart)\r\n      }))\r\n      setIsFetching(false)\r\n\r\n    }\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/vacation?id=' + user.id)\r\n      const vt = await axios.get('/api/vote')\r\n      setVote(vt.data)\r\n      if (res.data.length === 0) {\r\n        setDateStart(global.workdate = '')\r\n        setDateEnd(global.worked = '')\r\n      } else {\r\n        setDateStart(res.data[0].workdate)\r\n        setDateEnd(res.data[0].worked)\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (user.status === 1) {\r\n      fetchUser()\r\n    }\r\n    if (user.status === 3) {\r\n      fetchUser()\r\n    }\r\n\r\n    if (user.status === 7) {\r\n      fetchUser()\r\n    }\r\n    if (user.status === 6) {\r\n      fetchUser()\r\n    }\r\n\r\n    if (user.status === 5) {\r\n      fetchUser()\r\n    }\r\n    if (user.status === 2 || user.nomination_status) {\r\n      fetchUserpost()\r\n    }\r\n\r\n\r\n  }, [username._id])\r\n\r\n  const images = {\r\n    '1': { src: '../images/1.png', title: 'Тучка' },\r\n    '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n    '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n    '4': { src: '../images/4.png', title: 'Портной' },\r\n    '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n    '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n    '7': { src: '../images/7.png', title: 'Крот' },\r\n    '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n    '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n    '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n  };\r\n\r\n  return (\r\n      <>\r\n\r\n        </>\r\n  )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}