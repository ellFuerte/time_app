{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\pages\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport \"./Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const email = useRef();\n  const password = useRef();\n  const passwordAgain = useRef();\n  const username = useRef();\n  const department = useRef();\n  const [deps, setDeps] = useState([]);\n  const [error, setError] = useState('');\n  const [checkVal, setCheckVal] = useState(false);\n\n  const changeVal = e => {\n    setCheckVal(!checkVal);\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    if (password.current.value !== passwordAgain.current.value) {\n      passwordAgain.current.setCustomValidity('Пароли не совпадают');\n    } else if (department.current.value === '') {\n      setError('Не все поля заполнены');\n      return;\n    } else {\n      const user = {\n        user_name: username.current.value,\n        email: email.current.value.toUpperCase(),\n        department_id: department.current.value,\n        password: password.current.value,\n        isadmin: checkVal\n      };\n      const res = await axios.post('/api/Register/', user);\n\n      if (res.data.status === \"Username taken\") {\n        setError(\"Такой email уже существует\");\n      } else {\n        await axios.post('/api/Register/', user);\n        history.push('/login');\n      }\n    }\n  };\n\n  function handleSubmit() {\n    setCount(count + 1);\n\n    if (count <= 0) {\n      setError('Email должен содержать формат домена vtb');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"sdfsdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registerCenter\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registerBox\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u0418\\u043C\\u044F\",\n          required: true,\n          ref: username,\n          className: \"registerInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 IvanoIA@vtb.ru\",\n          type: \"email\",\n          required: true,\n          ref: email,\n          className: \"registerInput\",\n          onChange: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: department,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep.id,\n            children: dep.department_name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 40\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0438\\u043A \\u043E\\u0442\\u0434\\u0435\\u043B\\u0430?\", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"trueAdmin\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: true,\n              name: \"trueAdmin\",\n              checked: checkVal,\n              onChange: changeVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), \"\\u0414\\u0430\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"falseAdmin\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: false,\n              name: \"falseAdmin\",\n              checked: !checkVal,\n              onChange: changeVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), \"\\u041D\\u0435\\u0442\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password\",\n          type: \"password\",\n          required: true,\n          ref: password,\n          className: \"registerInput\",\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password Again\",\n          type: \"password\",\n          required: true,\n          ref: passwordAgain,\n          className: \"registerInput\",\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerButton\",\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            width: '167%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"registerLoginButton\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"ldUrsxn+tYpiCxv6VlSz8oWM+KI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/time_app/client/src/pages/Register/Register.jsx"],"names":["axios","useEffect","useRef","useState","Link","useHistory","Register","count","setCount","email","password","passwordAgain","username","department","deps","setDeps","error","setError","checkVal","setCheckVal","changeVal","e","history","getDeps","res","get","data","handleClick","preventDefault","current","value","setCustomValidity","user","user_name","toUpperCase","department_id","isadmin","post","status","push","handleSubmit","map","dep","name","id","department_name","width"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const [count, setCount] = useState(0)\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordAgain = useRef()\r\n  const username = useRef()\r\n  const department = useRef()\r\n  const [deps, setDeps] = useState([])\r\n  const [error, setError] = useState('')\r\n  const [checkVal, setCheckVal] = useState(false)\r\n  const changeVal = (e) => {\r\n    setCheckVal(!checkVal)\r\n  }\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const getDeps = async () => {\r\n      const res = await axios.get('/api/departments/')\r\n      setDeps(res.data)\r\n    }\r\n\r\n    getDeps()\r\n  }, [])\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault()\r\n    if(password.current.value !== passwordAgain.current.value){\r\n      passwordAgain.current.setCustomValidity('Пароли не совпадают')\r\n    } else if(department.current.value === ''){\r\n      setError('Не все поля заполнены')\r\n      return\r\n    } else {\r\n\r\n      const user = {\r\n        user_name: username.current.value,\r\n        email: email.current.value.toUpperCase(),\r\n        department_id: department.current.value,\r\n        password: password.current.value,\r\n        isadmin: checkVal\r\n      }\r\n\r\n        const res = await axios.post('/api/Register/', user)\r\n        if (res.data.status === \"Username taken\"){\r\n          setError(\"Такой email уже существует\")\r\n\r\n        }else{\r\n          await axios.post('/api/Register/', user)\r\n          history.push('/login')\r\n        }\r\n\r\n    }\r\n  }\r\n  function handleSubmit() {\r\nsetCount(count+1)\r\n    if(count<=0){\r\n      setError('Email должен содержать формат домена vtb')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n<div>\r\n  sdfsdf\r\n</div>\r\n        <div className=\"registerCenter\">\r\n\r\n          <form className=\"registerBox\" onSubmit={handleClick}>\r\n            <input\r\n              placeholder=\"Фамилия Имя\"\r\n              required ref={username}\r\n              className=\"registerInput\"\r\n            />\r\n            <input\r\n              placeholder=\"Email в формате IvanoIA@vtb.ru\"\r\n              type='email'\r\n              required ref={email}\r\n              className=\"registerInput\"\r\n              onChange={handleSubmit}\r\n            />\r\n            <select ref={department}>\r\n              <option value=''>Выберите подразделение</option>\r\n              {deps.map((dep, name) => <option key={name} value={dep.id}>{dep.department_name}</option>)}\r\n            </select>\r\n            <div>\r\n              Начальник отдела?\r\n              <label htmlFor='trueAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={true}\r\n                name='trueAdmin'\r\n                checked={checkVal}\r\n                onChange={changeVal}\r\n              />Да</label>\r\n              <label htmlFor='falseAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={false}\r\n                name='falseAdmin'\r\n                checked={!checkVal}\r\n                onChange={changeVal}\r\n              />Нет</label>\r\n            </div>\r\n            <input\r\n              placeholder=\"Password\"\r\n              type='password'\r\n              required ref={password}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n            />\r\n            <input\r\n              placeholder=\"Password Again\"\r\n              type='password'\r\n              required ref={passwordAgain}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n            />\r\n            <button className=\"registerButton\" type='submit'>Зарегистрироваться</button>\r\n\r\n            <Link to='/login' style={{width:'167%'}}>\r\n\r\n              <button className=\"registerLoginButton\">\r\n                Войти в аккаунт\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}