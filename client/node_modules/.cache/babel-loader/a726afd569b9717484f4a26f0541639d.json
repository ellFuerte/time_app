{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [seeChilds, setSeeChilds] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [UsersDep, setUsersDeps] = useState([]);\n  const [us, setUs] = useState([]);\n  const [user, setUser] = useState({});\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const depsId = useParams().username;\n  useEffect(() => {\n    // Вывод статистики для админов\n    const get_statistics_all_users = async () => {\n      if (localUser.isAdmin) {\n        const getUsers = {\n          id: localUser._id\n        };\n        const res = await axios.post('/api/get_statistics_all_users', getUsers);\n        const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let all_users = filterUsersFoo(all); // Условия для отображения сообщений об отсутствии данных\n        // ... (оставляем ваш код проверки условий)\n\n        if (!!~document.location.href.indexOf('/all_users/')) {\n          setIsJob(isJob);\n          setStatisticsWork(all_users);\n        } // ... (добавляем аналогичные проверки для других условий)\n\n      }\n    }; // Функция показывает нажата ли галочка показать дочерние\n\n\n    const statusChild = async () => {\n      const user = await axios.get('/api/user/' + localUser._id);\n      setChecked(user.data.see_child);\n      setUser(user.data);\n    }; // Получение всех пользователей\n\n\n    const fetchUsers = async () => {\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(filterUsers);\n    }; // Получение пользователей департамента при условии checked=true\n\n\n    const getUsersByDepIsCheckedTrue = async () => {\n      if (user.main_department === departId && checked) {\n        const info = {\n          depsId: departId\n        };\n        const res = await axios.post('/api/get_users_by_dep/', info);\n        const depUsers = res.data[0].get_users_by_dep;\n\n        if (depUsers) {\n          const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n          const filteredUsers = filterUsersFoo(sortedUsers);\n          setUs(filteredUsers);\n        } else {\n          setUs([]);\n        }\n      }\n    };\n\n    setIsJob(true);\n\n    if (departId) {\n      setUsersDeps([]);\n    }\n\n    if (user.main_department === departId) {\n      setUsers([]);\n    }\n\n    fetchUsers();\n    getUsersByDepIsCheckedTrue();\n    get_statistics_all_users();\n    statusChild();\n  }, [departId, user.main_department, checked]); // Сортировка пользователей по статусам\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  } // Обработка нажатия на чекбокс\n\n\n  const clickcheckbox = async () => {\n    setChecked(!checked);\n    const info = {\n      userId: localUser._id,\n      ischeked: !checked\n    };\n    await axios.post('/api/statusChild/', info);\n    const inf = {\n      depsId: depsId\n    };\n    const res = await axios.post('/api/get_users_by_dep/', inf);\n    const dep_users = res.data[0]['get_users_by_dep'];\n\n    if (dep_users === null) {\n      setUs([]);\n    } else {\n      dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(dep_users);\n      setUs(filterUsers);\n    }\n  }; // Обновляем главный департамент по кнопке \"изменить\" в модальном окне\n\n\n  const handleModalClick = async e => {\n    e.preventDefault();\n    const add = {\n      id: localUser._id,\n      depsId: depsId\n    };\n    await axios.put('/api/user', add);\n    setModalMain(false);\n  }; // Функция получения пользователей по департаменту при нажатии на кнопку \"показать дочерние\"\n\n\n  const get_users_by_depIsOpen = async () => {\n    if (isJob) {\n      const info = {\n        depsId: departId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {\n        setUsersDeps([]);\n      } else {\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let filterUsers = filterUsersFoo(dep_users);\n        setUsersDeps(filterUsers);\n        setUsers([]);\n        setIsJob(!isJob);\n        setIsOpen(true);\n      }\n    } else {\n      setUsersDeps([]);\n      setIsJob(true);\n      setIsOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_depIsOpen,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_depIsOpen,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 38\n      }, this) : '']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [user.main_department === departId && checked && !isOpen ? us.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 44\n      }, this)) : users.filter(user => user.department_id === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 95\n      }, this)), !departId ? statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 56\n      }, this)) : '', isOpen ? UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 50\n      }, this)) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleModalClick,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: clickcheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"submit\",\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"wrb/hK5MXXXXHu+/P/7YxxwRB+M=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","seeChilds","setSeeChilds","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","UsersDep","setUsersDeps","us","setUs","user","setUser","deps","setDeps","isOpen","setIsOpen","isJob","setIsJob","isFetching","setIsFetching","modalMain","setModalMain","departId","username","localUser","JSON","parse","localStorage","getItem","depsId","get_statistics_all_users","isAdmin","getUsers","id","_id","res","post","all","data","sort","a","b","user_name","localeCompare","all_users","filterUsersFoo","document","location","href","indexOf","statusChild","get","see_child","fetchUsers","filterUsers","getUsersByDepIsCheckedTrue","main_department","info","depUsers","get_users_by_dep","sortedUsers","filteredUsers","filter","status","concat","clickcheckbox","userId","ischeked","inf","dep_users","handleModalClick","e","preventDefault","add","put","get_users_by_depIsOpen","width","float","map","department_id"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [seeChilds, setSeeChilds] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const [statisticsWork, setStatisticsWork] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [UsersDep, setUsersDeps] = useState([]);\r\n    const [us, setUs] = useState([]);\r\n    const [user, setUser] = useState({});\r\n    const [deps, setDeps] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isJob, setIsJob] = useState(true);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [modalMain, setModalMain] = useState(false);\r\n\r\n    const departId = useParams().username;\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    const depsId = useParams().username;\r\n\r\n    useEffect(() => {\r\n        // Вывод статистики для админов\r\n        const get_statistics_all_users = async () => {\r\n            if (localUser.isAdmin) {\r\n                const getUsers = { id: localUser._id };\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers);\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                let all_users = filterUsersFoo(all);\r\n                // Условия для отображения сообщений об отсутствии данных\r\n                // ... (оставляем ваш код проверки условий)\r\n                if (!!~document.location.href.indexOf('/all_users/')) {\r\n                    setIsJob(isJob);\r\n                    setStatisticsWork(all_users);\r\n                }\r\n                // ... (добавляем аналогичные проверки для других условий)\r\n            }\r\n        }\r\n\r\n        // Функция показывает нажата ли галочка показать дочерние\r\n        const statusChild = async () => {\r\n            const user = await axios.get('/api/user/' + localUser._id);\r\n            setChecked(user.data.see_child);\r\n            setUser(user.data);\r\n        }\r\n\r\n        // Получение всех пользователей\r\n        const fetchUsers = async () => {\r\n            const res = await axios.get('/api/user');\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            let filterUsers = filterUsersFoo(res.data);\r\n            setUsers(filterUsers);\r\n        }\r\n\r\n        // Получение пользователей департамента при условии checked=true\r\n        const getUsersByDepIsCheckedTrue = async () => {\r\n            if (user.main_department === departId && checked) {\r\n                const info = { depsId: departId };\r\n                const res = await axios.post('/api/get_users_by_dep/', info);\r\n                const depUsers = res.data[0].get_users_by_dep;\r\n                if (depUsers) {\r\n                    const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                    const filteredUsers = filterUsersFoo(sortedUsers);\r\n                    setUs(filteredUsers);\r\n                } else {\r\n                    setUs([]);\r\n                }\r\n            }\r\n        }\r\n\r\n        setIsJob(true);\r\n\r\n        if (departId) {\r\n            setUsersDeps([]);\r\n        }\r\n        if (user.main_department === departId) {\r\n            setUsers([]);\r\n        }\r\n\r\n        fetchUsers();\r\n        getUsersByDepIsCheckedTrue();\r\n        get_statistics_all_users();\r\n        statusChild();\r\n\r\n    }, [departId, user.main_department, checked]);\r\n\r\n    // Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4));\r\n    }\r\n\r\n    // Обработка нажатия на чекбокс\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked);\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n        const inf = {\r\n            depsId: depsId\r\n        };\r\n        const res = await axios.post('/api/get_users_by_dep/', inf);\r\n        const dep_users = res.data[0]['get_users_by_dep'];\r\n\r\n        if (dep_users === null) {\r\n            setUs([]);\r\n        } else {\r\n            dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            let filterUsers = filterUsersFoo(dep_users);\r\n            setUs(filterUsers);\r\n        }\r\n    }\r\n\r\n    // Обновляем главный департамент по кнопке \"изменить\" в модальном окне\r\n    const handleModalClick = async (e) => {\r\n        e.preventDefault();\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: depsId\r\n        }\r\n        await axios.put('/api/user', add);\r\n        setModalMain(false);\r\n    }\r\n\r\n    // Функция получения пользователей по департаменту при нажатии на кнопку \"показать дочерние\"\r\n    const get_users_by_depIsOpen = async () => {\r\n        if (isJob) {\r\n            const info = { depsId: departId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const dep_users = res.data[0]['get_users_by_dep'];\r\n            if (dep_users === null) {\r\n                setUsersDeps([]);\r\n            } else {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                let filterUsers = filterUsersFoo(dep_users);\r\n                setUsersDeps(filterUsers);\r\n                setUsers([]);\r\n                setIsJob(!isJob);\r\n                setIsOpen(true);\r\n            }\r\n        } else {\r\n            setUsersDeps([]);\r\n            setIsJob(true);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='staff'>\r\n            <>\r\n                {isJob ?\r\n                    <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                        Показать дочерние\r\n                    </button>\r\n                    :\r\n                    <button onClick={get_users_by_depIsOpen} className=\"btnStaff\">\r\n                        Скрыть дочерние\r\n                    </button>\r\n                }\r\n                <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n                {localUser.isAdmin ? <Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link> : ''}\r\n            </>\r\n            <div className=\"employeeWrapper\">\r\n                {user.main_department === departId && checked && !isOpen\r\n                    ? us.map((user, id) => <Employee key={id} user={user} />)\r\n                    : users.filter(user => user.department_id === departId).map((user, id) => <Employee key={id} user={user} />)\r\n                }\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    : ''\r\n                }\r\n                {isOpen\r\n                    ? UsersDep.map((user, id) => <Employee key={id} user={user} />)\r\n                    : ''\r\n                }\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr />\r\n                <form className=\"modalLoginBox\" onSubmit={handleModalClick}>\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние\r\n                    </label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\">\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}