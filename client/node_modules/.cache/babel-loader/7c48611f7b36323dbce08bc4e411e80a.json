{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\HistoryInfo\\\\HistoryInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport InfoPost from '../InfoPost/InfoPost';\nimport Pagination from '../Pagination/Pagination';\nimport VacationPost from '../VacationPost/VacationPost';\nimport './HistoryInfo.css';\nimport Modal from '../Templates/Modal/Modal';\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HistoryInfo() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [vacationPosts, setVacationPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(30);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex);\n  const lastPostIndexVacations = currentPage * postsPerPage;\n  const firstPostIndexVacations = lastPostIndexVacations - postsPerPage;\n  const currentlyVacations = vacationPosts.slice(firstPostIndexVacations, lastPostIndexVacations);\n  const historyStartWork = useRef(null);\n  const historyEndWork = useRef(null);\n  const [isFilter, setIsFilter] = useState(false);\n  const [newPosts, setNewPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [modalError, setModalError] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const [isJob, setIsJob] = useState(true);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalName, setModalName] = useState(null);\n  const modalComment = useRef();\n  const vacationStart = useRef();\n  const vacationEnd = useRef(); // получение всех постов работы от послелнего к первому\n\n  useEffect(() => {\n    setIsFetching(true);\n    fetchUserpost();\n  }, [username]);\n\n  const fetchUserpost = async () => {\n    const res = await axios.get('/api/post?type=1&id=' + localUser._id);\n    setPosts(res.data.sort((p1, p2) => {\n      return new Date(p2.workstart) - new Date(p1.workstart);\n    }));\n    setIsFetching(false);\n  };\n\n  const paginate = pageNumber => setCurrentPage(pageNumber); // фильтер постов по дате\n\n\n  const handleClick = async () => {\n    const start = historyStartWork.current.value;\n    const end = historyEndWork.current.value;\n\n    if (start === \"\" || end === \"\") {\n      setError('Введите дату');\n    } else {\n      if (start !== '' || end !== '') {\n        setError('Выберите дату');\n      }\n\n      if (end < start) {\n        setError('Конечная дата меньше начальной');\n      } else {\n        const filter = {\n          startdate: historyStartWork.current.value,\n          enddate: historyEndWork.current.value,\n          userId: localUser._id,\n          typework: isJob\n        };\n        setError('');\n\n        const fill = async () => {\n          const res = await axios.post('/api/post/filter', filter);\n          setVacationPosts(res.data.sort((p1, p2) => {\n            return new Date(p2.workstart) - new Date(p1.workstart);\n          }));\n          setPosts(res.data.sort((p1, p2) => {\n            return new Date(p2.workstart) - new Date(p1.workstart);\n          }));\n          setError('');\n        };\n\n        fill();\n      }\n    }\n    /*      let filterPosts = isJob\r\n          ?  posts.filter(post => post.workdate.split('T')[0] >= start)\r\n          : vacationPosts.filter(post => post.start.split('T')[0] >= start)\r\n        if(end){\r\n          filterPosts = isJob\r\n            ? filterPosts.filter(post => post.workdate.split('T')[0] <= end)\r\n            : filterPosts.filter(post => post.end.split('T')[0] <= end)\r\n        }\r\n        setNewPosts(filterPosts)*/\n\n  }; // сброс фильтра\n\n\n  const handleClickCancel = async () => {\n    setError('');\n    setIsFilter(false);\n    historyStartWork.current.value = '';\n    historyEndWork.current.value = '';\n  }; // получение всех постов об отпуске/больничном от послелнего к первому\n\n\n  useEffect(() => {\n    setIsFetching(true);\n    fetchUservacation();\n  }, [username]);\n\n  const fetchUservacation = async () => {\n    const res = await axios.get('/api/vacation?id=' + localUser._id);\n    setVacationPosts(res.data.sort((p1, p2) => {\n      return new Date(p2.start) - new Date(p1.start);\n    }));\n    setIsFetching(false);\n  }; // добавление больничного\n\n\n  const handleClickAdd = async e => {\n    e.preventDefault();\n    const res = await axios.get('/api/user' + localUser._id);\n    console.log('res=', res.data);\n    const currentDay = new Date();\n\n    if (vacationStart.current.value === '' || vacationEnd.current.value === '' || modalName === null || modalComment.current.value === '') {\n      setModalError('Вcе поля должны быть заполнены');\n      return;\n    }\n\n    if (new Date(vacationStart.current.value) > new Date(vacationEnd.current.value) && vacationEnd.current.value !== '') {\n      setModalError('Вторая дата меньше первой');\n      return;\n    }\n\n    const date = moment().format('YYYY-MM-DD');\n    const vacation = {\n      userId: localUser._id,\n      status: vacationStart.current.value !== date ? posts[0]['typework_id'] : modalName,\n      comment: modalComment.current.value,\n      start: new Date(vacationStart.current.value),\n      end: new Date(vacationEnd.current.value)\n    };\n    /*    const newPost = {\r\n          userId: localUser._id,\r\n          healthEnd: 1,\r\n          workEnd: new Date(Date.now()),\r\n          workTime: new Date(Date.now()) - new Date(posts[0].workStart)\r\n        }*/\n\n    const isTrue = new Date(vacationStart.current.value) <= currentDay && currentDay.getDate() <= vacation.end.getDate() + 1;\n\n    try {\n      await axios.post('/api/vacation/', vacation);\n      /*      if (isTrue) {\r\n             /!* await axios.put(\"/api/post/\"+posts[0]._id, newPost)*!/\r\n              await axios.put('/api/user/'+localUser._id, {status:3, userId: username})\r\n              if (localUser._id === username) {\r\n                localStorage.setItem('user', JSON.stringify({...localUser, status:3}))\r\n              }\r\n            }*/\n\n      /*window.location.reload()*/\n    } catch (error) {\n      console.log(error);\n    }\n  }; // переход на страницу с больничным и обратно\n\n\n  const handleWorkVacation = () => {\n    if (isJob) {\n      fetchUservacation();\n    } else {\n      fetchUserpost();\n    }\n\n    setIsJob(!isJob);\n    setError('');\n    setIsFilter(false);\n    historyStartWork.current.value = '';\n    historyEndWork.current.value = '';\n  };\n\n  const handleName = e => {\n    setModalName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"historyInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historyInfoTop\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"historyInfoTitle\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"workVacation\",\n        onClick: handleWorkVacation,\n        children: isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          style: {\n            width: '155px'\n          },\n          children: \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A/\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 106\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), !isJob && (localUser || username === localUser._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addVacation\",\n        onClick: () => setModalActive(true),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorHistoryInfo\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historyFilter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n        className: \"ModalInput\",\n        ref: historyStartWork,\n        style: {\n          'marginRight': '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), \"\\u2014  \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n        className: \"ModalInput\",\n        ref: historyEndWork,\n        style: {\n          'marginRight': '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filterButton\",\n        onClick: handleClick,\n        children: \"\\u041E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filterButton\",\n        onClick: handleClickCancel,\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), isJob ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfodate\",\n        children: \"\\u0414\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0437\\u0434\\u043E\\u0440\\u043E\\u0432\\u044C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfocomment\",\n        children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopostdate\",\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u041A\\u043E\\u043D\\u0435\\u0446\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historyinfopost\",\n        children: \"\\u041F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"historycomment\",\n        children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), isJob ? isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this) : isFilter ? newPosts.map((post, id) => /*#__PURE__*/_jsxDEV(InfoPost, {\n      post: post,\n      username: username\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 42\n    }, this)) : currentlyPosts.map((post, id) => /*#__PURE__*/_jsxDEV(InfoPost, {\n      post: post,\n      username: username\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 48\n    }, this)) : isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this) : isFilter ? newPosts.map((post, id) => /*#__PURE__*/_jsxDEV(VacationPost, {\n      post: post,\n      username: username\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 42\n    }, this)) : currentlyVacations.map((post, id) => /*#__PURE__*/_jsxDEV(VacationPost, {\n      post: post\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 52\n    }, this)), isJob ? /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: vacationPosts.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), modalError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorHistoryInfo\",\n        children: modalError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClickAdd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: '20px',\n            width: '60%',\n            marginLeft: '20%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sickLeave\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 3,\n              id: \"sickLeave\",\n              name: \"sickLeave\",\n              onChange: handleName,\n              checked: modalName === '3'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 13\n            }, this), \"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vacation\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 5,\n              id: \"vacation\",\n              name: \"vacation\",\n              onChange: handleName,\n              checked: modalName === '5'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 13\n            }, this), \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 6,\n              id: \"other\",\n              name: \"time\",\n              onChange: handleName,\n              checked: modalName === '6'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), \"\\u041E\\u0442\\u0433\\u0443\\u043B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"anotherReason\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 7,\n              id: \"anotherReason\",\n              name: \"anotherReason\",\n              onChange: handleName,\n              checked: modalName === '7'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 13\n            }, this), \"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputVacanciesDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n            className: \"ModalInputInfoVacancies\",\n            ref: vacationStart,\n            style: {\n              'marginRight': '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n            className: \"ModalInputInfoVacancies\",\n            ref: vacationEnd,\n            style: {\n              'marginRight': '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          className: \"ModalInputInfoVacanciesComment\",\n          ref: modalComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HistoryInfo, \"whQHxQ+HS3NYvAo2qFQg6gndaTY=\", false, function () {\n  return [useParams];\n});\n\n_c = HistoryInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/HistoryInfo/HistoryInfo.jsx"],"names":["axios","useRef","useEffect","useState","InfoPost","Pagination","VacationPost","Modal","useParams","moment","HistoryInfo","posts","setPosts","vacationPosts","setVacationPosts","isFetching","setIsFetching","currentPage","setCurrentPage","postsPerPage","lastPostIndex","firstPostIndex","currentlyPosts","slice","lastPostIndexVacations","firstPostIndexVacations","currentlyVacations","historyStartWork","historyEndWork","isFilter","setIsFilter","newPosts","setNewPosts","error","setError","modalError","setModalError","username","localUser","_id","email","JSON","parse","localStorage","getItem","isJob","setIsJob","modalActive","setModalActive","modalName","setModalName","modalComment","vacationStart","vacationEnd","fetchUserpost","res","get","data","sort","p1","p2","Date","workstart","paginate","pageNumber","handleClick","start","current","value","end","filter","startdate","enddate","userId","typework","fill","post","handleClickCancel","fetchUservacation","handleClickAdd","e","preventDefault","console","log","currentDay","date","format","vacation","status","comment","isTrue","getDate","handleWorkVacation","handleName","target","width","map","id","length","display","justifyContent","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { useRef } from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport InfoPost from '../InfoPost/InfoPost'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport VacationPost from '../VacationPost/VacationPost'\r\nimport './HistoryInfo.css'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default function HistoryInfo() {\r\n  const [posts, setPosts] = useState([])\r\n  const [vacationPosts, setVacationPosts] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [postsPerPage] = useState(30)\r\n\r\n  const lastPostIndex = currentPage * postsPerPage\r\n  const firstPostIndex = lastPostIndex - postsPerPage\r\n  const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n  const lastPostIndexVacations = currentPage * postsPerPage\r\n  const firstPostIndexVacations = lastPostIndexVacations - postsPerPage\r\n  const currentlyVacations = vacationPosts.slice(firstPostIndexVacations, lastPostIndexVacations)\r\n\r\n\r\n\r\n  const historyStartWork = useRef(null)\r\n  const historyEndWork = useRef(null)\r\n  const [isFilter, setIsFilter] = useState(false)\r\n  const [newPosts, setNewPosts] = useState([])\r\n  const [error, setError] = useState('')\r\n  const [modalError, setModalError] = useState('')\r\n  const username=useParams()\r\n\r\n  let localUser = !!username ? {_id:username.username,email:\"\"} : JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n\r\n  const [isJob, setIsJob] = useState(true)\r\n\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalName, setModalName] = useState(null)\r\n  const modalComment = useRef()\r\n  const vacationStart = useRef()\r\n  const vacationEnd = useRef()\r\n\r\n  // получение всех постов работы от послелнего к первому\r\n\r\n   useEffect(() => {\r\n    setIsFetching(true)\r\n\r\n     fetchUserpost()\r\n  }, [username])\r\n\r\n  const fetchUserpost = async () => {\r\n    const res = await axios.get('/api/post?type=1&id='+localUser._id)\r\n    setPosts(res.data.sort((p1, p2) => {\r\n      return new Date(p2.workstart) - new Date(p1.workstart)\r\n    }))\r\n    setIsFetching(false)\r\n  }\r\n\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n  // фильтер постов по дате\r\n      const handleClick = async () => {\r\n      const start = historyStartWork.current.value\r\n      const end = historyEndWork.current.value\r\n      if (start === \"\" || end === \"\" ) {\r\n        setError('Введите дату')\r\n      } else{\r\n        if (start !== '' || end !== '') {\r\n          setError('Выберите дату')}\r\n        if (end< start) {\r\n          setError('Конечная дата меньше начальной')}\r\n\r\n        else{\r\n\r\n        const filter = {\r\n          startdate: historyStartWork.current.value,\r\n          enddate: historyEndWork.current.value,\r\n          userId: localUser._id,\r\n          typework:isJob\r\n        }\r\n        setError('')\r\n\r\n        const fill = async () => {\r\n        const res = await axios.post('/api/post/filter',filter)\r\n          setVacationPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.workstart) - new Date(p1.workstart)\r\n          }))\r\n          setPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.workstart) - new Date(p1.workstart)\r\n          }))\r\n        setError('')\r\n        }\r\n          fill()\r\n      }}\r\n\r\n/*      let filterPosts = isJob\r\n      ?  posts.filter(post => post.workdate.split('T')[0] >= start)\r\n      : vacationPosts.filter(post => post.start.split('T')[0] >= start)\r\n    if(end){\r\n      filterPosts = isJob\r\n        ? filterPosts.filter(post => post.workdate.split('T')[0] <= end)\r\n        : filterPosts.filter(post => post.end.split('T')[0] <= end)\r\n    }\r\n    setNewPosts(filterPosts)*/\r\n\r\n  }\r\n\r\n\r\n  // сброс фильтра\r\n  const handleClickCancel = async () =>{\r\n    setError('')\r\n    setIsFilter(false)\r\n    historyStartWork.current.value = ''\r\n    historyEndWork.current.value = ''\r\n  }\r\n\r\n\r\n  // получение всех постов об отпуске/больничном от послелнего к первому\r\n    useEffect(() => {\r\n    setIsFetching(true)\r\n\r\n      fetchUservacation()\r\n  }, [username])\r\n\r\n  const fetchUservacation = async () => {\r\n    const res = await axios.get('/api/vacation?id='+localUser._id)\r\n    setVacationPosts(res.data.sort((p1, p2) => {\r\n      return new Date(p2.start) - new Date(p1.start)\r\n    }))\r\n    setIsFetching(false)\r\n  }\r\n  // добавление больничного\r\n  const handleClickAdd = async (e) => {\r\n\r\n    e.preventDefault()\r\n    const res = await axios.get('/api/user'+localUser._id)\r\n    console.log('res=',res.data)\r\n    const currentDay = new Date()\r\n\r\n    if(vacationStart.current.value === '' || vacationEnd.current.value === '' || modalName === null || modalComment.current.value === ''){\r\n      setModalError('Вcе поля должны быть заполнены')\r\n      return\r\n    }\r\n\r\n    if(new Date(vacationStart.current.value) > new Date(vacationEnd.current.value) && vacationEnd.current.value !== ''){\r\n      setModalError('Вторая дата меньше первой')\r\n      return\r\n    }\r\n    const date = moment().format('YYYY-MM-DD')\r\n\r\n\r\n\r\n\r\n\r\n    const vacation = {\r\n      userId: localUser._id,\r\n      status: (vacationStart.current.value!==date ? posts[0]['typework_id'] : modalName),\r\n      comment: modalComment.current.value,\r\n      start: new Date(vacationStart.current.value),\r\n      end: new Date(vacationEnd.current.value)\r\n    }\r\n\r\n/*    const newPost = {\r\n      userId: localUser._id,\r\n      healthEnd: 1,\r\n      workEnd: new Date(Date.now()),\r\n      workTime: new Date(Date.now()) - new Date(posts[0].workStart)\r\n    }*/\r\n\r\n    const isTrue = new Date(vacationStart.current.value) <= currentDay && currentDay.getDate() <= vacation.end.getDate()+1\r\n\r\n    try {\r\n      await axios.post('/api/vacation/',vacation)\r\n/*      if (isTrue) {\r\n       /!* await axios.put(\"/api/post/\"+posts[0]._id, newPost)*!/\r\n        await axios.put('/api/user/'+localUser._id, {status:3, userId: username})\r\n        if (localUser._id === username) {\r\n          localStorage.setItem('user', JSON.stringify({...localUser, status:3}))\r\n        }\r\n      }*/\r\n      /*window.location.reload()*/\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // переход на страницу с больничным и обратно\r\n  const handleWorkVacation = () => {\r\n    if(isJob){\r\n      fetchUservacation()}else {\r\n      fetchUserpost()\r\n    }\r\n    setIsJob(!isJob)\r\n    setError('')\r\n    setIsFilter(false)\r\n    historyStartWork.current.value = ''\r\n    historyEndWork.current.value = ''\r\n  }\r\n\r\n  const handleName = e => {\r\n    setModalName(e.target.value)\r\n  }\r\n  return (\r\n    <div className='historyInfo'>\r\n      <div className='historyInfoTop'>\r\n        <span className='historyInfoTitle'>История</span>\r\n        <span className='workVacation' onClick={handleWorkVacation}>\r\n          {isJob ? <button className=\"filterButton\" style={{width:'155px'}}>Отпуск/Больничный</button> : <button className=\"filterButton\">Работа</button> }\r\n        </span>\r\n\r\n        {!isJob && (localUser || username === localUser._id)\r\n\r\n        && <div className='addVacation' onClick={() => setModalActive(true)}><span>+</span></div>}\r\n      </div>\r\n      <hr/>\r\n      {error && <div className='errorHistoryInfo'>{error}</div>}\r\n      <div className='historyFilter'>\r\n        <input\r\n          type='date'\r\n          placeholder=\"Начало работы\"\r\n          className=\"ModalInput\"\r\n          ref={historyStartWork}\r\n          style={{'marginRight': '10px'}}\r\n        />\r\n        —  <input\r\n          type='date'\r\n          placeholder=\"Конец работы\"\r\n          className=\"ModalInput\"\r\n          ref={historyEndWork}\r\n          style={{'marginRight': '10px'}}\r\n        />\r\n        <button className=\"filterButton\" onClick={handleClick}>Ок</button>\r\n        <button className=\"filterButton\" onClick={handleClickCancel}>Сбросить</button>\r\n      </div>\r\n      <hr/>\r\n      <br/>\r\n      {isJob\r\n          ?\r\n        <tr>\r\n          <td className=\"historyinfodate\">Дата</td>\r\n          <td className=\"historyinfopost\">Время начала</td>\r\n          <td className=\"historyinfopost\">Время окончания</td>\r\n          <td className=\"historyinfopost\">Длительность</td>\r\n          <td className=\"historyinfopost\">Состояние здоровья</td>\r\n          <td className=\"historyinfocomment\">Комментарий</td>\r\n        </tr>\r\n          :\r\n            <tr>\r\n            <td className=\"historyinfopostdate\">Начало</td>\r\n            <td className=\"historyinfopost\">Конец</td>\r\n            <td className=\"historyinfopost\">Длительность</td>\r\n            <td className=\"historyinfopost\">Причина</td>\r\n            <td className=\"historycomment\">Комментарий</td>\r\n            </tr>\r\n      }\r\n\r\n      {isJob\r\n        ? isFetching\r\n          ? <div className='isFatching'>Загрузка...</div>\r\n          : isFilter\r\n            ? newPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n            : currentlyPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n        : isFetching\r\n          ? <div className='isFatching'>Загрузка...</div>\r\n          : isFilter\r\n            ? newPosts.map((post, id) => <VacationPost key={id} post={post} username={username}/>)\r\n            : currentlyVacations.map((post, id) => <VacationPost key={id} post={post}/>)\r\n      }\r\n\r\n      {isJob ?\r\n        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage}/>:\r\n        <Pagination postsPerPage={postsPerPage} totalPosts={vacationPosts.length} paginate={paginate} currentPage={currentPage}/>\r\n      }\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        {modalError && <div className='errorHistoryInfo'>{modalError}</div>}\r\n        <form className=\"modalLoginBox\" onSubmit={handleClickAdd}>\r\n          <div style={{display:'flex', justifyContent:'space-between', fontSize: '20px', width:'60%', marginLeft:'20%'}}>\r\n            <label htmlFor='sickLeave'>\r\n            <input\r\n              type='radio'\r\n              value={3}\r\n              id='sickLeave'\r\n              name='sickLeave'\r\n              onChange={handleName}\r\n              checked={modalName === '3'}\r\n            />Больничный</label>\r\n            <label htmlFor='vacation'>\r\n            <input\r\n              type='radio'\r\n              value={5}\r\n              id='vacation'\r\n              name='vacation'\r\n              onChange={handleName}\r\n              checked={modalName === '5'}\r\n            />Отпуск</label>\r\n            <label htmlFor='time'>\r\n              <input\r\n                  type='radio'\r\n                  value={6}\r\n                  id='other'\r\n                  name='time'\r\n                  onChange={handleName}\r\n                  checked={modalName === '6'}\r\n              />Отгул</label>\r\n            <label htmlFor='anotherReason'>\r\n            <input\r\n              type='radio'\r\n              value={7}\r\n              id='anotherReason'\r\n              name='anotherReason'\r\n              onChange={handleName}\r\n              checked={modalName === '7'}\r\n            />Другая причина</label>\r\n\r\n          </div>\r\n          <div className='inputVacanciesDiv'>\r\n          <input\r\n              type='date'\r\n              placeholder=\"Начало работы\"\r\n              className=\"ModalInputInfoVacancies\"\r\n              ref={vacationStart}\r\n              style={{'marginRight': '10px'}}\r\n          />\r\n            —   <input\r\n              type='date'\r\n              placeholder=\"Конец работы\"\r\n              className=\"ModalInputInfoVacancies\"\r\n              ref={vacationEnd}\r\n              style={{'marginRight': '10px'}}\r\n          />\r\n          </div>\r\n          <input\r\n            placeholder=\"Комментарий\"\r\n            className=\"ModalInputInfoVacanciesComment\"\r\n            ref={modalComment}\r\n          />\r\n\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n            Изменить\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}