{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  console.log('vac=', vacancies);\n  const [message, setMessage] = useState(\"\");\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      old_user: old_user\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n    setMessage('Добавленно');\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setFilteredUsers([]);\n    } else {\n      setFilteredUsers(filtered);\n    }\n  };\n\n  const handleClick = (name, grade, id, description, status_id, user_name, user_id) => {\n    if (localUser.isAdmin === true) {\n      console.log('name=', user_id);\n      setFilteredUsers([]);\n      setMessage([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setOld_user(user_id);\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    console.log('user=', userId);\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Reserve';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Selection';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Securely';\n      // Установите оранжевый цвет для статуса 3\n\n      case 4:\n        return 'Liquidated';\n      // Установите красный цвет для статуса 4\n\n      case 5:\n        return 'Finalist';\n      // Установите красный цвет для статуса 4\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"departmentName\",\n      children: department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-container\",\n      children: [vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angry-grid1\" + getColorByStatusId(vac.status_id),\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id, vac.user_name, vac.user_id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cssportal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div1\",\n            children: vac.user_name ? vac.user_name + '(' + vac.vacancy_code + ')' : vac.vacancy_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div2\",\n            children: date === vac.create_date ? 'NEW' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div3\",\n            children: [\"\\u0413\\u0440\\u0435\\u0439\\u0434: \", vac.grade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div5\",\n            children: [\"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442: \", vac.project_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div6\",\n            children: vac.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [message, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            className: \"InputVacanciesItem\",\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 63\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange,\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n                value: searchTerm,\n                onChange: handleInputChange,\n                className: \"InputVacanciesItem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this), filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"userListContainer\",\n                children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selectNameDiv\",\n                  value: user.id,\n                  onClick: () => handleUserClick(user.user_name, user.id),\n                  children: user.user_name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divHistory\",\n            children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ModalButton\",\n              type: \"submit\",\n              onClick: ChangeData,\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"jX4zvHvTkW6ftN/IhyR6D/poR+A=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","console","log","message","setMessage","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","old_user","setOld_user","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","selectValue","current","ChangeData","namevacanciesId","namevacancies","description","Statuses","grade","statuses","userId","res","put","date","format","searchTerm","setSearchTerm","setUserId","filteredUsers","setFilteredUsers","handleInputChange","term","filtered","filter","user","user_name","toLowerCase","includes","handleClick","name","id","status_id","user_id","isAdmin","handleUserClick","userName","getColorByStatusId","statusId","map","vac","vacancy_code","create_date","project_id","company_name","length","index"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n    console.log('vac=',vacancies)\r\n    const [message, setMessage] = useState(\"\")\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value,\r\n            users:userId,\r\n            old_user:old_user\r\n        }\r\n\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n        setMessage('Добавленно')\r\n    }\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id) => {\r\n        if(localUser.isAdmin===true) {\r\n            console.log('name=',user_id)\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        console.log('user=',userId)\r\n\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 1:\r\n                return 'Reserve'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Selection'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Securely'; // Установите оранжевый цвет для статуса 3\r\n            case 4:\r\n                return 'Liquidated'; // Установите красный цвет для статуса 4\r\n            case 5:\r\n                return 'Finalist'; // Установите красный цвет для статуса 4\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n                <label className='departmentName'>{department}</label>\r\n                <div className=\"vacancies-container\" >\r\n                    {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,vac.user_name,vac.user_id)}>\r\n{/*                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\"></div>\r\n                            <div id=\"div2\">{vac.user_name ? vac.user_name+'\\n'+\r\n                                '('+vac.vacancy_code+')'+'\\n': vac.vacancy_code+'\\n'+'\\n'}</div>\r\n                            <div id=\"div3\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div4\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div5\"></div>\r\n                            <div id=\"div6\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div7\">{vac.company_name}</div>\r\n                        </div>*/}\r\n\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\">{vac.user_name ? vac.user_name+'('+vac.vacancy_code+')': vac.vacancy_code}</div>\r\n                            <div id=\"div2\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div3\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div4\"></div>\r\n                            <div id=\"div5\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div6\">{vac.company_name}</div>\r\n                        </div>\r\n                    </div>\r\n                        ))}\r\n\r\n{/*                    <div id=\"item-01\">\r\n                        <div style={{textAlign:'center'}}>\r\n                            {vac.user_name ? vac.user_name+'\\n'+\r\n                                '('+vac.vacancy_code+')': vac.vacancy_code+'\\n'+'\\n'}\r\n                        </div>\r\n                        <div id=\"item-11\">\r\n                            {date === vac.create_date ? 'NEW' : ''}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"item-21\">\r\n\r\n                    </div>\r\n                    <div id=\"item-31\">\r\n                        Грейд: {vac.grade}\r\n                    </div>\r\n                    <div id=\"item-41\">\r\n                        Проект: {vac.project_id}\r\n                    </div>\r\n                    <div>\r\n                        Компания: {vac.company_name}\r\n                    </div>*/}\r\n\r\n\r\n                    <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                        {message}\r\n                        <div>\r\n                            <input type='text' className=\"ModalInputVacancies\"\r\n                                   value={inputValue}\r\n                                   onChange={handleNameInputChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                        </div>\r\n                        <div>\r\n                            <span>Статус:</span><br/>\r\n                            <select ref={statusRef} value={inputValueStatuses} onChange={selectValue} className='InputVacanciesItem'>\r\n                                {status.map((status, name) => <option key={name}\r\n                                                                      value={status.id}>{status.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <span>Грейд:</span><br/>\r\n                            <input type='number'\r\n                                   value={inputValueGrade}\r\n                                   onChange={handleGradeInputChange}\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div>\r\n\r\n\r\n                                <span>Имя сотрудника</span><br/>\r\n                                <div className='inputDiv'>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='Имя сотрудника'\r\n                                        value={searchTerm}\r\n                                        onChange={handleInputChange}\r\n                                        className='InputVacanciesItem'\r\n                                    />\r\n                                    {filteredUsers.length > 0 && (\r\n                                        <div className=\"userListContainer\">\r\n                                            {filteredUsers.map((user, index) => (\r\n                                                <div className='selectNameDiv' key={index} value={user.id}\r\n                                                     onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                    {user.user_name}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className='divHistory'>\r\n                                История\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                                    Сохранить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </ModalVacancies>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}