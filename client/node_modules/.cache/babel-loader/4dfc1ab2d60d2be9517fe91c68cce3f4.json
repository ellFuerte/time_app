{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\";\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localUser = JSON.parse(localStorage.getItem('user'));\nconst [vacanciesId, setVacanciesId] = useState(\"\");\nconst [modalVacations, setModalVacations] = useState(false);\nconst [inputValue, setInputValue] = useState(\"\");\nconst [inputValueDescription, setInputValueDescription] = useState(\"\");\nconst [inputValueStatuses, setInputValueStatuses] = useState(\"\");\nconst [inputValueGrade, setInputValueGrade] = useState(\"\");\nconst [selectedVacanciesName, setSelectedVacanciesName] = useState('');\nconst [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\nconst [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\nconst [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\nconst statusRef = useRef();\nconst searchRef = useRef();\n\nconst handleClick = (name, grade, id, description, statuses) => {\n  if (localUser.isAdmin === true) {\n    setModalVacations(true);\n    setVacanciesId(id);\n    setSelectedVacanciesName(name);\n    setInputValue(name); // Установка начального значения для name\n\n    setSelectedVacanciesDescription(description);\n    setInputValueDescription(description);\n    setSelectedVacanciesGrade(grade);\n    setInputValueGrade(grade); // Установка начального значения для grade\n\n    setSelectedVacanciesStatuses(statuses);\n    setInputValueStatuses(statuses);\n  }\n};\n\nconst VacanciesItem = ({\n  vac,\n  department,\n  vacancies\n}) => {\n  console.log('vac=', vac);\n  const date = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-tree\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"department\",\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"vacancies-list\",\n        children: vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacancy\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new\",\n              children: date === vac.create_date ? 'NEW' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n              children: vac.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: moment(vac.create_date).format('DD.MM.YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, vac.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textDescription\",\n          value: inputValueDescription,\n          onChange: handleDescriptionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: statusRef,\n          value: inputValueStatuses,\n          onChange: selectValue,\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHistory\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeData,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","searchRef","handleClick","name","grade","id","description","statuses","isAdmin","VacanciesItem","vac","department","vacancies","console","log","date","format","map","create_date","status_id","handleNameInputChange","handleDescriptionInputChange","selectValue","status","handleGradeInputChange","ChangeData"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nconst localUser = JSON.parse(localStorage.getItem('user'))\r\nconst [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\nconst [modalVacations, setModalVacations] = useState(false)\r\n\r\nconst [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\nconst [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\nconst [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\nconst [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n\r\n\r\nconst [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n\r\nconst [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\nconst [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\nconst [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\nconst statusRef = useRef()\r\n\r\nconst searchRef = useRef()\r\n\r\nconst handleClick = (name, grade,id,description,statuses) => {\r\n    if(localUser.isAdmin===true) {\r\n        setModalVacations(true);\r\n        setVacanciesId(id)\r\n\r\n        setSelectedVacanciesName(name);\r\n        setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n        setSelectedVacanciesDescription(description)\r\n        setInputValueDescription(description)\r\n\r\n        setSelectedVacanciesGrade(grade);\r\n        setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n        setSelectedVacanciesStatuses(statuses)\r\n        setInputValueStatuses(statuses)\r\n\r\n    }\r\n\r\n};\r\nconst VacanciesItem =({vac,department,vacancies})=> {\r\n    console.log('vac=',vac)\r\n    const date = moment().format('YYYY-MM-DD');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"vacancies-tree\">\r\n                <div className=\"department\">{department}</div>\r\n                <ul className=\"vacancies-list\">\r\n                    {vacancies.map(vac => (\r\n                        <li key={vac.id}>\r\n                            <div className=\"vacancy\">\r\n                                <div className=\"new\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                                <div className=\"name\" onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>{vac.name}</div>\r\n                                <div className=\"date\">{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                        <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                        Сохранить\r\n                    </button>\r\n                </div>\r\n            </ModalVacancies>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}