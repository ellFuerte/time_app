{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\n  const [activeFilters, setActiveFilters] = useState({\n    company: [],\n    status: [],\n    project: null,\n    department: null,\n    startDate: null,\n    endDate: null\n  });\n  const modalDep = useRef();\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n      setVacancies(getVacancies.data[0].get_vacancies);\n    };\n\n    VacanciesView();\n  }, [departId]);\n  useEffect(() => {\n    applyFilters(activeFilters);\n  }, [vacancies, activeFilters]);\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickFilter = (type, value) => {\n    setActiveFilters(prevFilters => {\n      let newFilters;\n\n      if (type === 'status') {\n        newFilters = { ...prevFilters,\n          status: prevFilters.status.includes(value) ? prevFilters.status.filter(status => status !== value) : [...prevFilters.status, value]\n        };\n      } else if (type === 'company') {\n        newFilters = { ...prevFilters,\n          company: prevFilters.company.includes(value) ? prevFilters.company.filter(company => company !== value) : [...prevFilters.company, value]\n        };\n      } else if (type === 'department') {\n        newFilters = { ...prevFilters,\n          department: prevFilters.department === value ? null : value\n        };\n      }\n\n      return newFilters;\n    });\n  };\n\n  const handleDateChange = (type, value) => {\n    if (type === 'startDate') {\n      setStartDate(value);\n    } else if (type === 'endDate') {\n      setEndDate(value);\n    }\n  };\n\n  const applyFilters = filters => {\n    let filtered = vacancies;\n\n    if (filters.department) {\n      filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\n    }\n\n    if (filters.company.length > 0) {\n      filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))).map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\n      }));\n    }\n\n    if (filters.status.length > 0) {\n      filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))).map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\n      }));\n    }\n\n    if (filters.startDate || filters.endDate) {\n      filtered = filtered.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const startDate = filters.startDate ? new Date(filters.startDate) : null;\n          const endDate = filters.endDate ? new Date(filters.endDate) : null;\n          return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\n        })\n      })).filter(department => department.vacancies.length > 0);\n    }\n\n    setFilteredVacancies(filtered);\n  };\n\n  const handleCombinedFilter = () => {\n    setActiveFilters(prevFilters => {\n      const newFilters = { ...prevFilters,\n        startDate: startDate || null,\n        endDate: endDate || null\n      };\n      applyFilters(newFilters);\n      return newFilters;\n    });\n  };\n\n  const reset = () => {\n    setActiveFilters({\n      company: [],\n      status: [],\n      department: null,\n      startDate: null,\n      endDate: null\n    });\n    setStartDate('');\n    setEndDate('');\n    setFilteredVacancies(vacancies);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 20:\n        return 'Reserve';\n      //  Резерв Установите Белый цвет для статуса 1\n\n      case 30:\n        return 'Selection';\n      // Подбор Установите желтый цвет для статуса 2\n\n      case 50:\n        return 'Securely';\n      // Обеспеченно Установите зелёный цвет для статуса 3\n\n      case 10:\n        return 'Liquidated';\n      // Ликвидированно Установите белый прозрачный цвет для статуса 4\n\n      case 40:\n        return 'Finalist';\n      //  Финалист Установите красный цвет для статуса 5\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  marginRight: '10px'\n                },\n                value: startDate,\n                onChange: e => handleDateChange('startDate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this), \"\\u2014\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  marginRight: '10px'\n                },\n                value: endDate,\n                onChange: e => handleDateChange('endDate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flex: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    ref: modalDep,\n                    className: \"ModalInputUpdateSelect\",\n                    onChange: () => handleClickFilter('department', modalDep.current.value),\n                    children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dep.department_id,\n                      children: dep.department\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flex: 1,\n                    paddingLeft: '20px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"filterButton\",\n                    children: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filtersButton\",\n                onClick: () => handleClickFilter('company', company.name),\n                style: {\n                  boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\n                  opacity: activeFilters.company.includes(company.name) ? '1' : ''\n                },\n                children: company.name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: 'filtersButton' + getColorByStatusId(status.id),\n                onClick: () => handleClickFilter('status', status.name),\n                style: {\n                  boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: activeFilters.status.includes(status.name) ? 'gray' : '',\n                  opacity: activeFilters.status.includes(status.name) ? '1' : ''\n                },\n                children: status.name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), filteredVacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 41\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"UMmUIQPfKhgFP1PuTIbvLqZOdec=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","localUser","JSON","parse","localStorage","getItem","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","status","setStatus","company","setCompany","filteredVacancies","setFilteredVacancies","activeFilters","setActiveFilters","project","department","modalDep","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","applyFilters","clickAdd","clickBackButton","handleClickFilter","type","value","prevFilters","newFilters","includes","filter","handleDateChange","filters","filtered","department_id","parseInt","length","some","vacancy","company_name","map","status_name","vacancyDate","Date","create_date","handleCombinedFilter","reset","getColorByStatusId","statusId","Number","window","location","href","marginRight","e","target","display","flex","current","dep","index","paddingLeft","id","name","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\r\n    const [activeFilters, setActiveFilters] = useState({\r\n        company: [],\r\n        status: [],\r\n        project: null,\r\n        department: null,\r\n        startDate: null,\r\n        endDate: null\r\n    });\r\n    const modalDep = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function = {\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function)\r\n            setVacancies(getVacancies.data[0].get_vacancies)\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [departId])\r\n\r\n\r\n    useEffect(() => {\r\n        applyFilters(activeFilters);\r\n    }, [vacancies, activeFilters]);\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true)\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false)\r\n    }\r\n\r\n    const handleClickFilter = (type, value) => {\r\n        setActiveFilters(prevFilters => {\r\n            let newFilters;\r\n            if (type === 'status') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    status: prevFilters.status.includes(value)\r\n                        ? prevFilters.status.filter(status => status !== value)\r\n                        : [...prevFilters.status, value]\r\n                };\r\n            } else if (type === 'company') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    company: prevFilters.company.includes(value)\r\n                        ? prevFilters.company.filter(company => company !== value)\r\n                        : [...prevFilters.company, value]\r\n                };\r\n            } else if (type === 'department') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    department: prevFilters.department === value ? null : value\r\n                };\r\n            }\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const handleDateChange = (type, value) => {\r\n        if (type === 'startDate') {\r\n            setStartDate(value);\r\n        } else if (type === 'endDate') {\r\n            setEndDate(value);\r\n        }\r\n    };\r\n\r\n\r\n    const applyFilters = (filters) => {\r\n        let filtered = vacancies;\r\n\r\n        if (filters.department) {\r\n            filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\r\n        }\r\n\r\n        if (filters.company.length > 0) {\r\n            filtered = filtered.filter(department =>\r\n                department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))\r\n            ).map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\r\n            }));\r\n        }\r\n\r\n        if (filters.status.length > 0) {\r\n            filtered = filtered.filter(department =>\r\n                department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))\r\n            ).map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\r\n            }));\r\n        }\r\n\r\n        if (filters.startDate || filters.endDate) {\r\n            filtered = filtered.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n                    const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n                    return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\r\n                })\r\n            })).filter(department => department.vacancies.length > 0);\r\n        }\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        setActiveFilters(prevFilters => {\r\n            const newFilters = {\r\n                ...prevFilters,\r\n                startDate: startDate || null,\r\n                endDate: endDate || null\r\n            };\r\n            applyFilters(newFilters);\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const reset = () => {\r\n        setActiveFilters({\r\n            company: [],\r\n            status: [],\r\n            department: null,\r\n            startDate: null,\r\n            endDate: null\r\n        });\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setFilteredVacancies(vacancies);\r\n    };\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (Number(statusId)) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff'\r\n                                    onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад\r\n                            </button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансию</button>\r\n                        </div>\r\n                    )}\r\n                    {isAddingVacancies ? (\r\n                        <VacanciesAdd/>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={(e) => handleDateChange('startDate', e.target.value)}\r\n                                    />\r\n                                    —\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={endDate}\r\n                                        onChange={(e) => handleDateChange('endDate', e.target.value)}\r\n                                    />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <div style={{ flex: 1 }}>\r\n                                            <select\r\n                                                ref={modalDep}\r\n                                                className=\"ModalInputUpdateSelect\"\r\n                                                onChange={() => handleClickFilter('department', modalDep.current.value)}\r\n                                            >\r\n                                                {vacancies.map((dep, index) => (\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={dep.department_id}\r\n                                                    >\r\n                                                        {dep.department}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div style={{ flex: 1 , paddingLeft:'20px'}}>\r\n                                            <button className='filterButton'\r\n                                            >Проект</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\r\n                                                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\r\n                                                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            {\r\n                                filteredVacancies.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                       department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                            }\r\n\r\n\r\n                            {/*                               {\r\n                                   filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }*/}\r\n\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}