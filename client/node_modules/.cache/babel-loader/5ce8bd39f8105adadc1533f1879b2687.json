{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  console.log('vac=', vacancies);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [users_name, setUser_name] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const handleClick = (name, grade, id, description, status_id, user_name) => {\n    if (localUser.isAdmin === true) {\n      setFilteredUsers([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      console.log('id=', vacanciesId);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setUser_name(user_name);\n    }\n  };\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setFilteredUsers([]);\n    } else {\n      setFilteredUsers(filtered);\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Green';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Yellow';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Orange';\n      // Установите оранжевый цвет для статуса 3\n\n      case 4:\n        return 'Red';\n      // Установите красный цвет для статуса 4\n\n      default:\n        return 'Black';\n      // По умолчанию черный цвет\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vacancies_employee_main_container\",\n        children: vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'vacancies_employee_main' + getColorByStatusId(vac.status_id),\n          onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id, vac.user_name),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-01\",\n            children: vac.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-11\",\n            children: date === vac.create_date ? 'NEW' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"item-41\",\n            children: moment(vac.create_date).format('DD.MM.YYYY')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, vac.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n            value: searchTerm,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divSelect\",\n            children: filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: user.id,\n                onClick: () => handleUserClick(user.user_name, user.id),\n                children: user.user_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divHistory\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalButton\",\n            type: \"submit\",\n            onClick: ChangeData,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(VacanciesItem, \"gMdNLu2VXBzK6TIjEW+P0AMIHRw=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","console","log","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","users_name","setUser_name","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","handleClick","name","grade","id","description","status_id","user_name","isAdmin","setFilteredUsers","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","handleStatusesInputChange","reset","current","handleStartDateChange","handleEndDateChange","selectValue","ChangeData","namevacanciesId","namevacancies","Statuses","statuses","userId","res","put","date","format","searchTerm","setSearchTerm","setUserId","filteredUsers","handleInputChange","term","filtered","filter","user","toLowerCase","includes","handleUserClick","userName","getColorByStatusId","statusId","map","vac","create_date","length","index"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n    console.log('vac=',vacancies)\r\n\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [users_name, setUser_name] = useState(\"\")\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name) => {\r\n        if(localUser.isAdmin===true) {\r\n            setFilteredUsers([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            console.log('id=',vacanciesId)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setUser_name(user_name)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value,\r\n            users:userId\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 1:\r\n                return 'Green'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Yellow'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Orange'; // Установите оранжевый цвет для статуса 3\r\n            case 4:\r\n                return 'Red'; // Установите красный цвет для статуса 4\r\n            default:\r\n                return 'Black'; // По умолчанию черный цвет\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>{department}</div>\r\n                <div className='vacancies_employee_main_container'>\r\n                {vacancies.map(vac => (\r\n                    <div key={vac.name} className={'vacancies_employee_main'+getColorByStatusId(vac.status_id)} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,vac.user_name)}>\r\n                        <div id=\"item-01\">{vac.name}</div>\r\n                        <div id=\"item-11\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                        <div id=\"item-41\">{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n\r\n                    </div>\r\n                ))}\r\n                </div>\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <hr/>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea  className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        Статус\r\n                    </div>\r\n                    <div>\r\n                        <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                            {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='inputDiv'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Имя сотрудника'\r\n                            value={searchTerm}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <div className='divSelect'>\r\n                            {filteredUsers.length > 0 && (\r\n                                <div>\r\n                                    {filteredUsers.map((user, index) => (\r\n                                        <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                            {user.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <label>Грейд</label>\r\n                        </div>\r\n                        <input type='number'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}