{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesAdd\\\\VacanciesAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './VacanciesAdd.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesAdd({\n  users\n}) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [deps, setDeps] = useState([]);\n  const [userId, setUserId] = useState([]);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [isView, setIsView] = useState(false);\n  const [vacancies, setVacancies] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const [checkVal, setCheckVal] = useState(false);\n  const NameVacationRef = useRef();\n  const TeamRef = useRef();\n  const StatusRef = useRef();\n  const CodeVacations = useRef();\n  const Company = useRef();\n  const Description = useRef();\n  const CodeProject = useRef();\n  const Grade = useRef();\n\n  const changeVal = () => {\n    setCheckVal(!checkVal);\n  };\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const departament = await axios.get('/api/departments/');\n      setDeps(departament.data);\n      const status = await axios.get('/api/Vacations/?status=status');\n      setStatus(status.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n      setVacancies(getVacancies.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const handleUserClick = (userName, userId) => {\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setFilteredUsers([]);\n    } else {\n      setFilteredUsers(filtered);\n    }\n  };\n\n  const clickHandler = async () => {\n    const filteredVacancies = vacancies.flatMap(({\n      get_vacancies\n    }) => get_vacancies.flatMap(({\n      vacancies\n    }) => vacancies.filter(vacancy => vacancy.vacancy_code.toLowerCase() === CodeVacations.current.value.trim().toLowerCase())));\n    let userNameToSend = '';\n\n    if (searchTerm !== '') {\n      userNameToSend = userId;\n    }\n\n    const Vacations = {\n      namevacancies: NameVacationRef.current.value,\n      description: Description.current.value,\n      team_id: TeamRef.current.value,\n      status_id: StatusRef.current.value,\n      codeVacations: CodeVacations.current.value.trim(),\n      codeProject: CodeProject.current.value,\n      company_id: Company.current.value,\n      grade: Grade.current.value,\n      is_checked: checkVal,\n      userName: userNameToSend\n    };\n\n    if (NameVacationRef.current.value === '' || Description.current.value === '' || TeamRef.current.value === '' || StatusRef.current.value === '' || CodeVacations.current.value === '' || CodeProject.current.value === '' || Grade.current.value === '' || Company.current.value === '') {\n      setError(\"Заполните поле\");\n      setIsView(true);\n      console.log('CodeVacations.current.value=', CodeVacations.current.value);\n    } else {\n      const res = await axios.post('/api/Vacations/', Vacations);\n\n      if (res.status === 200) {\n        setError('');\n        setMessage('Вакансия добавленна');\n      }\n    }\n  };\n\n  const clearInput = () => {\n    Description.current.value = '';\n    NameVacationRef.current.value = '';\n    CodeVacations.current.value = '';\n    CodeProject.current.value = '';\n    Grade.current.value = '';\n    setMessage('');\n    setError('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VacationsMainAdd\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this), !error && isView && message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }, this), message && !error && !isView && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }, this), error && isView && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: NameVacationRef,\n          type: \"text\",\n          placeholder: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n          className: \"InputVacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: Description,\n          placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n          className: \"InputVacationAdd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: TeamRef,\n          className: \"SelectVacation\",\n          children: deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: dep.id === localUser.departmentId,\n            value: dep.id,\n            children: dep.department_name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 58\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: StatusRef,\n          className: \"SelectVacation\",\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 59\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: CodeVacations,\n          type: \"text\",\n          placeholder: \"\\u041A\\u043E\\u0434 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n          className: \"InputVacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n          className: \"InputVacation\",\n          value: searchTerm,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divSelect\",\n          children: filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectNameDiv\",\n              value: user.id,\n              onClick: () => handleUserClick(user.user_name, user.id),\n              children: user.user_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: Company,\n          className: \"SelectVacation\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), company.map((company, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.id,\n            children: company.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 65\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: CodeProject,\n          type: \"number\",\n          placeholder: \"\\u041A\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430(\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0431\\u044E\\u0434\\u0436\\u0435\\u0442 0)\",\n          className: \"InputVacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: Grade,\n          type: \"number\",\n          placeholder: \"\\u0413\\u0440\\u0435\\u0439\\u0434\",\n          className: \"InputVacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            paddingRight: '10px'\n          },\n          children: \"\\u041D\\u0443\\u0436\\u043D\\u0430 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Vacation\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: true,\n            id: \"Vacation\",\n            name: \"VacationTrue\",\n            checked: !checkVal,\n            onChange: changeVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), \"\\u0414\\u0430\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Vacation1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: false,\n            id: \"Vacation\",\n            name: \"VacationFalse\",\n            checked: checkVal,\n            onChange: changeVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), \"\\u041D\\u0435\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          onClick: clickHandler,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          onClick: clearInput,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesAdd, \"DReZU1FgEaXk6KstdV5trwh0LKc=\");\n\n_c = VacanciesAdd;\nexport default VacanciesAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesAdd\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesAdd/VacanciesAdd.jsx"],"names":["React","useEffect","useRef","useState","axios","VacanciesAdd","users","localUser","JSON","parse","localStorage","getItem","deps","setDeps","userId","setUserId","error","setError","message","setMessage","isView","setIsView","vacancies","setVacancies","status","setStatus","company","setCompany","checkVal","setCheckVal","NameVacationRef","TeamRef","StatusRef","CodeVacations","Company","Description","CodeProject","Grade","changeVal","getDeps","departament","get","data","vacancies_function","departId","departmentId","user_id","_id","getVacancies","post","handleUserClick","userName","setSearchTerm","setFilteredUsers","searchTerm","filteredUsers","handleInputChange","e","term","target","value","filtered","filter","user","user_name","toLowerCase","includes","clickHandler","filteredVacancies","flatMap","get_vacancies","vacancy","vacancy_code","current","trim","userNameToSend","Vacations","namevacancies","description","team_id","status_id","codeVacations","codeProject","company_id","grade","is_checked","console","log","res","clearInput","textAlign","map","dep","name","id","department_name","length","index","marginTop","paddingRight","paddingTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nimport './VacanciesAdd.css'\r\nimport axios from \"axios\";\r\n\r\nfunction VacanciesAdd({users}) {\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [deps, setDeps] = useState([])\r\n    const [userId, setUserId] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [isView, setIsView] = useState(false)\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [checkVal, setCheckVal] = useState(false)\r\n    const NameVacationRef=useRef()\r\n    const TeamRef = useRef()\r\n    const StatusRef = useRef()\r\n    const CodeVacations = useRef()\r\n    const Company = useRef()\r\n    const Description = useRef()\r\n    const CodeProject = useRef()\r\n    const Grade = useRef()\r\n\r\n\r\n\r\n\r\n    const changeVal = () => {\r\n        setCheckVal(!checkVal)\r\n    }\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const departament = await axios.get('/api/departments/')\r\n            setDeps(departament.data)\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n            setVacancies(getVacancies.data)\r\n        }\r\n\r\n\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const clickHandler = async () => {\r\n        const filteredVacancies = vacancies.flatMap(({ get_vacancies }) =>\r\n            get_vacancies.flatMap(({ vacancies }) =>\r\n                vacancies.filter((vacancy) =>\r\n                    vacancy.vacancy_code.toLowerCase() === CodeVacations.current.value.trim().toLowerCase()\r\n                )\r\n            )\r\n        )\r\n        let userNameToSend = ''\r\n        if (searchTerm !== '') {\r\n            userNameToSend = userId\r\n        }\r\n        const Vacations = {\r\n            namevacancies: NameVacationRef.current.value,\r\n            description: Description.current.value,\r\n            team_id: TeamRef.current.value,\r\n            status_id: StatusRef.current.value,\r\n            codeVacations: CodeVacations.current.value.trim(),\r\n            codeProject: CodeProject.current.value,\r\n            company_id: Company.current.value,\r\n            grade: Grade.current.value,\r\n            is_checked: checkVal,\r\n            userName: userNameToSend\r\n        }\r\n        if (NameVacationRef.current.value === '' || Description.current.value === '' || TeamRef.current.value === '' ||\r\n            StatusRef.current.value === '' || CodeVacations.current.value === '' || CodeProject.current.value === '' ||\r\n            Grade.current.value === '' || Company.current.value === '')\r\n        {\r\n            setError(\"Заполните поле\")\r\n            setIsView(true)\r\n            console.log('CodeVacations.current.value=',CodeVacations.current.value)\r\n        } else {\r\n            const res = await axios.post('/api/Vacations/', Vacations)\r\n            if (res.status === 200) {\r\n                setError('')\r\n                setMessage('Вакансия добавленна')\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        Description.current.value = ''\r\n        NameVacationRef.current.value=''\r\n        CodeVacations.current.value=''\r\n        CodeProject.current.value=''\r\n        Grade.current.value=''\r\n        setMessage('')\r\n        setError('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n                    <br/>\r\n                    <div className=\"VacationsMainAdd\">\r\n                        <h2 style={{textAlign:'center'}}>Добавить вакансию</h2>\r\n                        {\r\n                            !error && isView && message &&\r\n                            <div className='error'>Добавленно</div>\r\n                        }\r\n                        {\r\n                            message && !error && !isView &&\r\n                            <div className='error'>Добавленно</div>\r\n                        }\r\n                        {\r\n                            error && isView &&\r\n                            <div className='error'>Заполните все поля</div>\r\n                        }\r\n\r\n                        <div>\r\n                        </div>\r\n                        <div>\r\n                            <input ref={NameVacationRef} type='text' placeholder='Наименование вакансии' className='InputVacation'/>\r\n                        </div>\r\n                        <div>\r\n                            <textarea ref={Description} placeholder='Описание вакансии' className='InputVacationAdd'/>\r\n                        </div>\r\n                        <div>\r\n                            <select ref={TeamRef} className='SelectVacation'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === localUser.departmentId} key={name}\r\n                                                                 value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                        <select ref={StatusRef} className='SelectVacation'>\r\n                            {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div>\r\n                            <input ref={CodeVacations} type='text' placeholder='Код вакансии' className='InputVacation'/>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className='inputDiv'>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Имя сотрудника'\r\n                                className='InputVacation'\r\n                                value={searchTerm}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <div className='divSelect'>\r\n                                {filteredUsers.length > 0 && (\r\n                                    <div>\r\n                                        {filteredUsers.map((user, index) => (\r\n                                            <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                {user.user_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <select ref={Company} className='SelectVacation'>\r\n                                <option value=''>Компания</option>\r\n                                {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <input ref={CodeProject} type='number' placeholder='Код проекта(текущий бюджет 0)' className='InputVacation'/>\r\n                        </div>\r\n                        <div>\r\n                            <input ref={Grade} type='number' placeholder='Грейд' className='InputVacation'/>\r\n                        </div>\r\n                        <div style={{marginTop:'20px'}}>\r\n                        <label style={{paddingRight:'10px'}}>Нужна вакансия после завершения проекта?</label>\r\n                        <label htmlFor='Vacation'>\r\n                            <input\r\n                            type='radio'\r\n                            value={true}\r\n                            id='Vacation'\r\n                            name='VacationTrue'\r\n                            checked={!checkVal}\r\n                            onChange={changeVal}\r\n                        />Да</label>\r\n                        <label htmlFor='Vacation1'>\r\n                            <input\r\n                            type='radio'\r\n                            value={false}\r\n                            id='Vacation'\r\n                            name='VacationFalse'\r\n                            checked={checkVal}\r\n                            onChange={changeVal}\r\n                        />Нет</label>\r\n                        </div>\r\n                        <div style={{textAlign:'center',paddingTop:\"20px\"}}>\r\n                            <button className=\"filterButton\" onClick={clickHandler}>Сохранить</button>\r\n                            <button className=\"filterButton\" onClick={clearInput}>Сбросить</button>\r\n                            {/*<button className=\"filterButton\" onClick={() => window.location.href = `/department/${depsId.depsId}`} >Выход</button>*/}\r\n                        </div>\r\n                    </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesAdd"]},"metadata":{},"sourceType":"module"}