{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Status\\\\Status.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { CircularProgress } from '@material-ui/core';\nimport Modal from '../Templates/Modal/Modal';\nimport './Status.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst usersStatuses = {\n  0: '',\n  1: 'start',\n  2: 'end',\n  3: 'sick_leave',\n  4: 'deleted',\n  5: 'vacation',\n  6: 'time_off',\n  7: 'other'\n};\n\nfunction findStatus(k) {\n  for (let i in usersStatuses) {\n    if (i == k) {\n      return usersStatuses[i];\n    }\n  }\n}\n\nexport default function Status() {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [isFetching, setIsFetching] = useState(false);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState('');\n  const [modalActive, setModalActive] = useState(false);\n  const [modalName, setModalName] = useState();\n  const modalComment = useRef(); // получение данных пользователя о работе\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user/' + localUser._id);\n      setUser(res.data);\n      /*     setPosts(res.data.sort((p1, p2) => {\r\n             return new Date(p2.workStart) - new Date(p1.workStart)\r\n           }))*/\n    };\n\n    fetchUser();\n  }, [localUser._id]); // начало работы.\n\n  const handlerStart = async e => {\n    e.preventDefault();\n\n    if (+modalName === 0 && modalComment.current.value === '') {\n      setError('Заполните комментарий');\n\n      if (+modalName !== 1 || +modalName !== 0) {\n        return;\n      }\n    }\n\n    setIsFetching(true);\n    const newPost = {\n      userId: localUser._id,\n      typework_id: 1,\n      status: 1,\n      healthStart: +modalName,\n      commentStart: modalComment.current.value || '-',\n      workStart: new Date(Date.now())\n    };\n\n    try {\n      const res = await axios.post(\"/api/post/\", newPost);\n      /*await axios.post(\"/api/status/\")*/\n\n      /*await axios.put('/api/user/'+user._id, {status:1, userId: user._id})*/\n\n      localStorage.setItem('user', JSON.stringify({ ...localUser,\n        status: 1\n      }));\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }; // конец работы\n\n\n  const handlerEnd = async e => {\n    e.preventDefault();\n\n    if (+modalName === 0 && modalComment.current.value === '') {\n      setError('Заполните комментарий');\n      return;\n    }\n\n    setIsFetching(true);\n    const newPost = {\n      userId: localUser._id,\n      typework_id: 1,\n      status: 2,\n      healthEnd: +modalName,\n      commentEnd: modalComment.current.value || '-',\n      workEnd: new Date(Date.now())\n      /*workTime: new Date(Date.now()) - new Date(posts[0].workStart)*/\n\n    };\n\n    try {\n      await axios.put(\"/api/post/\", newPost);\n      /*await axios.put('/api/user/'+user._id, {status:2, userId: user._id})*/\n\n      localStorage.setItem('user', JSON.stringify({ ...localUser,\n        status: 2\n      }));\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleName = e => {\n    setModalName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => setModalActive(true),\n      className: 'statusBtn ' + findStatus(user.status),\n      children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: 'white',\n          size: '20px',\n          width: '20px',\n          height: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : user.status !== 1 ? 'Начать' : 'Закончить'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: user.status === 1 ? handlerEnd : handlerStart,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: '20px',\n            width: '30%',\n            marginLeft: '35%',\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sickLeave\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 1,\n              id: \"sickLeave\",\n              name: \"sickLeave\",\n              onChange: handleName,\n              checked: +modalName === 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), \"\\u0417\\u0434\\u043E\\u0440\\u043E\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vacation\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: 0,\n              id: \"vacation\",\n              name: \"vacation\",\n              onChange: handleName,\n              checked: +modalName === 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), \"\\u0411\\u043E\\u043B\\u0435\\u043D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          className: \"ModalInput\",\n          ref: modalComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u043E\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Status, \"XJzv4ygLvOSznvQWL49Sz6/zKTM=\");\n\n_c = Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Status/Status.jsx"],"names":["useEffect","useRef","useState","axios","CircularProgress","Modal","usersStatuses","findStatus","k","i","Status","user","setUser","localUser","JSON","parse","localStorage","getItem","isFetching","setIsFetching","status","setStatus","error","setError","modalActive","setModalActive","modalName","setModalName","modalComment","fetchUser","res","get","_id","data","handlerStart","e","preventDefault","current","value","newPost","userId","typework_id","healthStart","commentStart","workStart","Date","now","post","setItem","stringify","window","location","reload","console","log","handlerEnd","healthEnd","commentEnd","workEnd","put","handleName","target","color","size","width","height","display","justifyContent","fontSize","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport './Status.css'\r\n\r\nconst usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\nfunction findStatus(k){\r\n  for(let i in usersStatuses){\r\n    if(i == k){\r\n      return usersStatuses[i]\r\n    }\r\n  }\r\n}\r\nexport default function Status() {\r\n  const [user, setUser] = useState([])\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [status, setStatus]= useState('')\r\n  const [error, setError] = useState('')\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalName, setModalName] = useState()\r\n  const modalComment = useRef()\r\n\r\n  // получение данных пользователя о работе\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user/'+localUser._id)\r\n      setUser(res.data)\r\n /*     setPosts(res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      }))*/\r\n    }\r\n    fetchUser()\r\n  }, [localUser._id])\r\n\r\n  // начало работы.\r\n  const handlerStart = async (e) => {\r\n    e.preventDefault()\r\n    if(+modalName === 0 && modalComment.current.value===''){\r\n      setError('Заполните комментарий')\r\n      if(+modalName !== 1 || +modalName !== 0){\r\n      return\r\n    }}\r\n    setIsFetching(true)\r\n    const newPost = {\r\n      userId: localUser._id,\r\n      typework_id: 1,\r\n      status: 1,\r\n      healthStart: +modalName,\r\n      commentStart: modalComment.current.value || '-',\r\n      workStart: new Date(Date.now())\r\n    }\r\n    try {\r\n      const res = await axios.post(\"/api/post/\", newPost)\r\n\r\n      /*await axios.post(\"/api/status/\")*/\r\n      /*await axios.put('/api/user/'+user._id, {status:1, userId: user._id})*/\r\n      localStorage.setItem('user', JSON.stringify({...localUser, status:1}))\r\n      window.location.reload()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n  // конец работы\r\n  const handlerEnd = async (e) => {\r\n    e.preventDefault()\r\n    if(+modalName === 0 && modalComment.current.value===''){\r\n      setError('Заполните комментарий')\r\n      return\r\n    }\r\n\r\n    setIsFetching(true)\r\n    const newPost = {\r\n      userId: localUser._id,\r\n      typework_id: 1,\r\n      status: 2,\r\n      healthEnd: +modalName,\r\n      commentEnd: modalComment.current.value  || '-',\r\n      workEnd: new Date(Date.now())\r\n      /*workTime: new Date(Date.now()) - new Date(posts[0].workStart)*/\r\n    }\r\n\r\n    try {\r\n\r\n      await axios.put(\"/api/post/\", newPost)\r\n      /*await axios.put('/api/user/'+user._id, {status:2, userId: user._id})*/\r\n      localStorage.setItem('user', JSON.stringify({...localUser, status:2}))\r\n      window.location.reload()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  const handleName = e => {\r\n    setModalName(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <button type='submit' onClick={() => setModalActive(true)} className={'statusBtn ' + (findStatus(user.status))}>\r\n        {isFetching\r\n          ? <CircularProgress style={{color:'white', size:'20px', width:'20px', height:'20px'}}/>\r\n          : user.status !== 1\r\n            ? 'Начать'\r\n            : 'Закончить'\r\n        }\r\n      </button>\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        {error && <div className='modalError'>{error}</div>}\r\n        <form className=\"modalLoginBox\" onSubmit={user.status === 1 ? handlerEnd : handlerStart}>\r\n        <div style={{display:'flex', justifyContent:'space-between', fontSize: '20px', width:'30%', marginLeft:'35%', marginTop: '30px'}}>\r\n            <label htmlFor='sickLeave'>\r\n            <input\r\n              type='radio'\r\n              value={1}\r\n              id='sickLeave'\r\n              name='sickLeave'\r\n              onChange={handleName}\r\n              checked={+modalName === 1}\r\n            />Здоров</label>\r\n            <label htmlFor='vacation'>\r\n            <input\r\n              type='radio'\r\n              value={0}\r\n              id='vacation'\r\n              name='vacation'\r\n              onChange={handleName}\r\n              checked={+modalName === 0}\r\n            />Болен</label>\r\n          </div>\r\n          <input\r\n            placeholder=\"Комментарий\"\r\n            className=\"ModalInput\"\r\n            ref={modalComment}\r\n          />\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n            ок\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}