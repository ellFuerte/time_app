{"ast":null,"code":"import _regeneratorRuntime from\"D:/time_app/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import Pagination from\"../Pagination/Pagination\";import ModalVacancies from\"../Templates/ModalVacancies/ModalVacancies\";import axios from\"axios\";import'./VacanciesView.css';import VacanciesItem from\"../VacanciesItem/VacanciesItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function VacanciesView(departId){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),currentPage=_useState6[0],setCurrentPage=_useState6[1];var _useState7=useState(5),_useState8=_slicedToArray(_useState7,1),postsPerPage=_useState8[0];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),currentPageVacancies=_useState10[0],setCurrentPageVacancies=_useState10[1];var _useState11=useState(5),_useState12=_slicedToArray(_useState11,1),postsPerPageVacancies=_useState12[0];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),vacancies=_useState14[0],setVacancies=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),find=_useState16[0],setFind=_useState16[1];var statusRef=useRef();var searchRef=useRef();var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),startDate=_useState18[0],setStartDate=_useState18[1];// начальная дата фильтра\nvar _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),endDate=_useState20[0],setEndDate=_useState20[1];// конечная дата фильтра\nvar _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),filteredData=_useState22[0],setFilteredData=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),status=_useState24[0],setStatus=_useState24[1];var localUser=JSON.parse(localStorage.getItem('user'));useEffect(function(){var VacanciesView=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var status,vacancies_post,getVacancies1;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/Vacations/?status=status');case 2:status=_context.sent;setStatus(status.data);vacancies_post={departId:localUser.departmentId,user_id:localUser._id};_context.next=7;return axios.post('/api/Vacations_function/',vacancies_post);case 7:getVacancies1=_context.sent;if(isOpen){// Фильтрация вакансий по departId\nsetVacancies(getVacancies1.data[0].get_vacancies);// Установка нового массива вакансий\n}case 9:case\"end\":return _context.stop();}}},_callee);}));return function VacanciesView(){return _ref.apply(this,arguments);};}();VacanciesView();},[isOpen,departId]);// Обработчик изменения значения для поля ввода с именем\nvar reset=function reset(){searchRef.current.value='';setSearchValue('');setStartDate('');setEndDate('');};var handleStartDateChange=function handleStartDateChange(e){setStartDate(e.target.value);};var handleEndDateChange=function handleEndDateChange(e){setEndDate(e.target.value);};var handleCombinedFilter=function handleCombinedFilter(){if(searchValue.length===0&&!startDate&&!endDate){// Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\nsetFilteredData([]);setFind([]);setIsOpen(true);return;}if(searchValue.length!==0){// Если есть поисковой запрос, выполняем фильтрацию по нему\nsetFind(vacancies.filter(function(vac){return vac.name.toLowerCase().includes(searchValue.toLowerCase());}));setFilteredData([]);setIsOpen(false);}else{// Если нет поискового запроса, выполняем фильтрацию по дате\nsetFilteredData(vacancies.filter(function(item){var itemDate=new Date(item.create_date);var start=startDate?new Date(startDate):null;var end=endDate?new Date(endDate):null;return(!start||itemDate>=start)&&(!end||itemDate<=end);}));setFind([]);setIsOpen(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Vacations\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"VacationsContainerTop\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",className:\"ModalInput\",style:{'marginRight':'10px'},value:startDate,onChange:handleStartDateChange}),\"\\u2014   \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",className:\"ModalInput\",style:{'marginRight':'10px'},value:endDate,onChange:handleEndDateChange}),/*#__PURE__*/_jsx(\"button\",{className:\"filterButton\",onClick:handleCombinedFilter,children:\"\\u041F\\u043E\\u0438\\u0441\\u043A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"filterButton\",onClick:reset,children:\"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"})]})]}),isOpen?vacancies.map(function(vac,id){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac,status:status,department:vac.department,vacancies:vac.vacancies},vac.department)},id);}):/*#__PURE__*/_jsx(\"div\",{children:find.map(function(vac,id){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac,departId:departId.departId})},id);})}),filteredData.map(function(vac){return/*#__PURE__*/_jsx(\"div\",{className:\"VacationsContainer\",children:/*#__PURE__*/_jsx(VacanciesItem,{vac:vac})},vac.id);})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{})]});}export default VacanciesView;","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesView","departId","searchValue","setSearchValue","isOpen","setIsOpen","currentPage","setCurrentPage","postsPerPage","currentPageVacancies","setCurrentPageVacancies","postsPerPageVacancies","vacancies","setVacancies","find","setFind","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","localUser","JSON","parse","localStorage","getItem","get","data","vacancies_post","departmentId","user_id","_id","post","getVacancies1","get_vacancies","reset","current","value","handleStartDateChange","e","target","handleEndDateChange","handleCombinedFilter","length","filter","vac","name","toLowerCase","includes","item","itemDate","Date","create_date","start","end","map","id","department"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(5)\r\n\r\n    const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n    const [postsPerPageVacancies] = useState(5)\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [find, setFind] = useState([])\r\n\r\n\r\n\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    useEffect(() => {\r\n        const VacanciesView = async () => {\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n\r\n\r\n            const vacancies_post={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n            const getVacancies1 = await axios.post('/api/Vacations_function/',vacancies_post)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies1.data[0].get_vacancies); // Установка нового массива вакансий\r\n\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n\r\n    // Обработчик изменения значения для поля ввода с именем\r\n\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setSearchValue('')\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n            setFilteredData([]);\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n            setFind([]);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n{/*                    <div className=\"VacationsMain\">\r\n\r\n                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />\r\n                           <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n\r\n                    </div>*/}\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n                {isOpen ? (\r\n                    vacancies.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id}>\r\n                            <VacanciesItem vac={vac} key={vac.department}  status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>\r\n                        {find.map((vac, id) => (<div className='VacationsContainer' key={id}>\r\n                                <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}>\r\n                        <VacanciesItem vac={vac}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n\r\n\r\n\r\n{/*                <div style={{textAlign:'center'}}>\r\n\r\n                {isOpen ?\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={vacancies.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n                    :\r\n\r\n                    <Pagination postsPerPage={postsPerPageVacancies} totalPosts={find.length}\r\n                                paginate={paginateVacancies}\r\n                                currentPage={currentPageVacancies}/>}\r\n                </div>*/}\r\n\r\n\r\n{/*            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                           value={inputValueDescription}\r\n                           onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                    <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>*/}\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}