{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [openLevels, setOpenLevels] = useState(new Set());\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n  }, []);\n\n  const isLevelOpen = id => {\n    return openLevels.has(id);\n  };\n\n  const handleLevelOpen = id => {\n    setOpenLevels(prev => new Set(prev).add(id));\n  };\n\n  const findAndOpenLevels = (departments, targetId) => {\n    for (const department of departments) {\n      if (department.id === targetId) {\n        handleLevelOpen(department.id);\n        return true;\n      }\n\n      if (department.Subclasses) {\n        const found = findAndOpenLevels(department.Subclasses, targetId);\n\n        if (found) {\n          handleLevelOpen(department.id);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }; // Пример использования для открытия уровня 21\n\n\n  useEffect(() => {\n    findAndOpenLevels(dep, 21);\n  }, [dep]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => /*#__PURE__*/_jsxDEV(TreeView, {\n            nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this),\n            defaultCollapsed: !isLevelOpen(node.department_tree_to_json.id),\n            children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${departments.id}`,\n                className: \"depsUser\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"node\",\n                  children: departments.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 49\n              }, this),\n              defaultCollapsed: !isLevelOpen(departments.id),\n              children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments1.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments1.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 57\n                }, this),\n                defaultCollapsed: !isLevelOpen(departments1.id),\n                children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments2.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      paddingBottom: '8px'\n                    },\n                    children: departments2.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 61\n                  }, this)\n                }, departments2.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 57\n                }, this))\n              }, departments1.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 49\n              }, this))\n            }, departments.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 41\n            }, this))\n          }, node.department_tree_to_json.Name + '|' + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"LJSCRvm7jnmhfWy3RkmEQBphSG0=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","openLevels","setOpenLevels","Set","getDeps","res","get","data","department_tree_to_json","length","isLevelOpen","id","has","handleLevelOpen","prev","add","findAndOpenLevels","departments","targetId","department","Subclasses","found","map","node","i","Name","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [openLevels, setOpenLevels] = useState(new Set());\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const isLevelOpen = (id) => {\r\n        return openLevels.has(id);\r\n    };\r\n\r\n    const handleLevelOpen = (id) => {\r\n        setOpenLevels((prev) => new Set(prev).add(id));\r\n    };\r\n\r\n    const findAndOpenLevels = (departments, targetId) => {\r\n        for (const department of departments) {\r\n            if (department.id === targetId) {\r\n                handleLevelOpen(department.id);\r\n                return true;\r\n            }\r\n            if (department.Subclasses) {\r\n                const found = findAndOpenLevels(department.Subclasses, targetId);\r\n                if (found) {\r\n                    handleLevelOpen(department.id);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // Пример использования для открытия уровня 21\r\n    useEffect(() => {\r\n        findAndOpenLevels(dep, 21);\r\n    }, [dep]);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={(\r\n                                        <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )}\r\n                                    defaultCollapsed={!isLevelOpen(node.department_tree_to_json.id)}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            key={departments.id}\r\n                                            nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser'>\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={!isLevelOpen(departments.id)}\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    key={departments1.id}\r\n                                                    nodeLabel={(\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser'>\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    defaultCollapsed={!isLevelOpen(departments1.id)}\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}