{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { Link, useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  const [seeChilds, setSeeChild] = useState();\n  const [checked, setChecked] = useState(false);\n  const [statisticsWork, setStatisticsWork] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [usersDep, setUsersDeps] = useState([]);\n  const [us, setUs] = useState([]);\n  const [user, setUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const depsId = useParams().username; // фильтр нужных департаментов\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep);\n  useEffect(() => {\n    // Fetch data and update state\n    const fetchData = async () => {\n      setIsFetching(true);\n\n      try {\n        // Fetch user data\n        const userRes = await axios.get('/api/user/' + localUser._id);\n        const fetchedUser = userRes.data;\n        setChecked(fetchedUser.see_child);\n        setSeeChild(fetchedUser.see_child);\n        setUser(fetchedUser); // Fetch statistics for admins\n\n        if (localUser.isAdmin) {\n          const getUsers = {\n            id: localUser._id\n          };\n          const res = await axios.post('/api/get_statistics_all_users', getUsers);\n          const allUsers = res.data[0].get_statistics_all_users[0].all_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n          setStatisticsWork(filterUsersFoo(allUsers));\n        } // Fetch all users\n\n\n        const res = await axios.get('/api/user');\n        const sortedUsers = res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        const filterUsers = filterUsersFoo(sortedUsers);\n        setUsers(filterUsers); // Fetch users by department if checked\n\n        if (fetchedUser.main_department === departId && checked) {\n          const info = {\n            depsId: departId\n          };\n          const depRes = await axios.post('/api/get_users_by_dep/', info);\n          const depUsers = depRes.data[0].get_users_by_dep.sort((a, b) => a.user_name.localeCompare(b.user_name));\n          setUs(filterUsersFoo(depUsers));\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n\n      setIsFetching(false);\n    };\n\n    fetchData();\n  }, [departId, localUser._id, user.main_department, checked]); // Сортировка пользователей по статусам\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => ![1, 2, 3, 4].includes(user.status))).concat(users.filter(user => user.status === 4));\n  } // Добавление дочерних по checkbox\n\n\n  const clickCheckbox = async () => {\n    setChecked(prevChecked => !prevChecked);\n    const info = {\n      userId: localUser._id,\n      ischeked: !checked\n    };\n    await axios.post('/api/statusChild/', info);\n    const inf = {\n      depsId: depsId\n    };\n    const res = await axios.post('/api/get_users_by_dep/', inf);\n    const depUsers = res.data[0].get_users_by_dep;\n\n    if (depUsers) {\n      depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      setUs(filterUsersFoo(depUsers));\n    } else {\n      setUs([]);\n    }\n  }; // Обновляем main department по кнопке изменить в модальном окне\n\n\n  const handleModalClick = async e => {\n    e.preventDefault();\n    const add = {\n      id: localUser._id,\n      depsId: depsId\n    };\n    await axios.put('/api/user', add);\n    setModalMain(false);\n  }; // Функция get_users_by_dep по кнопке показать дочерние\n\n\n  const getUsersByDepIsOpen = async () => {\n    if (isJob) {\n      const info = {\n        depsId: depsId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const depUsers = res.data[0].get_users_by_dep;\n\n      if (depUsers) {\n        depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        setUsersDeps(filterUsersFoo(depUsers));\n        setUsers([]);\n        setIsOpen(true);\n      } else {\n        setUsersDeps([]);\n      }\n\n      setIsJob(false);\n    } else {\n      setIsOpen(false);\n      setIsJob(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_depIsOpen,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = `/department/${departId}`,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }, this), localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/VacanciesView/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 40\n      }, this) : '']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [user.main_department === departId && checked && !isOpen ? us.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 40\n      }, this)) : users.filter(user => user.department_id === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 91\n      }, this)), !departId ? statisticsWork.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 56\n      }, this)) : '', !!isOpen ? UsersDep.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 52\n      }, this)) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: clickcheckbox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDepartment\",\n          type: \"submit\",\n          onClick: handleModalClick,\n          children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u043C \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"RM+kMW84F3rYFGowTg19F7e2mYo=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","Link","useParams","Modal","Staff","seeChilds","setSeeChild","checked","setChecked","statisticsWork","setStatisticsWork","users","setUsers","usersDep","setUsersDeps","us","setUs","user","setUser","deps","setDeps","isOpen","setIsOpen","isJob","setIsJob","isFetching","setIsFetching","modalMain","setModalMain","departId","username","localUser","JSON","parse","localStorage","getItem","depsId","currentDep","filter","dep","_id","departmentId","filterDeps","find","i","dep_id","push","fetchData","userRes","get","fetchedUser","data","see_child","isAdmin","getUsers","id","res","post","allUsers","get_statistics_all_users","all_users","sort","a","b","user_name","localeCompare","filterUsersFoo","sortedUsers","filterUsers","main_department","info","depRes","depUsers","get_users_by_dep","error","console","status","concat","includes","clickCheckbox","prevChecked","userId","ischeked","inf","handleModalClick","e","preventDefault","add","put","getUsersByDepIsOpen","get_users_by_depIsOpen","width","window","location","href","float","map","department_id","UsersDep","clickcheckbox"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [seeChilds, setSeeChild] = useState();\r\n    const [checked, setChecked] = useState(false);\r\n    const [statisticsWork, setStatisticsWork] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [usersDep, setUsersDeps] = useState([]);\r\n    const [us, setUs] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const [deps, setDeps] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isJob, setIsJob] = useState(true);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [modalMain, setModalMain] = useState(false);\r\n    const departId = useParams().username;\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    const depsId = useParams().username;\r\n\r\n    // фильтр нужных департаментов\r\n    const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\r\n    let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\r\n    filterDeps.push(...currentDep);\r\n\r\n    useEffect(() => {\r\n        // Fetch data and update state\r\n        const fetchData = async () => {\r\n            setIsFetching(true);\r\n            try {\r\n                // Fetch user data\r\n                const userRes = await axios.get('/api/user/' + localUser._id);\r\n                const fetchedUser = userRes.data;\r\n                setChecked(fetchedUser.see_child);\r\n                setSeeChild(fetchedUser.see_child);\r\n                setUser(fetchedUser);\r\n\r\n                // Fetch statistics for admins\r\n                if (localUser.isAdmin) {\r\n                    const getUsers = { id: localUser._id };\r\n                    const res = await axios.post('/api/get_statistics_all_users', getUsers);\r\n                    const allUsers = res.data[0].get_statistics_all_users[0].all_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                    setStatisticsWork(filterUsersFoo(allUsers));\r\n                }\r\n\r\n                // Fetch all users\r\n                const res = await axios.get('/api/user');\r\n                const sortedUsers = res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                const filterUsers = filterUsersFoo(sortedUsers);\r\n                setUsers(filterUsers);\r\n\r\n                // Fetch users by department if checked\r\n                if (fetchedUser.main_department === departId && checked) {\r\n                    const info = { depsId: departId };\r\n                    const depRes = await axios.post('/api/get_users_by_dep/', info);\r\n                    const depUsers = depRes.data[0].get_users_by_dep.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                    setUs(filterUsersFoo(depUsers));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n            setIsFetching(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, [departId, localUser._id, user.main_department, checked]);\r\n\r\n    // Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => ![1, 2, 3, 4].includes(user.status)))\r\n            .concat(users.filter(user => user.status === 4));\r\n    }\r\n\r\n    // Добавление дочерних по checkbox\r\n    const clickCheckbox = async () => {\r\n        setChecked(prevChecked => !prevChecked);\r\n\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n        const inf = {\r\n            depsId: depsId\r\n        };\r\n        const res = await axios.post('/api/get_users_by_dep/', inf);\r\n        const depUsers = res.data[0].get_users_by_dep;\r\n        if (depUsers) {\r\n            depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            setUs(filterUsersFoo(depUsers));\r\n        } else {\r\n            setUs([]);\r\n        }\r\n    };\r\n\r\n    // Обновляем main department по кнопке изменить в модальном окне\r\n    const handleModalClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: depsId\r\n        };\r\n\r\n        await axios.put('/api/user', add);\r\n        setModalMain(false);\r\n    };\r\n\r\n    // Функция get_users_by_dep по кнопке показать дочерние\r\n    const getUsersByDepIsOpen = async () => {\r\n        if (isJob) {\r\n            const info = { depsId: depsId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const depUsers = res.data[0].get_users_by_dep;\r\n\r\n            if (depUsers) {\r\n                depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                setUsersDeps(filterUsersFoo(depUsers));\r\n                setUsers([]);\r\n                setIsOpen(true);\r\n            } else {\r\n                setUsersDeps([]);\r\n            }\r\n            setIsJob(false);\r\n        } else {\r\n            setIsOpen(false);\r\n            setIsJob(true);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className='staff'>\r\n                <>\r\n                            {isJob ?\r\n                                <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                                    Показать дочерние\r\n                                </button>\r\n\r\n                            :\r\n\r\n                                <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\">\r\n                                    Скрыть дочерние\r\n                                </button>\r\n                            }\r\n                            <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n\r\n\r\n\r\n                    {localUser.isAdmin?<Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link>:''}\r\n\r\n\r\n                </>\r\n\r\n\r\n            <div className=\"employeeWrapper\">\r\n\r\n                {user.main_department===departId && checked && !isOpen\r\n                    ?\r\n                  us.map((user, id) => <Employee key={id} user={user}/>)\r\n                    :\r\n                  users.filter(user => user.department_id === departId).map((user, id) => <Employee key={id} user={user}/>)\r\n\r\n                }\r\n\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n\r\n                {\r\n                    !!isOpen\r\n                        ?\r\n                        UsersDep.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : \"\"\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние</label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\"  onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}