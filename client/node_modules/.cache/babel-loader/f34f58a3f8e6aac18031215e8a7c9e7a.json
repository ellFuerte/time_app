{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status\n}) => {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [selectDep, setSelectDep] = useState(\"\");\n  const [company, setCompany] = useState([]);\n  const [selectCompany, setSelectCompany] = useState([]);\n  const [selectItc, setSelectItc] = useState([]);\n  const [projectItem, setProjectItem] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [plannedReleaseDate, setPlannedReleaseDate] = useState([]);\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [user_name, setUser_name] = useState('');\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const departRef = useRef();\n  const companyRef = useRef();\n  const ITCRef = useRef();\n  const projectRef = useRef();\n  const DateReleaseRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [deps, setDeps] = useState([]);\n  useEffect(() => {\n    const Department = async () => {\n      const departs = await axios.get('/api/departments/');\n      setDeps(departs.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      const user = await axios.get('/api/user');\n      setUsers(user.data);\n    };\n\n    Department();\n  }, []);\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      search: searchTerm,\n      old_user: old_user,\n      deps: selectDep,\n      company_id: selectCompany,\n      vacancy_code: selectItc,\n      project_id: projectItem,\n      planned_release_date: plannedReleaseDate === '' ? null : plannedReleaseDate\n    };\n    console.log('cnahgedate=', ChangeData);\n\n    if (statusRef.current.value === '3' && old_user === null && userId.length < 1) {\n      setMessage('Сотрудник не назначен');\n    } else {\n      const res = await axios.put('/api/Vacations/', ChangeData);\n      setMessage('Сохранено');\n      window.location.reload();\n    }\n  };\n\n  const handleClick = (name, grade, id, description, status_id, user_name, user_id, department_id, company_id, vacancy_code, project_id, planned_release_date) => {\n    if (localUser.isAdmin === true) {\n      if (user_name === null) {\n        setUser_name([]);\n      } else {\n        setUser_name(user_name);\n      }\n\n      setFilteredUsers([]);\n      setMessage([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setOld_user(user_id);\n      setSelectDep(department_id);\n      setSelectCompany(company_id);\n      setSelectItc(vacancy_code);\n      setProjectItem(project_id);\n      setPlannedReleaseDate(planned_release_date);\n    }\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 20:\n        return 'Reserve';\n      //  Резерв Установите Белый цвет для статуса 1\n\n      case 30:\n        return 'Selection';\n      // Подбор Установите желтый цвет для статуса 2\n\n      case 50:\n        return 'Securely';\n      // Обеспеченно Установите зелёный цвет для статуса 3\n\n      case 10:\n        return 'Liquidated';\n      // Ликвидированно Установите белый прозрачный цвет для статуса 4\n\n      case 40:\n        return 'Finalist';\n      //  Финалист Установите красный цвет для статуса 5\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"departmentName\",\n      children: department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-container\",\n      children: [vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angry-grid1\" + getColorByStatusId(vac.status_id),\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id, vac.user_name, vac.user_id, vac.department_id, vac.company_id, vac.vacancy_code, vac.project_id, vac.planned_release_date),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cssportal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div2\",\n            children: vac.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div3\",\n            children: date === vac.create_date ? 'NEW' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div5\",\n            children: vac.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div8\",\n            children: vac.vacancy_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div10\",\n            children: [\"\\u0413\\u0440\\u0435\\u0439\\u0434: \", vac.grade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div11\",\n            children: vac.status_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div12\",\n            children: [\"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442: \", vac.project_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div13\",\n            children: vac.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        modalVacations: modalVacations,\n        setModalVacations: setModalVacations,\n        vacanciesId: vacanciesId,\n        setVacanciesId: setVacanciesId,\n        deps: deps,\n        status: status,\n        company: company,\n        users: users,\n        ChangeData: ChangeData,\n        localUser: localUser,\n        selectedVacanciesName: selectedVacanciesName,\n        setSelectedVacanciesName: setSelectedVacanciesName,\n        selectedVacanciesDescription: selectedVacanciesDescription,\n        setSelectedVacanciesDescription: setSelectedVacanciesDescription,\n        selectedVacanciesGrade: selectedVacanciesGrade,\n        setSelectedVacanciesGrade: setSelectedVacanciesGrade,\n        selectedVacanciesStatuses: selectedVacanciesStatuses,\n        setSelectedVacanciesStatuses: setSelectedVacanciesStatuses,\n        selectedDep: selectDep,\n        setSelectDep: setSelectDep,\n        selectCompany: selectCompany,\n        setSelectCompany: setSelectCompany,\n        selectItc: selectItc,\n        setSelectItc: setSelectItc,\n        projectItem: projectItem,\n        setProjectItem: setProjectItem,\n        plannedReleaseDate: plannedReleaseDate,\n        setPlannedReleaseDate: setPlannedReleaseDate,\n        old_user: old_user,\n        setOld_user: setOld_user,\n        userId: userId,\n        setUserId: setUserId,\n        user_name: user_name,\n        setUser_name: setUser_name,\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm,\n        filteredUsers: filteredUsers,\n        setFilteredUsers: setFilteredUsers,\n        message: message,\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"swyx7RWK/nPTcmyhSHhbkUb6YCs=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useEffect","useRef","useState","Link","axios","ModalVacanciesItem","VacanciesItem","department","vacancies","status","localUser","JSON","parse","localStorage","getItem","selectDep","setSelectDep","company","setCompany","selectCompany","setSelectCompany","selectItc","setSelectItc","projectItem","setProjectItem","message","setMessage","plannedReleaseDate","setPlannedReleaseDate","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","old_user","setOld_user","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","user_name","setUser_name","date","format","searchTerm","setSearchTerm","userId","setUserId","filteredUsers","setFilteredUsers","users","setUsers","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","departRef","companyRef","ITCRef","projectRef","DateReleaseRef","searchRef","startDate","setStartDate","endDate","setEndDate","deps","setDeps","Department","departs","get","data","user","ChangeData","namevacanciesId","namevacancies","description","grade","statuses","current","value","search","company_id","vacancy_code","project_id","planned_release_date","console","log","length","res","put","window","location","reload","handleClick","name","id","status_id","user_id","department_id","isAdmin","getColorByStatusId","statusId","map","vac","create_date","status_name","company_name"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;;;;AAGA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA,UAAD;AAAYC,EAAAA,SAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAkC;AAAA;;AACnD,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AAGA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AAIA,QAAM,CAACyB,kBAAD,EAAqBC,qBAArB,IAA8C1B,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAAC6B,cAAD,EAAiBC,iBAAjB,IAAsC9B,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACmC,qBAAD,EAAwBC,wBAAxB,IAAoDpC,QAAQ,CAAC,EAAD,CAAlE;AAEA,QAAM,CAACqC,kBAAD,EAAqBC,qBAArB,IAA8CtC,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAACuC,eAAD,EAAkBC,kBAAlB,IAAwCxC,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACyC,SAAD,EAAYC,YAAZ,IAA4B1C,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM2C,IAAI,GAAG/C,MAAM,GAAGgD,MAAT,CAAgB,YAAhB,CAAb;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B9C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC+C,MAAD,EAASC,SAAT,IAAsBhD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiD,aAAD,EAAgBC,gBAAhB,IAAoClD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACmD,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACqD,qBAAD,EAAwBC,wBAAxB,IAAoDtD,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACuD,yBAAD,EAA4BC,4BAA5B,IAA4DxD,QAAQ,CAAC,EAAD,CAA1E;AACA,QAAM,CAACyD,4BAAD,EAA+BC,+BAA/B,IAAkE1D,QAAQ,CAAC,EAAD,CAAhF;AACA,QAAM,CAAC2D,sBAAD,EAAyBC,yBAAzB,IAAsD5D,QAAQ,CAAC,EAAD,CAApE;AAEA,QAAM6D,SAAS,GAAG9D,MAAM,EAAxB;AACA,QAAM+D,SAAS,GAAG/D,MAAM,EAAxB;AACA,QAAMgE,UAAU,GAAGhE,MAAM,EAAzB;AACA,QAAMiE,MAAM,GAAGjE,MAAM,EAArB;AACA,QAAMkE,UAAU,GAAGlE,MAAM,EAAzB;AACA,QAAMmE,cAAc,GAAGnE,MAAM,EAA7B;AAEA,QAAMoE,SAAS,GAAGpE,MAAM,EAAxB;AAEA,QAAM,CAACqE,SAAD,EAAYC,YAAZ,IAA4BrE,QAAQ,CAAC,EAAD,CAA1C,CAvDmD,CAuDH;;AAChD,QAAM,CAACsE,OAAD,EAAUC,UAAV,IAAwBvE,QAAQ,CAAC,EAAD,CAAtC,CAxDmD,CAwDP;;AAE5C,QAAM,CAACwE,IAAD,EAAOC,OAAP,IAAkBzE,QAAQ,CAAC,EAAD,CAAhC;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4E,UAAU,GAAG,YAAY;AAE3B,YAAMC,OAAO,GAAG,MAAMzE,KAAK,CAAC0E,GAAN,CAAU,mBAAV,CAAtB;AACAH,MAAAA,OAAO,CAACE,OAAO,CAACE,IAAT,CAAP;AACA,YAAM9D,OAAO,GAAG,MAAMb,KAAK,CAAC0E,GAAN,CAAU,iCAAV,CAAtB;AACA5D,MAAAA,UAAU,CAACD,OAAO,CAAC8D,IAAT,CAAV;AACA,YAAMC,IAAI,GAAG,MAAM5E,KAAK,CAAC0E,GAAN,CAAU,WAAV,CAAnB;AACAxB,MAAAA,QAAQ,CAAC0B,IAAI,CAACD,IAAN,CAAR;AAEH,KATD;;AAWAH,IAAAA,UAAU;AACb,GAbQ,EAaN,EAbM,CAAT;;AAqBA,QAAMK,UAAU,GAAG,YAAY;AAE3B,UAAMA,UAAU,GAAG;AACfC,MAAAA,eAAe,EAAErD,WADF;AAEfsD,MAAAA,aAAa,EAAElD,UAFA;AAGfmD,MAAAA,WAAW,EAAE/C,qBAHE;AAIfgD,MAAAA,KAAK,EAAE5C,eAJQ;AAKf6C,MAAAA,QAAQ,EAAEvB,SAAS,CAACwB,OAAV,CAAkBC,KALb;AAMfnC,MAAAA,KAAK,EAAEJ,MANQ;AAOfwC,MAAAA,MAAM,EAAE1C,UAPO;AAQfZ,MAAAA,QAAQ,EAAEA,QARK;AASfuC,MAAAA,IAAI,EAAE3D,SATS;AAUf2E,MAAAA,UAAU,EAAEvE,aAVG;AAWfwE,MAAAA,YAAY,EAAEtE,SAXC;AAYfuE,MAAAA,UAAU,EAAErE,WAZG;AAafsE,MAAAA,oBAAoB,EAAElE,kBAAkB,KAAG,EAArB,GAA0B,IAA1B,GAAiCA;AAbxC,KAAnB;AAeAmE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Bd,UAA1B;;AACA,QAAIlB,SAAS,CAACwB,OAAV,CAAkBC,KAAlB,KAA4B,GAA5B,IAAmCrD,QAAQ,KAAG,IAA9C,IAAsDc,MAAM,CAAC+C,MAAP,GAAc,CAAxE,EAA2E;AACvEtE,MAAAA,UAAU,CAAC,uBAAD,CAAV;AACH,KAFD,MAKK;AACD,YAAMuE,GAAG,GAAG,MAAM7F,KAAK,CAAC8F,GAAN,CAAU,iBAAV,EAA6BjB,UAA7B,CAAlB;AACAvD,MAAAA,UAAU,CAAC,WAAD,CAAV;AACAyE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAEJ,GA7BD;;AAgCA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOlB,KAAP,EAAamB,EAAb,EAAgBpB,WAAhB,EAA4BqB,SAA5B,EAAsC9D,SAAtC,EAAgD+D,OAAhD,EAAwDC,aAAxD,EAAsEjB,UAAtE,EAAiFC,YAAjF,EAA8FC,UAA9F,EAAyGC,oBAAzG,KAAkI;AAClJ,QAAGnF,SAAS,CAACkG,OAAV,KAAoB,IAAvB,EAA6B;AAEzB,UAAGjE,SAAS,KAAG,IAAf,EAAoB;AAChBC,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,OAFD,MAEM;AACFA,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACH;;AAEDS,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA1B,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAM,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,MAAAA,cAAc,CAAC0E,EAAD,CAAd;AACAhD,MAAAA,wBAAwB,CAAC+C,IAAD,CAAxB;AACArE,MAAAA,aAAa,CAACqE,IAAD,CAAb,CAbyB,CAaJ;;AAGrB3C,MAAAA,+BAA+B,CAACwB,WAAD,CAA/B;AACA9C,MAAAA,wBAAwB,CAAC8C,WAAD,CAAxB;AAEAtB,MAAAA,yBAAyB,CAACuB,KAAD,CAAzB;AACA3C,MAAAA,kBAAkB,CAAC2C,KAAD,CAAlB,CApByB,CAoBE;;AAE3B3B,MAAAA,4BAA4B,CAAC+C,SAAD,CAA5B;AACAjE,MAAAA,qBAAqB,CAACiE,SAAD,CAArB;AAEArE,MAAAA,WAAW,CAACsE,OAAD,CAAX;AAEA1F,MAAAA,YAAY,CAAC2F,aAAD,CAAZ;AAEAvF,MAAAA,gBAAgB,CAACsE,UAAD,CAAhB;AAEApE,MAAAA,YAAY,CAACqE,YAAD,CAAZ;AAEAnE,MAAAA,cAAc,CAACoE,UAAD,CAAd;AAEAhE,MAAAA,qBAAqB,CAACiE,oBAAD,CAArB;AACH;AACJ,GAtCD;;AA2CA,QAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,YAAQA,QAAR;AACI,WAAK,EAAL;AACI,eAAO,SAAP;AAAkB;;AACtB,WAAK,EAAL;AACI,eAAO,WAAP;AAAoB;;AACxB,WAAK,EAAL;AACI,eAAO,UAAP;AAAmB;;AACvB,WAAK,EAAL;AACI,eAAO,YAAP;AAAqB;;AACzB,WAAK,EAAL;AACI,eAAO,UAAP;AAAmB;AAV3B;AAaH,GAdD;;AAkBA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCvG;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACKC,SAAS,CAACuG,GAAV,CAAcC,GAAG,iBACd;AAAkB,QAAA,SAAS,EAAE,gBAAcH,kBAAkB,CAACG,GAAG,CAACP,SAAL,CAA7D;AACK,QAAA,OAAO,EAAE,MAAMH,WAAW,CAACU,GAAG,CAACT,IAAL,EAAWS,GAAG,CAAC3B,KAAf,EAAqB2B,GAAG,CAACR,EAAzB,EAA4BQ,GAAG,CAAC5B,WAAhC,EAA4C4B,GAAG,CAACP,SAAhD,EACtBO,GAAG,CAACrE,SADkB,EACRqE,GAAG,CAACN,OADI,EACIM,GAAG,CAACL,aADR,EACsBK,GAAG,CAACtB,UAD1B,EACqCsB,GAAG,CAACrB,YADzC,EACsDqB,GAAG,CAACpB,UAD1D,EACqEoB,GAAG,CAACnB,oBADzE,CAD/B;AAAA,+BAII;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA,kCACI;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA,sBAAgBmB,GAAG,CAACrE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA,sBAAgBE,IAAI,KAAKmE,GAAG,CAACC,WAAb,GAA2B,KAA3B,GAAmC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA,sBAAgBD,GAAG,CAACT;AAApB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA,sBAAgBS,GAAG,CAACrB;AAApB;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA,2DAAwBqB,GAAG,CAAC3B,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA,sBAAiB2B,GAAG,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA,iEAAyBF,GAAG,CAACpB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAaI;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA,sBAAiBoB,GAAG,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,SAAUH,GAAG,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAwBI,QAAC,kBAAD;AACI,QAAA,cAAc,EAAEzE,cADpB;AAEI,QAAA,iBAAiB,EAAEC,iBAFvB;AAGI,QAAA,WAAW,EAAEH,WAHjB;AAII,QAAA,cAAc,EAAEC,cAJpB;AAKI,QAAA,IAAI,EAAE4C,IALV;AAMI,QAAA,MAAM,EAAEjE,MANZ;AAOI,QAAA,OAAO,EAAEQ,OAPb;AAQI,QAAA,KAAK,EAAEoC,KARX;AASI,QAAA,UAAU,EAAE4B,UAThB;AAUI,QAAA,SAAS,EAAEvE,SAVf;AAWI,QAAA,qBAAqB,EAAE6C,qBAX3B;AAYI,QAAA,wBAAwB,EAAEC,wBAZ9B;AAaI,QAAA,4BAA4B,EAAEG,4BAblC;AAcI,QAAA,+BAA+B,EAAEC,+BAdrC;AAeI,QAAA,sBAAsB,EAAEC,sBAf5B;AAgBI,QAAA,yBAAyB,EAAEC,yBAhB/B;AAiBI,QAAA,yBAAyB,EAAEL,yBAjB/B;AAkBI,QAAA,4BAA4B,EAAEC,4BAlBlC;AAmBI,QAAA,WAAW,EAAE3C,SAnBjB;AAoBI,QAAA,YAAY,EAAEC,YApBlB;AAqBI,QAAA,aAAa,EAAEG,aArBnB;AAsBI,QAAA,gBAAgB,EAAEC,gBAtBtB;AAuBI,QAAA,SAAS,EAAEC,SAvBf;AAwBI,QAAA,YAAY,EAAEC,YAxBlB;AAyBI,QAAA,WAAW,EAAEC,WAzBjB;AA0BI,QAAA,cAAc,EAAEC,cA1BpB;AA2BI,QAAA,kBAAkB,EAAEG,kBA3BxB;AA4BI,QAAA,qBAAqB,EAAEC,qBA5B3B;AA6BI,QAAA,QAAQ,EAAEO,QA7Bd;AA8BI,QAAA,WAAW,EAAEC,WA9BjB;AA+BI,QAAA,MAAM,EAAEa,MA/BZ;AAgCI,QAAA,SAAS,EAAEC,SAhCf;AAiCI,QAAA,SAAS,EAAEP,SAjCf;AAkCI,QAAA,YAAY,EAAEC,YAlClB;AAmCI,QAAA,UAAU,EAAEG,UAnChB;AAoCI,QAAA,aAAa,EAAEC,aApCnB;AAqCI,QAAA,aAAa,EAAEG,aArCnB;AAsCI,QAAA,gBAAgB,EAAEC,gBAtCtB;AAuCI,QAAA,OAAO,EAAE3B,OAvCb;AAwCI,QAAA,UAAU,EAAEC;AAxChB;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwEH,CAxPD;;GAAMpB,a;;KAAAA,a;AAyPN,eAAeA,aAAf","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\r\n\r\n\r\nconst VacanciesItem =({department,vacancies,status})=> {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValue,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: userId,\r\n            search: searchTerm,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:(plannedReleaseDate==='' ? null : plannedReleaseDate)\r\n        }\r\n        console.log('cnahgedate=',ChangeData)\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id,department_id,company_id,vacancy_code,project_id,planned_release_date) => {\r\n        if(localUser.isAdmin===true) {\r\n\r\n            if(user_name===null){\r\n                setUser_name([])\r\n            }else {\r\n                setUser_name(user_name)\r\n            }\r\n\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n\r\n            setSelectDep(department_id)\r\n\r\n            setSelectCompany(company_id)\r\n\r\n            setSelectItc(vacancy_code)\r\n\r\n            setProjectItem(project_id)\r\n\r\n            setPlannedReleaseDate(planned_release_date)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className='departmentName'>{department}</h2>\r\n            <div className=\"vacancies-container\">\r\n                {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)}\r\n                         onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,\r\n                             vac.user_name,vac.user_id,vac.department_id,vac.company_id,vac.vacancy_code,vac.project_id,vac.planned_release_date)}>\r\n\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\"></div>\r\n                            <div id=\"div2\">{vac.user_name}</div>\r\n                            <div id=\"div3\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div4\"></div>\r\n                            <div id=\"div5\">{vac.name}</div>\r\n                            <div id=\"div6\"></div>\r\n                            <div id=\"div7\"></div>\r\n                            <div id=\"div8\">{vac.vacancy_code}</div>\r\n                            <div id=\"div9\"></div>\r\n                            <div id=\"div10\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div11\">{vac.status_name}</div>\r\n                            <div id=\"div12\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div13\">{vac.company_name}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <ModalVacanciesItem\r\n                    modalVacations={modalVacations}\r\n                    setModalVacations={setModalVacations}\r\n                    vacanciesId={vacanciesId}\r\n                    setVacanciesId={setVacanciesId}\r\n                    deps={deps}\r\n                    status={status}\r\n                    company={company}\r\n                    users={users}\r\n                    ChangeData={ChangeData}\r\n                    localUser={localUser}\r\n                    selectedVacanciesName={selectedVacanciesName}\r\n                    setSelectedVacanciesName={setSelectedVacanciesName}\r\n                    selectedVacanciesDescription={selectedVacanciesDescription}\r\n                    setSelectedVacanciesDescription={setSelectedVacanciesDescription}\r\n                    selectedVacanciesGrade={selectedVacanciesGrade}\r\n                    setSelectedVacanciesGrade={setSelectedVacanciesGrade}\r\n                    selectedVacanciesStatuses={selectedVacanciesStatuses}\r\n                    setSelectedVacanciesStatuses={setSelectedVacanciesStatuses}\r\n                    selectedDep={selectDep}\r\n                    setSelectDep={setSelectDep}\r\n                    selectCompany={selectCompany}\r\n                    setSelectCompany={setSelectCompany}\r\n                    selectItc={selectItc}\r\n                    setSelectItc={setSelectItc}\r\n                    projectItem={projectItem}\r\n                    setProjectItem={setProjectItem}\r\n                    plannedReleaseDate={plannedReleaseDate}\r\n                    setPlannedReleaseDate={setPlannedReleaseDate}\r\n                    old_user={old_user}\r\n                    setOld_user={setOld_user}\r\n                    userId={userId}\r\n                    setUserId={setUserId}\r\n                    user_name={user_name}\r\n                    setUser_name={setUser_name}\r\n                    searchTerm={searchTerm}\r\n                    setSearchTerm={setSearchTerm}\r\n                    filteredUsers={filteredUsers}\r\n                    setFilteredUsers={setFilteredUsers}\r\n                    message={message}\r\n                    setMessage={setMessage}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}