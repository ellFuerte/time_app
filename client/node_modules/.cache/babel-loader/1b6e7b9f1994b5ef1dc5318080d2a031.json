{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]); // Функция для открытия или закрытия узла\n\n  const toggleNode = index => {\n    const updatedDep = [...dep];\n    updatedDep[index].isOpen = !updatedDep[index].isOpen;\n    setDep(updatedDep);\n  }; // Загрузка всех департаментов\n\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const initialDepState = res.data.map(node => ({ ...node,\n        isOpen: false\n      }));\n      setDep(initialDepState);\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nodeLabel\",\n              onClick: () => toggleNode(i) // Добавляем обработчик клика для открытия/закрытия узла\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              collapsed: !node.isOpen // Используем состояние isOpen для открытия/закрытия узла\n              ,\n              children: node.department_tree_to_json.Subclasses.map(department => /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${department.id}`,\n                className: \"depsUser\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"node\",\n                  children: department.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 45\n                }, this)\n              }, department.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useEffect","useState","Link","axios","TreeView","Sidebar","dep","setDep","toggleNode","index","updatedDep","isOpen","getDeps","res","get","initialDepState","data","map","node","i","label","department_tree_to_json","Name","Subclasses","department","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    // Функция для открытия или закрытия узла\r\n    const toggleNode = (index) => {\r\n        const updatedDep = [...dep];\r\n        updatedDep[index].isOpen = !updatedDep[index].isOpen;\r\n        setDep(updatedDep);\r\n    };\r\n\r\n    // Загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const initialDepState = res.data.map((node) => ({ ...node, isOpen: false }));\r\n            setDep(initialDepState);\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <div\r\n                                    className=\"nodeLabel\"\r\n                                    onClick={() => toggleNode(i)} // Добавляем обработчик клика для открытия/закрытия узла\r\n                                >\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </div>\r\n                            );\r\n\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    defaultCollapsed={false}\r\n                                    collapsed={!node.isOpen} // Используем состояние isOpen для открытия/закрытия узла\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((department) => (\r\n                                        <Link\r\n                                            to={`/department/${department.id}`}\r\n                                            className=\"depsUser\"\r\n                                            key={department.id}\r\n                                        >\r\n                                            <div className=\"node\">{department.Name}</div>\r\n                                        </Link>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}