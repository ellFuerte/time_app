{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  var _localUser$checkedDep5;\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [modalActive, setModalActive] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const changedArr = [];\n  const [isModalFetching, setIsModalFetching] = useState(false);\n\n  for (let i = 0; i < ((_localUser$checkedDep = localUser.checkedDeps) === null || _localUser$checkedDep === void 0 ? void 0 : _localUser$checkedDep.length); i++) {\n    var _localUser$checkedDep;\n\n    changedArr.push(localUser.checkedDeps[i]);\n  } // ставит галочки в модалке\n\n\n  function addChecked(deps) {\n    for (let i = 0; i < deps.length; i++) {\n      for (let j = 0; j < ((_localUser$checkedDep2 = localUser.checkedDeps) === null || _localUser$checkedDep2 === void 0 ? void 0 : _localUser$checkedDep2.length); j++) {\n        var _localUser$checkedDep2;\n\n        if (deps[i]._id === localUser.checkedDeps[j]) {\n          deps[i].checked = true;\n        }\n      }\n    }\n  } // фильтр нужных департаментов\n\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep); // фильтр нужных людей\n\n  const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId));\n  const usersFilterDeps = users.filter(user => {\n    var _localUser$checkedDep3;\n\n    return (_localUser$checkedDep3 = localUser.checkedDeps) === null || _localUser$checkedDep3 === void 0 ? void 0 : _localUser$checkedDep3.find(f => f === user.departmentId);\n  });\n  const depsFilterDeps = deps.filter(dep => {\n    var _localUser$checkedDep4;\n\n    return (_localUser$checkedDep4 = localUser.checkedDeps) === null || _localUser$checkedDep4 === void 0 ? void 0 : _localUser$checkedDep4.find(f => f === dep._id);\n  });\n  const isLockDeps = localUser.checkedDeps !== null && ((_localUser$checkedDep5 = localUser.checkedDeps) === null || _localUser$checkedDep5 === void 0 ? void 0 : _localUser$checkedDep5.length) > 0;\n  let addChildrenArr = [];\n  useEffect(() => {\n    // получение всех пользователей\n    const fetchUsers = async () => {\n      setIsFetching(true);\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(filterUsers);\n      setIsFetching(false);\n    }; // получение данных о себе\n\n\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user/' + localUser._id);\n      setUser(res.data);\n      setIsFetching(false);\n    }; // получение и фильтр департаментов\n\n\n    const getDeps = async () => {\n      setIsModalFetching(true);\n      const res = await axios.get('/api/departments/');\n      addChecked(res.data);\n\n      for (let i = 0; i < res.data.length - 1; i++) {\n        for (let j = i + 1; j < res.data.length; j++) {\n          if (res.data.find(k => k === res.data[j].dep_id && k !== res.data[i].dep_id)) {\n            if (res.data[j].margin) {\n              res.data[j].margin += 10;\n            } else {\n              res.data[j].margin = 10;\n            }\n          }\n        }\n      }\n\n      let newArr = res.data.filter(d => d.dep_id !== 7);\n      newArr.push(res.data[6]);\n      setDeps(newArr);\n      setIsModalFetching(false);\n    };\n\n    getDeps();\n    fetchUser();\n    setIsOpen(false);\n    fetchUsers();\n  }, [departId]); // фильтр пользователей по статусу\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  }\n\n  const handleClick = () => {\n    if (departId) {\n      setIsOpen(true);\n    } else {\n      setModalActive(true);\n    }\n  }; // добавляем/удаляем департамент в модалке\n\n\n  const handlePush = e => {\n    if (e.target.checked) {\n      changedArr.push(e.target.value);\n    } else {\n      const index = changedArr.indexOf(e.target.value);\n      changedArr.splice(index, 1);\n      delete e.target.checked;\n    }\n  }; // добавление дочерних\n\n\n  const handleAddChildren = e => {\n    if (e.target.checked) {\n      const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n      addChildrenArr = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n    } else {\n      addChildrenArr = [];\n    }\n  }; // обновляем данные модального окна\n\n\n  const handleModalClick = async e => {\n    e.preventDefault();\n    let newInfo;\n\n    if (departId) {\n      addChildrenArr = addChildrenArr.map(i => i._id);\n      newInfo = {\n        userId: user._id,\n        checkedDeps: [departId, ...addChildrenArr]\n      };\n    } else {\n      newInfo = {\n        userId: user._id,\n        checkedDeps: changedArr\n      };\n    }\n\n    try {\n      await axios.put('/api/user/' + localUser._id, newInfo);\n\n      if (user._id === localUser._id) {\n        localStorage.setItem('user', JSON.stringify({ ...user,\n          ...newInfo\n        }));\n      }\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchUserpost = async () => {\n    const res = await axios.get('/api/post?type=1&id=' + localUser._id);\n    console.log(res);\n    setIsFetching(false);\n  };\n\n  const fetchUservacation = async () => {\n    const res = await axios.get('/api/vacation?id=' + localUser._id);\n    setIsFetching(false);\n  };\n\n  const handleWorkVacation = () => {\n    if (isJob) {\n      fetchUservacation();\n    } else {\n      fetchUserpost();\n    }\n\n    setIsJob(!isJob);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [departId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"workVacation\",\n        onClick: handleWorkVacation,\n        children: isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          style: {\n            width: '155px'\n          },\n          children: \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A/\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 78\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 164\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isFetching\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this) : users.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyStaff\",\n        children: \"\\u0421\\u043F\\u0438c\\u043E\\u043A \\u043F\\u0443\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }, this) : departId ? !isOpen ? users.filter(user => user.department_id === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 99\n      }, this)) : usersFilter.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 57\n      }, this)) : isLockDeps ? usersFilterDeps.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 61\n      }, this)) : users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [isModalFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 14\n        }, this) : deps.map((dep, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: dep.department_name,\n          style: {\n            paddingLeft: `${dep.margin}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: dep.id,\n            id: dep.id,\n            name: dep.department_name,\n            onChange: handlePush,\n            checked: dep.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), dep.department_name]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleAddChildren\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Staff, \"yBpyDmAT1dQUMiAntozK+wrcHto=\", false, function () {\n  return [useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","useParams","Modal","SearchBlock","Staff","users","setUsers","user","setUser","deps","setDeps","isOpen","setIsOpen","isFetching","setIsFetching","isJob","setIsJob","departId","username","localUser","JSON","parse","localStorage","getItem","modalActive","setModalActive","modalMain","setModalMain","changedArr","isModalFetching","setIsModalFetching","i","checkedDeps","length","push","addChecked","j","_id","checked","currentDep","filter","dep","departmentId","filterDeps","find","dep_id","usersFilter","f","usersFilterDeps","depsFilterDeps","isLockDeps","addChildrenArr","fetchUsers","res","get","data","sort","a","b","user_name","localeCompare","filterUsers","filterUsersFoo","fetchUser","getDeps","k","margin","newArr","d","status","concat","handleClick","handlePush","e","target","value","index","indexOf","splice","handleAddChildren","handleModalClick","preventDefault","newInfo","map","userId","put","setItem","stringify","window","location","reload","error","console","log","fetchUserpost","fetchUservacation","handleWorkVacation","width","float","department_id","id","department_name","paddingLeft"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMmB,QAAQ,GAAGhB,SAAS,GAAGiB,QAA7B;AAEA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM8B,UAAU,GAAG,EAAnB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC,KAAD,CAAtD;;AAEA,OAAI,IAAIiC,CAAC,GAAC,CAAV,EAAaA,CAAC,6BAACZ,SAAS,CAACa,WAAX,0DAAC,sBAAuBC,MAAxB,CAAd,EAA8CF,CAAC,EAA/C,EAAkD;AAAA;;AAChDH,IAAAA,UAAU,CAACM,IAAX,CAAgBf,SAAS,CAACa,WAAV,CAAsBD,CAAtB,CAAhB;AACD,GAlB6B,CAoB9B;;;AACA,WAASI,UAAT,CAAoB1B,IAApB,EAAyB;AACvB,SAAI,IAAIsB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGtB,IAAI,CAACwB,MAAtB,EAA8BF,CAAC,EAA/B,EAAkC;AAChC,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,8BAAGjB,SAAS,CAACa,WAAb,2DAAG,uBAAuBC,MAA1B,CAAd,EAAgDG,CAAC,EAAjD,EAAoD;AAAA;;AAClD,YAAG3B,IAAI,CAACsB,CAAD,CAAJ,CAAQM,GAAR,KAAgBlB,SAAS,CAACa,WAAV,CAAsBI,CAAtB,CAAnB,EAA4C;AAC1C3B,UAAAA,IAAI,CAACsB,CAAD,CAAJ,CAAQO,OAAR,GAAkB,IAAlB;AACD;AACF;AACF;AACF,GA7B6B,CA+B9B;;;AACA,QAAMC,UAAU,GAAG9B,IAAI,CAAC+B,MAAL,CAAYC,GAAG,IAAIxB,QAAQ,GAAGwB,GAAG,CAACJ,GAAJ,KAAYpB,QAAf,GAA0BwB,GAAG,CAACJ,GAAJ,KAAYlB,SAAS,CAACuB,YAA3E,CAAnB;AACA,MAAIC,UAAU,GAAGlC,IAAI,CAAC+B,MAAL,CAAYC,GAAG,IAAIF,UAAU,CAACK,IAAX,CAAgBb,CAAC,IAAIA,CAAC,KAAKU,GAAG,CAACI,MAAV,IAAoBd,CAAC,KAAKQ,UAAU,CAAC,CAAD,CAAV,CAAcM,MAA7D,CAAnB,CAAjB;AACAF,EAAAA,UAAU,CAACT,IAAX,CAAgB,GAAGK,UAAnB,EAlC8B,CAoC9B;;AACA,QAAMO,WAAW,GAAGzC,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIoC,UAAU,CAACC,IAAX,CAAgBG,CAAC,IAAIA,CAAC,CAACV,GAAF,KAAU9B,IAAI,CAACmC,YAApC,CAArB,CAApB;AACA,QAAMM,eAAe,GAAG3C,KAAK,CAACmC,MAAN,CAAajC,IAAI;AAAA;;AAAA,qCAAIY,SAAS,CAACa,WAAd,2DAAI,uBAAuBY,IAAvB,CAA4BG,CAAC,IAAIA,CAAC,KAAKxC,IAAI,CAACmC,YAA5C,CAAJ;AAAA,GAAjB,CAAxB;AACA,QAAMO,cAAc,GAAGxC,IAAI,CAAC+B,MAAL,CAAYC,GAAG;AAAA;;AAAA,qCAAItB,SAAS,CAACa,WAAd,2DAAI,uBAAuBY,IAAvB,CAA4BG,CAAC,IAAIA,CAAC,KAAKN,GAAG,CAACJ,GAA3C,CAAJ;AAAA,GAAf,CAAvB;AAEA,QAAMa,UAAU,GAAG/B,SAAS,CAACa,WAAV,KAA0B,IAA1B,IAAkC,2BAAAb,SAAS,CAACa,WAAV,kFAAuBC,MAAvB,IAAgC,CAArF;AAEA,MAAIkB,cAAc,GAAG,EAArB;AAEAtD,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMuD,UAAU,GAAG,YAAY;AAC7BtC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,YAAMuC,GAAG,GAAG,MAAMtD,KAAK,CAACuD,GAAN,CAAU,WAAV,CAAlB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAAxB;AACA,UAAIE,WAAW,GAAGC,cAAc,CAACT,GAAG,CAACE,IAAL,CAAhC;AACAjD,MAAAA,QAAQ,CAACuD,WAAD,CAAR;AACA/C,MAAAA,aAAa,CAAC,KAAD,CAAb;AAED,KARD,CAHc,CAad;;;AACA,UAAMiD,SAAS,GAAG,YAAY;AAE5B,YAAMV,GAAG,GAAG,MAAMtD,KAAK,CAACuD,GAAN,CAAU,eAAanC,SAAS,CAACkB,GAAjC,CAAlB;AAEA7B,MAAAA,OAAO,CAAC6C,GAAG,CAACE,IAAL,CAAP;AACAzC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAND,CAdc,CAsBd;;;AACA,UAAMkD,OAAO,GAAG,YAAY;AAC1BlC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,YAAMuB,GAAG,GAAG,MAAMtD,KAAK,CAACuD,GAAN,CAAU,mBAAV,CAAlB;AACAnB,MAAAA,UAAU,CAACkB,GAAG,CAACE,IAAL,CAAV;;AACA,WAAI,IAAIxB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGsB,GAAG,CAACE,IAAJ,CAAStB,MAAT,GAAgB,CAAnC,EAAsCF,CAAC,EAAvC,EAA0C;AACxC,aAAI,IAAIK,CAAC,GAAGL,CAAC,GAAC,CAAd,EAAiBK,CAAC,GAAGiB,GAAG,CAACE,IAAJ,CAAStB,MAA9B,EAAsCG,CAAC,EAAvC,EAA0C;AACxC,cAAGiB,GAAG,CAACE,IAAJ,CAASX,IAAT,CAAcqB,CAAC,IAAIA,CAAC,KAAKZ,GAAG,CAACE,IAAJ,CAASnB,CAAT,EAAYS,MAAlB,IAA4BoB,CAAC,KAAKZ,GAAG,CAACE,IAAJ,CAASxB,CAAT,EAAYc,MAAjE,CAAH,EAA4E;AAC1E,gBAAGQ,GAAG,CAACE,IAAJ,CAASnB,CAAT,EAAY8B,MAAf,EAAuB;AACrBb,cAAAA,GAAG,CAACE,IAAJ,CAASnB,CAAT,EAAY8B,MAAZ,IAAsB,EAAtB;AACD,aAFD,MAEO;AACLb,cAAAA,GAAG,CAACE,IAAJ,CAASnB,CAAT,EAAY8B,MAAZ,GAAqB,EAArB;AACD;AACF;AACF;AACF;;AAED,UAAIC,MAAM,GAAGd,GAAG,CAACE,IAAJ,CAASf,MAAT,CAAgB4B,CAAC,IAAIA,CAAC,CAACvB,MAAF,KAAa,CAAlC,CAAb;AACAsB,MAAAA,MAAM,CAACjC,IAAP,CAAYmB,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAZ;AAEA7C,MAAAA,OAAO,CAACyD,MAAD,CAAP;AACArC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KArBD;;AAuBAkC,IAAAA,OAAO;AACPD,IAAAA,SAAS;AACTnD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAwC,IAAAA,UAAU;AACX,GAlDQ,EAkDN,CAACnC,QAAD,CAlDM,CAAT,CA7C8B,CAiG9B;;AACA,WAAS6C,cAAT,CAAwBzD,KAAxB,EAA8B;AAC5B,WAAOA,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC8D,MAAL,KAAgB,CAArC,EACNC,MADM,CACCjE,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC8D,MAAL,KAAgB,CAArC,CADD,EAENC,MAFM,CAECjE,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC8D,MAAL,KAAgB,CAArC,CAFD,EAGNC,MAHM,CAGCjE,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC8D,MAAL,KAAgB,CAAhB,IAAqB9D,IAAI,CAAC8D,MAAL,KAAgB,CAArC,IAA0C9D,IAAI,CAAC8D,MAAL,KAAgB,CAA1D,IAA+D9D,IAAI,CAAC8D,MAAL,KAAgB,CAApG,CAHD,EAINC,MAJM,CAICjE,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC8D,MAAL,KAAgB,CAArC,CAJD,CAAP;AAKD;;AAED,QAAME,WAAW,GAAG,MAAM;AACxB,QAAGtD,QAAH,EAAY;AACVL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAEK;AACHa,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAND,CA1G8B,CAkH9B;;;AACA,QAAM+C,UAAU,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,MAAF,CAASpC,OAAb,EAAsB;AACpBV,MAAAA,UAAU,CAACM,IAAX,CAAgBuC,CAAC,CAACC,MAAF,CAASC,KAAzB;AACD,KAFD,MAEK;AACH,YAAMC,KAAK,GAAGhD,UAAU,CAACiD,OAAX,CAAmBJ,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAd;AACA/C,MAAAA,UAAU,CAACkD,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACA,aAAOH,CAAC,CAACC,MAAF,CAASpC,OAAhB;AACD;AACF,GARD,CAnH8B,CA6H9B;;;AACA,QAAMyC,iBAAiB,GAAGN,CAAC,IAAI;AAC7B,QAAIA,CAAC,CAACC,MAAF,CAASpC,OAAb,EAAsB;AACpB,YAAMC,UAAU,GAAG9B,IAAI,CAAC+B,MAAL,CAAYC,GAAG,IAAIxB,QAAQ,GAAGwB,GAAG,CAACJ,GAAJ,KAAYpB,QAAf,GAA0BwB,GAAG,CAACJ,GAAJ,KAAYlB,SAAS,CAACuB,YAA3E,CAAnB;AACAS,MAAAA,cAAc,GAAG1C,IAAI,CAAC+B,MAAL,CAAYC,GAAG,IAAIF,UAAU,CAACK,IAAX,CAAgBb,CAAC,IAAIA,CAAC,KAAKU,GAAG,CAACI,MAAV,IAAoBd,CAAC,KAAKQ,UAAU,CAAC,CAAD,CAAV,CAAcM,MAA7D,CAAnB,CAAjB;AACD,KAHD,MAGK;AACHM,MAAAA,cAAc,GAAG,EAAjB;AACD;AACF,GAPD,CA9H8B,CAuI9B;;;AACD,QAAM6B,gBAAgB,GAAG,MAAOP,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACQ,cAAF;AAEA,QAAIC,OAAJ;;AAEA,QAAGjE,QAAH,EAAY;AACVkC,MAAAA,cAAc,GAAGA,cAAc,CAACgC,GAAf,CAAmBpD,CAAC,IAAIA,CAAC,CAACM,GAA1B,CAAjB;AACA6C,MAAAA,OAAO,GAAE;AACPE,QAAAA,MAAM,EAAE7E,IAAI,CAAC8B,GADN;AAEPL,QAAAA,WAAW,EAAE,CAACf,QAAD,EAAW,GAAGkC,cAAd;AAFN,OAAT;AAID,KAND,MAMK;AACH+B,MAAAA,OAAO,GAAE;AACPE,QAAAA,MAAM,EAAE7E,IAAI,CAAC8B,GADN;AAEPL,QAAAA,WAAW,EAAEJ;AAFN,OAAT;AAID;;AAED,QAAI;AACH,YAAM7B,KAAK,CAACsF,GAAN,CAAU,eAAalE,SAAS,CAACkB,GAAjC,EAAsC6C,OAAtC,CAAN;;AACC,UAAG3E,IAAI,CAAC8B,GAAL,KAAalB,SAAS,CAACkB,GAA1B,EAA8B;AAC5Bf,QAAAA,YAAY,CAACgE,OAAb,CAAqB,MAArB,EAA6BlE,IAAI,CAACmE,SAAL,CAAe,EAAC,GAAGhF,IAAJ;AAAU,aAAG2E;AAAb,SAAf,CAA7B;AACD;;AACDM,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED;AAEF,GA7BF;;AA8BC,QAAMG,aAAa,GAAG,YAAY;AAChC,UAAMzC,GAAG,GAAG,MAAMtD,KAAK,CAACuD,GAAN,CAAU,yBAAuBnC,SAAS,CAACkB,GAA3C,CAAlB;AACAuD,IAAAA,OAAO,CAACC,GAAR,CAAYxC,GAAZ;AAGAvC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAND;;AAOA,QAAMiF,iBAAiB,GAAG,YAAY;AACpC,UAAM1C,GAAG,GAAG,MAAMtD,KAAK,CAACuD,GAAN,CAAU,sBAAoBnC,SAAS,CAACkB,GAAxC,CAAlB;AAGAvB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GALD;;AAMA,QAAMkF,kBAAkB,GAAG,MAAM;AAC/B,QAAGjF,KAAH,EAAS;AACPgF,MAAAA,iBAAiB;AAAG,KADtB,MAC2B;AACzBD,MAAAA,aAAa;AAAG;;AAClB9E,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAED,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eAIGE,QAAQ,iBAAI;AAAA,8BACX;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,OAAO,EAAE+E,kBAAxC;AAAA,kBAA6DjF,KAAK,gBAAG;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,KAAK,EAAE;AAACkF,YAAAA,KAAK,EAAC;AAAP,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAyF;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3J;AAAA;AAAA;AAAA;AAAA,cADW,eAIX;AAAQ,QAAA,OAAO,EAAE,MAAMtE,YAAY,CAAC,IAAD,CAAnC;AAA2C,QAAA,SAAS,EAAC,UAArD;AAAgE,QAAA,KAAK,EAAE;AAACuE,UAAAA,KAAK,EAAE;AAAR,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJW;AAAA,oBAJf,eAUE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGrF,UAAU,gBACP;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,GAEPR,KAAK,CAAC4B,MAAN,KAAiB,CAAjB,gBACM;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,GAEMhB,QAAQ,GACJ,CAACN,MAAD,GACIN,KAAK,CAACmC,MAAN,CAAajC,IAAI,IAAIA,IAAI,CAAC4F,aAAL,KAAuBlF,QAA5C,EAAsDkE,GAAtD,CAA0D,CAAC5E,IAAD,EAAO6F,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAE7F;AAAzB,SAAe6F,EAAf;AAAA;AAAA;AAAA;AAAA,cAAxE,CADJ,GAEItD,WAAW,CAACqC,GAAZ,CAAgB,CAAC5E,IAAD,EAAO6F,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAE7F;AAAzB,SAAe6F,EAAf;AAAA;AAAA;AAAA;AAAA,cAA9B,CAHA,GAIJlD,UAAU,GACNF,eAAe,CAACmC,GAAhB,CAAoB,CAAC5E,IAAD,EAAO6F,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAE7F;AAAzB,SAAe6F,EAAf;AAAA;AAAA;AAAA;AAAA,cAAlC,CADM,GAEN/F,KAAK,CAAC8E,GAAN,CAAU,CAAC5E,IAAD,EAAO6F,EAAP,kBAAc,QAAC,QAAD;AAAmB,QAAA,IAAI,EAAE7F;AAAzB,SAAe6F,EAAf;AAAA;AAAA;AAAA;AAAA,cAAxB;AAXpB;AAAA;AAAA;AAAA;AAAA,YAVF,eA0BE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE5E,WAAf;AAA4B,MAAA,SAAS,EAAEC,cAAvC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,mBACGI,eAAe,gBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADa,GAEZpB,IAAI,CAAC0E,GAAL,CAAS,CAAC1C,GAAD,EAAM2D,EAAN,kBAAa;AAAgB,UAAA,OAAO,EAAE3D,GAAG,CAAC4D,eAA7B;AAA8C,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAG,GAAE7D,GAAG,CAACyB,MAAO;AAA5B,WAArD;AAAA,kCACxB;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAEzB,GAAG,CAAC2D,EAFb;AAGE,YAAA,EAAE,EAAE3D,GAAG,CAAC2D,EAHV;AAIE,YAAA,IAAI,EAAE3D,GAAG,CAAC4D,eAJZ;AAKE,YAAA,QAAQ,EAAE7B,UALZ;AAME,YAAA,OAAO,EAAE/B,GAAG,CAACH;AANf;AAAA;AAAA;AAAA;AAAA,kBADwB,EAQrBG,GAAG,CAAC4D,eARiB;AAAA,WAAYD,EAAZ;AAAA;AAAA;AAAA;AAAA,gBAAtB,CAHN,eAaE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,IAAI,EAAC,QAArC;AAA8C,UAAA,QAAQ,EAAEvF,UAAxD;AAAoE,UAAA,OAAO,EAAEmE,gBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eA+CE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEtD,SAAf;AAA0B,MAAA,SAAS,EAAEC,YAArC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,QAAQ,EAAEoD;AAFZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,IAAI,EAAC,QAArC;AAA8C,UAAA,QAAQ,EAAElE,UAAxD;AAAoE,UAAA,OAAO,EAAEmE,gBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GA1PuB5E,K;UAOLH,S;;;KAPKG,K","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\r\n\r\nexport default function Staff() {\r\n  const [users, setUsers] = useState([])\r\n  const [user, setUser] = useState([])\r\n  const [deps, setDeps] = useState([])\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [isJob, setIsJob] = useState(true)\r\n  const departId = useParams().username\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalMain, setModalMain] = useState(false)\r\n  const changedArr = []\r\n  const [isModalFetching, setIsModalFetching] = useState(false)\r\n\r\n  for(let i=0; i<localUser.checkedDeps?.length; i++){\r\n    changedArr.push(localUser.checkedDeps[i])\r\n  }\r\n\r\n  // ставит галочки в модалке\r\n  function addChecked(deps){\r\n    for(let i=0; i < deps.length; i++){\r\n      for(let j=0; j < localUser.checkedDeps?.length; j++){\r\n        if(deps[i]._id === localUser.checkedDeps[j]){\r\n          deps[i].checked = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // фильтр нужных департаментов\r\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n  filterDeps.push(...currentDep)\r\n\r\n  // фильтр нужных людей\r\n  const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId))\r\n  const usersFilterDeps = users.filter(user => localUser.checkedDeps?.find(f => f === user.departmentId))\r\n  const depsFilterDeps = deps.filter(dep => localUser.checkedDeps?.find(f => f === dep._id))\r\n\r\n  const isLockDeps = localUser.checkedDeps !== null && localUser.checkedDeps?.length > 0\r\n\r\n  let addChildrenArr = []\r\n\r\n  useEffect(() => {\r\n\r\n    // получение всех пользователей\r\n    const fetchUsers = async () => {\r\n      setIsFetching(true)\r\n      const res = await axios.get('/api/user')\r\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n      let filterUsers = filterUsersFoo(res.data)\r\n      setUsers(filterUsers)\r\n      setIsFetching(false)\r\n\r\n    }\r\n\r\n    // получение данных о себе\r\n    const fetchUser = async () => {\r\n\r\n      const res = await axios.get('/api/user/'+localUser._id)\r\n\r\n      setUser(res.data)\r\n      setIsFetching(false)\r\n    }\r\n\r\n    // получение и фильтр департаментов\r\n    const getDeps = async () => {\r\n      setIsModalFetching(true)\r\n      const res = await axios.get('/api/departments/')\r\n      addChecked(res.data)\r\n      for(let i = 0; i < res.data.length-1; i++){\r\n        for(let j = i+1; j < res.data.length; j++){\r\n          if(res.data.find(k => k === res.data[j].dep_id && k !== res.data[i].dep_id)){\r\n            if(res.data[j].margin ){\r\n              res.data[j].margin += 10\r\n            } else {\r\n              res.data[j].margin = 10\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let newArr = res.data.filter(d => d.dep_id !== 7)\r\n      newArr.push(res.data[6])\r\n\r\n      setDeps(newArr)\r\n      setIsModalFetching(false)\r\n    }\r\n\r\n    getDeps()\r\n    fetchUser()\r\n    setIsOpen(false)\r\n    fetchUsers()\r\n  }, [departId])\r\n\r\n  // фильтр пользователей по статусу\r\n  function filterUsersFoo(users){\r\n    return users.filter(user => user.status === 1)\r\n    .concat(users.filter(user => user.status === 2))\r\n    .concat(users.filter(user => user.status === 3))\r\n    .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n    .concat(users.filter(user => user.status === 4))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if(departId){\r\n      setIsOpen(true)\r\n    }else{\r\n      setModalActive(true)\r\n    }\r\n  }\r\n\r\n  // добавляем/удаляем департамент в модалке\r\n  const handlePush = e => {\r\n    if (e.target.checked) {\r\n      changedArr.push(e.target.value)\r\n    }else{\r\n      const index = changedArr.indexOf(e.target.value)\r\n      changedArr.splice(index, 1)\r\n      delete e.target.checked\r\n    }\r\n  }\r\n\r\n  // добавление дочерних\r\n  const handleAddChildren = e => {\r\n    if (e.target.checked) {\r\n      const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n      addChildrenArr = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n    }else{\r\n      addChildrenArr = []\r\n    }\r\n  }\r\n\r\n  // обновляем данные модального окна\r\n const handleModalClick = async (e) => {\r\n    e.preventDefault()\r\n\r\n    let newInfo\r\n\r\n    if(departId){\r\n      addChildrenArr = addChildrenArr.map(i => i._id)\r\n      newInfo= {\r\n        userId: user._id,\r\n        checkedDeps: [departId, ...addChildrenArr]\r\n      }\r\n    }else{\r\n      newInfo= {\r\n        userId: user._id,\r\n        checkedDeps: changedArr\r\n      }\r\n    }\r\n\r\n    try {\r\n     await axios.put('/api/user/'+localUser._id, newInfo)\r\n      if(user._id === localUser._id){\r\n        localStorage.setItem('user', JSON.stringify({...user, ...newInfo}))\r\n      }\r\n      window.location.reload()\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n\r\n  }\r\n  const fetchUserpost = async () => {\r\n    const res = await axios.get('/api/post?type=1&id='+localUser._id)\r\n    console.log(res)\r\n\r\n\r\n    setIsFetching(false)\r\n  }\r\n  const fetchUservacation = async () => {\r\n    const res = await axios.get('/api/vacation?id='+localUser._id)\r\n\r\n\r\n    setIsFetching(false)\r\n  }\r\n  const handleWorkVacation = () => {\r\n    if(isJob){\r\n      fetchUservacation()}else {\r\n      fetchUserpost()}\r\n    setIsJob(!isJob)\r\n\r\n  }\r\n  return (\r\n    <div className='staff'>\r\n     {/* {!departId && <div className='changeDepsContainer'>\r\n        {<div><span className='changeDeps' onClick={handleClick}>Изменить</span></div>}\r\n      </div>}*/}\r\n      {departId && <>\r\n        <span className='workVacation' onClick={handleWorkVacation}>{isJob ? <button className=\"filterButton\" style={{width:'155px'}}>Отпуск/Больничный</button> : <button className=\"filterButton\">Работа</button> }</span>\r\n\r\n\r\n        <button onClick={() => setModalMain(true)} className='btnStaff' style={{float: 'right'}}>Сделать главной</button>\r\n      </>}\r\n      <div className=\"employeeWrapper\">\r\n        {isFetching\r\n          ? <div className='isFetching'>Загрузка...</div>\r\n          : users.length === 0\r\n                ? <div className='emptyStaff'>Спиcок пуст</div>\r\n                : departId\r\n                    ? !isOpen\r\n                        ? users.filter(user => user.department_id === departId).map((user, id) => <Employee key={id} user={user}/>)\r\n                        : usersFilter.map((user, id) => <Employee key={id} user={user}/>)\r\n                    : isLockDeps\r\n                        ? usersFilterDeps.map((user, id) => <Employee key={id} user={user}/>)\r\n                        : users.map((user, id) => <Employee key={id} user={user}/>)\r\n\r\n        }\r\n\r\n      </div>\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        <form className=\"modalLoginBox\">\r\n          {isModalFetching\r\n            ?<div>Загрузка</div>\r\n            : deps.map((dep, id) => <label key={id} htmlFor={dep.department_name} style={{paddingLeft: `${dep.margin}px`}}>\r\n            <input\r\n              type='checkbox'\r\n              value={dep.id}\r\n              id={dep.id}\r\n              name={dep.department_name}\r\n              onChange={handlePush}\r\n              checked={dep.checked}\r\n            />{dep.department_name}</label>)\r\n          }\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n            Изменить\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n      <Modal active={modalMain} setActive={setModalMain}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        <form className=\"modalLoginBox\">\r\n          <label>\r\n            <input\r\n              type='checkbox'\r\n              onChange={handleAddChildren}\r\n            />Добавить дочерние</label>\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n            Изменить\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}