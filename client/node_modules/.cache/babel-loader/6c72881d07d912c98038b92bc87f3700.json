{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  initialOpenDepartmentId\n}) => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []);\n  useEffect(() => {\n    if (initialOpenDepartmentId) {\n      openDepartmentAndSubclasses(initialOpenDepartmentId);\n    }\n  }, [initialOpenDepartmentId]);\n\n  const openDepartmentAndSubclasses = id => {\n    const updatedDep = dep.map(node => {\n      if (node.department_tree_to_json.id === id) {\n        return openNode(node);\n      } else {\n        return closeNode(node);\n      }\n    });\n    setDep(updatedDep);\n  };\n\n  const openNode = node => {\n    const updatedNode = { ...node\n    };\n    updatedNode.isOpen = true;\n    updatedNode.department_tree_to_json.Subclasses = openSubclasses(node.department_tree_to_json.Subclasses);\n    return updatedNode;\n  };\n\n  const closeNode = node => {\n    const updatedNode = { ...node\n    };\n    updatedNode.isOpen = false;\n    updatedNode.department_tree_to_json.Subclasses = closeSubclasses(node.department_tree_to_json.Subclasses);\n    return updatedNode;\n  };\n\n  const openSubclasses = subclasses => {\n    return subclasses.map(subclass => {\n      return openSubclass(subclass);\n    });\n  };\n\n  const closeSubclasses = subclasses => {\n    return subclasses.map(subclass => {\n      return closeSubclass(subclass);\n    });\n  };\n\n  const openSubclass = subclass => {\n    const updatedSubclass = { ...subclass\n    };\n    updatedSubclass.isOpen = true;\n    updatedSubclass.Subclasses = subclass.Subclasses ? openSubclasses(subclass.Subclasses) : [];\n    return updatedSubclass;\n  };\n\n  const closeSubclass = subclass => {\n    const updatedSubclass = { ...subclass\n    };\n    updatedSubclass.isOpen = false;\n    updatedSubclass.Subclasses = subclass.Subclasses ? closeSubclasses(subclass.Subclasses) : [];\n    return updatedSubclass;\n  };\n\n  const renderTree = node => {\n    const label = /*#__PURE__*/_jsxDEV(Link, {\n      to: `/department/${node.department_tree_to_json.id}`,\n      className: \"level1\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"node\",\n        children: node.department_tree_to_json.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(TreeView, {\n      nodeLabel: label,\n      defaultCollapsed: !node.isOpen,\n      children: node.department_tree_to_json.Subclasses.map(subclass => {\n        return /*#__PURE__*/_jsxDEV(TreeView, {\n          nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/department/${subclass.id}`,\n            className: \"depsUser\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"node\",\n              children: subclass.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this),\n          defaultCollapsed: !subclass.isOpen,\n          children: subclass.Subclasses && subclass.Subclasses.map(subSubclass => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${subSubclass.id}`,\n              className: \"depsUser\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  paddingBottom: '8px'\n                },\n                children: subSubclass.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)\n            }, subSubclass.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this);\n          })\n        }, subclass.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this);\n      })\n    }, node.department_tree_to_json.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map(node => {\n            return renderTree(node);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"WJREAWVzbvLQkDmYawbenzKdGO8=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useEffect","useState","Link","axios","TreeView","Sidebar","initialOpenDepartmentId","dep","setDep","getDeps","res","get","data","openDepartmentAndSubclasses","id","updatedDep","map","node","department_tree_to_json","openNode","closeNode","updatedNode","isOpen","Subclasses","openSubclasses","closeSubclasses","subclasses","subclass","openSubclass","closeSubclass","updatedSubclass","renderTree","label","Name","subSubclass","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = ({ initialOpenDepartmentId }) => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            setDep(res.data);\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (initialOpenDepartmentId) {\r\n            openDepartmentAndSubclasses(initialOpenDepartmentId);\r\n        }\r\n    }, [initialOpenDepartmentId]);\r\n\r\n    const openDepartmentAndSubclasses = (id) => {\r\n        const updatedDep = dep.map((node) => {\r\n            if (node.department_tree_to_json.id === id) {\r\n                return openNode(node);\r\n            } else {\r\n                return closeNode(node);\r\n            }\r\n        });\r\n        setDep(updatedDep);\r\n    };\r\n\r\n    const openNode = (node) => {\r\n        const updatedNode = { ...node };\r\n        updatedNode.isOpen = true;\r\n        updatedNode.department_tree_to_json.Subclasses = openSubclasses(node.department_tree_to_json.Subclasses);\r\n        return updatedNode;\r\n    };\r\n\r\n    const closeNode = (node) => {\r\n        const updatedNode = { ...node };\r\n        updatedNode.isOpen = false;\r\n        updatedNode.department_tree_to_json.Subclasses = closeSubclasses(node.department_tree_to_json.Subclasses);\r\n        return updatedNode;\r\n    };\r\n\r\n    const openSubclasses = (subclasses) => {\r\n        return subclasses.map((subclass) => {\r\n            return openSubclass(subclass);\r\n        });\r\n    };\r\n\r\n    const closeSubclasses = (subclasses) => {\r\n        return subclasses.map((subclass) => {\r\n            return closeSubclass(subclass);\r\n        });\r\n    };\r\n\r\n    const openSubclass = (subclass) => {\r\n        const updatedSubclass = { ...subclass };\r\n        updatedSubclass.isOpen = true;\r\n        updatedSubclass.Subclasses = subclass.Subclasses ? openSubclasses(subclass.Subclasses) : [];\r\n        return updatedSubclass;\r\n    };\r\n\r\n    const closeSubclass = (subclass) => {\r\n        const updatedSubclass = { ...subclass };\r\n        updatedSubclass.isOpen = false;\r\n        updatedSubclass.Subclasses = subclass.Subclasses ? closeSubclasses(subclass.Subclasses) : [];\r\n        return updatedSubclass;\r\n    };\r\n\r\n    const renderTree = (node) => {\r\n        const label = (\r\n            <Link to={`/department/${node.department_tree_to_json.id}`} className=\"level1\">\r\n                <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n            </Link>\r\n        );\r\n\r\n        return (\r\n            <TreeView\r\n                key={node.department_tree_to_json.id}\r\n                nodeLabel={label}\r\n                defaultCollapsed={!node.isOpen}\r\n            >\r\n                {node.department_tree_to_json.Subclasses.map((subclass) => {\r\n                    return (\r\n                        <TreeView\r\n                            key={subclass.id}\r\n                            nodeLabel={\r\n                                <Link to={`/department/${subclass.id}`} className=\"depsUser\">\r\n                                    <span className=\"node\">{subclass.Name}</span>\r\n                                </Link>\r\n                            }\r\n                            defaultCollapsed={!subclass.isOpen}\r\n                        >\r\n                            {subclass.Subclasses && subclass.Subclasses.map((subSubclass) => {\r\n                                return (\r\n                                    <Link to={`/department/${subSubclass.id}`} className=\"depsUser\" key={subSubclass.id}>\r\n                                        <div style={{ paddingBottom: '8px' }}>{subSubclass.Name}</div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </TreeView>\r\n                    );\r\n                })}\r\n            </TreeView>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node) => {\r\n                            return renderTree(node);\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}