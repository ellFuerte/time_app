{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const setDat = new Date(); //Сегодняшнея дата\n\n  setDat.setDate(setDat.getDate()); //\n\n  const dat = setDat.toLocaleDateString(); //\n\n  console.log(\"SETDATE\", dat); //\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + localUser._id);\n      console.log(res.data);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        global.workdate = res.data[0].workdate;\n        global.worked = res.data[0].worked;\n        setDateStart(global.workdate);\n        setDateEnd(global.worked);\n      }\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n  }, [user._id]);\n  console.log(\"ISADMIN=\", localUser.isAdmin);\n  console.log(\"ISADMIN!!!!=\", user.isAdmin);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${localUser._id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emailEmployee\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [date, \" \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [dateStart, \" - \", dateEnd]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"2X4cimOIu3H9qB1GFi09W9Al5K4=\");\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","useParams","Delete","axios","useEffect","useState","Employee","user","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","setDat","Date","setDate","getDate","dat","toLocaleDateString","console","log","date","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","fetchUser","res","get","_id","data","length","global","workdate","worked","status","isAdmin","user_name","email"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAAA;;AAEvC,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAGA,QAAMC,aAAa,GAAG;AAAC,OAAG,EAAJ;AAAQ,OAAG,OAAX;AAAoB,OAAG,KAAvB;AAA8B,OAAG,YAAjC;AAA+C,OAAG,SAAlD;AAA6D,OAAG,UAAhE;AAA4E,OAAG,UAA/E;AAA2F,OAAG;AAA9F,GAAtB;;AACA,WAASC,UAAT,CAAoBC,CAApB,EAAsB;AACpB,SAAI,IAAIC,CAAR,IAAaH,aAAb,EAA2B;AACzB,UAAGG,CAAC,IAAID,CAAR,EAAU;AACR,eAAOF,aAAa,CAACG,CAAD,CAApB;AACD;AACF;AACF;;AAGD,QAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf,CAfuC,CAeO;;AAC9CD,EAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,OAAP,EAAf,EAhBuC,CAgBO;;AAC9C,QAAMC,GAAG,GAACJ,MAAM,CAACK,kBAAP,EAAV,CAjBuC,CAiBO;;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,GAAtB,EAlBuC,CAkBO;;AAE9C,QAAM,CAACI,IAAD,EAAON,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,IAAD,CAAtC,CA/CuC,CAiDvC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,SAAS,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAN,CAAU,sBAAoB1B,SAAS,CAAC2B,GAAxC,CAAlB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACG,IAAhB;;AACE,UAAGH,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAkB,CAArB,EAAuB;AACrBR,QAAAA,YAAY,CAACS,MAAM,CAACC,QAAP,GAAgB,EAAjB,CAAZ;AACAR,QAAAA,UAAU,CAACO,MAAM,CAACE,MAAP,GAAc,EAAf,CAAV;AACD,OAHD,MAGK;AACPF,QAAAA,MAAM,CAACC,QAAP,GAAgBN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYG,QAA5B;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAcP,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYI,MAA1B;AACIX,QAAAA,YAAY,CAACS,MAAM,CAACC,QAAR,CAAZ;AACAR,QAAAA,UAAU,CAACO,MAAM,CAACE,MAAR,CAAV;AACL;AAAC,KAXA;;AAcA,QAAGjC,IAAI,CAACkC,MAAL,KAAgB,CAAnB,EAAqB;AACnBT,MAAAA,SAAS;AACV;AACF,GAlBQ,EAkBN,CAACzB,IAAI,CAAC4B,GAAN,CAlBM,CAAT;AAmBFZ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBhB,SAAS,CAACkC,OAAjC;AACEnB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BjB,IAAI,CAACmC,OAAhC;AACA,sBAAQ;AAAA,cACDnC,IAAI,CAACkC,MAAL,KAAgB,CAAhB,IAAqB,CAACjC,SAAS,CAACkC,OAAhC,gBACK;AAAA;AAAA;AAAA;AAAA,YADL,gBAEK;AAAK,MAAA,SAAS,EAAE,cAAe5B,UAAU,CAACP,IAAI,CAACkC,MAAN,CAAzC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGjC,SAAS,CAACkC,OAAV,gBACK,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWlC,SAAS,CAAC2B,GAAI,EAApC;AAAuC,UAAA,SAAS,EAAC,MAAjD;AAAA,iCAAwD;AAAA,sBAAO5B,IAAI,CAACoC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADL,gBAEK;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCAAsB;AAAA,sBAAOpC,IAAI,CAACoC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCpC,IAAI,CAACqC;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGrC,IAAI,CAACkC,MAAL,KAAgB,CAAhB,iBAAqB;AAAA,uBAAMhB,IAAN,OAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFxB,EAGGnB,IAAI,CAACkC,MAAL,KAAgB,CAAhB,iBAAqB;AAAA,uBAAMb,SAAN,SAAoBE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,mBAAR;AAoBD;;GA3FuBxB,Q;;KAAAA,Q","sourcesContent":["import {Link, useParams} from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Employee({user}) {\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const setDat = new Date()                     //Сегодняшнея дата\r\n  setDat.setDate(setDat.getDate())              //\r\n  const dat=setDat.toLocaleDateString()         //\r\n  console.log(\"SETDATE\",dat)                    //\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n    const res = await axios.get('/api/vacation?id='+localUser._id)\r\n    console.log(res.data)\r\n      if(res.data.length===0){\r\n        setDateStart(global.workdate='')\r\n        setDateEnd(global.worked='')\r\n      }else{\r\n    global.workdate=res.data[0].workdate\r\n    global.worked=res.data[0].worked\r\n        setDateStart(global.workdate)\r\n        setDateEnd(global.worked)\r\n  }}\r\n\r\n\r\n    if(user.status === 3){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])\r\nconsole.log(\"ISADMIN=\",localUser.isAdmin)\r\n  console.log(\"ISADMIN!!!!=\",user.isAdmin)\r\n  return (<>\r\n        {user.status === 4 && !localUser.isAdmin\r\n            ? <div></div>\r\n            : <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className='top'>\r\n                {localUser.isAdmin\r\n                    ? <Link to={`/profile/${localUser._id}`} className='name'><span>{user.user_name}</span></Link>\r\n                    : <div className='name'><span>{user.user_name}</span></div>\r\n                }\r\n              </div>\r\n              <div className='down'>\r\n                <div className='downRight'>\r\n                  <div className='emailEmployee'>{user.email}</div>\r\n                  {user.status === 2 && <div>{date} {time}</div>}\r\n                  {user.status === 3 && <div>{dateStart} - {dateEnd}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        }</>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}