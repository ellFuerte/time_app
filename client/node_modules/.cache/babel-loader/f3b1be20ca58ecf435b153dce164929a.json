{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\pages\\\\Reports\\\\Reports.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from 'react';\nimport Topbar from '../../components/Topbar/Topbar';\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport RepostsInfo from \"../../components/ReportsInfo/RepostsInfo\";\nimport './Reports.css';\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reports() {\n  _s();\n\n  const initialSortConfig = JSON.parse(localStorage.getItem('sortConfig')) || {\n    key: null,\n    direction: 'ascending'\n  };\n  const [sortConfig, setSortConfig] = useState(initialSortConfig);\n  const [postsPerPage] = useState(30);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const [error, setError] = useState('');\n  const historyStartWork = useRef(null);\n  const historyEndWork = useRef(null);\n  const [isFilter, setIsFilter] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex);\n  const username = useParams();\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const handleClick = async () => {\n    const start = historyStartWork.current.value;\n    const end = historyEndWork.current.value;\n\n    if (start === \"\" || end === \"\") {\n      setError('Введите дату');\n    } else {\n      if (start !== '' || end !== '') {\n        setError('Выберите дату');\n      }\n\n      if (end < start) {\n        setError('Конечная дата меньше начальной');\n      } else {\n        const filter = {\n          startdate: historyStartWork.current.value,\n          enddate: historyEndWork.current.value\n        };\n        setError('');\n\n        const fill = async () => {\n          const res = await axios.post('/api/post/Reports', filter);\n          setPosts(res.data);\n          setError('');\n        };\n\n        fill();\n      }\n    }\n  };\n\n  const handleClickCancel = async () => {\n    setError('');\n    setIsFilter(false);\n    historyStartWork.current.value = '';\n    historyEndWork.current.value = '';\n  };\n\n  const rowsSort = () => {\n    const c = document.getElementById(\"report\");\n\n    if (historyStartWork.current.value !== '') {\n      const sort = currentlyPosts.sort((a, b) => b.row_number - a.row_number);\n      console.log('SORT=', sort);\n    }\n  };\n\n  const FIOSort = () => {\n    if (historyStartWork.current.value !== '') {\n      const sort = currentlyPosts.sort((a, b) => a.user_name > b.user_name ? 1 : -1);\n      console.log('SORT=', sort);\n    }\n  };\n\n  const workstartSort = () => {\n    if (historyStartWork.current.value !== '') {\n      const sort = currentlyPosts.sort((a, b) => a.workstart > b.workstart ? 1 : -1);\n      console.log('SORT=', sort);\n    }\n  };\n\n  const data = [{\n    name: 'John',\n    age: 30,\n    email: 'john@example.com'\n  }, {\n    name: 'Jane',\n    age: 25,\n    email: 'jane@example.com'\n  }, {\n    name: 'Doe',\n    age: 35,\n    email: 'doe@example.com'\n  }];\n\n  const requestSort = key => {\n    let direction = 'ascending';\n\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reports\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReportsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ReportsMainText\",\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorHistoryInfo\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n          className: \"ModalInput\",\n          ref: historyStartWork,\n          style: {\n            'marginRight': '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n          className: \"ModalInput\",\n          ref: historyEndWork,\n          style: {\n            'marginRight': '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          onClick: handleClick,\n          children: \"\\u043E\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filterButton\",\n          onClick: handleClickCancel,\n          children: \"\\u0441\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"historyinfoNumber\",\n            onClick: () => requestSort('name'),\n            children: [\"\\u2116 \", sortConfig.key === 'name' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: sortConfig.direction === 'ascending' ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), sortConfig.key === 'name' && sortConfig.direction === 'descending' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"historyinfoNumber\",\n            children: [\"\\u0424\\u0418\\u041E\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              onClick: FIOSort,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"historyinfoNumber\",\n            children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              onClick: workstartSort,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"historyinfoNumber\",\n            children: [\"\\u041A\\u043E\\u043D\\u0435\\u0446\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              onClick: () => console.log(''),\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"historyinfoNumber\",\n            children: [\"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              onClick: () => console.log(''),\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"historyinfoNumber\",\n            children: [\"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              onClick: () => console.log(''),\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), currentlyPosts.map((posts, id) => /*#__PURE__*/_jsxDEV(RepostsInfo, {\n          posts: posts,\n          username: username\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 56\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n          postsPerPage: postsPerPage,\n          totalPosts: posts.length,\n          paginate: paginate,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Reports, \"XcUpYt2LM1hCnEXi7IP9Io+GUp0=\", false, function () {\n  return [useParams];\n});\n\n_c = Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["D:/time_app/client/src/pages/Reports/Reports.jsx"],"names":["React","useRef","useState","useMemo","Topbar","axios","useParams","RepostsInfo","Pagination","Reports","initialSortConfig","JSON","parse","localStorage","getItem","key","direction","sortConfig","setSortConfig","postsPerPage","lastPostIndex","currentPage","firstPostIndex","error","setError","historyStartWork","historyEndWork","isFilter","setIsFilter","posts","setPosts","currentlyPosts","slice","username","paginate","pageNumber","setCurrentPage","handleClick","start","current","value","end","filter","startdate","enddate","fill","res","post","data","handleClickCancel","rowsSort","c","document","getElementById","sort","a","b","row_number","console","log","FIOSort","user_name","workstartSort","workstart","name","age","email","requestSort","map","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAgCC,OAAhC,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,KAAkD;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,SAAS,EAAE;AAAxB,GAA5E;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACQ,iBAAD,CAA5C;AACA,QAAM,CAACS,YAAD,IAAiBjB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMkB,aAAa,GAAGC,WAAW,GAAGF,YAApC;AACA,QAAMG,cAAc,GAAGF,aAAa,GAAGD,YAAvC;AAGA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMuB,gBAAgB,GAAGxB,MAAM,CAAC,IAAD,CAA/B;AACA,QAAMyB,cAAc,GAAGzB,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM6B,cAAc,GAAGF,KAAK,CAACG,KAAN,CAAYV,cAAZ,EAA4BF,aAA5B,CAAvB;AACA,QAAMa,QAAQ,GAAC3B,SAAS,EAAxB;;AAEA,QAAM4B,QAAQ,GAAGC,UAAU,IAAIC,cAAc,CAACD,UAAD,CAA7C;;AAGA,QAAME,WAAW,GAAG,YAAY;AAC5B,UAAMC,KAAK,GAAGb,gBAAgB,CAACc,OAAjB,CAAyBC,KAAvC;AACA,UAAMC,GAAG,GAAGf,cAAc,CAACa,OAAf,CAAuBC,KAAnC;;AACA,QAAIF,KAAK,KAAK,EAAV,IAAgBG,GAAG,KAAK,EAA5B,EAAgC;AAC5BjB,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH,KAFD,MAEO;AACH,UAAIc,KAAK,KAAK,EAAV,IAAgBG,GAAG,KAAK,EAA5B,EAAgC;AAC5BjB,QAAAA,QAAQ,CAAC,eAAD,CAAR;AACH;;AACD,UAAIiB,GAAG,GAAGH,KAAV,EAAiB;AACbd,QAAAA,QAAQ,CAAC,gCAAD,CAAR;AACH,OAFD,MAEO;AAEH,cAAMkB,MAAM,GAAG;AACXC,UAAAA,SAAS,EAAElB,gBAAgB,CAACc,OAAjB,CAAyBC,KADzB;AAEXI,UAAAA,OAAO,EAAElB,cAAc,CAACa,OAAf,CAAuBC;AAFrB,SAAf;AAIAhB,QAAAA,QAAQ,CAAC,EAAD,CAAR;;AAEA,cAAMqB,IAAI,GAAG,YAAY;AACrB,gBAAMC,GAAG,GAAG,MAAMzC,KAAK,CAAC0C,IAAN,CAAW,mBAAX,EAA+BL,MAA/B,CAAlB;AACAZ,UAAAA,QAAQ,CAACgB,GAAG,CAACE,IAAL,CAAR;AACAxB,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,SAJD;;AAKAqB,QAAAA,IAAI;AACP;AACJ;AACJ,GA3BD;;AA4BA,QAAMI,iBAAiB,GAAG,YAAW;AACjCzB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,IAAAA,gBAAgB,CAACc,OAAjB,CAAyBC,KAAzB,GAAiC,EAAjC;AACAd,IAAAA,cAAc,CAACa,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;AACH,GALD;;AAMA,QAAMU,QAAQ,GAAG,MAAK;AAClB,UAAMC,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAR;;AAEA,QAAG5B,gBAAgB,CAACc,OAAjB,CAAyBC,KAAzB,KAAkC,EAArC,EAAyC;AACrC,YAAMc,IAAI,GAAGvB,cAAc,CAACuB,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAA/C,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AACH;AACJ,GAPD;;AAQA,QAAMM,OAAO,GAAG,MAAK;AACjB,QAAGnC,gBAAgB,CAACc,OAAjB,CAAyBC,KAAzB,KAAkC,EAArC,EAAyC;AACrC,YAAMc,IAAI,GAAGvB,cAAc,CAACuB,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACM,SAAF,GAAcL,CAAC,CAACK,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA/D,CAAb;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AACH;AACJ,GALD;;AAMA,QAAMQ,aAAa,GAAG,MAAK;AACvB,QAAGrC,gBAAgB,CAACc,OAAjB,CAAyBC,KAAzB,KAAkC,EAArC,EAAyC;AACrC,YAAMc,IAAI,GAAGvB,cAAc,CAACuB,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACQ,SAAF,GAAcP,CAAC,CAACO,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA/D,CAAb;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AACH;AACJ,GALD;;AAMA,QAAMN,IAAI,GAAG,CACT;AAAEgB,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE,EAArB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GADS,EAET;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE,EAArB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAFS,EAGT;AAAEF,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAHS,CAAb;;AAQA,QAAMC,WAAW,GAAIpD,GAAD,IAAS;AACzB,QAAIC,SAAS,GAAG,WAAhB;;AACA,QAAIC,UAAU,CAACF,GAAX,KAAmBA,GAAnB,IAA0BE,UAAU,CAACD,SAAX,KAAyB,WAAvD,EAAoE;AAChEA,MAAAA,SAAS,GAAG,YAAZ;AACH;;AACDE,IAAAA,aAAa,CAAC;AAAEH,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAb;AACH,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKO,KAAK,iBAAI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHd,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,2EAFhB;AAGI,UAAA,SAAS,EAAC,YAHd;AAII,UAAA,GAAG,EAAEE,gBAJT;AAKI,UAAA,KAAK,EAAE;AAAC,2BAAe;AAAhB;AALX;AAAA;AAAA;AAAA;AAAA,gBALJ,eAYI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,qEAFhB;AAGI,UAAA,SAAS,EAAC,YAHd;AAII,UAAA,GAAG,EAAEC,cAJT;AAKI,UAAA,KAAK,EAAE;AAAC,2BAAe;AAAhB;AALX;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAmBI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEW,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEY,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAqBI;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAuBI;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eAwBI;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAyBQ;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAkC,YAAA,OAAO,EAAE,MAAMkB,WAAW,CAAC,MAAD,CAA5D;AAAA,kCACOlD,UAAU,CAACF,GAAX,KAAmB,MAAnB,iBACH;AAAA,wBAAOE,UAAU,CAACD,SAAX,KAAyB,WAAzB,GAAuC,GAAvC,GAA6C;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIKC,UAAU,CAACF,GAAX,KAAmB,MAAnB,IAA6BE,UAAU,CAACD,SAAX,KAAyB,YAAtD,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,0DACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAE4C,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAYI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,4EACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAEE,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAeI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,sEACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAE,MAAIJ,OAAO,CAACC,GAAR,CAAY,EAAZ,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAkBI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,gHACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAE,MAAID,OAAO,CAACC,GAAR,CAAY,EAAZ,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAqBI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,oGACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAE,MAAID,OAAO,CAACC,GAAR,CAAY,EAAZ,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBR,EAmDI5B,cAAc,CAACqC,GAAf,CAAmB,CAACvC,KAAD,EAAQwC,EAAR,kBAAgB,QAAC,WAAD;AAAsB,UAAA,KAAK,EAAExC,KAA7B;AAAoC,UAAA,QAAQ,EAAEI;AAA9C,WAAkBoC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAnC,CAnDJ,eAsDI,QAAC,UAAD;AAAY,UAAA,YAAY,EAAElD,YAA1B;AAAwC,UAAA,UAAU,EAAEU,KAAK,CAACyC,MAA1D;AAAkE,UAAA,QAAQ,EAAEpC,QAA5E;AAAsF,UAAA,WAAW,EAAEb;AAAnG;AAAA;AAAA;AAAA;AAAA,gBAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAgEH;;GA1JuBZ,O;UAeLH,S;;;KAfKG,O","sourcesContent":["import React, {useRef, useState,useMemo} from 'react'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport RepostsInfo from \"../../components/ReportsInfo/RepostsInfo\";\r\nimport './Reports.css'\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\n\r\nexport default function Reports() {\r\n    const initialSortConfig = JSON.parse(localStorage.getItem('sortConfig')) || { key: null, direction: 'ascending' };\r\n    const [sortConfig, setSortConfig] = useState(initialSortConfig);\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n\r\n\r\n    const [error, setError] = useState('')\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    const username=useParams()\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\") {\r\n            setError('Введите дату')\r\n        } else {\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')\r\n            }\r\n            if (end < start) {\r\n                setError('Конечная дата меньше начальной')\r\n            } else {\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/Reports',filter)\r\n                    setPosts(res.data)\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }\r\n        }\r\n    }\r\n    const handleClickCancel = async () =>{\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n    const rowsSort = () =>{\r\n        const c=document.getElementById(\"report\");\r\n\r\n        if(historyStartWork.current.value !=='') {\r\n            const sort = currentlyPosts.sort((a, b) => b.row_number - a.row_number)\r\n            console.log('SORT=', sort)\r\n        }\r\n    }\r\n    const FIOSort = () =>{\r\n        if(historyStartWork.current.value !=='') {\r\n            const sort = currentlyPosts.sort((a, b) => a.user_name > b.user_name ? 1 : -1);\r\n            console.log('SORT=', sort)\r\n        }\r\n    }\r\n    const workstartSort = () =>{\r\n        if(historyStartWork.current.value !=='') {\r\n            const sort = currentlyPosts.sort((a, b) => a.workstart > b.workstart ? 1 : -1);\r\n            console.log('SORT=', sort)\r\n        }\r\n    }\r\n    const data = [\r\n        { name: 'John', age: 30, email: 'john@example.com' },\r\n        { name: 'Jane', age: 25, email: 'jane@example.com' },\r\n        { name: 'Doe', age: 35, email: 'doe@example.com' }\r\n    ];\r\n\r\n\r\n\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <h2 className='ReportsMainText'>Отчет</h2>\r\n                    <hr/>\r\n                    {error && <div className='errorHistoryInfo'>{error}</div>}\r\n                    <br/>\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Начало работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyStartWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyEndWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                    <button className=\"filterButton\" onClick={handleClick}>ок</button>\r\n                    <button className=\"filterButton\" onClick={handleClickCancel}>сбросить</button>\r\n                    <br/>\r\n                    <br/>\r\n                    <hr/>\r\n                    <br/>\r\n                        <tr>\r\n                            <th className=\"historyinfoNumber\" onClick={() => requestSort('name')}>\r\n                                № {sortConfig.key === 'name' && (\r\n                                <span>{sortConfig.direction === 'ascending' ? '▲' : '▼'}</span>\r\n                            )}\r\n                                {sortConfig.key === 'name' && sortConfig.direction === 'descending' && (\r\n                                    <span>▲</span>\r\n                                )}\r\n                            </th>\r\n                            <td className=\"historyinfoNumber\">ФИО\r\n                                <div className='report' onClick={FIOSort}>▲</div>\r\n                            </td>\r\n                            <td className=\"historyinfoNumber\">Начало\r\n                                <div className='report' onClick={workstartSort}>▲</div>\r\n                            </td>\r\n                            <td className=\"historyinfoNumber\">Конец\r\n                                <div className='report' onClick={()=>console.log('')}>▲</div>\r\n                            </td>\r\n                            <td className=\"historyinfoNumber\">Длительность\r\n                                <div className='report' onClick={()=>console.log('')}>▲</div>\r\n                            </td>\r\n                            <td className=\"historyinfoNumber\">Коментарий\r\n                                <div className='report' onClick={()=>console.log('')}>▲</div>\r\n                            </td>\r\n                        </tr>\r\n                    {\r\n                    currentlyPosts.map((posts, id) =>  <RepostsInfo key={id} posts={posts} username={username}/>)\r\n                    }\r\n\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}