{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  let departmentId = 21;\n  const [dep, setDep] = useState([]);\n  const [expanded, setExpanded] = useState(new Set());\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n        expandDepartments(res.data, departmentId);\n      }\n    };\n\n    getDeps();\n  }, [departmentId]);\n\n  const expandDepartments = (departments, targetId) => {\n    const findDepartmentPath = (deps, id, path = []) => {\n      for (let dep of deps) {\n        if (dep.department_tree_to_json.id === id) {\n          return [...path, dep.department_tree_to_json.id];\n        }\n\n        if (dep.department_tree_to_json.Subclasses) {\n          const result = findDepartmentPath(dep.department_tree_to_json.Subclasses, id, [...path, dep.department_tree_to_json.id]);\n          if (result.length) return result;\n        }\n      }\n\n      return [];\n    };\n\n    const path = findDepartmentPath(departments, targetId);\n    setExpanded(new Set(path));\n  };\n\n  const handleToggle = id => {\n    setExpanded(prevExpanded => {\n      const newExpanded = new Set(prevExpanded);\n\n      if (newExpanded.has(id)) {\n        newExpanded.delete(id);\n      } else {\n        newExpanded.add(id);\n      }\n\n      return newExpanded;\n    });\n  };\n\n  const renderTree = node => /*#__PURE__*/_jsxDEV(TreeView, {\n    nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/department/${node.department_tree_to_json.id}`,\n      className: \"level1\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"node\",\n        children: node.department_tree_to_json.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this),\n    defaultCollapsed: !expanded.has(node.department_tree_to_json.id),\n    onClick: () => handleToggle(node.department_tree_to_json.id),\n    children: node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map(renderTree)\n  }, node.department_tree_to_json.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map(renderTree)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"w4Zcvph8FfqlsKP8OJGq5PWgAs0=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","departmentId","dep","setDep","expanded","setExpanded","Set","getDeps","res","get","data","department_tree_to_json","length","expandDepartments","departments","targetId","findDepartmentPath","deps","id","path","Subclasses","result","handleToggle","prevExpanded","newExpanded","has","delete","add","renderTree","node","Name","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    let departmentId=21\r\n\r\n    const [dep, setDep] = useState([]);\r\n    const [expanded, setExpanded] = useState(new Set());\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n                expandDepartments(res.data, departmentId);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, [departmentId]);\r\n\r\n    const expandDepartments = (departments, targetId) => {\r\n        const findDepartmentPath = (deps, id, path = []) => {\r\n            for (let dep of deps) {\r\n                if (dep.department_tree_to_json.id === id) {\r\n                    return [...path, dep.department_tree_to_json.id];\r\n                }\r\n                if (dep.department_tree_to_json.Subclasses) {\r\n                    const result = findDepartmentPath(dep.department_tree_to_json.Subclasses, id, [...path, dep.department_tree_to_json.id]);\r\n                    if (result.length) return result;\r\n                }\r\n            }\r\n            return [];\r\n        };\r\n\r\n        const path = findDepartmentPath(departments, targetId);\r\n        setExpanded(new Set(path));\r\n    };\r\n\r\n    const handleToggle = (id) => {\r\n        setExpanded(prevExpanded => {\r\n            const newExpanded = new Set(prevExpanded);\r\n            if (newExpanded.has(id)) {\r\n                newExpanded.delete(id);\r\n            } else {\r\n                newExpanded.add(id);\r\n            }\r\n            return newExpanded;\r\n        });\r\n    };\r\n\r\n    const renderTree = (node) => (\r\n        <TreeView\r\n            nodeLabel={(\r\n                <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                </Link>\r\n            )}\r\n            key={node.department_tree_to_json.id}\r\n            defaultCollapsed={!expanded.has(node.department_tree_to_json.id)}\r\n            onClick={() => handleToggle(node.department_tree_to_json.id)}\r\n        >\r\n            {node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map(renderTree)}\r\n        </TreeView>\r\n    );\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map(renderTree)}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}