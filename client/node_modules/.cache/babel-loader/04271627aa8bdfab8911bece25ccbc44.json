{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const setDat = new Date();\n  setDat.setDate(setDat.getDate());\n  const dat = setDat.toLocaleDateString();\n  console.log(\"SETDATE\", dat);\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const [admin, setAdmin] = useState(['']);\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n\n  const fetchUserpost = async () => {\n    const res = await axios.get('/api/post?type=1&id=' + user.id);\n    setDate('');\n    setTime('');\n\n    try {\n      setDate(res.data[0].workdate);\n      setTime(res.data[0].workend);\n    } catch {}\n\n    setPosts(res.data.sort((p1, p2) => {\n      return new Date(p2.workstart) - new Date(p1.workstart);\n    }));\n    setIsFetching(false);\n  };\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + user.id);\n      const users = await axios.get('/api/user/' + user.id);\n      console.log(\"REEEEEEEEEEEE=\", users.data.isadmin);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        setDateStart(res.data[0].workdate);\n        setDateEnd(res.data[0].worked);\n      }\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n\n    if (user.status === 7) {\n      fetchUser();\n    }\n\n    if (user.status === 6) {\n      fetchUser();\n    }\n\n    if (user.status === 5) {\n      fetchUser();\n    }\n\n    if (user.status === 2) {\n      fetchUserpost();\n    }\n  }, [user._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [user.status === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u041E\\u0442\\u043F\\u0443\\u0441\\u043A:\", dateStart, \"-\", dateEnd, admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 41\n          }, this), user.status === 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u041E\\u0442\\u0433\\u0443\\u043B:\", dateStart, \"-\", dateEnd, admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 41\n          }, this), user.status === 7 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u0414\\u0440\\u0443\\u0433\\u0430\\u044F \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430:\", dateStart, \"-\", dateEnd, admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 41\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [\"\\u0411\\u043E\\u043B\\u044C\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439:\", dateStart, \"-\", dateEnd, admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 41\n          }, this), user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vacationText\",\n            children: [date, \"  \", time, admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"FD1bs8VBFXZci5pPB2pHRf4kpk4=\");\n\n_c = Employee;\n{\n  /*<div className='emailEmployee'>{user.email}</div>*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","Employee","user","setDat","Date","setDate","getDate","dat","toLocaleDateString","console","log","usersStatuses","findStatus","k","i","admin","setAdmin","posts","setPosts","isFetching","setIsFetching","date","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","localUser","JSON","parse","localStorage","getItem","fetchUserpost","res","get","id","data","workdate","workend","sort","p1","p2","workstart","fetchUser","users","isadmin","length","global","worked","status","_id","isAdmin","user_name"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\nexport default function Employee({user}) {\r\n\r\n  const setDat = new Date()\r\n  setDat.setDate(setDat.getDate())\r\n  const dat=setDat.toLocaleDateString()\r\n  console.log(\"SETDATE\",dat)\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  const [admin, setAdmin] = useState([''])\r\n  const [posts, setPosts] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n  const fetchUserpost = async () => {\r\n    const res = await axios.get('/api/post?type=1&id='+user.id)\r\n    setDate('')\r\n    setTime('')\r\ntry{\r\n  setDate(res.data[0].workdate)\r\n  setTime(res.data[0].workend)\r\n}\r\ncatch {\r\n}\r\n    setPosts(res.data.sort((p1, p2) => {\r\n      return new Date(p2.workstart) - new Date(p1.workstart)\r\n      }))\r\n    setIsFetching(false)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/vacation?id=' + user.id)\r\n      const users = await axios.get('/api/user/'+user.id)\r\n      console.log(\"REEEEEEEEEEEE=\",users.data.isadmin)\r\n\r\n      if (res.data.length === 0) {\r\n        setDateStart(global.workdate = '')\r\n        setDateEnd(global.worked = '')\r\n      } else {\r\n        setDateStart(res.data[0].workdate)\r\n        setDateEnd(res.data[0].worked)\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    if (user.status === 3) {\r\n        fetchUser()\r\n      }\r\n\r\n      if (user.status === 7) {\r\n        fetchUser()\r\n      }\r\n      if (user.status === 6) {\r\n        fetchUser()\r\n      }\r\n\r\n      if (user.status === 5) {\r\n        fetchUser()\r\n      }\r\n      if (user.status === 2) {\r\n        fetchUserpost()\r\n      }\r\n  }, [user._id])\r\n\r\n\r\n\r\n  return (<>\r\n\r\n        {user.status === 4 && !localUser.isAdmin\r\n            ?\r\n            <div></div>\r\n            :\r\n            <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className='top'>{localUser.isAdmin\r\n                  ?\r\n                  <Link to={`/profile/${user.id}`} className='name'><span className='name'>{user.user_name}</span></Link>\r\n                  : <div className='name'><span className='name'>{user.user_name}</span></div>\r\n              }\r\n              </div>\r\n              <div className='down'>\r\n                <div className='downRight'>\r\n                  {/*<div className='emailEmployee'>{user.email}</div>*/}\r\n                  {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}{admin}</div>}\r\n                  {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}{admin}</div>}\r\n                  {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}{admin}</div>}\r\n                  {user.status === 3 && <div className='vacationText' >Больничный:{dateStart}-{dateEnd}{admin}</div>}\r\n                  {user.status === 2 && <div className='vacationText' >{date}  {time}{admin}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        }</>\r\n  )\r\n}\r\n\r\n\r\n{/*<div className='emailEmployee'>{user.email}</div>*/}\r\n"]},"metadata":{},"sourceType":"module"}