{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [collapsedNodes, setCollapsedNodes] = useState({}); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const initialState = res.data.reduce((acc, node) => {\n        acc[node.department_tree_to_json.id] = false; // Инициализируем все узлы как раскрытые\n\n        return acc;\n      }, {});\n      setDep(res.data);\n      setCollapsedNodes(initialState);\n    };\n\n    getDeps();\n  }, []); // функция для обновления состояния раскрытия узла\n\n  const toggleNode = nodeId => {\n    setCollapsedNodes({ ...collapsedNodes,\n      [nodeId]: !collapsedNodes[nodeId]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"level1\",\n              onClick: () => toggleNode(node.department_tree_to_json.id) // обработчик клика по ссылке\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              collapsed: collapsedNodes[node.department_tree_to_json.id] // устанавливаем состояние раскрытия узла\n              ,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"depsUser\",\n                  onClick: e => {\n                    e.preventDefault();\n                    toggleNode(departments.id); // обработчик клика по ссылке\n\n                    e.stopPropagation();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: true,\n                collapsed: collapsedNodes[departments.id] // устанавливаем состояние раскрытия узла\n                ,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"depsUser\",\n                    onClick: e => {\n                      e.preventDefault();\n                      toggleNode(departments1.id); // обработчик клика по ссылке\n\n                      e.stopPropagation();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: true,\n                  collapsed: collapsedNodes[departments1.id] // устанавливаем состояние раскрытия узла\n                  ,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    onClick: e => e.stopPropagation() // Предотвращаем всплытие клика, чтобы избежать переключения состояния вложенности\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"ECn788XR2ltH9H698d9vdjcN828=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","useEffect","Link","axios","TreeView","Sidebar","dep","setDep","collapsedNodes","setCollapsedNodes","getDeps","res","get","initialState","data","reduce","acc","node","department_tree_to_json","id","toggleNode","nodeId","map","i","label","Name","Subclasses","departments","e","preventDefault","stopPropagation","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [collapsedNodes, setCollapsedNodes] = useState({});\r\n\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const initialState = res.data.reduce((acc, node) => {\r\n                acc[node.department_tree_to_json.id] = false; // Инициализируем все узлы как раскрытые\r\n                return acc;\r\n            }, {});\r\n            setDep(res.data);\r\n            setCollapsedNodes(initialState);\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    // функция для обновления состояния раскрытия узла\r\n    const toggleNode = (nodeId) => {\r\n        setCollapsedNodes({\r\n            ...collapsedNodes,\r\n            [nodeId]: !collapsedNodes[nodeId],\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <div\r\n                                    className='level1'\r\n                                    onClick={() => toggleNode(node.department_tree_to_json.id)} // обработчик клика по ссылке\r\n                                >\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </div>\r\n                            );\r\n\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    defaultCollapsed={false}\r\n                                    collapsed={collapsedNodes[node.department_tree_to_json.id]} // устанавливаем состояние раскрытия узла\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            key={departments.id}\r\n                                            nodeLabel={(\r\n                                                <div\r\n                                                    className='depsUser'\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        toggleNode(departments.id); // обработчик клика по ссылке\r\n                                                        e.stopPropagation();\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </div>\r\n                                            )}\r\n                                            defaultCollapsed={true}\r\n                                            collapsed={collapsedNodes[departments.id]} // устанавливаем состояние раскрытия узла\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    key={departments1.id}\r\n                                                    nodeLabel={(\r\n                                                        <div\r\n                                                            className='depsUser'\r\n                                                            onClick={(e) => {\r\n                                                                e.preventDefault();\r\n                                                                toggleNode(departments1.id); // обработчик клика по ссылке\r\n                                                                e.stopPropagation();\r\n                                                            }}\r\n                                                        >\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </div>\r\n                                                    )}\r\n                                                    defaultCollapsed={true}\r\n                                                    collapsed={collapsedNodes[departments1.id]} // устанавливаем состояние раскрытия узла\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                        <Link\r\n                                                            key={departments2.id}\r\n                                                            to={`/department/${departments2.id}`}\r\n                                                            className='depsUser'\r\n                                                            onClick={(e) => e.stopPropagation()} // Предотвращаем всплытие клика, чтобы избежать переключения состояния вложенности\r\n                                                        >\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}