{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Create, Delete, Message } from '@material-ui/icons';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal';\nimport './ProfileInfo.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills';\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [error, setError] = useState('');\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [inputValues, setInputValues] = useState('');\n  const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n  const [selectedValue, setSelectedValue] = useState('');\n  const [check, setCheck] = useState();\n  const [checkedItems, setCheckedItems] = useState({});\n  const [votearray, setVotearray] = useState([]);\n  const [isAdmin, setIsadmin] = useState([]);\n  const [userVote, setUserVote] = useState([]);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [email, setEmail] = useState([]);\n  const [emailChange, setEmailChange] = useState([]);\n  const [phone, setPhone] = useState([]);\n  const [phoneChange, setPhoneChange] = useState([]);\n  const [additional_contact, setAdditional_Contact] = useState([]);\n  const [additional_contact_change, setAdditional_Contact_Change] = useState([]);\n  const [distribution_group, setDistribution_Group] = useState([]);\n  const [distribution_group_change, setDistribution_Group_Change] = useState([]);\n  const [activity_profile, setActivity_Profile] = useState([]);\n  const [activity_profile_change, setActivity_Profile_Change] = useState([]);\n  const [CityPlace, setCityPlace] = useState([]);\n  const [CityPlace_Change, setCityPlace_Change] = useState([]);\n  const [surnameValue, setSurnameValue] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [vote, setVote] = useState([]);\n  const [modalActiveResetPass, setModalActiveResetPass] = useState(false);\n  const [modalActiveReset, setModalActiveReset] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [er, setErr] = useState('');\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalDep = useRef();\n  const modalOldPass = useRef();\n  const modalNewPass = useRef();\n  const modalNewPassAgain = useRef();\n  const phoneNumber = useRef();\n  const additionalContact = useRef();\n  const distributionGroup = useRef();\n  const activityProfile = useRef();\n  const modalCity = useRef();\n  const modalCityPlace = useRef();\n  const [citiesId, setCitiesId] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [hasImage, setHasImage] = useState(false); ///////////////////////////////////////////////////////////////////////////////////////////\n\n  const [nameChangeVacancies, setNameChangeVacancies] = useState(\"\"); ///////////////////////////////////////////////////////////////////////////////////////////\n\n  const handleUserClickCities = (city_name, id) => {\n    setCitiesId(id);\n    setSearchTermCities(city_name);\n    setFilteredCities([]);\n  };\n\n  const handleInputChangeCities = e => {\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n\n    if (termCities === '') {\n      setCitiesId('');\n      setFilteredCities([]);\n      setCityName('');\n      return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n    }\n\n    const filtered = cities.filter(city => city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase()));\n    setFilteredCities(filtered);\n  };\n\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const hasImageStatus = Object.keys(images).some(key => user.nomination_status === key || user.nomination_status === parseInt(key));\n    setHasImage(hasImageStatus);\n\n    const getNameAndSurname = () => {\n      if (user.user_name) {\n        const [name, surname] = user.user_name.split(\" \");\n        setSurnameValue(surname || \"\");\n        setNameValue(name);\n      }\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const data = res.data[0]['department_tree_to_json'];\n      const extractedOptions = extractOptions(data);\n      setOptions(extractedOptions);\n      setSelectedValue(user.department_id);\n    };\n\n    const extractOptions = node => {\n      let optionsList = [{\n        id: node.id,\n        name: node.Name\n      }];\n\n      if (node.Subclasses && node.Subclasses.length > 0) {\n        node.Subclasses.forEach(subclass => {\n          optionsList = optionsList.concat(extractOptions(subclass));\n        });\n      }\n\n      return optionsList;\n    };\n\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setTimeZone(res.data[0]['timezone']);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsadmin(res.data.isadmin);\n      setIsFetching(false);\n      const user = await axios.get('/api/user/');\n      const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      const mass = sort.filter(element => element.id !== username.username && element.status !== 4);\n      setUserVote(mass);\n      const city = await axios.get('/api/Cities/');\n      setCities(city.data);\n    }; // Номинации\n\n\n    const fetchVote = async () => {\n      const res = await axios.get('/api/vote/');\n      setVote(res.data);\n    };\n\n    if (user && user.email && email) {\n      setEmail(user.email);\n    }\n\n    if (user && user.phone_number && phone) {\n      setPhone(user.phone_number);\n    }\n\n    if (user && user.additional_contact && additional_contact) {\n      setAdditional_Contact(user.additional_contact);\n    }\n\n    if (user && user.distribution_group && distribution_group) {\n      setDistribution_Group(user.distribution_group);\n    }\n\n    if (user && user.activity_profile && activity_profile) {\n      setActivity_Profile(user.activity_profile);\n    }\n\n    if (user && user.place_of_residence && CityPlace) {\n      setCityPlace(user.place_of_residence);\n    }\n\n    getNameAndSurname();\n    fetchVote();\n    fetchUser();\n    getDeps();\n    getNameDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence]);\n\n  const handleEmailChange = e => {\n    if (e.target.value) {\n      setEmail('');\n      setEmailChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setEmail('');\n      setEmailChange('');\n    }\n  };\n\n  const formatPhoneNumber = value => {\n    // Убираем все символы, кроме цифр\n    let cleaned = value.replace(/\\D/g, '');\n\n    if (cleaned.startsWith('7')) {\n      cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\n    } // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\n\n\n    cleaned = cleaned.slice(0, 10); // Разделяем на части, добавляя дефисы\n\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\n\n    if (match) {\n      return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\n    }\n\n    return '+7 ' + cleaned;\n  };\n\n  const handlePhoneChange = e => {\n    if (e.target.value) {\n      setPhone('');\n      setPhoneChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setPhone('');\n      setPhoneChange('');\n    }\n\n    const value = e.target.value;\n\n    if (value.length < 1) {\n      setPhoneChange('');\n    } else {\n      const formattedValue = formatPhoneNumber(value);\n      setPhoneChange(formattedValue);\n    }\n  };\n\n  const additional_Contact = e => {\n    if (e.target.value) {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change('');\n    }\n  };\n\n  const distribution_Group = e => {\n    if (e.target.value) {\n      setDistribution_Group('');\n      setDistribution_Group_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setDistribution_Group('');\n      setDistribution_Group_Change('');\n    }\n  };\n\n  const activity_Profile = e => {\n    if (e.target.value) {\n      setActivity_Profile('');\n      setActivity_Profile_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setActivity_Profile('');\n      setActivity_Profile_Change('');\n    }\n  };\n\n  const cityPlace = e => {\n    if (e.target.value) {\n      setCityPlace('');\n      setCityPlace_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setCityPlace('');\n      setCityPlace_Change('');\n    }\n  };\n\n  const handleNameChange = e => {\n    setNameValue(e.target.value);\n  };\n\n  const handleSurnameChange = e => {\n    setSurnameValue(e.target.value);\n  }; // изменение данных пользователя\n\n\n  const handleClick = async e => {\n    const name = user.user_name;\n    const part = name.split(' ');\n    e.preventDefault();\n    const newInfo = {\n      departmentId: modalDep.current.value || user.department_id,\n      email: email ? email : emailChange.toUpperCase(),\n      username: nameValue + ' ' + surnameValue,\n      _id: user.id,\n      isAdmin: user.isadmin,\n      see_child: user.see_child,\n      status: user.status,\n      main_department: user.main_department,\n      phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n      additional_contact: additionalContact.current.value,\n      distribution_group: distributionGroup.current.value,\n      activity_profile: activityProfile.current.value,\n      city_id: citiesId,\n      cityPlaceChange: modalCityPlace.current.value\n    };\n\n    if (localUse._id !== username.username) {\n      const newInfo2 = {\n        departmentId: modalDep.current.value || user.department_id,\n        email: email ? email : emailChange.toUpperCase(),\n        username: nameValue + ' ' + surnameValue,\n        phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n        additional_contact: additionalContact.current.value,\n        distribution_group: distributionGroup.current.value,\n        activity_profile: activityProfile.current.value,\n        city_id: citiesId,\n        _id: user.id,\n        cityPlaceChange: modalCityPlace.current.value\n      };\n      await axios.put('/api/user/', newInfo2);\n      window.location.reload();\n    } else {\n      await axios.put('/api/user/', newInfo);\n      delete newInfo.phone_number;\n      delete newInfo.additional_contact;\n      delete newInfo.distribution_group;\n      delete newInfo.activity_profile;\n      delete newInfo.city_id;\n      delete newInfo.cityPlaceChange;\n      localStorage.setItem('user', JSON.stringify({ ...newInfo\n      }));\n      setModalActive(false);\n      window.location.reload();\n    }\n  }; // изменить пароль\n\n\n  const handleClickPassword = async e => {\n    e.preventDefault();\n\n    if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n      setErr('Новые пароли не совпадают');\n      return;\n    }\n\n    const passwords = {\n      userId: localUse._id,\n      password: localUse.password,\n      oldPassword: modalOldPass.current.value,\n      newPassword: modalNewPass.current.value\n    };\n\n    try {\n      await axios.put('/api/newPassword/', passwords);\n      setModalActivePass(false);\n      /*      localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n    } catch (er) {\n      setErr('Старые пароли не совпадают');\n    }\n  }; // сбросить пароль\n\n\n  const handleResetPass = async e => {\n    e.preventDefault();\n    const resetPassword = {\n      userId: username.username,\n      newPassword: 'qwerty123'\n    };\n\n    try {\n      await axios.put('/api/resetPassword/', resetPassword);\n      setModalActiveResetPass(false);\n    } catch (error) {}\n  };\n\n  const status = async () => {\n    if (user.status === 1) {\n      const status = {\n        status: 2,\n        typework_id: 1,\n        userId: user.id,\n        healthEnd: '-',\n        commentEnd: '-',\n        workEnd: new Date(Date.now())\n      };\n      await axios.put(\"/api/post/\", status);\n    } else {\n      alert(\"Пользователь не в работе\");\n    }\n  }; // удалить пользователя\n\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    setIsFetching(true);\n    const newPost = {\n      userId: username.username,\n      healthEnd: 1,\n      status: 4\n    };\n\n    try {\n      await axios.put('/api/deluser/', newPost);\n      /*                  workEnd: new Date(Date.now()),\n                        workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n                   localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n      /*      if(user.status === 1){\n              await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n            }\n           localStorage.clear()\n            window.location.reload()\n            window.location.href = '/'*/\n\n      setModalActiveDelete(false);\n      window.location.href = `/profile/${user.id}`;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n\n  const button = () => {\n    if (votearray.length === 0) {\n      setErr('Выберите участников номинации');\n    } else {\n      votearray.forEach(async vote => {\n        const arr = vote.split(\"_\");\n        const voteUser = {\n          user_id: localUse._id,\n          vote_for_user: arr[1],\n          nominations_id: arr[0]\n        };\n        await axios.post('/api/vote/', voteUser);\n      });\n      setModalActiveVote(false);\n    }\n  };\n  /*    const button = () => {\n          if (votearray.length === 0 || votearray.length <= 9) {\n              setErr('Выберите участников номинации');\n              return;\n          }\n          if (votearray.length === 10 && er) {\n              return;\n          } else {\n              const duplicates = {};\n              let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n              votearray.forEach(async (vote) => {\n                  const arr = vote.split(\"_\");\n                  const vote_for_user = arr[1];\n                   // Проверяем, был ли уже такой элемент\n                  if (duplicates[vote_for_user]) {\n                      // Если был, устанавливаем флаг и завершаем итерацию\n                      hasDuplicates = true;\n                      return;\n                  } else {\n                      // Иначе, добавляем его в объект duplicates\n                      duplicates[vote_for_user] = true;\n                  }\n                   const voteUser = {\n                      user_id: localUse._id,\n                      vote_for_user: arr[1],\n                      nominations_id: arr[0]\n                  };\n                   await axios.post('/api/vote/', voteUser);\n              });\n               // Если есть повторяющиеся элементы, прекращаем выполнение функции\n              if (hasDuplicates) {\n                  setErr('Есть сотрудники которые участвуют больше одной номинации');\n                  return;\n              }\n               setModalActiveVote(false);\n          }\n      };*/\n\n  /*    const clickVote = (e) => {\n          e.preventDefault()\n          const data = e.target.value.toString()\n          const arr = data.split(\"_\")\n          let votearr = votearray\n          votearr.push(data)\n          const newArray = votearr.filter(element => element !== \"\")\n          console.log('newArray=', newArray)\n          setVotearray(newArray)\n      }*/\n\n\n  const clickVote = (e, id, user_name, selectIndex) => {\n    setFilteredCities([]);\n    console.log('index=', id, user_name);\n    setInputValues(prev => ({ ...prev,\n      [selectedInputIndex]: user_name\n    }));\n    e.preventDefault();\n    const data = id.toString();\n    const arr = data.split(\"_\");\n\n    if (arr[0] === '' || arr[1] === '') {\n      return;\n    } else {\n      const str = arr[1].toString();\n      const str1 = arr[0].toString();\n      /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                      setErr('Такой сотрудник уже есть в другой номинации');\n                  }else{\n                      setErr('');\n                  }*/\n\n      const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n\n      if (existingIndex !== -1) {\n        const newArray = [...votearray];\n        newArray[existingIndex] = data;\n        console.log('Массив с обновленным элементом:', newArray);\n        setVotearray(newArray);\n        return;\n      }\n    }\n\n    const votearr = [...votearray];\n    votearr.push(data);\n    const newArray = votearr.filter(element => element !== \"\");\n    console.log('newArray=', newArray);\n    setVotearray(newArray); // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n\n    setSelectedOption(prevState => ({ ...prevState,\n      [selectIndex]: true\n    }));\n  };\n\n  const secureButton = async () => {\n    console.log('chek=', checkedItems);\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: check\n    };\n\n    if (check === undefined) {\n      setErr('Выберите номинацию');\n    } else {\n      await axios.post('/api/vote/', addNomination);\n      setModalVote(false);\n      window.location.reload();\n    }\n  };\n\n  const clearSecureButton = async () => {\n    const res = await axios.get('/api/user/' + username.username);\n    const addNomination = {\n      userId: username.username,\n      id_nomination: null\n    };\n    await axios.post('/api/vote/', addNomination);\n    setModalVote(false);\n    window.location.reload();\n  };\n\n  const inputClick = (event, voteId) => {\n    const {\n      id,\n      checked\n    } = event.target;\n\n    if (checked) {\n      setCheckedItems(checked);\n    } else {\n      setCheckedItems(null);\n    }\n\n    setCheck(event.target.value);\n    setCheckedItems(prevState => ({ ...prevState,\n      [id]: checked\n    }));\n    setUser(prevState => ({ ...prevState,\n      nomination_status: checked ? voteId : null\n    }));\n  };\n\n  const nextModal = async () => {\n    setModalVote(true);\n    setModalActiveVote(false);\n  };\n\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  const handleInputChangeUsers = (e, id) => {\n    const index = id + 1;\n    const {\n      value\n    } = e.target;\n    setInputValues(prev => ({ ...prev,\n      [index]: value\n    }));\n    setSelectedInputIndex(index);\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n    const filtered = userVote.filter(city => city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase()));\n\n    if (termCities === '') {\n      setFilteredCities([]);\n    } else {\n      setFilteredCities(filtered);\n    }\n  };\n\n  const getChangeVacancies = async () => {\n    console.log('user.vacancy=', user);\n    setModalVacancies(true);\n    setNameValue(user.user_name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[key].src,\n      title: images[key].title,\n      alt: `Image for ${key}`,\n      className: \"imagesProfile\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 17\n    }, this)), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileName\",\n        style: {\n          paddingTop: hasImage ? '30px' : '0px'\n        },\n        children: [user.user_name, localUser ? /*#__PURE__*/_jsxDEV(Create, {\n          style: {\n            marginLeft: '5px',\n            fontSize: 'large',\n            cursor: 'pointer'\n          },\n          onClick: () => setModalActive(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 42\n        }, this) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(Delete, {\n          style: {\n            cursor: 'pointer',\n            fontSize: 'large'\n          },\n          onClick: () => setModalActiveDelete(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), localUse.isAdmin === true && localUse._id === user.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            style: {\n              cursor: 'pointer',\n              color: 'black',\n              fontSize: 'large'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 111\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 86\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 25\n      }, this), user.vacancy_code === null ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: getChangeVacancies,\n          className: \"ProfileLinkVacancies\",\n          children: user.vacancy_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px dashed black',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"Email: \", name.charAt(0).toUpperCase() + name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false ? 'Доп.Контакт: ' : '', localUse.isAdmin !== false ? user.additional_contact : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438: \", user.distribution_group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438: \", user.activity_profile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F: \", cityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false ? 'Адрес фактического проживания: ' : '', localUse.isAdmin !== false ? user.place_of_residence : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", depsName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActivePass(true),\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 21\n      }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveResetPass(true),\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 25\n      }, this) : '', localUse.isAdmin !== isAdmin || localUse._id !== user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 81\n      }, this) : '', localUse.isAdmin !== isAdmin || localUse._id !== user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveReset(true),\n        children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 25\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 49\n      }, this) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveVote(true),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 25\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 21\n      }, this), localUse.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: nextModal,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 41\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PaddingDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveSkills(true),\n        children: \"\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {\n        modalActiveSkills: modalActiveSkills,\n        setModalActiveSkills: setModalActiveSkills,\n        username: username.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            className: \"ModalInputUpdate\",\n            onChange: handleNameChange,\n            value: nameValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            className: \"ModalInputUpdate\",\n            onChange: handleSurnameChange,\n            value: surnameValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            type: \"email\",\n            className: \"ModalInputUpdate\",\n            onChange: handleEmailChange,\n            value: email || emailChange,\n            minLength: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: phoneNumber,\n            onChange: handlePhoneChange,\n            value: phone || phoneChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0414\\u043E\\u043F \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442(\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430,\\u0424\\u0418\\u041E,\\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430)\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: additionalContact,\n            onChange: additional_Contact,\n            value: additional_contact || additional_contact_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: distributionGroup,\n            onChange: distribution_Group,\n            value: distribution_group || distribution_group_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: activityProfile,\n            onChange: activity_Profile,\n            value: activity_profile || activity_profile_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n            type: \"text\",\n            className: \"ModalInputUpdate\",\n            ref: modalCity,\n            value: searchTermCities || cityName,\n            onChange: handleInputChangeCities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              children: filteredCities.map((city, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: city.id,\n                onClick: () => handleUserClickCities(city.city_name, city.id),\n                children: city.city_name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0444\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F\",\n              type: \"text\",\n              className: \"ModalInputUpdate\",\n              ref: modalCityPlace,\n              onChange: cityPlace,\n              value: CityPlace || CityPlace_Change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedValue // Привязываем значение к selectedValue\n            ,\n            onChange: handleChange,\n            ref: modalDep,\n            className: \"ModalInputUpdateSelect\",\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.id,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActivePass,\n      setActive: setModalActivePass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleClickPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalOldPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPass,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437\",\n          type: \"password\",\n          className: \"inputChangePassword\",\n          ref: modalNewPassAgain,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonChangePassword\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveResetPass,\n      setActive: setModalActiveResetPass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleResetPass,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442: qwerty123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonRePasswordUser\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveReset,\n      setActive: setModalActiveReset,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: status,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u0442\\u043C\\u0435\\u0442\\u043A\\u0443 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveDelete,\n      setActive: setModalActiveDelete,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButtonDelete\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActiveVote,\n      setActive: setModalActiveVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: vote.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"inputVote\",\n              children: vote.nominations_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 37\n            }, this), vote.description]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"di\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleInputChangeUsers(e, id),\n              value: inputValues[id + 1] || '',\n              className: \"select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 37\n            }, this), selectedInputIndex === id + 1 && filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divSelectRegister\",\n              style: {\n                position: 'absolute',\n                top: '100%',\n                left: 0,\n                zIndex: 1000,\n                marginLeft: '20px'\n              },\n              children: filteredCities.map((city, cityId) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                onClick: e => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name),\n                children: city.user_name\n              }, cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 41\n            }, this)]\n          }, id + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: button,\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalVote,\n      setActive: setModalVote,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 17\n      }, this), er && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalError\",\n        children: er\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteContainer\",\n          children: vote.map((vote, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voteItem\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: vote.id,\n              className: \"inputVote\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: vote.id,\n                value: vote.id,\n                onChange: e => inputClick(e, vote.id),\n                checked: user.nomination_status === vote.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 37\n              }, this), vote.nominations_name, ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `../images/${vote.id}.png`,\n                alt: `Image for ${vote.nominations_name}`,\n                className: \"images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 37\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: secureButton,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: isFetching,\n        onClick: clearSecureButton,\n        children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacancies,\n      setActive: setModalVacancies,\n      children: /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        name: nameValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 755,\n    columnNumber: 9\n  }, this);\n}\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/\n\n_s(ProfileInfo, \"5FBRyHpa3t3Bh+sP6EqxX9Q9og4=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Create","Delete","Message","ErrorIcon","Modal","Link","useParams","Skills","ModalVacanciesItem","ModalVacancies","ProfileInfo","timeZone","setTimeZone","selectedOption","setSelectedOption","error","setError","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","selectedValue","setSelectedValue","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","isAdmin","setIsadmin","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","user","setUser","nameValue","setNameValue","email","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","options","setOptions","er","setErr","username","localUser","_id","JSON","parse","localStorage","getItem","localUse","modalDep","modalOldPass","modalNewPass","modalNewPassAgain","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","hasImage","setHasImage","nameChangeVacancies","setNameChangeVacancies","handleUserClickCities","city_name","id","handleInputChangeCities","e","termCities","target","value","filtered","filter","city","toLowerCase","includes","usersStatuses","findStatus","k","i","hasImageStatus","Object","keys","images","some","key","nomination_status","parseInt","getNameAndSurname","user_name","name","surname","split","getDeps","res","get","data","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","length","forEach","subclass","concat","getNameDeps","deps","post","fetchUser","isadmin","sort","a","b","localeCompare","mass","element","status","fetchVote","phone_number","place_of_residence","handleEmailChange","formatPhoneNumber","cleaned","replace","startsWith","slice","match","Boolean","join","handlePhoneChange","formattedValue","additional_Contact","distribution_Group","activity_Profile","cityPlace","handleNameChange","handleSurnameChange","handleClick","part","preventDefault","newInfo","departmentId","current","toUpperCase","see_child","main_department","city_id","cityPlaceChange","newInfo2","put","window","location","reload","setItem","stringify","handleClickPassword","passwords","userId","password","oldPassword","newPassword","handleResetPass","resetPassword","typework_id","healthEnd","commentEnd","workEnd","Date","now","alert","handleDelete","newPost","href","console","log","Array","isArray","button","arr","voteUser","user_id","vote_for_user","nominations_id","clickVote","selectIndex","prev","toString","str","str1","existingIndex","findIndex","item","newArray","votearr","push","prevState","secureButton","addNomination","id_nomination","undefined","clearSecureButton","inputClick","event","voteId","checked","nextModal","src","title","handleChange","handleInputChangeUsers","index","getChangeVacancies","map","paddingTop","marginLeft","fontSize","cursor","color","vacancy_code","border","padding","charAt","option","nominations_name","description","position","top","left","zIndex","cityId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useEffect, useRef, useState} from 'react'\nimport {Create, Delete, Message} from '@material-ui/icons'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal'\nimport './ProfileInfo.css'\nimport {Link, useParams} from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills'\n\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\n\n\n\nexport default function ProfileInfo() {\n    const [timeZone, setTimeZone] = useState([])\n    const [selectedOption, setSelectedOption] = useState({});\n    const [error, setError] = useState('')\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n    const [inputValues, setInputValues] = useState('');\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n    const [selectedValue, setSelectedValue] = useState('');\n\n\n\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [isAdmin, setIsadmin] = useState([])\n    const [userVote, setUserVote] = useState([])\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n    const [nameValue, setNameValue] = useState(\"\");\n\n\n    const [email, setEmail] = useState([])\n    const [emailChange, setEmailChange] = useState([])\n\n\n    const [phone, setPhone] = useState([])\n    const [phoneChange, setPhoneChange] = useState([])\n\n\n    const [additional_contact, setAdditional_Contact] = useState([])\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\n\n\n    const [distribution_group, setDistribution_Group] = useState([])\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\n\n\n    const [activity_profile, setActivity_Profile] = useState([])\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\n\n    const [CityPlace, setCityPlace] = useState([])\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\n\n\n    const [surnameValue, setSurnameValue] = useState([])\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\n    const [modalActiveReset, setModalActiveReset] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n\n    const [options, setOptions] = useState([]);\n    const [er, setErr] = useState('')\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n    const modalDep = useRef()\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n    const phoneNumber = useRef()\n    const additionalContact = useRef()\n    const distributionGroup = useRef()\n    const activityProfile = useRef()\n    const modalCity = useRef()\n    const modalCityPlace = useRef()\n\n\n    const [citiesId, setCitiesId] = useState([])\n    const [searchTermCities, setSearchTermCities] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [cities, setCities] = useState([])\n    const [hasImage, setHasImage] = useState(false);\n\n\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    const [nameChangeVacancies, setNameChangeVacancies] = useState(\"\");\n\n\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n    const handleUserClickCities = (city_name, id) => {\n        setCitiesId(id)\n        setSearchTermCities(city_name)\n        setFilteredCities([])\n    }\n\n\n    const handleInputChangeCities = (e) => {\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n\n        if (termCities === '') {\n            setCitiesId('');\n            setFilteredCities([]);\n            setCityName('');\n            return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n        }\n\n        const filtered = cities.filter(city =>\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        setFilteredCities(filtered);\n    }\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n        const hasImageStatus = Object.keys(images).some(key =>\n            user.nomination_status === key || user.nomination_status === parseInt(key)\n        );\n        setHasImage(hasImageStatus);\n\n\n        const getNameAndSurname = () => {\n            if (user.user_name) {\n                const [name, surname] = user.user_name.split(\" \");\n                setSurnameValue(surname || \"\");\n                setNameValue(name);\n            }\n        }\n\n        const getDeps = async () => {\n\n                const res = await axios.get('/api/department_tree_to_json/');\n                const data = res.data[0]['department_tree_to_json'];\n                const extractedOptions = extractOptions(data);\n                setOptions(extractedOptions);\n                setSelectedValue(user.department_id);\n\n        }\n        const extractOptions = (node) => {\n            let optionsList = [{ id: node.id, name: node.Name }];\n            if (node.Subclasses && node.Subclasses.length > 0) {\n                node.Subclasses.forEach(subclass => {\n                    optionsList = optionsList.concat(extractOptions(subclass));\n                });\n            }\n            return optionsList;\n\n        };\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsadmin(res.data.isadmin)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\n            setUserVote(mass)\n\n            const city = await axios.get('/api/Cities/')\n            setCities(city.data)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n        if (user && user.email && email) {\n            setEmail(user.email);\n        }\n        if (user && user.phone_number && phone) {\n            setPhone(user.phone_number);\n        }\n\n        if (user && user.additional_contact && additional_contact) {\n            setAdditional_Contact(user.additional_contact);\n        }\n\n        if (user && user.distribution_group && distribution_group) {\n            setDistribution_Group(user.distribution_group);\n        }\n        if (user && user.activity_profile && activity_profile) {\n            setActivity_Profile(user.activity_profile);\n        }\n        if (user && user.place_of_residence && CityPlace) {\n            setCityPlace(user.place_of_residence);\n        }\n\n        getNameAndSurname();\n        fetchVote()\n        fetchUser()\n        getDeps()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n    ])\n\n    const handleEmailChange = (e) => {\n\n        if (e.target.value) {\n            setEmail('')\n            setEmailChange(e.target.value)\n        }\n        if (e.target.value === '') {\n            setEmail('')\n            setEmailChange('')\n        }\n\n    }\n    const formatPhoneNumber = (value) => {\n        // Убираем все символы, кроме цифр\n        let cleaned = value.replace(/\\D/g, '');\n        if (cleaned.startsWith('7')) {\n            cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\n        }\n        // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\n        cleaned = cleaned.slice(0, 10);\n        // Разделяем на части, добавляя дефисы\n        const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\n        if (match) {\n            return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\n        }\n        return '+7 ' + cleaned;\n    };\n    const handlePhoneChange = (e) => {\n        if (e.target.value) {\n            setPhone('')\n            setPhoneChange(e.target.value)\n        }\n        if (e.target.value === '') {\n            setPhone('')\n            setPhoneChange('')\n        }\n        const value = e.target.value;\n        if (value.length < 1) {\n            setPhoneChange('')\n        } else {\n            const formattedValue = formatPhoneNumber(value);\n            setPhoneChange(formattedValue);\n        }\n    }\n\n    const additional_Contact = (e) => {\n        if (e.target.value) {\n            setAdditional_Contact('')\n            setAdditional_Contact_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setAdditional_Contact('')\n            setAdditional_Contact_Change('')\n        }\n    }\n\n    const distribution_Group = (e) => {\n        if (e.target.value) {\n            setDistribution_Group('')\n            setDistribution_Group_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setDistribution_Group('')\n            setDistribution_Group_Change('')\n        }\n    }\n\n    const activity_Profile = (e) => {\n        if (e.target.value) {\n            setActivity_Profile('')\n            setActivity_Profile_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setActivity_Profile('')\n            setActivity_Profile_Change('')\n        }\n    }\n\n    const cityPlace = (e) => {\n        if (e.target.value) {\n            setCityPlace('')\n            setCityPlace_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setCityPlace('')\n            setCityPlace_Change('')\n        }\n    }\n\n    const handleNameChange = (e) => {\n        setNameValue(e.target.value);\n    }\n\n    const handleSurnameChange = (e) => {\n        setSurnameValue(e.target.value)\n    }\n\n\n    // изменение данных пользователя\n    const handleClick = async (e) => {\n\n        const name = user.user_name\n        const part = name.split(' ')\n        e.preventDefault()\n        const newInfo = {\n            departmentId: modalDep.current.value || user.department_id,\n            email: (email ? email : emailChange.toUpperCase()),\n            username: nameValue + ' ' + surnameValue,\n            _id: user.id,\n            isAdmin: user.isadmin,\n            see_child: user.see_child,\n            status: user.status,\n            main_department: user.main_department,\n            phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\n            additional_contact: additionalContact.current.value,\n            distribution_group: distributionGroup.current.value,\n            activity_profile: activityProfile.current.value,\n            city_id: citiesId,\n            cityPlaceChange:modalCityPlace.current.value\n        }\n\n        if (localUse._id !== username.username) {\n            const newInfo2 = {\n                departmentId: modalDep.current.value || user.department_id,\n                email: (email ? email : emailChange.toUpperCase()),\n                username: nameValue + ' ' + surnameValue,\n                phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\n                additional_contact: additionalContact.current.value,\n                distribution_group: distributionGroup.current.value,\n                activity_profile: activityProfile.current.value,\n                city_id: citiesId,\n                _id: user.id,\n                cityPlaceChange:modalCityPlace.current.value\n            }\n\n            await axios.put('/api/user/', newInfo2)\n            window.location.reload()\n        } else {\n            await axios.put('/api/user/', newInfo)\n            delete newInfo.phone_number\n            delete newInfo.additional_contact\n            delete newInfo.distribution_group\n            delete newInfo.activity_profile\n            delete newInfo.city_id\n            delete newInfo.cityPlaceChange\n            localStorage.setItem('user', JSON.stringify({...newInfo}))\n            setModalActive(false)\n            window.location.reload()\n        }\n    }\n\n    // изменить пароль\n    const handleClickPassword = async (e) => {\n        e.preventDefault()\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n            setErr('Новые пароли не совпадают')\n            return\n        }\n        const passwords = {\n            userId: localUse._id,\n            password: localUse.password,\n            oldPassword: modalOldPass.current.value,\n            newPassword: modalNewPass.current.value\n        }\n        try {\n            await axios.put('/api/newPassword/', passwords)\n            setModalActivePass(false)\n            /*      localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n        } catch (er) {\n            setErr('Старые пароли не совпадают')\n        }\n    }\n\n    // сбросить пароль\n    const handleResetPass = async (e) => {\n        e.preventDefault()\n\n        const resetPassword = {\n            userId: username.username,\n            newPassword: 'qwerty123'\n        }\n\n        try {\n            await axios.put('/api/resetPassword/', resetPassword)\n            setModalActiveResetPass(false)\n        } catch (error) {\n        }\n    }\n\n    const status = async () => {\n        if (user.status === 1) {\n            const status = {\n                status: 2,\n                typework_id: 1,\n                userId: user.id,\n                healthEnd: '-',\n                commentEnd: '-',\n                workEnd: new Date(Date.now())\n            }\n            await axios.put(\"/api/post/\", status)\n        } else {\n            alert(\"Пользователь не в работе\")\n        }\n    }\n\n    // удалить пользователя\n    const handleDelete = async (e) => {\n        e.preventDefault()\n        setIsFetching(true)\n\n        const newPost = {\n            userId: username.username,\n            healthEnd: 1,\n            status: 4\n        }\n        try {\n            await axios.put('/api/deluser/', newPost)\n\n            /*                  workEnd: new Date(Date.now()),\n                              workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n\n                        localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n\n            /*      if(user.status === 1){\n                    await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n                  }\n                 localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n\n\n            setModalActiveDelete(false)\n            window.location.href = `/profile/${user.id}`\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n\n\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n    /*    const button = () => {\n            if (votearray.length === 0 || votearray.length <= 9) {\n                setErr('Выберите участников номинации');\n                return;\n            }\n            if (votearray.length === 10 && er) {\n                return;\n            } else {\n                const duplicates = {};\n                let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n                votearray.forEach(async (vote) => {\n                    const arr = vote.split(\"_\");\n                    const vote_for_user = arr[1];\n\n                    // Проверяем, был ли уже такой элемент\n                    if (duplicates[vote_for_user]) {\n                        // Если был, устанавливаем флаг и завершаем итерацию\n                        hasDuplicates = true;\n                        return;\n                    } else {\n                        // Иначе, добавляем его в объект duplicates\n                        duplicates[vote_for_user] = true;\n                    }\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    };\n\n                    await axios.post('/api/vote/', voteUser);\n                });\n\n                // Если есть повторяющиеся элементы, прекращаем выполнение функции\n                if (hasDuplicates) {\n                    setErr('Есть сотрудники которые участвуют больше одной номинации');\n                    return;\n                }\n\n                setModalActiveVote(false);\n            }\n        };*/\n    /*    const clickVote = (e) => {\n            e.preventDefault()\n            const data = e.target.value.toString()\n            const arr = data.split(\"_\")\n            let votearr = votearray\n            votearr.push(data)\n            const newArray = votearr.filter(element => element !== \"\")\n            console.log('newArray=', newArray)\n            setVotearray(newArray)\n        }*/\n\n\n    const clickVote = (e, id,user_name,selectIndex) => {\n        setFilteredCities([])\n        console.log('index=',id,user_name)\n        setInputValues(prev => ({ ...prev, [selectedInputIndex]: user_name }));\n        e.preventDefault();\n        const data =id.toString();\n        const arr = data.split(\"_\");\n        if (arr[0] === '' || arr[1] === '') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n            /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                            setErr('Такой сотрудник уже есть в другой номинации');\n                        }else{\n                            setErr('');\n                        }*/\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n        // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n        setSelectedOption(prevState => ({\n            ...prevState,\n            [selectIndex]: true\n        }));\n\n    };\n\n\n    const secureButton = async () => {\n        console.log('chek=', checkedItems)\n\n        const res = await axios.get('/api/user/' + username.username)\n\n        const addNomination = {\n            userId: username.username,\n            id_nomination: check\n        }\n\n        if (check === undefined) {\n            setErr('Выберите номинацию')\n        } else {\n            await axios.post('/api/vote/', addNomination)\n            setModalVote(false)\n            window.location.reload()\n        }\n    }\n\n    const clearSecureButton = async () => {\n        const res = await axios.get('/api/user/' + username.username)\n        const addNomination = {\n            userId: username.username,\n            id_nomination: null\n        }\n\n        await axios.post('/api/vote/', addNomination)\n        setModalVote(false)\n        window.location.reload()\n\n    }\n\n\n    const inputClick = (event, voteId) => {\n        const {id, checked} = event.target\n        if (checked) {\n            setCheckedItems(checked)\n        } else {\n            setCheckedItems(null)\n        }\n        setCheck(event.target.value)\n        setCheckedItems(prevState => ({\n            ...prevState,\n            [id]: checked,\n        }))\n\n        setUser(prevState => ({\n                ...prevState,\n                nomination_status: checked ? voteId : null\n            }\n        ))\n    }\n\n\n    const nextModal = async () => {\n        setModalVote(true)\n        setModalActiveVote(false)\n    }\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n    const handleChange = (e) => {\n        setSelectedValue(e.target.value);\n    };\n\n\n    const handleInputChangeUsers = (e,id) => {\n        const index = id + 1\n        const { value } = e.target;\n        setInputValues(prev => ({ ...prev, [index]: value }));\n        setSelectedInputIndex(index);\n\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = userVote.filter(city =>\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n\n\n\n\n\n\n\n\n    const getChangeVacancies = async () => {\n        console.log('user.vacancy=',user)\n        setModalVacancies(true)\n\n\n        setNameValue(user.user_name)\n\n\n\n\n\n\n    };\n\n\n\n\n\n\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                        <div className='ProfileName' style={{ paddingTop: hasImage ? '30px' : '0px' }}>\n                            {user.user_name}\n\n                            {localUser ? <Create style={{marginLeft: '5px', fontSize: 'large', cursor: 'pointer'}}\n                                                 onClick={() => setModalActive(true)}/> : ''}\n\n                            {localUse.isAdmin ? <Delete style={{cursor: 'pointer', fontSize: 'large'}}\n                                                        onClick={() => setModalActiveDelete(true)}/> : <></>}\n\n                            {localUse.isAdmin === true && localUse._id === user.id ? <Link to={`/AdminPanel`}><ErrorIcon\n                                style={{cursor: 'pointer', color: 'black', fontSize: 'large'}}/></Link> : ''}\n                        </div>\n                    {user.vacancy_code === null ? '' :\n                        <div>\n                            <label style={{cursor:'pointer'}} onClick={getChangeVacancies} className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                        </div>\n                    }\n                        {/*                {\n                    <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                }*/}\n\n\n                    <div style={{border: '3px dashed black',padding:'10px'}}>\n                    <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                    <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                    <div className='ProfileInfoCard'>{localUse.isAdmin !== false ? 'Доп.Контакт: ' : ''}{localUse.isAdmin !== false ? user.additional_contact : ''}</div>\n                    <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                    <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                    <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                    <div className='ProfileInfoCard'>{localUse.isAdmin !== false ? 'Адрес фактического проживания: ' : ''}{localUse.isAdmin !== false ? user.place_of_residence : ''}</div>\n                    <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n                    <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>\n\n                    <div className='PaddingDiv'></div>\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveResetPass(true)}>Сбросить\n                            пароль</div> : ''}\n\n                    {localUse.isAdmin !== isAdmin || localUse._id !== user.id ? <div className='PaddingDiv'></div> : ''}\n\n                    {localUse.isAdmin !== isAdmin || localUse._id !== user.id ?\n                        <div className='changePass' onClick={() => setModalActiveReset(true)}>Закончить</div> : ''}\n\n                    {localUse._id === user.id ? <div className='PaddingDiv'></div> : ''}\n\n                    {localUse._id === user.id ?\n                        <div className='changePass' onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''}\n\n                    <div className='PaddingDiv'></div>\n\n                    {localUse.isAdmin ? <div className=\"changePass\" onClick={nextModal}>Закрепить номинацию</div> : ''}\n\n                    <div className='PaddingDiv'></div>\n\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills} username={username.username} />\n\n\n                </div>\n            }\n\n            <Modal active={modalActive} setActive={setModalActive}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {error && <div className='modalError'>{error}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClick}>\n                    <div>\n                        <input\n                            placeholder=\"Фамилия\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleNameChange}\n                            value={nameValue}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Имя\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleSurnameChange}\n                            value={surnameValue}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Email\"\n                            type=\"email\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleEmailChange}\n                            value={email || emailChange}\n                            minLength={6}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Телефон\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={phoneNumber}\n                            onChange={handlePhoneChange}\n                            value={phone || phoneChange}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={additionalContact}\n                            onChange={additional_Contact}\n                            value={additional_contact || additional_contact_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Группа рассылки\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={distributionGroup}\n                            onChange={distribution_Group}\n                            value={distribution_group || distribution_group_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Профиль деятельности\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={activityProfile}\n                            onChange={activity_Profile}\n                            value={activity_profile || activity_profile_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Город\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={modalCity}\n                            value={searchTermCities || cityName}\n                            onChange={handleInputChangeCities}\n                        />\n                        <div>\n                            {filteredCities.length > 0 && (\n                                <div className='divSelectRegister'>\n                                    {filteredCities.map((city, id) => (\n                                        <div className='selectNameDiv' key={id} value={city.id}\n                                             onClick={() => handleUserClickCities(city.city_name, city.id)}>\n                                            {city.city_name}\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                            <input\n                                placeholder=\"Адрес фактического проживания\"\n                                type='text'\n                                className=\"ModalInputUpdate\"\n                                ref={modalCityPlace}\n                                onChange={cityPlace}\n                                value={CityPlace || CityPlace_Change}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <select\n                            value={selectedValue} // Привязываем значение к selectedValue\n                            onChange={handleChange}\n                            ref={modalDep}\n                            className=\"ModalInputUpdateSelect\"\n                        >\n                            {options.map((option) => (\n                                <option key={option.id} value={option.id}>\n                                    {option.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActivePass} setActive={setModalActivePass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {er && <div className='modalError'>{er}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClickPassword}>\n                    <input\n                        placeholder=\"Старый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalOldPass}\n                    />\n                    <input\n                        placeholder=\"Новый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPass}\n                        minLength='6'\n                    />\n                    <input\n                        placeholder=\"Новый пароль ещё раз\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPassAgain}\n                        minLength='6'\n                    />\n                    <button className=\"ModalButtonChangePassword\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveResetPass} setActive={setModalActiveResetPass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleResetPass}>\n                    <h2>Новый пароль будет: qwerty123</h2>\n                    <button className=\"ModalButtonRePasswordUser\" type=\"submit\" disabled={isFetching}>\n                        Сбросить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveReset} setActive={setModalActiveReset}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={status}>\n                    <h2>Вы хотите завершить отметку времени пользователя?</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Закончить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleDelete}>\n                    <h2>Пользователь будет удален</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Удалить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div>\n                        {\n                            vote.map((vote, id) =>\n\n                                <label key={id} htmlFor={vote.id}>\n                                    <h3 className='inputVote'>{vote.nominations_name}</h3>\n                                    {vote.description}\n                                </label>\n                            )}\n                    </div>\n                    <div className='di'>\n{/*                        {vote.map((vote, id) => (\n                                <select\n                                    onChange={(e) => clickVote(e, id)}\n                                    key={id}\n                                    value={userVote.id}\n                                    className='select'>\n\n                                    {!selectedOption[id] &&\n\n                                    <option value=''>Выберите участника</option>}\n\n                                    {userVote.map((userVote, id) => (\n\n                                        <option key={id} value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>\n                                    ))}\n                                </select>\n                            )\n                        )}*/}\n\n                            {vote.map((vote, id) => (\n                                <div key={id+1} style={{ position: 'relative' }}>\n                                    <input\n                                        onChange={(e) => handleInputChangeUsers(e, id)}\n                                        value={inputValues[id+1] || ''}\n                                        className='select'\n                                    />\n                                    {selectedInputIndex === id+1 && filteredCities.length > 0 && (\n                                        <div className='divSelectRegister' style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000,marginLeft:'20px' }}>\n                                            {filteredCities.map((city, cityId) => (\n                                                <div\n                                                    className='selectNameDiv'\n                                                    key={cityId}\n                                                    onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\n                                                    {city.user_name}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n            </Modal>\n            <Modal active={modalVote} setActive={setModalVote}>\n                <h1>Закрепить номинацию:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div>\n                    <div className='voteContainer'>\n                        {vote.map((vote, id) => (\n                            <div key={id} className=\"voteItem\">\n                                <label key={id} htmlFor={vote.id} className=\"inputVote\">\n\n                                    <input\n                                        type='checkbox'\n                                        id={vote.id}\n                                        value={vote.id}\n                                        onChange={(e) => inputClick(e, vote.id)}\n                                        checked={user.nomination_status === vote.id}\n                                    />\n\n                                    {vote.nominations_name}{' '}\n\n                                    <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\n                                         className='images'/>\n\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={secureButton}>Закрепить</button>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={clearSecureButton}>Снять\n                    номинацию\n                </button>\n            </Modal>\n\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem name={nameValue}/>\n            </ModalVacancies>\n\n\n\n<Skills/>\n\n        </div>\n    )\n}\n\n\n\n\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/"]},"metadata":{},"sourceType":"module"}