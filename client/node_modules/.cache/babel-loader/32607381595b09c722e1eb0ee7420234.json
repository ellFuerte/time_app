{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  targetDepartmentId\n}) => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState([]);\n\n  const shouldExpandNode = node => {\n    return node.department_tree_to_json.id === targetDepartmentId || node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.some(sub => shouldExpandNode(sub));\n  };\n\n  useEffect(() => {\n    // загрузка всех департаментов\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    const initialExpandedNodes = dep.reduce((acc, node) => {\n      if (shouldExpandNode(node)) {\n        acc.push(node.department_tree_to_json.id);\n      }\n\n      return acc;\n    }, []);\n    setExpandedNodes(initialExpandedNodes);\n    getDeps();\n  }, [dep, targetDepartmentId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 43\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 148\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 63\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 57\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 53\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"ZpimOrPpLGNUPieBCqJXMYhomOs=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","targetDepartmentId","dep","setDep","expandedNodes","setExpandedNodes","shouldExpandNode","node","department_tree_to_json","id","Subclasses","some","sub","getDeps","res","get","data","length","initialExpandedNodes","reduce","acc","push","map","i","label","Name","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = ({targetDepartmentId }) => {\r\n    const [dep, setDep] = useState([])\r\n    const [expandedNodes, setExpandedNodes] = useState([]);\r\n\r\n    const shouldExpandNode = (node) => {\r\n        return node.department_tree_to_json.id === targetDepartmentId ||\r\n            (node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.some(sub => shouldExpandNode(sub)));\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n// загрузка всех департаментов\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/')\r\n            if(res.data[0].department_tree_to_json.length===0){\r\n                setDep([])\r\n            }else {\r\n                setDep(res.data)\r\n            }\r\n        }\r\n        const initialExpandedNodes = dep.reduce((acc, node) => {\r\n            if (shouldExpandNode(node)) {\r\n                acc.push(node.department_tree_to_json.id);\r\n            }\r\n            return acc;\r\n        }, []);\r\n        setExpandedNodes(initialExpandedNodes);\r\n        getDeps()\r\n    }, [dep, targetDepartmentId])\r\n\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n\r\n                        {dep.map((node, i) => {\r\n\r\n                            const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                                className='level1'>\r\n\r\n                                <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                            return (\r\n\r\n                                <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={false}>\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n\r\n                                        <TreeView nodeLabel={(<Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}><span className=\"node\">{departments.Name}</span></Link>)} key={departments.id} defaultCollapsed={true}>\r\n\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    nodeLabel={(\r\n\r\n                                                    <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n\r\n                                                        <span className=\"node\">{departments1.Name}</span>\r\n\r\n                                                    </Link>\r\n\r\n                                                )}\r\n                                                    key={departments1.id} defaultCollapsed={true}>\r\n\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n\r\n                                                            <div\r\n                                                                style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                            </div>\r\n\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}