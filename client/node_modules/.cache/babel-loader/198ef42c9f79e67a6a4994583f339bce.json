{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n  }, []);\n\n  const openNodeById = idToOpen => {\n    const updatedDep = dep.map(node => {\n      if (node.department_tree_to_json.id === idToOpen || node.department_tree_to_json.Subclasses.id === idToOpen) {\n        return { ...node,\n          isOpen: true // добавить флаг, чтобы открыть этот узел\n\n        };\n      }\n\n      return node;\n    });\n    setDep(updatedDep);\n  };\n\n  useEffect(() => {\n    // Пример открытия узла с id 21\n    openNodeById(21);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${node.department_tree_to_json.id}`,\n                className: \"level1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"node\",\n                  children: node.department_tree_to_json.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this),\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 53\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 61\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 65\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 61\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 53\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this);\n\n            return label;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"WJREAWVzbvLQkDmYawbenzKdGO8=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","getDeps","res","get","data","department_tree_to_json","length","openNodeById","idToOpen","updatedDep","map","node","id","Subclasses","isOpen","i","label","Name","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const openNodeById = (idToOpen) => {\r\n        const updatedDep = dep.map(node => {\r\n            if (node.department_tree_to_json.id === idToOpen || node.department_tree_to_json.Subclasses.id===idToOpen ) {\r\n                return {\r\n                    ...node,\r\n                    isOpen: true // добавить флаг, чтобы открыть этот узел\r\n                };\r\n            }\r\n            return node;\r\n        });\r\n        setDep(updatedDep);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Пример открытия узла с id 21\r\n        openNodeById(21);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => {\r\n                                const label = (\r\n                                    <TreeView nodeLabel={(\r\n                                        <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )} key={node.department_tree_to_json.Name + '|' + i} defaultCollapsed={false}>\r\n                                        {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                            <TreeView nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )} key={departments.id} defaultCollapsed={true}>\r\n                                                {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                    <TreeView nodeLabel={(\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )} key={departments1.id} defaultCollapsed={true}>\r\n                                                        {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                            <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                                <div style={{paddingBottom: '8px'}}>{departments2.Name}</div>\r\n                                                            </Link>\r\n                                                        ))}\r\n                                                    </TreeView>\r\n                                                ))}\r\n                                            </TreeView>\r\n                                        ))}\r\n                                    </TreeView>\r\n                                );\r\n\r\n                                return label;\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}