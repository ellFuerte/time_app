{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\Editing\\\\Editing.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { Create } from \"@material-ui/icons\";\nimport Modal from \"../../Templates/Modal/Modal\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editing({\n  modalActive,\n  setModalActive\n}) {\n  _s();\n\n  const [error, setError] = useState('');\n  const [selectedValue, setSelectedValue] = useState('');\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [email, setEmail] = useState([]);\n  const [emailChange, setEmailChange] = useState([]);\n  const [phone, setPhone] = useState([]);\n  const [phoneChange, setPhoneChange] = useState([]);\n  const [additional_contact, setAdditional_Contact] = useState([]);\n  const [additional_contact_change, setAdditional_Contact_Change] = useState([]);\n  const [distribution_group, setDistribution_Group] = useState([]);\n  const [distribution_group_change, setDistribution_Group_Change] = useState([]);\n  const [activity_profile, setActivity_Profile] = useState([]);\n  const [activity_profile_change, setActivity_Profile_Change] = useState([]);\n  const [CityPlace, setCityPlace] = useState([]);\n  const [CityPlace_Change, setCityPlace_Change] = useState([]);\n  const [surnameValue, setSurnameValue] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const username = useParams();\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const modalDep = useRef();\n  const phoneNumber = useRef();\n  const additionalContact = useRef();\n  const distributionGroup = useRef();\n  const activityProfile = useRef();\n  const modalCity = useRef();\n  const modalCityPlace = useRef();\n  const [citiesId, setCitiesId] = useState([]);\n  const [searchTermCities, setSearchTermCities] = useState('');\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  const handleUserClickCities = (city_name, id) => {\n    setCitiesId(id);\n    setSearchTermCities(city_name);\n    setFilteredCities([]);\n  };\n\n  const handleInputChangeCities = e => {\n    const termCities = e.target.value;\n    setSearchTermCities(termCities);\n\n    if (termCities === '') {\n      setCitiesId('');\n      setFilteredCities([]);\n      setCityName('');\n      return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n    }\n\n    const filtered = cities.filter(city => city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase()));\n    setFilteredCities(filtered);\n  };\n\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const getNameAndSurname = () => {\n      if (user.user_name) {\n        const [name, surname] = user.user_name.split(\" \");\n        setSurnameValue(surname || \"\");\n        setNameValue(name);\n      }\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const data = res.data[0]['department_tree_to_json'];\n      const extractedOptions = extractOptions(data);\n      setOptions(extractedOptions);\n      setSelectedValue(user.department_id);\n    };\n\n    const extractOptions = node => {\n      let optionsList = [{\n        id: node.id,\n        name: node.Name\n      }];\n\n      if (node.Subclasses && node.Subclasses.length > 0) {\n        node.Subclasses.forEach(subclass => {\n          optionsList = optionsList.concat(extractOptions(subclass));\n        });\n      }\n\n      return optionsList;\n    };\n\n    const fetchVote = async () => {\n      if (user && user.email && email) {\n        setEmail(user.email);\n      }\n\n      if (user && user.phone_number && phone) {\n        setPhone(user.phone_number);\n      }\n\n      if (user && user.additional_contact && additional_contact) {\n        setAdditional_Contact(user.additional_contact);\n      }\n\n      if (user && user.distribution_group && distribution_group) {\n        setDistribution_Group(user.distribution_group);\n      }\n\n      if (user && user.activity_profile && activity_profile) {\n        setActivity_Profile(user.activity_profile);\n      }\n\n      if (user && user.place_of_residence && CityPlace) {\n        setCityPlace(user.place_of_residence);\n      }\n\n      getNameAndSurname();\n      fetchVote();\n      getDeps();\n    };\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username]);\n\n  const handleEmailChange = e => {\n    if (e.target.value) {\n      setEmail('');\n      setEmailChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setEmail('');\n      setEmailChange('');\n    }\n  };\n\n  const formatPhoneNumber = value => {\n    // Убираем все символы, кроме цифр\n    let cleaned = value.replace(/\\D/g, '');\n\n    if (cleaned.startsWith('7')) {\n      cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\n    } // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\n\n\n    cleaned = cleaned.slice(0, 10); // Разделяем на части, добавляя дефисы\n\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\n\n    if (match) {\n      return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\n    }\n\n    return '+7 ' + cleaned;\n  };\n\n  const handlePhoneChange = e => {\n    if (e.target.value) {\n      setPhone('');\n      setPhoneChange(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setPhone('');\n      setPhoneChange('');\n    }\n\n    const value = e.target.value;\n\n    if (value.length < 1) {\n      setPhoneChange('');\n    } else {\n      const formattedValue = formatPhoneNumber(value);\n      setPhoneChange(formattedValue);\n    }\n  };\n\n  const additional_Contact = e => {\n    if (e.target.value) {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setAdditional_Contact('');\n      setAdditional_Contact_Change('');\n    }\n  };\n\n  const distribution_Group = e => {\n    if (e.target.value) {\n      setDistribution_Group('');\n      setDistribution_Group_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setDistribution_Group('');\n      setDistribution_Group_Change('');\n    }\n  };\n\n  const activity_Profile = e => {\n    if (e.target.value) {\n      setActivity_Profile('');\n      setActivity_Profile_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setActivity_Profile('');\n      setActivity_Profile_Change('');\n    }\n  };\n\n  const cityPlace = e => {\n    if (e.target.value) {\n      setCityPlace('');\n      setCityPlace_Change(e.target.value);\n    }\n\n    if (e.target.value === '') {\n      setCityPlace('');\n      setCityPlace_Change('');\n    }\n  };\n\n  const handleNameChange = e => {\n    setNameValue(e.target.value);\n  };\n\n  const handleSurnameChange = e => {\n    setSurnameValue(e.target.value);\n  }; // изменение данных пользователя\n\n\n  const handleClick = async e => {\n    const name = user.user_name;\n    const part = name.split(' ');\n    e.preventDefault();\n    const newInfo = {\n      departmentId: modalDep.current.value || user.department_id,\n      email: email ? email : emailChange.toUpperCase(),\n      username: nameValue + ' ' + surnameValue,\n      _id: user.id,\n      isAdmin: user.isadmin,\n      see_child: user.see_child,\n      status: user.status,\n      main_department: user.main_department,\n      phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n      additional_contact: additionalContact.current.value,\n      distribution_group: distributionGroup.current.value,\n      activity_profile: activityProfile.current.value,\n      city_id: citiesId,\n      cityPlaceChange: modalCityPlace.current.value\n    };\n\n    if (localUse._id !== username.username) {\n      const newInfo2 = {\n        departmentId: modalDep.current.value || user.department_id,\n        email: email ? email : emailChange.toUpperCase(),\n        username: nameValue + ' ' + surnameValue,\n        phone_number: phoneNumber.current.value === '' ? '' : phoneNumber.current.value,\n        additional_contact: additionalContact.current.value,\n        distribution_group: distributionGroup.current.value,\n        activity_profile: activityProfile.current.value,\n        city_id: citiesId,\n        _id: user.id,\n        cityPlaceChange: modalCityPlace.current.value\n      };\n      await axios.put('/api/user/', newInfo2);\n      window.location.reload();\n    } else {\n      await axios.put('/api/user/', newInfo);\n      delete newInfo.phone_number;\n      delete newInfo.additional_contact;\n      delete newInfo.distribution_group;\n      delete newInfo.activity_profile;\n      delete newInfo.city_id;\n      delete newInfo.cityPlaceChange;\n      localStorage.setItem('user', JSON.stringify({ ...newInfo\n      }));\n      setModalActive(false);\n      window.location.reload();\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Editing, \"ttSLlsTmuDfIMIU9SQdrhYLCzNk=\", false, function () {\n  return [useParams];\n});\n\n_c = Editing;\nexport default Editing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editing\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/Editing/Editing.jsx"],"names":["React","Component","useEffect","useRef","useState","Create","Modal","axios","useParams","Editing","modalActive","setModalActive","error","setError","selectedValue","setSelectedValue","cityName","setCityName","user","setUser","nameValue","setNameValue","email","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","isFetching","setIsFetching","options","setOptions","username","localUse","JSON","parse","localStorage","getItem","modalDep","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","handleUserClickCities","city_name","id","handleInputChangeCities","e","termCities","target","value","filtered","filter","city","toLowerCase","includes","usersStatuses","findStatus","k","i","getNameAndSurname","user_name","name","surname","split","getDeps","res","get","data","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","length","forEach","subclass","concat","fetchVote","phone_number","place_of_residence","handleEmailChange","formatPhoneNumber","cleaned","replace","startsWith","slice","match","Boolean","join","handlePhoneChange","formattedValue","additional_Contact","distribution_Group","activity_Profile","cityPlace","handleNameChange","handleSurnameChange","handleClick","part","preventDefault","newInfo","departmentId","current","toUpperCase","_id","isAdmin","isadmin","see_child","status","main_department","city_id","cityPlaceChange","newInfo2","put","window","location","reload","setItem","stringify","handleChange"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useRef, useState } from 'react';\r\nimport { Create } from \"@material-ui/icons\";\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Editing({modalActive,setModalActive}) {\r\n    const [error, setError] = useState('')\r\n\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const [cityName, setCityName] = useState([])\r\n\r\n    const [user, setUser] = useState([])\r\n\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n\r\n\r\n    const [email, setEmail] = useState([])\r\n    const [emailChange, setEmailChange] = useState([])\r\n\r\n\r\n    const [phone, setPhone] = useState([])\r\n    const [phoneChange, setPhoneChange] = useState([])\r\n\r\n\r\n    const [additional_contact, setAdditional_Contact] = useState([])\r\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\r\n\r\n\r\n    const [distribution_group, setDistribution_Group] = useState([])\r\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\r\n\r\n\r\n    const [activity_profile, setActivity_Profile] = useState([])\r\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\r\n\r\n    const [CityPlace, setCityPlace] = useState([])\r\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\r\n\r\n\r\n    const [surnameValue, setSurnameValue] = useState([])\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const username = useParams()\r\n\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const modalDep = useRef()\r\n    const phoneNumber = useRef()\r\n    const additionalContact = useRef()\r\n    const distributionGroup = useRef()\r\n    const activityProfile = useRef()\r\n    const modalCity = useRef()\r\n    const modalCityPlace = useRef()\r\n\r\n\r\n    const [citiesId, setCitiesId] = useState([])\r\n    const [searchTermCities, setSearchTermCities] = useState('');\r\n    const [filteredCities, setFilteredCities] = useState([]);\r\n    const [cities, setCities] = useState([])\r\n\r\n\r\n    const handleUserClickCities = (city_name, id) => {\r\n        setCitiesId(id)\r\n        setSearchTermCities(city_name)\r\n        setFilteredCities([])\r\n    }\r\n\r\n\r\n    const handleInputChangeCities = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermCities(termCities);\r\n\r\n        if (termCities === '') {\r\n            setCitiesId('');\r\n            setFilteredCities([]);\r\n            setCityName('');\r\n            return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\r\n        }\r\n\r\n        const filtered = cities.filter(city =>\r\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        setFilteredCities(filtered);\r\n    }\r\n\r\n    const usersStatuses = {\r\n        0: '',\r\n        1: 'start',\r\n        2: 'end',\r\n        3: 'sick_leave',\r\n        4: 'deleted',\r\n        5: 'vacation',\r\n        6: 'time_off',\r\n        7: 'other'\r\n    }\r\n\r\n    function findStatus(k) {\r\n        for (let i in usersStatuses) {\r\n            if (i == k) {\r\n                return usersStatuses[i]\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        const getNameAndSurname = () => {\r\n            if (user.user_name) {\r\n                const [name, surname] = user.user_name.split(\" \");\r\n                setSurnameValue(surname || \"\");\r\n                setNameValue(name);\r\n            }\r\n        }\r\n\r\n        const getDeps = async () => {\r\n\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const data = res.data[0]['department_tree_to_json'];\r\n            const extractedOptions = extractOptions(data);\r\n            setOptions(extractedOptions);\r\n            setSelectedValue(user.department_id);\r\n\r\n        }\r\n        const extractOptions = (node) => {\r\n            let optionsList = [{ id: node.id, name: node.Name }];\r\n            if (node.Subclasses && node.Subclasses.length > 0) {\r\n                node.Subclasses.forEach(subclass => {\r\n                    optionsList = optionsList.concat(extractOptions(subclass));\r\n                });\r\n            }\r\n            return optionsList;\r\n\r\n        };\r\n\r\n\r\n        const fetchVote = async () => {\r\n\r\n\r\n\r\n        if (user && user.email && email) {\r\n            setEmail(user.email);\r\n        }\r\n        if (user && user.phone_number && phone) {\r\n            setPhone(user.phone_number);\r\n        }\r\n\r\n        if (user && user.additional_contact && additional_contact) {\r\n            setAdditional_Contact(user.additional_contact);\r\n        }\r\n\r\n        if (user && user.distribution_group && distribution_group) {\r\n            setDistribution_Group(user.distribution_group);\r\n        }\r\n        if (user && user.activity_profile && activity_profile) {\r\n            setActivity_Profile(user.activity_profile);\r\n        }\r\n        if (user && user.place_of_residence && CityPlace) {\r\n            setCityPlace(user.place_of_residence);\r\n        }\r\n\r\n        getNameAndSurname();\r\n        fetchVote()\r\n        getDeps()\r\n    }}, [\r\n        user.user_name,\r\n        user.email,\r\n        user.phone_number,\r\n        user.additional_contact,\r\n        user.distribution_group,\r\n        user.activity_profile,\r\n        user.place_of_residence,\r\n        username.username\r\n    ])\r\n\r\n    const handleEmailChange = (e) => {\r\n\r\n        if (e.target.value) {\r\n            setEmail('')\r\n            setEmailChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setEmail('')\r\n            setEmailChange('')\r\n        }\r\n\r\n    }\r\n    const formatPhoneNumber = (value) => {\r\n        // Убираем все символы, кроме цифр\r\n        let cleaned = value.replace(/\\D/g, '');\r\n        if (cleaned.startsWith('7')) {\r\n            cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\r\n        }\r\n        // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\r\n        cleaned = cleaned.slice(0, 10);\r\n        // Разделяем на части, добавляя дефисы\r\n        const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\r\n        if (match) {\r\n            return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\r\n        }\r\n        return '+7 ' + cleaned;\r\n    };\r\n    const handlePhoneChange = (e) => {\r\n        if (e.target.value) {\r\n            setPhone('')\r\n            setPhoneChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setPhone('')\r\n            setPhoneChange('')\r\n        }\r\n        const value = e.target.value;\r\n        if (value.length < 1) {\r\n            setPhoneChange('')\r\n        } else {\r\n            const formattedValue = formatPhoneNumber(value);\r\n            setPhoneChange(formattedValue);\r\n        }\r\n    }\r\n\r\n    const additional_Contact = (e) => {\r\n        if (e.target.value) {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change('')\r\n        }\r\n    }\r\n\r\n    const distribution_Group = (e) => {\r\n        if (e.target.value) {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change('')\r\n        }\r\n    }\r\n\r\n    const activity_Profile = (e) => {\r\n        if (e.target.value) {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change('')\r\n        }\r\n    }\r\n\r\n    const cityPlace = (e) => {\r\n        if (e.target.value) {\r\n            setCityPlace('')\r\n            setCityPlace_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setCityPlace('')\r\n            setCityPlace_Change('')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setNameValue(e.target.value);\r\n    }\r\n\r\n    const handleSurnameChange = (e) => {\r\n        setSurnameValue(e.target.value)\r\n    }\r\n\r\n\r\n    // изменение данных пользователя\r\n    const handleClick = async (e) => {\r\n\r\n        const name = user.user_name\r\n        const part = name.split(' ')\r\n        e.preventDefault()\r\n        const newInfo = {\r\n            departmentId: modalDep.current.value || user.department_id,\r\n            email: (email ? email : emailChange.toUpperCase()),\r\n            username: nameValue + ' ' + surnameValue,\r\n            _id: user.id,\r\n            isAdmin: user.isadmin,\r\n            see_child: user.see_child,\r\n            status: user.status,\r\n            main_department: user.main_department,\r\n            phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n            additional_contact: additionalContact.current.value,\r\n            distribution_group: distributionGroup.current.value,\r\n            activity_profile: activityProfile.current.value,\r\n            city_id: citiesId,\r\n            cityPlaceChange:modalCityPlace.current.value\r\n        }\r\n\r\n        if (localUse._id !== username.username) {\r\n            const newInfo2 = {\r\n                departmentId: modalDep.current.value || user.department_id,\r\n                email: (email ? email : emailChange.toUpperCase()),\r\n                username: nameValue + ' ' + surnameValue,\r\n                phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n                additional_contact: additionalContact.current.value,\r\n                distribution_group: distributionGroup.current.value,\r\n                activity_profile: activityProfile.current.value,\r\n                city_id: citiesId,\r\n                _id: user.id,\r\n                cityPlaceChange:modalCityPlace.current.value\r\n            }\r\n\r\n            await axios.put('/api/user/', newInfo2)\r\n            window.location.reload()\r\n        } else {\r\n            await axios.put('/api/user/', newInfo)\r\n            delete newInfo.phone_number\r\n            delete newInfo.additional_contact\r\n            delete newInfo.distribution_group\r\n            delete newInfo.activity_profile\r\n            delete newInfo.city_id\r\n            delete newInfo.cityPlaceChange\r\n            localStorage.setItem('user', JSON.stringify({...newInfo}))\r\n            setModalActive(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedValue(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n            <div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default Editing;"]},"metadata":{},"sourceType":"module"}