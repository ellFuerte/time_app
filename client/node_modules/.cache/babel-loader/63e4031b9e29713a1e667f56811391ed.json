{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n\n        if (res.data && res.data.length > 0) {\n          const idToOpen = 21; // Замените на ваш ID, который нужно открыть\n\n          const updatedData = updateTreeNodes(res.data, idToOpen);\n          setDep(updatedData);\n        } else {\n          setDep([]);\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n        setDep([]); // Обработка ошибки, если не удалось загрузить данные\n      }\n    };\n\n    getDeps();\n  }, []); // Функция для обновления узлов дерева и раскрытия до заданного ID\n\n  const updateTreeNodes = (nodes, idToOpen) => {\n    return nodes.map(node => {\n      if (node.department_tree_to_json.id === idToOpen) {\n        return { ...node,\n          defaultCollapsed: false\n        };\n      } else if (node.department_tree_to_json.Subclasses) {\n        return { ...node,\n          department_tree_to_json: { ...node.department_tree_to_json,\n            Subclasses: updateTreeNodes(node.department_tree_to_json.Subclasses, idToOpen)\n          }\n        };\n      } else {\n        return node;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => /*#__PURE__*/_jsxDEV(TreeView, {\n            nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this),\n            defaultCollapsed: node.defaultCollapsed,\n            children: node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map((departments, index) => /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/department/${departments.id}`,\n                className: \"depsUser\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"node\",\n                  children: departments.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 49\n              }, this),\n              defaultCollapsed: true,\n              children: !!departments.Subclasses && departments.Subclasses.map((departments1, idx) => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments1.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments1.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 57\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments1.Subclasses && departments1.Subclasses.map((departments2, idx2) => /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments2.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      paddingBottom: '8px'\n                    },\n                    children: departments2.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 61\n                  }, this)\n                }, departments2.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 57\n                }, this))\n              }, departments1.id + '|' + idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 49\n              }, this))\n            }, departments.id + '|' + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this))\n          }, node.department_tree_to_json.id + '|' + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u041C\\u0435\\u043D\\u044E \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043F\\u0443\\u0441\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","getDeps","res","get","data","length","idToOpen","updatedData","updateTreeNodes","error","console","nodes","map","node","department_tree_to_json","id","defaultCollapsed","Subclasses","i","Name","departments","index","departments1","idx","departments2","idx2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                if (res.data && res.data.length > 0) {\r\n                    const idToOpen = 21; // Замените на ваш ID, который нужно открыть\r\n                    const updatedData = updateTreeNodes(res.data, idToOpen);\r\n                    setDep(updatedData);\r\n                } else {\r\n                    setDep([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке данных:', error);\r\n                setDep([]); // Обработка ошибки, если не удалось загрузить данные\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    // Функция для обновления узлов дерева и раскрытия до заданного ID\r\n    const updateTreeNodes = (nodes, idToOpen) => {\r\n        return nodes.map(node => {\r\n            if (node.department_tree_to_json.id === idToOpen) {\r\n                return {\r\n                    ...node,\r\n                    defaultCollapsed: false\r\n                };\r\n            } else if (node.department_tree_to_json.Subclasses) {\r\n                return {\r\n                    ...node,\r\n                    department_tree_to_json: {\r\n                        ...node.department_tree_to_json,\r\n                        Subclasses: updateTreeNodes(node.department_tree_to_json.Subclasses, idToOpen)\r\n                    }\r\n                };\r\n            } else {\r\n                return node;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.id + '|' + i}\r\n                                    nodeLabel={(\r\n                                        <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )}\r\n                                    defaultCollapsed={node.defaultCollapsed}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses && node.department_tree_to_json.Subclasses.map((departments, index) => (\r\n                                        <TreeView\r\n                                            key={departments.id + '|' + index}\r\n                                            nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser'>\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={true}\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1, idx) => (\r\n                                                <TreeView\r\n                                                    key={departments1.id + '|' + idx}\r\n                                                    nodeLabel={(\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser'>\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    defaultCollapsed={true}\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2, idx2) => (\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>Меню отсутствует или пусто</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}