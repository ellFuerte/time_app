{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const [deps, setDeps] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const [currentPageVacancies, setCurrentPageVacancies] = useState(1);\n  const [postsPerPageVacancies] = useState(5);\n  const [vacancies, setVacancies] = useState([]);\n  const [find, setFind] = useState([]);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex);\n  const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies;\n  const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies;\n  const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies);\n  /*const department = useRef()*/\n\n\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n      const getVacancies = await axios.get('/api/Vacations/');\n      const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        const filteredVacancies = sortedVacancies.filter(item => item.team_id === departId.departId);\n        console.log(filteredVacancies);\n        setVacancies(filteredVacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const handleClick = (name, grade, id) => {\n    setVacanciesId(id);\n    console.log('id=', vacanciesId);\n    setSelectedVacanciesName(name);\n    setInputValue(name); // Установка начального значения для name\n\n    setSelectedVacanciesGrade(grade);\n    setInputValueGrade(grade); // Установка начального значения для grade\n\n    setModalVacations(true);\n  }; // Обработчик изменения значения для поля ввода с именем\n\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setSearchValue('');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    if (searchValue.length === 0 && !startDate && !endDate) {\n      // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\n      setFilteredData([]);\n      setFind([]);\n      setIsOpen(true);\n      return;\n    }\n\n    if (searchValue.length !== 0) {\n      // Если есть поисковой запрос, выполняем фильтрацию по нему\n      setFind(vacancies.filter(vac => {\n        return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n      }));\n      setFilteredData([]);\n      setIsOpen(false);\n    } else {\n      // Если нет поискового запроса, выполняем фильтрацию по дате\n      setFilteredData(vacancies.filter(item => {\n        const itemDate = new Date(item.create_date);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        return (!start || itemDate >= start) && (!end || itemDate <= end);\n      }));\n      setFind([]);\n      setIsOpen(false);\n    }\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      name: inputValue,\n      grade: inputValueGrade\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsMain\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            onChange: e => setSearchValue(e.target.value),\n            ref: searchRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCombinedFilter,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: reset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), isOpen ? currentlyPosts.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade, vac.id),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          departId: departId.departId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentlySearch.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsContainer\",\n          onClick: () => handleClick(vac.name, vac.grade),\n          children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n            vac: vac,\n            departId: departId.departId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 60\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: isOpen ? /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: vacancies.length,\n        paginate: paginate,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPageVacancies,\n        totalPosts: find.length,\n        paginate: paginateVacancies,\n        currentPage: currentPageVacancies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ModalInputVacancies\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeData,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"QpENpugF8KdVqOC0Ue24V7T1MPg=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesView","departId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueGrade","setInputValueGrade","vacanciesId","setVacanciesId","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesGrade","setSelectedVacanciesGrade","deps","setDeps","searchValue","setSearchValue","isOpen","setIsOpen","currentPage","setCurrentPage","postsPerPage","currentPageVacancies","setCurrentPageVacancies","postsPerPageVacancies","vacancies","setVacancies","find","setFind","lastPostIndex","firstPostIndex","currentlyPosts","slice","lastPostIndexVacancies","firstPostIndexVacancies","currentlySearch","paginate","pageNumber","paginateVacancies","pageNumberVacancies","searchRef","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","res","get","data","getVacancies","sortedVacancies","sort","a","b","create_date","localeCompare","filteredVacancies","filter","item","team_id","console","log","handleClick","name","grade","id","handleNameInputChange","e","target","value","handleGradeInputChange","reset","current","handleStartDateChange","handleEndDateChange","handleCombinedFilter","length","vac","toLowerCase","includes","itemDate","Date","start","end","ChangeData","put","map","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(5)\r\n\r\n    const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n    const [postsPerPageVacancies] = useState(5)\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [find, setFind] = useState([])\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex)\r\n\r\n    const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies\r\n    const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies\r\n    const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies)\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n    const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies)\r\n\r\n\r\n    /*const department = useRef()*/\r\n\r\n    const searchRef = useRef()\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const VacanciesView = async () => {\r\n            const res = await axios.get('/api/departments/')\r\n            setDeps(res.data)\r\n\r\n            const getVacancies = await axios.get('/api/Vacations/')\r\n\r\n            const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                const filteredVacancies = sortedVacancies.filter(item => item.team_id === departId.departId);\r\n                console.log(filteredVacancies)\r\n                setVacancies(filteredVacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const handleClick = (name, grade,id) => {\r\n        setVacanciesId(id)\r\n        console.log('id=',vacanciesId)\r\n        setSelectedVacanciesName(name);\r\n        setInputValue(name); // Установка начального значения для name\r\n        setSelectedVacanciesGrade(grade);\r\n        setInputValueGrade(grade); // Установка начального значения для grade\r\n        setModalVacations(true);\r\n    };\r\n\r\n    // Обработчик изменения значения для поля ввода с именем\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setSearchValue('')\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n            setFilteredData([]);\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n            setFind([]);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n\r\n    const ChangeData ={\r\n    name:inputValue,\r\n    grade:inputValueGrade\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n                    <div className=\"VacationsMain\">\r\n\r\n                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />\r\n{/*                            <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>*/}\r\n\r\n\r\n                    </div>\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n                {isOpen ? (\r\n                    currentlyPosts.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id} onClick={() => handleClick(vac.name, vac.grade,vac.id)}>\r\n                            <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>\r\n                        {currentlySearch.map((vac, id) => (<div className='VacationsContainer' key={id} onClick={() => handleClick(vac.name, vac.grade)}>\r\n                                <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}\r\n                         onClick={() => handleClick(vac.name, vac.grade)}>\r\n                        <VacanciesItem vac={vac}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n                <div style={{textAlign:'center'}}>\r\n                {isOpen ?\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={vacancies.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n                    :\r\n\r\n                    <Pagination postsPerPage={postsPerPageVacancies} totalPosts={find.length}\r\n                                paginate={paginateVacancies}\r\n                                currentPage={currentPageVacancies}/>}\r\n                </div>\r\n\r\n\r\n            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input className=\"ModalInputVacancies\"\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\">\r\n                    Удалить вакансию\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}