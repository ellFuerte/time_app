{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport TreeView from 'react-treeview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const toggleNode = nodeId => {\n    if (expandedNodes.includes(nodeId)) {\n      setExpandedNodes(expandedNodes.filter(id => id !== nodeId));\n    } else {\n      setExpandedNodes([...expandedNodes, nodeId]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              collapsed: !expandedNodes.includes(node.department_tree_to_json.id),\n              onClick: () => toggleNode(node.department_tree_to_json.id),\n              children: node.department_tree_to_json.Subclasses.map(department => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${department.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: department.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this),\n                collapsed: !expandedNodes.includes(department.id),\n                onClick: () => toggleNode(department.id),\n                children: department.Subclasses.map(department1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${department1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: department1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 57\n                  }, this),\n                  collapsed: !expandedNodes.includes(department1.id),\n                  onClick: () => toggleNode(department1.id),\n                  children: department1.Subclasses.map(department2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${department2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: department2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 61\n                    }, this)\n                  }, department2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 57\n                  }, this))\n                }, department1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this))\n              }, department.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"ZpimOrPpLGNUPieBCqJXMYhomOs=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","useEffect","Link","axios","TreeView","Sidebar","dep","setDep","expandedNodes","setExpandedNodes","getDeps","res","get","data","toggleNode","nodeId","includes","filter","id","map","node","i","label","department_tree_to_json","Name","Subclasses","department","department1","department2","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TreeView from 'react-treeview';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [expandedNodes, setExpandedNodes] = useState([]);\r\n\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            setDep(res.data);\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const toggleNode = nodeId => {\r\n        if (expandedNodes.includes(nodeId)) {\r\n            setExpandedNodes(expandedNodes.filter(id => id !== nodeId));\r\n        } else {\r\n            setExpandedNodes([...expandedNodes, nodeId]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebarWrapper'>\r\n                <div className='tree'>\r\n                    <div className='treeWrapper'>\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                    <span className='node'>{node.department_tree_to_json.Name}</span>\r\n                                </Link>\r\n                            );\r\n\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    collapsed={!expandedNodes.includes(node.department_tree_to_json.id)}\r\n                                    onClick={() => toggleNode(node.department_tree_to_json.id)}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map(department => (\r\n                                        <TreeView\r\n                                            key={department.id}\r\n                                            nodeLabel={\r\n                                                <Link to={`/department/${department.id}`} className='depsUser'>\r\n                                                    <span className='node'>{department.Name}</span>\r\n                                                </Link>\r\n                                            }\r\n                                            collapsed={!expandedNodes.includes(department.id)}\r\n                                            onClick={() => toggleNode(department.id)}\r\n                                        >\r\n                                            {department.Subclasses.map(department1 => (\r\n                                                <TreeView\r\n                                                    key={department1.id}\r\n                                                    nodeLabel={\r\n                                                        <Link to={`/department/${department1.id}`} className='depsUser'>\r\n                                                            <span className='node'>{department1.Name}</span>\r\n                                                        </Link>\r\n                                                    }\r\n                                                    collapsed={!expandedNodes.includes(department1.id)}\r\n                                                    onClick={() => toggleNode(department1.id)}\r\n                                                >\r\n                                                    {department1.Subclasses.map(department2 => (\r\n                                                        <Link to={`/department/${department2.id}`} className='depsUser' key={department2.id}>\r\n                                                            <div style={{ paddingBottom: '8px' }}>{department2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}