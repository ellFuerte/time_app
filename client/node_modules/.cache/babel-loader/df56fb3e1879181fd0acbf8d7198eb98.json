{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  initialOpenSubclassId\n}) => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []);\n  const [openNodes, setOpenNodes] = useState([]);\n  useEffect(() => {\n    if (initialOpenSubclassId !== undefined) {\n      setOpenNodes(getOpenNodes(initialOpenSubclassId));\n    }\n  }, [initialOpenSubclassId]);\n\n  const getOpenNodes = id => {\n    const openNodesArray = [];\n\n    const findNode = nodes => {\n      nodes.forEach(node => {\n        openNodesArray.push(node.id);\n\n        if (node.Subclasses) {\n          findNode(node.Subclasses);\n        }\n      });\n    };\n\n    dep.forEach(node => {\n      if (node.department_tree_to_json.id === id) {\n        openNodesArray.push(node.department_tree_to_json.id);\n        findNode(node.department_tree_to_json.Subclasses);\n      }\n    });\n    return openNodesArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              collapsed: !openNodes.includes(node.department_tree_to_json.id),\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 53\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: false,\n                collapsed: !openNodes.includes(departments.id),\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 61\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: false,\n                  collapsed: !openNodes.includes(departments1.id),\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"wtW8kfCZPpq2jTnk94kXBxn2CLA=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useEffect","useState","Link","axios","TreeView","Sidebar","initialOpenSubclassId","dep","setDep","getDeps","res","get","data","openNodes","setOpenNodes","undefined","getOpenNodes","id","openNodesArray","findNode","nodes","forEach","node","push","Subclasses","department_tree_to_json","map","i","label","Name","includes","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = ({ initialOpenSubclassId }) => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            setDep(res.data);\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const [openNodes, setOpenNodes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (initialOpenSubclassId !== undefined) {\r\n            setOpenNodes(getOpenNodes(initialOpenSubclassId));\r\n        }\r\n    }, [initialOpenSubclassId]);\r\n\r\n    const getOpenNodes = (id) => {\r\n        const openNodesArray = [];\r\n\r\n        const findNode = (nodes) => {\r\n            nodes.forEach((node) => {\r\n                openNodesArray.push(node.id);\r\n                if (node.Subclasses) {\r\n                    findNode(node.Subclasses);\r\n                }\r\n            });\r\n        };\r\n\r\n        dep.forEach((node) => {\r\n            if (node.department_tree_to_json.id === id) {\r\n                openNodesArray.push(node.department_tree_to_json.id);\r\n                findNode(node.department_tree_to_json.Subclasses);\r\n            }\r\n        });\r\n\r\n        return openNodesArray;\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <Link to={`/department/${node.department_tree_to_json.id}`} className=\"level1\">\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </Link>\r\n                            );\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    defaultCollapsed={false}\r\n                                    collapsed={!openNodes.includes(node.department_tree_to_json.id)}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            nodeLabel={\r\n                                                <Link\r\n                                                    to={`/department/${departments.id}`}\r\n                                                    className=\"depsUser\"\r\n                                                    key={departments.id}\r\n                                                >\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            }\r\n                                            key={departments.id}\r\n                                            defaultCollapsed={false}\r\n                                            collapsed={!openNodes.includes(departments.id)}\r\n                                        >\r\n                                            {!!departments.Subclasses &&\r\n                                            departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    nodeLabel={\r\n                                                        <Link\r\n                                                            to={`/department/${departments1.id}`}\r\n                                                            className=\"depsUser\"\r\n                                                            key={departments1.id}\r\n                                                        >\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    }\r\n                                                    key={departments1.id}\r\n                                                    defaultCollapsed={false}\r\n                                                    collapsed={!openNodes.includes(departments1.id)}\r\n                                                >\r\n                                                    {!!departments1.Subclasses &&\r\n                                                    departments1.Subclasses.map((departments2) => (\r\n                                                        <Link\r\n                                                            to={`/department/${departments2.id}`}\r\n                                                            className=\"depsUser\"\r\n                                                            key={departments2.id}\r\n                                                        >\r\n                                                            <div style={{ paddingBottom: '8px' }}>\r\n                                                                {departments2.Name}\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}