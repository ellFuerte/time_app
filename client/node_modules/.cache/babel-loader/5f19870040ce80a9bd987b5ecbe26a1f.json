{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [vacanciesName, setVacanciesName] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [pressedStatus, setPressedStatus] = useState({});\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n\n      console.log('vac=', vacancies);\n    };\n\n    VacanciesView();\n    filterVacancies();\n  }, [isOpen, departId, pressedCompany, pressedStatus, selectedDepartment]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n    setFilterSelect([]);\n    setVacanciesName([]);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleSelectChange = e => {\n    const selectedDepartmentId = parseInt(e.target.value);\n    const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\n    setFilterSelect(filter);\n    setIsOpen(false);\n    setFilteredData([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 1:\n        return 'Reserve';\n      //  Резерв Белый цвет\n\n      case 2:\n        return 'Selection';\n      // Подбор желтый цвет\n\n      case 3:\n        return 'Securely';\n      // Обеспеченно зелёный цвет\n\n      case 4:\n        return 'Liquidated';\n      // Ликвидированно белый прозрачный цвет\n\n      case 5:\n        return 'Finalist';\n      //  Финалист красный цвет\n    }\n  };\n\n  const handleClickFilter = (filterType, name) => {\n    if (filterType === 'company') {\n      setPressedCompany(prevState => ({ ...prevState,\n        [name]: !prevState[name]\n      }));\n    } else if (filterType === 'status') {\n      setPressedStatus(prevState => ({ ...prevState,\n        [name]: !prevState[name]\n      }));\n    }\n\n    filterVacancies();\n  };\n\n  const handleDepartmentChange = event => {\n    const departmentId = event.target.value;\n    setSelectedDepartment(departmentId);\n    filterVacancies();\n  };\n\n  const filterVacancies = () => {\n    const activeStatuses = Object.keys(pressedStatus).filter(key => pressedStatus[key]);\n    const activeCompanies = Object.keys(pressedCompany).filter(key => pressedCompany[key]);\n    const filtered = vacancies.filter(department => {\n      if (selectedDepartment && department.department_id !== selectedDepartment) {\n        return false;\n      }\n\n      const departmentVacancies = department.vacancies.filter(vacancy => {\n        const statusMatch = activeStatuses.length === 0 || activeStatuses.includes(vacancy.status_name);\n        const companyMatch = activeCompanies.length === 0 || activeCompanies.includes(vacancy.company_name);\n        return statusMatch && companyMatch;\n      });\n      return departmentVacancies.length > 0;\n    });\n    setFilteredVacancies(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                onChange: handleDepartmentChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0435\\u043F\\u0430\\u0440\\u0442\\u0430\\u043C\\u0435\\u043D\\u0442\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.department_id,\n                  children: dep.department\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filtersButton\",\n                  onClick: () => handleClickFilter('company', company.name),\n                  style: {\n                    boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedCompany[company.name] ? 'gray' : '#1775ee'\n                  },\n                  children: company.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'filtersButton' + getColorByStatusId(status.id),\n                  onClick: () => handleClickFilter('status', status.name),\n                  style: {\n                    boxShadow: pressedStatus[status.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedStatus[status.name] ? 'gray' : '',\n                    opacity: pressedStatus[status.name] ? '1' : ''\n                  },\n                  children: status.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), filteredVacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 41\n            }, this)\n          }, vac.department_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 37\n          }, this)), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 41\n          }, this)) : '', vacanciesName.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 45\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"vJW3Qw5ZgGjOZopmP/FA7y1jtQg=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","filterSelect","setFilterSelect","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","vacanciesName","setVacanciesName","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","pressedStatus","setPressedStatus","selectedDepartment","setSelectedDepartment","filteredVacancies","setFilteredVacancies","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","console","log","filterVacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","filter","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleSelectChange","selectedDepartmentId","parseInt","elm","department_id","getColorByStatusId","statusId","Number","handleClickFilter","filterType","name","prevState","handleDepartmentChange","event","activeStatuses","Object","keys","key","activeCompanies","filtered","departmentVacancies","statusMatch","length","includes","status_name","companyMatch","company_name","window","location","href","dep","index","id","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const modalDep = useRef()\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [vacanciesName, setVacanciesName] = useState([]);\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [pressedStatus, setPressedStatus] = useState({});\r\n    const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n    const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n\r\n            }\r\n            console.log('vac=',vacancies)\r\n        }\r\n\r\n        VacanciesView()\r\n        filterVacancies();\r\n    }, [isOpen, departId,pressedCompany, pressedStatus, selectedDepartment])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n        setFilterSelect([])\r\n        setVacanciesName([])\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSelectChange = (e) => {\r\n        const selectedDepartmentId = parseInt(e.target.value);\r\n        const filter = vacancies.filter(elm=>elm.department_id===selectedDepartmentId)\r\n        setFilterSelect(filter)\r\n        setIsOpen(false)\r\n        setFilteredData([])\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n\r\n        switch (Number(statusId)) {\r\n            case 1:\r\n                return 'Reserve' //  Резерв Белый цвет\r\n            case 2:\r\n                return 'Selection' // Подбор желтый цвет\r\n            case 3:\r\n                return 'Securely' // Обеспеченно зелёный цвет\r\n            case 4:\r\n                return 'Liquidated' // Ликвидированно белый прозрачный цвет\r\n            case 5:\r\n                return 'Finalist' //  Финалист красный цвет\r\n        }\r\n    }\r\n    const handleClickFilter = (filterType, name) => {\r\n        if (filterType === 'company') {\r\n            setPressedCompany(prevState => ({\r\n                ...prevState,\r\n                [name]: !prevState[name],\r\n            }));\r\n        } else if (filterType === 'status') {\r\n            setPressedStatus(prevState => ({\r\n                ...prevState,\r\n                [name]: !prevState[name],\r\n            }));\r\n        }\r\n        filterVacancies();\r\n    };\r\n\r\n    const handleDepartmentChange = (event) => {\r\n        const departmentId = event.target.value;\r\n        setSelectedDepartment(departmentId);\r\n        filterVacancies();\r\n    };\r\n\r\n    const filterVacancies = () => {\r\n        const activeStatuses = Object.keys(pressedStatus).filter(key => pressedStatus[key]);\r\n        const activeCompanies = Object.keys(pressedCompany).filter(key => pressedCompany[key]);\r\n\r\n        const filtered = vacancies.filter(department => {\r\n            if (selectedDepartment && department.department_id !== selectedDepartment) {\r\n                return false;\r\n            }\r\n\r\n            const departmentVacancies = department.vacancies.filter(vacancy => {\r\n                const statusMatch = activeStatuses.length === 0 || activeStatuses.includes(vacancy.status_name);\r\n                const companyMatch = activeCompanies.length === 0 || activeCompanies.includes(vacancy.company_name);\r\n                return statusMatch && companyMatch;\r\n            });\r\n\r\n            return departmentVacancies.length > 0;\r\n        });\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select ref={modalDep} className=\"ModalInputUpdateSelect\" onChange={handleDepartmentChange}>\r\n                                        <option value=\"\">Выберите департамент</option>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option key={index} value={dep.department_id}>\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: pressedCompany[company.name] ? 'gray' : '#1775ee'\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                    <br/>\r\n\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: pressedStatus[status.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: pressedStatus[status.name] ? 'gray' : '',\r\n                                                    opacity: pressedStatus[status.name] ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                {filteredVacancies.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.department_id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    vacanciesName.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n\r\n{/*                                {\r\n                                    filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }*/}\r\n\r\n\r\n{/*                                {\r\n                                    !isOpen ?\r\n                                        filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }*/}\r\n\r\n{/*                                {\r\n                                    vacanciesName.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                                }*/}\r\n\r\n\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}