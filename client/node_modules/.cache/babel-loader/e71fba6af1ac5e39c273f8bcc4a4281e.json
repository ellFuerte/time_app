{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Staff\\\\Staff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Employee from '../Employee/Employee';\nimport './Staff.css';\nimport { useParams } from 'react-router-dom';\nimport Modal from '../Templates/Modal/Modal';\nimport Reports from \"../../pages/Reports/Reports\";\nimport RepostsInfo from \"../ReportsInfo/RepostsInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Staff() {\n  _s();\n\n  var _localUser$checkedDep5;\n\n  console.log(window.location.href);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState([]);\n  const [getUser, setGetUser] = useState([]);\n  const [deps, setDeps] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isJob, setIsJob] = useState(true);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalMain, setModalMain] = useState(false);\n  const changedArr = [];\n  const [isModalFetching, setIsModalFetching] = useState(false);\n  const departId = useParams().username;\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const depsId = useParams().username;\n\n  for (let i = 0; i < ((_localUser$checkedDep = localUser.checkedDeps) === null || _localUser$checkedDep === void 0 ? void 0 : _localUser$checkedDep.length); i++) {\n    var _localUser$checkedDep;\n\n    changedArr.push(localUser.checkedDeps[i]);\n  } // ставит галочки в модалке\n\n\n  function addChecked(deps) {\n    for (let i = 0; i < deps.length; i++) {\n      for (let j = 0; j < ((_localUser$checkedDep2 = localUser.checkedDeps) === null || _localUser$checkedDep2 === void 0 ? void 0 : _localUser$checkedDep2.length); j++) {\n        var _localUser$checkedDep2;\n\n        if (deps[i]._id === localUser.checkedDeps[j]) {\n          deps[i].checked = true;\n        }\n      }\n    }\n  } // фильтр нужных департаментов\n\n\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId);\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id));\n  filterDeps.push(...currentDep); // фильтр нужных людей\n\n  const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId));\n  const usersFilterDeps = users.filter(user => {\n    var _localUser$checkedDep3;\n\n    return (_localUser$checkedDep3 = localUser.checkedDeps) === null || _localUser$checkedDep3 === void 0 ? void 0 : _localUser$checkedDep3.find(f => f === user.departmentId);\n  });\n  const depsFilterDeps = deps.filter(dep => {\n    var _localUser$checkedDep4;\n\n    return (_localUser$checkedDep4 = localUser.checkedDeps) === null || _localUser$checkedDep4 === void 0 ? void 0 : _localUser$checkedDep4.find(f => f === dep._id);\n  });\n  const isLockDeps = localUser.checkedDeps !== null && ((_localUser$checkedDep5 = localUser.checkedDeps) === null || _localUser$checkedDep5 === void 0 ? void 0 : _localUser$checkedDep5.length) > 0;\n  let addChildrenArr = [];\n  useEffect(() => {\n    // получение всех пользователей\n    const fetchUsers = async () => {\n      setIsFetching(true);\n      const res = await axios.get('/api/user');\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(res.data);\n      setUsers(filterUsers);\n      setIsFetching(false);\n    }; // получение данных о себе\n\n\n    const fetchUser = async () => {\n      const res = await axios.get('/api/user/' + localUser._id);\n      setUser(res.data);\n      setIsFetching(false);\n    }; // получение и фильтр департаментов\n\n\n    const getDeps = async () => {\n      setIsModalFetching(true);\n      const res = await axios.get('/api/departments/');\n      addChecked(res.data);\n\n      for (let i = 0; i < res.data.length - 1; i++) {\n        for (let j = i + 1; j < res.data.length; j++) {\n          if (res.data.find(k => k === res.data[j].dep_id && k !== res.data[i].dep_id)) {\n            if (res.data[j].margin) {\n              res.data[j].margin += 10;\n            } else {\n              res.data[j].margin = 10;\n            }\n          }\n        }\n      }\n\n      let newArr = res.data.filter(d => d.dep_id !== 7);\n      newArr.push(res.data[6]);\n      setDeps(newArr);\n      setIsModalFetching(false);\n    };\n\n    const get_users_by_users = async () => {\n      setIsFetching(true);\n      const getUsers = {\n        id: localUser._id\n      };\n      const res = await axios.post('/api/get_users_by_users', getUsers);\n      const users_users = res.data[0]['get_users_by_users'];\n      users_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n      let filterUsers = filterUsersFoo(users_users);\n      setUsers(filterUsers);\n      console.log(\"get_users_by_users=\", users_users);\n      setIsFetching(false);\n      /*setIsOpen(true)*/\n    };\n\n    getDeps();\n    fetchUser();\n    setIsOpen(false);\n    /*    console.log(\"user=\",user)\r\n        console.log('depsId=',depsId)\r\n        console.log('departId=',departId)*/\n\n    if (user.main_department === departId) {\n      setUsers([]);\n      get_users_by_users();\n    } else {\n      setGetUser([]);\n      fetchUsers();\n    }\n  }, [departId]); // фильтр пользователей по статусу\n\n  function filterUsersFoo(users) {\n    return users.filter(user => user.status === 1).concat(users.filter(user => user.status === 2)).concat(users.filter(user => user.status === 3)).concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4)).concat(users.filter(user => user.status === 4));\n  } // добавляем/удаляем департамент в модалке\n\n\n  const handlePush = e => {\n    if (e.target.checked) {\n      changedArr.push(e.target.value);\n    } else {\n      const index = changedArr.indexOf(e.target.value);\n      changedArr.splice(index, 1);\n      delete e.target.checked;\n    }\n  }; // добавление дочерних\n\n\n  const handleAddChildren = e => {\n    global.chek = e.target.checked;\n  }; // обновляем данные модального окна\n\n\n  const handleModalClick = async e => {\n    e.preventDefault();\n\n    if (global.chek === true) {\n      const info = {\n        userId: localUser._id,\n        deps: depsId,\n        see_child: true\n      };\n      const oldItems = JSON.parse(localStorage.getItem('user'));\n      const newInfo = {\n        _id: oldItems._id,\n        isAdmin: localUser.isAdmin,\n        username: localUser.username,\n        email: localUser.email,\n        departmentId: localUser.departmentId,\n        main_department: departId,\n        status: oldItems.status\n      };\n      get_users_by_dep(depsId);\n      localStorage.clear();\n      localStorage.setItem('user', JSON.stringify({ ...newInfo\n      }));\n      await axios.post('/api/child/', info);\n      setIsOpen(true);\n      setModalMain(false);\n    } else {\n      const oldItems = JSON.parse(localStorage.getItem('user'));\n      const newInfo = {\n        _id: oldItems._id,\n        isAdmin: localUser.isAdmin,\n        username: localUser.username,\n        email: localUser.email,\n        departmentId: localUser.departmentId,\n        main_department: departId,\n        status: oldItems.status\n      };\n      const info = {\n        userId: localUser._id,\n        see_child: false,\n        deps: depsId\n      };\n      setIsOpen(false);\n      setModalMain(false);\n      localStorage.clear();\n      localStorage.setItem('user', JSON.stringify({ ...newInfo\n      }));\n      await axios.post('/api/child/', info);\n      window.location.reload();\n    }\n  };\n  /*  let newInfo\r\n      if (departId) {\r\n      addChildrenArr = addChildrenArr.map(i => i.id)\r\n      newInfo = {\r\n        userId: user.id,\r\n        checkedDeps: [departId, ...addChildrenArr]\r\n      }\r\n    } else {\r\n      newInfo = {\r\n        userId: user._id,\r\n        checkedDeps: changedArr\r\n      }\r\n    }\r\n      try {\r\n      await axios.put('/api/user/' + localUser._id, newInfo)\r\n      if (user._id === localUser._id) {\r\n        localStorage.setItem('user', JSON.stringify({...user, ...newInfo}))\r\n      }\r\n      window.location.reload()\r\n    } catch (error) {\r\n      console.log(error);\r\n      }\r\n  }*/\n  // функция get_users_by_dep\n\n\n  const get_users_by_dep = async () => {\n    if (isJob) {\n      const info = {\n        depsId: depsId\n      };\n      const res = await axios.post('/api/get_users_by_dep/', info);\n      const dep_users = res.data[0]['get_users_by_dep'];\n\n      if (dep_users === null) {} else {\n        console.log(\"get_users_by_dep=\", dep_users);\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name));\n        let filterUsers = filterUsersFoo(dep_users);\n        setUsers(filterUsers);\n        setIsOpen(true);\n        setIsJob(!isJob);\n      }\n    }\n  };\n  /*\r\n    if(isJob){\r\n      setIsOpen(true)}else {\r\n      setIsOpen(false)}\r\n    setIsJob(!isJob)\r\n  }\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff\",\n    children: [departId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: get_users_by_dep,\n        className: \"btnStaff\",\n        style: {\n          width: '155px'\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = `/department/${departId}`,\n        className: \"btnStaff\",\n        children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 127\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalMain(true),\n        className: \"btnStaff\",\n        style: {\n          float: 'right'\n        },\n        children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0433\\u043B\\u0430\\u0432\\u043D\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employeeWrapper\",\n      children: [isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isFetching\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }, this) : users.length === 0 && getUser.length !== 0 ? '' : !!departId ? !isOpen ? users.filter(user => user.department_id === departId).map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 99\n      }, this)) : usersFilter.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 61\n      }, this)) : isLockDeps ? usersFilterDeps.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 47\n      }, this)) : users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 37\n      }, this)), !!isOpen ? users.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 40\n      }, this)) : \"\", !!getUser ? getUser.map((user, id) => /*#__PURE__*/_jsxDEV(Employee, {\n        user: user\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 42\n      }, this)) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [isModalFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 14\n        }, this) : deps.map((dep, id) => /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: dep.department_name,\n          style: {\n            paddingLeft: `${dep.margin}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: dep.id,\n            id: dep.id,\n            name: dep.department_name,\n            onChange: handlePush,\n            checked: dep.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), dep.department_name]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalMain,\n      setActive: setModalMain,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalLoginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleAddChildren\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0447\\u0435\\u0440\\u043D\\u0438\\u0435\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          onClick: handleModalClick,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Staff, \"joFZx2B/6EHt8lCNHk2MoM7bBfU=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Staff/Staff.jsx"],"names":["useEffect","useState","axios","Employee","useParams","Modal","Reports","RepostsInfo","Staff","console","log","window","location","href","users","setUsers","user","setUser","getUser","setGetUser","deps","setDeps","isOpen","setIsOpen","isFetching","setIsFetching","isJob","setIsJob","modalActive","setModalActive","modalMain","setModalMain","changedArr","isModalFetching","setIsModalFetching","departId","username","localUser","JSON","parse","localStorage","getItem","depsId","i","checkedDeps","length","push","addChecked","j","_id","checked","currentDep","filter","dep","departmentId","filterDeps","find","dep_id","usersFilter","f","usersFilterDeps","depsFilterDeps","isLockDeps","addChildrenArr","fetchUsers","res","get","data","sort","a","b","user_name","localeCompare","filterUsers","filterUsersFoo","fetchUser","getDeps","k","margin","newArr","d","get_users_by_users","getUsers","id","post","users_users","main_department","status","concat","handlePush","e","target","value","index","indexOf","splice","handleAddChildren","global","chek","handleModalClick","preventDefault","info","userId","see_child","oldItems","newInfo","isAdmin","email","get_users_by_dep","clear","setItem","stringify","reload","dep_users","width","float","department_id","map","department_name","paddingLeft"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport Reports from \"../../pages/Reports/Reports\";\r\nimport RepostsInfo from \"../ReportsInfo/RepostsInfo\";\r\nexport default function Staff() {\r\n\r\nconsole.log(window.location.href)\r\n\r\n  const [users, setUsers] = useState([])\r\n  const [user, setUser] = useState([])\r\n  const [getUser, setGetUser] = useState([])\r\n  const [deps, setDeps] = useState([])\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [isJob, setIsJob] = useState(true)\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalMain, setModalMain] = useState(false)\r\n  const changedArr = []\r\n  const [isModalFetching, setIsModalFetching] = useState(false)\r\n  const departId = useParams().username\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n  const depsId = useParams().username\r\n\r\n  for (let i = 0; i < localUser.checkedDeps?.length; i++) {\r\n    changedArr.push(localUser.checkedDeps[i])\r\n\r\n  }\r\n\r\n  // ставит галочки в модалке\r\n  function addChecked(deps) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      for (let j = 0; j < localUser.checkedDeps?.length; j++) {\r\n        if (deps[i]._id === localUser.checkedDeps[j]) {\r\n          deps[i].checked = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // фильтр нужных департаментов\r\n  const currentDep = deps.filter(dep => departId ? dep._id === departId : dep._id === localUser.departmentId)\r\n  let filterDeps = deps.filter(dep => currentDep.find(i => i === dep.dep_id || i === currentDep[0].dep_id))\r\n  filterDeps.push(...currentDep)\r\n\r\n  // фильтр нужных людей\r\n  const usersFilter = users.filter(user => filterDeps.find(f => f._id === user.departmentId))\r\n  const usersFilterDeps = users.filter(user => localUser.checkedDeps?.find(f => f === user.departmentId))\r\n  const depsFilterDeps = deps.filter(dep => localUser.checkedDeps?.find(f => f === dep._id))\r\n\r\n  const isLockDeps = localUser.checkedDeps !== null && localUser.checkedDeps?.length > 0\r\n\r\n  let addChildrenArr = []\r\n\r\n  useEffect(() => {\r\n\r\n    // получение всех пользователей\r\n    const fetchUsers = async () => {\r\n      setIsFetching(true)\r\n\r\n        const res = await axios.get('/api/user')\r\n        res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n        let filterUsers = filterUsersFoo(res.data)\r\n        setUsers(filterUsers)\r\n\r\n      setIsFetching(false)\r\n    }\r\n\r\n\r\n\r\n\r\n    // получение данных о себе\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user/'+localUser._id)\r\n      setUser(res.data)\r\n      setIsFetching(false)\r\n    }\r\n\r\n    // получение и фильтр департаментов\r\n    const getDeps = async () => {\r\n      setIsModalFetching(true)\r\n      const res = await axios.get('/api/departments/')\r\n      addChecked(res.data)\r\n      for (let i = 0; i < res.data.length - 1; i++) {\r\n        for (let j = i + 1; j < res.data.length; j++) {\r\n          if (res.data.find(k => k === res.data[j].dep_id && k !== res.data[i].dep_id)) {\r\n            if (res.data[j].margin) {\r\n              res.data[j].margin += 10\r\n            } else {\r\n              res.data[j].margin = 10\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let newArr = res.data.filter(d => d.dep_id !== 7)\r\n      newArr.push(res.data[6])\r\n\r\n      setDeps(newArr)\r\n      setIsModalFetching(false)\r\n    }\r\n    const get_users_by_users = async () => {\r\n      setIsFetching(true)\r\n      const getUsers={\r\n        id:localUser._id\r\n      }\r\n      const res = await axios.post('/api/get_users_by_users', getUsers)\r\n      const users_users = res.data[0]['get_users_by_users']\r\n      users_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n      let filterUsers = filterUsersFoo(users_users)\r\n      setUsers(filterUsers)\r\n      console.log(\"get_users_by_users=\",users_users)\r\n      setIsFetching(false)\r\n      /*setIsOpen(true)*/\r\n\r\n    }\r\n    getDeps()\r\n    fetchUser()\r\n    setIsOpen(false)\r\n\r\n/*    console.log(\"user=\",user)\r\n    console.log('depsId=',depsId)\r\n    console.log('departId=',departId)*/\r\n\r\n    if(user.main_department===departId) {\r\n      setUsers([])\r\n      get_users_by_users()\r\n    }   else{\r\n      setGetUser([])\r\n      fetchUsers()\r\n    }\r\n\r\n  }, [departId])\r\n\r\n  // фильтр пользователей по статусу\r\n  function filterUsersFoo(users) {\r\n    return users.filter(user => user.status === 1)\r\n        .concat(users.filter(user => user.status === 2))\r\n        .concat(users.filter(user => user.status === 3))\r\n        .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n        .concat(users.filter(user => user.status === 4))\r\n  }\r\n\r\n\r\n  // добавляем/удаляем департамент в модалке\r\n  const handlePush = e => {\r\n    if (e.target.checked) {\r\n      changedArr.push(e.target.value)\r\n    } else {\r\n      const index = changedArr.indexOf(e.target.value)\r\n      changedArr.splice(index, 1)\r\n      delete e.target.checked\r\n    }\r\n  }\r\n\r\n  // добавление дочерних\r\n  const handleAddChildren = e => {\r\n    global.chek = e.target.checked\r\n  }\r\n\r\n    // обновляем данные модального окна\r\n  const handleModalClick = async (e) => {\r\n    e.preventDefault()\r\n\r\n  if (global.chek===true) {\r\n      const info={\r\n        userId:localUser._id,\r\n        deps:depsId,\r\n        see_child:true\r\n      }\r\n\r\n    const oldItems = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const newInfo = {\r\n      _id: oldItems._id,\r\n      isAdmin: localUser.isAdmin,\r\n      username: localUser.username,\r\n      email: localUser.email,\r\n      departmentId: localUser.departmentId,\r\n      main_department: departId,\r\n      status:oldItems.status\r\n    }\r\n\r\n    get_users_by_dep(depsId)\r\n\r\n    localStorage.clear()\r\n    localStorage.setItem('user', JSON.stringify({...newInfo}))\r\n\r\n    await axios.post('/api/child/',info)\r\n    setIsOpen(true)\r\n    setModalMain(false)\r\n    } else {\r\n\r\n    const oldItems = JSON.parse(localStorage.getItem('user'))\r\n    const newInfo = {\r\n      _id: oldItems._id,\r\n      isAdmin: localUser.isAdmin,\r\n      username: localUser.username,\r\n      email: localUser.email,\r\n      departmentId: localUser.departmentId,\r\n      main_department: departId,\r\n      status:oldItems.status\r\n    }\r\n      const info ={\r\n        userId:localUser._id,\r\n        see_child:false,\r\n        deps:depsId\r\n      }\r\n\r\n    setIsOpen(false)\r\n    setModalMain(false)\r\n    localStorage.clear()\r\n    localStorage.setItem('user', JSON.stringify({...newInfo}))\r\n      await axios.post('/api/child/',info)\r\n    window.location.reload()\r\n    }\r\n  }\r\n\r\n  /*  let newInfo\r\n\r\n    if (departId) {\r\n      addChildrenArr = addChildrenArr.map(i => i.id)\r\n      newInfo = {\r\n        userId: user.id,\r\n        checkedDeps: [departId, ...addChildrenArr]\r\n      }\r\n    } else {\r\n      newInfo = {\r\n        userId: user._id,\r\n        checkedDeps: changedArr\r\n      }\r\n    }\r\n\r\n    try {\r\n      await axios.put('/api/user/' + localUser._id, newInfo)\r\n      if (user._id === localUser._id) {\r\n        localStorage.setItem('user', JSON.stringify({...user, ...newInfo}))\r\n      }\r\n      window.location.reload()\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  }*/\r\n\r\n // функция get_users_by_dep\r\n  const get_users_by_dep = async () => {\r\n    if (isJob) {\r\n      const info = {\r\n        depsId: depsId\r\n      }\r\n      const res = await axios.post('/api/get_users_by_dep/', info)\r\n      const dep_users = res.data[0]['get_users_by_dep']\r\n      if (dep_users === null) {\r\n\r\n      } else {\r\n        console.log(\"get_users_by_dep=\",dep_users)\r\n        dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n        let filterUsers = filterUsersFoo(dep_users)\r\n        setUsers(filterUsers)\r\n        setIsOpen(true)\r\n        setIsJob(!isJob)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n/*\r\n  if(isJob){\r\n    setIsOpen(true)}else {\r\n    setIsOpen(false)}\r\n  setIsJob(!isJob)\r\n}\r\n*/\r\n\r\n  return (\r\n    <div className='staff'>\r\n      {/*{!departId && <div className='changeDepsContainer'>\r\n        {<div><span className='changeDeps' onClick={handleClick}>Изменить</span></div>}\r\n      </div>}*/}\r\n\r\n      {departId && <>\r\n        {isJob ? <button onClick={get_users_by_dep} className=\"btnStaff\" style={{width:'155px'}}>Показать дочерние</button> : <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\" >Скрыть дочерние</button> }\r\n        <button onClick={() => setModalMain(true)} className='btnStaff' style={{float: 'right'}}>Сделать главной</button>\r\n      </>}\r\n\r\n      <div className=\"employeeWrapper\">\r\n        {isFetching\r\n            ? <div className='isFetching'>Загрузка...</div>\r\n            : users.length === 0 && getUser.length !==0\r\n                ? ''\r\n                : !!departId\r\n                    ? !isOpen\r\n                        ? users.filter(user => user.department_id === departId).map((user, id) => <Employee key={id} user={user}/>)\r\n                            : usersFilter.map((user, id) => <Employee key={id} user={user} />)\r\n          : isLockDeps\r\n          ? usersFilterDeps.map((user, id) => <Employee key={id} user={user}/>)\r\n          : users.map((user, id) => <Employee key={id} user={user}/>)\r\n        }\r\n        {\r\n          !!isOpen\r\n              ?\r\n              users.map((user, id) =>  <Employee key={id} user={user}/>)\r\n              :\"\"\r\n        }\r\n\r\n        {\r\n          !!getUser\r\n              ?\r\n              getUser.map((user, id) =>  <Employee key={id} user={user}/>)\r\n              :\"\"\r\n        }\r\n      </div>\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        <form className=\"modalLoginBox\">\r\n          {isModalFetching\r\n            ?<div>Загрузка</div>\r\n            : deps.map((dep, id) => <label key={id} htmlFor={dep.department_name} style={{paddingLeft: `${dep.margin}px`}}>\r\n            <input\r\n              type='checkbox'\r\n              value={dep.id}\r\n              id={dep.id}\r\n              name={dep.department_name}\r\n              onChange={handlePush}\r\n              checked={dep.checked}\r\n            />{dep.department_name}</label>)\r\n          }\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n            Изменить\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n      <Modal active={modalMain} setActive={setModalMain}>\r\n        <h1>Изменение информации:</h1>\r\n        <hr/>\r\n        <form className=\"modalLoginBox\">\r\n          <label>\r\n            <input\r\n              type='checkbox'\r\n              onChange={handleAddChildren}\r\n            />Добавить дочерние</label>\r\n          <button className=\"ModalButton\" type=\"submit\" disabled={isFetching} onClick={handleModalClick}>\r\n            Изменить\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}