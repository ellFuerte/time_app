{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState({}); // Загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const toggleNode = id => {\n    setExpandedNodes(prevState => ({ ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n\n  const renderTree = node => {\n    const isExpanded = !!expandedNodes[node.department_tree_to_json.id];\n    return /*#__PURE__*/_jsxDEV(TreeView, {\n      nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/department/${node.department_tree_to_json.id}`,\n        className: \"level1\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node\",\n          children: node.department_tree_to_json.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this),\n      onClick: () => toggleNode(node.department_tree_to_json.id),\n      collapsed: !isExpanded,\n      children: node.department_tree_to_json.Subclasses.map(subNode => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TreeView, {\n          nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/department/${subNode.id}`,\n            className: \"depsUser\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"node\",\n              children: subNode.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this),\n          defaultCollapsed: true,\n          children: subNode.Subclasses.map(subNode1 => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/department/${subNode1.id}`,\n            className: \"depsUser\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingBottom: '8px'\n              },\n              children: subNode1.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, subNode1.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, subNode.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, node.department_tree_to_json.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map(node => renderTree(node))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"nuVm/PKvVEOoI6tT4uL4N+hBNns=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","useEffect","Link","axios","TreeView","Sidebar","dep","setDep","expandedNodes","setExpandedNodes","getDeps","res","get","data","toggleNode","id","prevState","renderTree","node","isExpanded","department_tree_to_json","Name","Subclasses","map","subNode","subNode1","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [expandedNodes, setExpandedNodes] = useState({});\r\n\r\n    // Загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            setDep(res.data);\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const toggleNode = (id) => {\r\n        setExpandedNodes((prevState) => ({\r\n            ...prevState,\r\n            [id]: !prevState[id],\r\n        }));\r\n    };\r\n\r\n    const renderTree = (node) => {\r\n        const isExpanded = !!expandedNodes[node.department_tree_to_json.id];\r\n\r\n        return (\r\n            <TreeView\r\n                key={node.department_tree_to_json.id}\r\n                nodeLabel={\r\n                    <Link to={`/department/${node.department_tree_to_json.id}`} className=\"level1\">\r\n                        <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                    </Link>\r\n                }\r\n                onClick={() => toggleNode(node.department_tree_to_json.id)}\r\n                collapsed={!isExpanded}\r\n            >\r\n                {node.department_tree_to_json.Subclasses.map((subNode) => (\r\n                    <React.Fragment key={subNode.id}>\r\n                        <TreeView\r\n                            nodeLabel={\r\n                                <Link to={`/department/${subNode.id}`} className=\"depsUser\">\r\n                                    <span className=\"node\">{subNode.Name}</span>\r\n                                </Link>\r\n                            }\r\n                            defaultCollapsed\r\n                        >\r\n                            {subNode.Subclasses.map((subNode1) => (\r\n                                <Link to={`/department/${subNode1.id}`} className=\"depsUser\" key={subNode1.id}>\r\n                                    <div style={{ paddingBottom: '8px' }}>{subNode1.Name}</div>\r\n                                </Link>\r\n                            ))}\r\n                        </TreeView>\r\n                    </React.Fragment>\r\n                ))}\r\n            </TreeView>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">{dep.map((node) => renderTree(node))}</div>\r\n                </div>\r\n            </div>\r\n            <div />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}