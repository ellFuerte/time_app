{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\ProfileInfo\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { Create, Delete, Settings, Message } from '@material-ui/icons';\nimport Skills from '../ProfileInfo/Skills/Skills';\nimport Modal from '../Templates/Modal/Modal';\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\";\nimport './ProfileInfo.css';\nimport DeleteUser from \"./DeleteUser/DeleteUser\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport FinishTime from \"./FinishTime/FinishTime\";\nimport AddNomination from \"./AddNomination/AddNomination\";\nimport ChangePassword from \"./СhangePassword/СhangePassword\";\nimport VoteNominations from \"./VoteNominations/VoteNominations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileInfo() {\n  _s();\n\n  const [timeZone, setTimeZone] = useState([]);\n  const [allDateUser, setAllDateUser] = useState();\n  const [modalVacancies, setModalVacancies] = useState(false);\n  const [depsName, setDepsName] = useState([]);\n  const [cityName, setCityName] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalActivePass, setModalActivePass] = useState(false);\n  const [modalActiveVote, setModalActiveVote] = useState(false);\n  const [modalVote, setModalVote] = useState(false);\n  const [modalResetPassword, setModalResetPassword] = useState(false);\n  const [modalFinishTime, setModalFinishTime] = useState(false);\n  const [modalActiveDelete, setModalActiveDelete] = useState(false);\n  const [modalActiveSkills, setModalActiveSkills] = useState(false);\n  const username = useParams();\n  let localUser = !!username ? {\n    _id: username.username,\n    email: \"\"\n  } : JSON.parse(localStorage.getItem('user'));\n  const localUse = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  useEffect(() => {\n    const getNameDeps = async () => {\n      const deps = {\n        user: username.username\n      };\n      const res = await axios.post('/api/departments/', deps);\n      setTimeZone(res.data[0]['timezone']);\n      setDepsName(res.data[0]['department_name']);\n      setCityName(res.data[0]['city_name']);\n    };\n\n    const fetchUser = async () => {\n      localUser._id = !!localUser._id ? localUser._id : localUser.id;\n      localUser._id = !!username ? username.username : localUser._id;\n      const res = await axios.get('/api/user/' + username.username);\n      setUser(res.data);\n      setIsFetching(false);\n    };\n\n    fetchUser();\n    getNameDeps();\n  }, [user.user_name, user.email, user.phone_number, user.additional_contact, user.distribution_group, user.activity_profile, user.place_of_residence, username.username]);\n  localUser = !!user && !Array.isArray(user) ? user : localUser;\n  localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username;\n  const name = localUser.email.toLowerCase();\n  const images = {\n    '1': {\n      src: '../images/1.png',\n      title: 'Тучка'\n    },\n    '2': {\n      src: '../images/2.png',\n      title: 'Аркадий Паровозов'\n    },\n    '3': {\n      src: '../images/3.png',\n      title: 'И так сойдет'\n    },\n    '4': {\n      src: '../images/4.png',\n      title: 'Портной'\n    },\n    '5': {\n      src: '../images/5.png',\n      title: 'Мама обезьянка'\n    },\n    '6': {\n      src: '../images/6.png',\n      title: 'Кот Матроскин'\n    },\n    '7': {\n      src: '../images/7.png',\n      title: 'Крот'\n    },\n    '8': {\n      src: '../images/8.png',\n      title: 'Птица говорун(голосуем только среди дежурных)'\n    },\n    '9': {\n      src: '../images/9.png',\n      title: 'Хома(Голосуем среди коллег из внедрения)'\n    },\n    '10': {\n      src: '../images/10.png',\n      title: 'Симка и нолик'\n    }\n  };\n\n  const getChangeVacancies = () => {\n    if (localUse.isAdmin) {\n      setModalVacancies(true);\n      setAllDateUser(user);\n    }\n  };\n\n  const updateNominationStatus = newStatus => {\n    setUser(prevState => ({ ...prevState,\n      nomination_status: newStatus\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileInfo\",\n    children: [Object.keys(images).map((key, id) => (user.nomination_status === key || user.nomination_status === parseInt(key)) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[key].src,\n      title: images[key].title,\n      alt: `Image for ${key}`,\n      className: \"imagesProfile\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isFatching\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employeePI ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProfileName\",\n        children: [user.user_name, localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Create, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px',\n              paddingLeft: '5px'\n            },\n            onClick: () => setModalActive(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Editing, {\n            modalActive: modalActive,\n            setModalActive: setModalActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Delete, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px'\n            },\n            onClick: () => setModalActiveDelete(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DeleteUser, {\n            modalActiveDelete: modalActiveDelete,\n            setModalActiveDelete: setModalActiveDelete,\n            username: username.username,\n            user: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : '', localUse.isAdmin === true && localUse._id === user.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/AdminPanel`,\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            style: {\n              cursor: 'pointer',\n              fontSize: '20px',\n              paddingTop: '5px',\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: getChangeVacancies,\n          className: \"ProfileLinkVacancies\",\n          children: user.vacancy_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px dashed black',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"Email: \", name.charAt(0).toUpperCase() + name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u0440\\u0430\\u0441\\u0441\\u044B\\u043B\\u043A\\u0438: \", user.distribution_group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438: \", user.activity_profile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F: \", cityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : '', localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProfileInfoCard\",\n          children: [\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", depsName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), localUse.isAdmin || localUse._id === username.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalActivePass(true),\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n          modalActivePass: modalActivePass,\n          setModalActivePass: setModalActivePass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalResetPassword(true),\n          children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ResetPassword, {\n          modalResetPassword: modalResetPassword,\n          setModalResetPassword: setModalResetPassword,\n          username: username.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalFinishTime(true),\n          children: \"\\u0417\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(FinishTime, {\n          modalFinishTime: modalFinishTime,\n          setModalFinishTime: setModalFinishTime,\n          user: user.id,\n          status: user.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', localUse._id === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalActiveVote(true),\n          children: \"\\u041F\\u0440\\u043E\\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(VoteNominations, {\n          modalActiveVote: modalActiveVote,\n          setModalActiveVote: setModalActiveVote,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : '', localUse.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changePass\",\n          onClick: () => setModalVote(true),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0438\\u043D\\u0430\\u0446\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(AddNomination, {\n          modalVote: modalVote,\n          setModalVote: setModalVote,\n          username: username,\n          updateNominationStatus: updateNominationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePass\",\n        onClick: () => setModalActiveSkills(true),\n        children: \"\\u041D\\u0430\\u0432\\u044B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {\n        modalActiveSkills: modalActiveSkills,\n        setModalActiveSkills: setModalActiveSkills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacancies,\n      setActive: setModalVacancies,\n      children: /*#__PURE__*/_jsxDEV(ModalVacanciesItem, {\n        allDateUser: allDateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileInfo, \"qtC9Shz/2u+rIuamZojPQqsRRmA=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["D:/time_app/client/src/components/ProfileInfo/ProfileInfo.jsx"],"names":["axios","React","useEffect","useRef","useState","Link","useParams","Create","Delete","Settings","Message","Skills","Modal","ModalVacanciesItem","ModalVacancies","Editing","DeleteUser","ResetPassword","FinishTime","AddNomination","ChangePassword","VoteNominations","ProfileInfo","timeZone","setTimeZone","allDateUser","setAllDateUser","modalVacancies","setModalVacancies","depsName","setDepsName","cityName","setCityName","user","setUser","isFetching","setIsFetching","modalActive","setModalActive","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","modalResetPassword","setModalResetPassword","modalFinishTime","setModalFinishTime","modalActiveDelete","setModalActiveDelete","modalActiveSkills","setModalActiveSkills","username","localUser","_id","email","JSON","parse","localStorage","getItem","localUse","usersStatuses","findStatus","k","i","getNameDeps","deps","res","post","data","fetchUser","id","get","user_name","phone_number","additional_contact","distribution_group","activity_profile","place_of_residence","Array","isArray","name","toLowerCase","images","src","title","getChangeVacancies","isAdmin","updateNominationStatus","newStatus","prevState","nomination_status","Object","keys","map","key","parseInt","status","cursor","fontSize","paddingLeft","paddingTop","color","vacancy_code","border","padding","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { Create, Delete, Settings, Message } from '@material-ui/icons'\n\n\nimport Skills from '../ProfileInfo/Skills/Skills'\nimport Modal from '../Templates/Modal/Modal'\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\"\n\nimport './ProfileInfo.css'\nimport DeleteUser from \"./DeleteUser/DeleteUser\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport FinishTime from \"./FinishTime/FinishTime\";\nimport AddNomination from \"./AddNomination/AddNomination\";\nimport ChangePassword from \"./СhangePassword/СhangePassword\";\nimport VoteNominations from \"./VoteNominations/VoteNominations\";\n\nexport default function ProfileInfo() {\n\n    const [timeZone, setTimeZone] = useState([])\n\n\n    const [allDateUser, setAllDateUser] = useState()\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [modalResetPassword, setModalResetPassword] = useState(false)\n    const [modalFinishTime, setModalFinishTime] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n\n\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n    useEffect(() => {\n\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsFetching(false)\n\n        }\n        fetchUser()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n        username.username,\n    ])\n\n\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n\n    const getChangeVacancies = () => {\n        if (localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n    const updateNominationStatus = (newStatus) => {\n        setUser(prevState => ({\n            ...prevState,\n            nomination_status: newStatus\n        }));\n    };\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                    <div className='ProfileName'>\n\n                        {user.user_name}\n\n                        {localUse.isAdmin || localUse._id === username.username\n                            ?\n                            <>\n                                <Create style={{cursor: 'pointer', fontSize: '20px', paddingLeft: '5px'}}\n                                        onClick={() => setModalActive(true)}/>\n                                <Editing modalActive={modalActive} setModalActive={setModalActive}/>\n                            </>\n                            : ''}\n\n\n                        {localUse.isAdmin ?\n                            <>\n                                <Delete style={{cursor: 'pointer', fontSize: '20px'}}\n                                        onClick={() => setModalActiveDelete(true)}/>\n                                <DeleteUser modalActiveDelete={modalActiveDelete}\n                                            setModalActiveDelete={setModalActiveDelete} username={username.username}\n                                            user={user.id}/>\n                            </>\n                            : ''}\n\n\n                        {localUse.isAdmin === true && localUse._id === user.id ?\n                            <Link to={`/AdminPanel`}>\n                                <Settings\n                                    style={{cursor: 'pointer', fontSize: '20px', paddingTop: '5px', color: 'black'}}/>\n                            </Link>\n                            : ''}\n                    </div>\n\n\n                    <div>\n                        <label style={{cursor: 'pointer'}} onClick={getChangeVacancies}\n                               className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                    </div>\n\n\n{/*                    {\n                        <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                    }*/}\n\n\n                    <div style={{border: '3px dashed black', padding: '10px'}}>\n                        <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                        <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                        <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                        <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n                    {\n                        localUse.isAdmin || localUse._id === username.username ? <>\n                            <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>\n                            <ChangePassword modalActivePass={modalActivePass} setModalActivePass={setModalActivePass}/>\n                        </> : ''\n\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalResetPassword(true)}>Сбросить\n                                    пароль\n                                </div>\n                                <ResetPassword modalResetPassword={modalResetPassword}\n                                               setModalResetPassword={setModalResetPassword}\n                                               username={username.username}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalFinishTime(true)}>Закончить</div>\n                                <FinishTime modalFinishTime={modalFinishTime} setModalFinishTime={setModalFinishTime}\n                                            user={user.id} status={user.status}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse._id === user.id ?<>\n                            <div className='changePass'\n                                 onClick={() => setModalActiveVote(true)}>Проголосовать</div>\n                            <VoteNominations modalActiveVote={modalActiveVote} setModalActiveVote={setModalActiveVote} username={username}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className=\"changePass\" onClick={() => setModalVote(true)}>Закрепить номинацию</div>\n                                <AddNomination modalVote={modalVote} setModalVote={setModalVote} username={username}\n                                               updateNominationStatus={updateNominationStatus}/>\n                            </> : ''\n                    }\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills}/>\n                </div>\n            }\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem allDateUser={allDateUser}/>\n            </ModalVacancies>\n            <Skills/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}