{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [selectedValue, setSelectedValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedInnotech, setPressedInnotech] = useState(false);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      const data = res.data[0]['department_tree_to_json'];\n      const extractedOptions = extractOptions(data);\n      setOptions(extractedOptions);\n      setSelectedValue(localUser.departmentId);\n    };\n\n    const extractOptions = node => {\n      let optionsList = [{\n        id: node.id,\n        name: node.Name\n      }];\n\n      if (node.Subclasses && node.Subclasses.length > 0) {\n        node.Subclasses.forEach(subclass => {\n          optionsList = optionsList.concat(extractOptions(subclass));\n        });\n      }\n\n      return optionsList;\n    };\n\n    const VacanciesView = async () => {\n      const status = await axios.get('/api/Vacations/?status=status');\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n      setStatus(status.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    if (selectedValue) {\n      const selectedDepartmentId = parseInt(selectedValue);\n      const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\n      setFilterSelect(filter);\n      setIsOpen(false);\n      setFilteredData([]);\n    }\n\n    getDeps();\n    VacanciesView();\n  }, [isOpen, departId, selectedValue]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n    setFilterSelect([]);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickCompanyNameInnotech = () => {\n    setPressedInnotech(!pressedInnotech);\n\n    if (!pressedInnotech) {\n      function filterVacanciesByCompanyName(vacancies, companyName) {\n        // Используем метод map() для обхода каждого отдела и его вакансий\n        return vacancies.map(department => ({ // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\n          ...department,\n          vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\n        })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\n      } // Пример использования: фильтрация по компании \"ВТБ\"\n\n\n      const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"Иннотех\");\n      console.log(filteredVacancies);\n    } else {// Если кнопка уже была нажата, выполните другое действие\n    }\n  };\n\n  const handleClickCompanyNameVTB = () => {\n    setPressedCompany(!pressedCompany);\n\n    if (!pressedCompany) {\n      function filterVacanciesByCompanyName(vacancies, companyName) {\n        // Используем метод map() для обхода каждого отдела и его вакансий\n        return vacancies.map(department => ({ // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\n          ...department,\n          vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\n        })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\n      } // Пример использования: фильтрация по компании \"ВТБ\"\n\n\n      const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"ВТБ\");\n      console.log(filteredVacancies);\n    } else {// Если кнопка уже была нажата, выполните другое действие\n    }\n  };\n\n  const handleSelectChange = e => {\n    const selectedValue = e.target.value;\n    setSelectedValue(selectedValue); // Используем useEffect для выполнения фильтрации после обновления состояния\n\n    setSelectedValue(prevValue => {\n      const selectedDepartmentId = parseInt(prevValue);\n      const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\n      setFilterSelect(filter);\n      setIsOpen(false);\n      setFilteredData([]);\n      return prevValue;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedValue // Привязываем значение к selectedValue\n                ,\n                onChange: handleSelectChange,\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.id,\n                  children: option.name\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filtersButton\",\n                style: {\n                  boxShadow: pressedCompany ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: pressedCompany ? 'gray' : '#1775ee'\n                },\n                onClick: handleClickCompanyNameVTB,\n                children: pressedCompany ? 'ВТБ' : 'ВТБ'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filtersButton\",\n                style: {\n                  boxShadow: pressedInnotech ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                  background: pressedInnotech ? 'gray' : '#1775ee'\n                },\n                onClick: handleClickCompanyNameInnotech,\n                children: pressedInnotech ? 'Иннотех' : 'Иннотех'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 41\n          }, this)) : '', !isOpen ? filterSelect.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 37\n          }, this)) : '', filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 41\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)\n  /*        <>\r\n              <Topbar/>\r\n              <div className=\"mainContainer\">\r\n                  <Sidebar/>\r\n                  <div className='Vacations'>\r\n                      {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                      <div className=\"VacationsContainerTop\">\r\n  \r\n                          {isAddingVacancies ? (\r\n                              <VacanciesAdd />\r\n                          ) : (\r\n                              <>\r\n                                  <h2>Вакансии</h2>\r\n  \r\n                                  <div>\r\n                                      <input\r\n                                          type='date'\r\n                                          placeholder=\"Выберите дату\"\r\n                                          className=\"ModalInput\"\r\n                                          style={{'marginRight': '10px'}}\r\n                                          value={startDate} onChange={handleStartDateChange}\r\n                                      />— <input\r\n                                      type='date'\r\n                                      placeholder=\"Выберите дату\"\r\n                                      className=\"ModalInput\"\r\n                                      style={{'marginRight': '10px'}}\r\n                                      value={endDate} onChange={handleEndDateChange}\r\n                                  />\r\n                                      <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                      <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                  </div>\r\n  \r\n                                  {isOpen ? (\r\n                                      vacancies.map((vac, id) => (\r\n                                          <div className='VacationsContainer' key={id}>\r\n                                              <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                             department={vac.department} vacancies={vac.vacancies}\r\n                                                             users={departId.users}/>\r\n                                          </div>\r\n                                      ))\r\n                                  ) : ''}\r\n  \r\n                                  {filteredData.map(vac => (\r\n                                      <div className='VacationsContainer' key={vac.id}>\r\n                                          <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                         vacancies={vac.vacancies}/>\r\n                                      </div>\r\n                                  ))}\r\n                              </>\r\n                          )}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </>*/\n  ;\n}\n\n_s(VacanciesView, \"vN9zSLDdNg/2KKqNsNEqym2C0oM=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","selectedValue","setSelectedValue","options","setOptions","filterSelect","setFilterSelect","pressedInnotech","setPressedInnotech","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","getDeps","res","get","data","extractedOptions","extractOptions","departmentId","node","optionsList","id","name","Name","Subclasses","length","forEach","subclass","concat","vacancies_function","user_id","_id","getVacancies","post","get_vacancies","selectedDepartmentId","parseInt","filter","elm","department_id","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleClickCompanyNameInnotech","filterVacanciesByCompanyName","companyName","company_name","filteredVacancies","console","log","handleClickCompanyNameVTB","handleSelectChange","prevValue","window","location","href","option","boxShadow","background","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const modalDep = useRef()\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedInnotech, setPressedInnotech] = useState(false);\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const getDeps = async () => {\r\n\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const data = res.data[0]['department_tree_to_json'];\r\n            const extractedOptions = extractOptions(data);\r\n            setOptions(extractedOptions);\r\n            setSelectedValue(localUser.departmentId);\r\n\r\n        }\r\n        const extractOptions = (node) => {\r\n            let optionsList = [{ id: node.id, name: node.Name }];\r\n            if (node.Subclasses && node.Subclasses.length > 0) {\r\n                node.Subclasses.forEach(subclass => {\r\n                    optionsList = optionsList.concat(extractOptions(subclass));\r\n                });\r\n            }\r\n            return optionsList;\r\n\r\n        };\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(company.data)\r\n            setStatus(status.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n\r\n            }\r\n        }\r\n        if (selectedValue) {\r\n            const selectedDepartmentId = parseInt(selectedValue);\r\n            const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\r\n            setFilterSelect(filter);\r\n            setIsOpen(false);\r\n            setFilteredData([]);\r\n        }\r\n        getDeps()\r\n        VacanciesView()\r\n    }, [isOpen, departId,selectedValue])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n        setFilterSelect([])\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n    const handleClickCompanyNameInnotech = () => {\r\n        setPressedInnotech(!pressedInnotech);\r\n        if (!pressedInnotech) {\r\n            function filterVacanciesByCompanyName(vacancies, companyName) {\r\n                // Используем метод map() для обхода каждого отдела и его вакансий\r\n                return vacancies.map(department => ({\r\n                    // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\r\n                })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\r\n            }\r\n// Пример использования: фильтрация по компании \"ВТБ\"\r\n            const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"Иннотех\");\r\n            console.log(filteredVacancies);\r\n        } else {\r\n            // Если кнопка уже была нажата, выполните другое действие\r\n        }\r\n    };\r\n\r\n\r\n    const handleClickCompanyNameVTB = () => {\r\n        setPressedCompany(!pressedCompany);\r\n        if (!pressedCompany) {\r\n            function filterVacanciesByCompanyName(vacancies, companyName) {\r\n                // Используем метод map() для обхода каждого отдела и его вакансий\r\n                return vacancies.map(department => ({\r\n                    // Возвращаем только отделы, у которых есть вакансии, отфильтрованные по компании\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\r\n                })).filter(department => department.vacancies.length > 0); // Отфильтровываем отделы без вакансий\r\n            }\r\n\r\n// Пример использования: фильтрация по компании \"ВТБ\"\r\n            const filteredVacancies = filterVacanciesByCompanyName(vacancies, \"ВТБ\");\r\n            console.log(filteredVacancies);\r\n        } else {\r\n            // Если кнопка уже была нажата, выполните другое действие\r\n        }\r\n    }\r\n\r\n\r\n    const handleSelectChange = (e) => {\r\n        const selectedValue = e.target.value;\r\n        setSelectedValue(selectedValue);\r\n\r\n        // Используем useEffect для выполнения фильтрации после обновления состояния\r\n        setSelectedValue(prevValue => {\r\n            const selectedDepartmentId = parseInt(prevValue);\r\n            const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\r\n            setFilterSelect(filter);\r\n            setIsOpen(false);\r\n            setFilteredData([]);\r\n            return prevValue;\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n{/*                                    <select ref={modalDep} className=\"ModalInputUpdateSelect\" onChange={handleSelectChange}>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                selected={dep.department_id === user.department_id}\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>*/}\r\n\r\n\r\n\r\n                                    <select\r\n                                        value={selectedValue} // Привязываем значение к selectedValue\r\n                                        onChange={handleSelectChange}\r\n                                        ref={modalDep}\r\n                                        className=\"ModalInputUpdateSelect\"\r\n                                    >\r\n                                        {options.map((option) => (\r\n                                            <option key={option.id} value={option.id}>\r\n                                                {option.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n\r\n                                    <button\r\n                                        className=\"filtersButton\"\r\n                                        style={{\r\n                                            boxShadow: pressedCompany ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                                : \"\",\r\n                                            background: pressedCompany ? 'gray' : '#1775ee'\r\n                                        }}\r\n                                        onClick={handleClickCompanyNameVTB}>\r\n                                        {pressedCompany ? 'ВТБ' : 'ВТБ'}\r\n                                    </button>\r\n\r\n\r\n                                    <button\r\n                                        className=\"filtersButton\"\r\n                                        style={{\r\n                                            boxShadow: pressedInnotech ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\"\r\n                                                : \"\",\r\n                                            background: pressedInnotech ? 'gray' : '#1775ee'\r\n                                        }}\r\n                                        onClick={handleClickCompanyNameInnotech}>\r\n                                        {pressedInnotech ? 'Иннотех' : 'Иннотех'}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {!isOpen ?\r\n\r\n                                    filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                                }\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n\r\n\r\n/*        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? <button className='btnStaff' onClick={clickAdd}>Назад</button>:<button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>}\r\n                    <div className=\"VacationsContainerTop\">\r\n\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                                <h2>Вакансии</h2>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate} onChange={handleStartDateChange}\r\n                                    />— <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate} onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n\r\n                                {isOpen ? (\r\n                                    vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                           department={vac.department} vacancies={vac.vacancies}\r\n                                                           users={departId.users}/>\r\n                                        </div>\r\n                                    ))\r\n                                ) : ''}\r\n\r\n                                {filteredData.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department}\r\n                                                       vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>*/\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}