{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localUser = JSON.parse(localStorage.getItem('user'));\nconst xz = localUser.departmentId;\n\nconst Sidebar = ({\n  xz\n}) => {\n  _s();\n\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n        setDep(res.data);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: true // Если идентификатор департамента совпадает с выбранным,\n                // устанавливаем defaultCollapsed в false\n                ,\n                defaultCollapsed: xz !== departments.id,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: true // Если идентификатор департамента совпадает с выбранным,\n                  // устанавливаем defaultCollapsed в false\n                  ,\n                  defaultCollapsed: xz !== departments1.id,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","useParams","axios","useEffect","useState","TreeView","localUser","JSON","parse","localStorage","getItem","xz","departmentId","Sidebar","dep","setDep","getDeps","res","get","data","error","console","map","node","i","label","department_tree_to_json","id","Name","Subclasses","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\nconst localUser = JSON.parse(localStorage.getItem('user'))\r\nconst xz = localUser.departmentId\r\n\r\nconst Sidebar = ({ xz }) => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                setDep(res.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </Link>\r\n                            );\r\n\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    defaultCollapsed={false}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            key={departments.id}\r\n                                            nodeLabel={(\r\n                                                <Link\r\n                                                    to={`/department/${departments.id}`}\r\n                                                    className='depsUser'\r\n                                                >\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={true}\r\n                                            // Если идентификатор департамента совпадает с выбранным,\r\n                                            // устанавливаем defaultCollapsed в false\r\n                                            defaultCollapsed={xz !== departments.id}\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    key={departments1.id}\r\n                                                    nodeLabel={(\r\n                                                        <Link\r\n                                                            to={`/department/${departments1.id}`}\r\n                                                            className='depsUser'\r\n                                                        >\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    defaultCollapsed={true}\r\n                                                    // Если идентификатор департамента совпадает с выбранным,\r\n                                                    // устанавливаем defaultCollapsed в false\r\n                                                    defaultCollapsed={xz !== departments1.id}\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                        <Link\r\n                                                            key={departments2.id}\r\n                                                            to={`/department/${departments2.id}`}\r\n                                                            className='depsUser'\r\n                                                        >\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}