{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const [findUsers, setFindUsers] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    3: 'sick_leave',\n    4: 'deleted',\n    5: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const setDat = new Date(); //Сегодняшнея дата\n\n  setDat.setDate(setDat.getDate()); //\n\n  const dat = setDat.toLocaleDateString(); //\n\n  /*  console.log(\"SETDATE\",dat)     */\n  //\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + user.id);\n\n      if (res.data.length === 0) {\n        setDateStart(global.workdate = '');\n        setDateEnd(global.worked = '');\n      } else {\n        global.workdate = res.data[0].workdate;\n        global.worked = res.data[0].worked;\n        setDateStart(global.workdate);\n        setDateEnd(global.worked);\n      }\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n\n    if (user.status === 7) {\n      fetchUser();\n    }\n\n    if (user.status === 6) {\n      fetchUser();\n    }\n\n    if (user.status === 5) {\n      fetchUser();\n    }\n\n    if (user.status === 2) {\n      fetchUser();\n    }\n  }, [user._id]);\n  /*console.log('global.workdate=',global.workdate)*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'employee ' + findStatus(user.status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"OHlNQIbKpIyYFCRN0gPvmM97bzM=\");\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","SearchBlock","Employee","user","findUsers","setFindUsers","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","setDat","Date","setDate","getDate","dat","toLocaleDateString","date","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","fetchUser","res","get","id","data","length","global","workdate","worked","status","_id","isAdmin"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\r\n\r\nexport default function Employee({user}) {\r\n  const [findUsers, setFindUsers] = useState([])\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const setDat = new Date()                     //Сегодняшнея дата\r\n  setDat.setDate(setDat.getDate())              //\r\n  const dat=setDat.toLocaleDateString()         //\r\n/*  console.log(\"SETDATE\",dat)     */               //\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n    const res = await axios.get('/api/vacation?id='+user.id)\r\n\r\n\r\n      if(res.data.length===0){\r\n        setDateStart(global.workdate='')\r\n        setDateEnd(global.worked='')\r\n      }else{\r\n    global.workdate=res.data[0].workdate\r\n    global.worked=res.data[0].worked\r\n        setDateStart(global.workdate)\r\n        setDateEnd(global.worked)\r\n  }}\r\n    if(user.status===3){\r\n      fetchUser()}\r\n\r\n      if(user.status===7){\r\n      fetchUser()\r\n      }\r\n    if(user.status===6){\r\n      fetchUser()}\r\n\r\n    if(user.status===5){\r\n      fetchUser()\r\n    }\r\n    if(user.status===2){\r\n      fetchUser()\r\n    }\r\n\r\n  }, [user._id])\r\n\r\n\r\n\r\n/*console.log('global.workdate=',global.workdate)*/\r\n\r\n  return (<>\r\n     {user.status === 4 && !localUser.isAdmin ? \"\"\r\n\r\n         : <div className={'employee ' + (findStatus(user.status))}>\r\n\r\n\r\n\r\n         </div>\r\n    }</>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}