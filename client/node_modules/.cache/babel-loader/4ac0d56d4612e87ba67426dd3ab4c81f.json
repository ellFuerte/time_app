{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n      setDep(res.data.map(node => ({ ...node,\n        isCollapsed: [false, false, false]\n      }))); // Устанавливаем начальное состояние узлов\n    };\n\n    getDeps();\n  }, []); // функция для обновления состояния раскрытия узла\n\n  const toggleNode = (index, level) => {\n    const updatedDep = [...dep];\n    updatedDep[index].isCollapsed[level] = !updatedDep[index].isCollapsed[level];\n    setDep(updatedDep);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              onClick: () => toggleNode(i, 0) // обработчик клика по ссылке\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              collapsed: node.isCollapsed[0] // устанавливаем состояние раскрытия узла\n              ,\n              children: node.department_tree_to_json.Subclasses.map((departments, index1) => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  onClick: e => {\n                    e.preventDefault();\n                    toggleNode(i, 1); // обработчик клика по ссылке\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 49\n                }, this),\n                defaultCollapsed: true,\n                collapsed: node.isCollapsed[1] // устанавливаем состояние раскрытия узла\n                ,\n                children: !!departments.Subclasses && departments.Subclasses.map((departments1, index2) => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    onClick: e => {\n                      e.preventDefault();\n                      toggleNode(i, 2); // обработчик клика по ссылке\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 57\n                  }, this),\n                  defaultCollapsed: true,\n                  collapsed: node.isCollapsed[2] // устанавливаем состояние раскрытия узла\n                  ,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map((departments2, index3) => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    onClick: e => e.stopPropagation() // Предотвращаем всплытие клика, чтобы избежать переключения состояния вложенности\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"mSPW/vQ+uKiKIAEbhbmzJOV4CzE=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","useEffect","Link","axios","TreeView","Sidebar","dep","setDep","getDeps","res","get","data","map","node","isCollapsed","toggleNode","index","level","updatedDep","i","label","department_tree_to_json","id","Name","Subclasses","departments","index1","e","preventDefault","departments1","index2","departments2","index3","stopPropagation","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Sidebar.css';\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css';\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            setDep(res.data.map(node => ({...node, isCollapsed: [false, false, false]}))); // Устанавливаем начальное состояние узлов\r\n        };\r\n\r\n        getDeps();\r\n    }, []);\r\n\r\n    // функция для обновления состояния раскрытия узла\r\n    const toggleNode = (index, level) => {\r\n        const updatedDep = [...dep];\r\n        updatedDep[index].isCollapsed[level] = !updatedDep[index].isCollapsed[level];\r\n        setDep(updatedDep);\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n                        {dep.map((node, i) => {\r\n                            const label = (\r\n                                <Link\r\n                                    to={`/department/${node.department_tree_to_json.id}`}\r\n                                    className='level1'\r\n                                    onClick={() => toggleNode(i, 0)} // обработчик клика по ссылке\r\n                                >\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                </Link>\r\n                            );\r\n\r\n                            return (\r\n                                <TreeView\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    nodeLabel={label}\r\n                                    defaultCollapsed={false}\r\n                                    collapsed={node.isCollapsed[0]} // устанавливаем состояние раскрытия узла\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments, index1) => (\r\n                                        <TreeView\r\n                                            key={departments.id}\r\n                                            nodeLabel={(\r\n                                                <Link\r\n                                                    to={`/department/${departments.id}`}\r\n                                                    className='depsUser'\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        toggleNode(i, 1); // обработчик клика по ссылке\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            defaultCollapsed={true}\r\n                                            collapsed={node.isCollapsed[1]} // устанавливаем состояние раскрытия узла\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1, index2) => (\r\n                                                <TreeView\r\n                                                    key={departments1.id}\r\n                                                    nodeLabel={(\r\n                                                        <Link\r\n                                                            to={`/department/${departments1.id}`}\r\n                                                            className='depsUser'\r\n                                                            onClick={(e) => {\r\n                                                                e.preventDefault();\r\n                                                                toggleNode(i, 2); // обработчик клика по ссылке\r\n                                                            }}\r\n                                                        >\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    defaultCollapsed={true}\r\n                                                    collapsed={node.isCollapsed[2]} // устанавливаем состояние раскрытия узла\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2, index3) => (\r\n                                                        <Link\r\n                                                            key={departments2.id}\r\n                                                            to={`/department/${departments2.id}`}\r\n                                                            className='depsUser'\r\n                                                            onClick={(e) => e.stopPropagation()} // Предотвращаем всплытие клика, чтобы избежать переключения состояния вложенности\r\n                                                        >\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}