{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  targetDepartmentId\n}) => {\n  _s();\n\n  const [collapsedStates, setCollapsedStates] = useState({});\n  const [dep, setDep] = useState([]); // загрузка всех департаментов\n\n  useEffect(() => {\n    const setCollapsedStateForDepartment = (departments, targetId, path = []) => {\n      for (const department of departments) {\n        if (department.department_tree_to_json.id === targetId) {\n          // Если нашли целевой департамент, устанавливаем collapsed = false для всех узлов на пути к нему\n          const newState = { ...collapsedStates\n          };\n          path.forEach(nodeId => newState[nodeId] = false);\n          setCollapsedStates(newState);\n          return;\n        }\n\n        if (department.department_tree_to_json.Subclasses) {\n          setCollapsedStateForDepartment(department.department_tree_to_json.Subclasses, targetId, [...path, department.department_tree_to_json.id]);\n        }\n      }\n    };\n\n    const getDeps = async () => {\n      const res = await axios.get('/api/department_tree_to_json/');\n\n      if (res.data[0].department_tree_to_json.length === 0) {\n        setDep([]);\n      } else {\n        setDep(res.data);\n      }\n    };\n\n    getDeps();\n    setCollapsedStateForDepartment(dep, targetDepartmentId);\n  }, [dep, targetDepartmentId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 43\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: false,\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 148\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 63\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 57\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 53\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 61\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 57\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 49\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"qkHiQtyOGiWCDwCexsItwTdjr9Y=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","targetDepartmentId","collapsedStates","setCollapsedStates","dep","setDep","setCollapsedStateForDepartment","departments","targetId","path","department","department_tree_to_json","id","newState","forEach","nodeId","Subclasses","getDeps","res","get","data","length","map","node","i","label","Name","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = ({targetDepartmentId }) => {\r\n    const [collapsedStates, setCollapsedStates] = useState({});\r\n    const [dep, setDep] = useState([])\r\n    // загрузка всех департаментов\r\n    useEffect(() => {\r\n        const setCollapsedStateForDepartment = (departments, targetId, path = []) => {\r\n            for (const department of departments) {\r\n                if (department.department_tree_to_json.id === targetId) {\r\n                    // Если нашли целевой департамент, устанавливаем collapsed = false для всех узлов на пути к нему\r\n                    const newState = {...collapsedStates};\r\n                    path.forEach(nodeId => (newState[nodeId] = false));\r\n                    setCollapsedStates(newState);\r\n                    return;\r\n\r\n                }\r\n                if (department.department_tree_to_json.Subclasses) {\r\n                    setCollapsedStateForDepartment(\r\n                        department.department_tree_to_json.Subclasses,\r\n                        targetId,\r\n                        [...path, department.department_tree_to_json.id])\r\n                }\r\n            }\r\n        }\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/')\r\n            if(res.data[0].department_tree_to_json.length===0){\r\n                setDep([])\r\n            }else {\r\n                setDep(res.data)\r\n            }\r\n        }\r\n        getDeps()\r\n        setCollapsedStateForDepartment(dep, targetDepartmentId);\r\n    }, [dep, targetDepartmentId])\r\n\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                <div className=\"tree\">\r\n                    <div className=\"treeWrapper\">\r\n\r\n                        {dep.map((node, i) => {\r\n\r\n                            const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                                className='level1'>\r\n\r\n                                <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                            return (\r\n\r\n                                <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label} defaultCollapsed={false}>\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n\r\n                                        <TreeView nodeLabel={(<Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}><span className=\"node\">{departments.Name}</span></Link>)} key={departments.id} defaultCollapsed={true}>\r\n\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    nodeLabel={(\r\n\r\n                                                    <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n\r\n                                                        <span className=\"node\">{departments1.Name}</span>\r\n\r\n                                                    </Link>\r\n\r\n                                                )}\r\n                                                    key={departments1.id} defaultCollapsed={true}>\r\n\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n\r\n                                                            <div\r\n                                                                style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                            </div>\r\n\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}