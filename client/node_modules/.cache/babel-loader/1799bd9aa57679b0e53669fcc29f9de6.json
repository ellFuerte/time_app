{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [vacanciesName, setVacanciesName] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\n  const [activeFilters, setActiveFilters] = useState({\n    company: [],\n    status: [],\n    department: null,\n    startDate: null,\n    endDate: null\n  });\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n      setVacancies(getVacancies.data[0].get_vacancies);\n      console.log('vac=', vacancies);\n    };\n\n    applyFilters(activeFilters);\n    VacanciesView();\n  }, [departId, vacancies]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setFilteredData(filteredData);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickFilter = (type, value) => {\n    setActiveFilters(prevFilters => {\n      let newFilters;\n\n      if (type === 'status') {\n        newFilters = { ...prevFilters,\n          status: prevFilters.status.includes(value) ? prevFilters.status.filter(status => status !== value) : [...prevFilters.status, value]\n        };\n      } else if (type === 'company') {\n        newFilters = { ...prevFilters,\n          company: prevFilters.company.includes(value) ? prevFilters.company.filter(company => company !== value) : [...prevFilters.company, value]\n        };\n      } else if (type === 'department') {\n        newFilters = { ...prevFilters,\n          department: prevFilters.department === value ? null : value\n        };\n      } else if (type === 'startDate') {\n        newFilters = { ...prevFilters,\n          startDate: value\n        };\n      } else if (type === 'endDate') {\n        newFilters = { ...prevFilters,\n          endDate: value\n        };\n      }\n\n      applyFilters(newFilters);\n      return newFilters;\n    });\n  };\n\n  const applyFilters = filters => {\n    let filtered = vacancies;\n\n    if (filters.department) {\n      filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\n    }\n\n    if (filters.company.length > 0) {\n      filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))).map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\n      }));\n    }\n\n    if (filters.status.length > 0) {\n      filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))).map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\n      }));\n    }\n\n    if (filters.startDate || filters.endDate) {\n      filtered = filtered.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const startDate = filters.startDate ? new Date(filters.startDate) : null;\n          const endDate = filters.endDate ? new Date(filters.endDate) : null;\n          return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\n        })\n      })).filter(department => department.vacancies.length > 0);\n    }\n\n    setFilteredVacancies(filtered);\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n    handleClickFilter('startDate', e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n    handleClickFilter('endDate', e.target.value);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 1:\n        return 'Reserve';\n      //  Резерв Белый цвет\n\n      case 2:\n        return 'Selection';\n      // Подбор желтый цвет\n\n      case 3:\n        return 'Securely';\n      // Обеспеченно зелёный цвет\n\n      case 4:\n        return 'Liquidated';\n      // Ликвидированно белый прозрачный цвет\n\n      case 5:\n        return 'Finalist';\n      //  Финалист красный цвет\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                onChange: () => handleClickFilter('department', modalDep.current.value),\n                children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.department_id,\n                  children: dep.department\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filtersButton\",\n                  onClick: () => handleClickFilter('company', company.name),\n                  style: {\n                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\n                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\n                  },\n                  children: company.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'filtersButton' + getColorByStatusId(status.id),\n                  onClick: () => handleClickFilter('status', status.name),\n                  style: {\n                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\n                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\n                  },\n                  children: status.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), filteredVacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 45\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 41\n          }, this)), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 45\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"JS2q8+FwIIK1IrlV8jcKgMHzUpI=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","filterSelect","setFilterSelect","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","vacanciesName","setVacanciesName","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","filteredVacancies","setFilteredVacancies","activeFilters","setActiveFilters","department","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","console","log","applyFilters","reset","handleCombinedFilter","filterVacanciesByDate","map","filter","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","handleClickFilter","type","value","prevFilters","newFilters","includes","filters","filtered","department_id","parseInt","length","some","company_name","status_name","handleStartDateChange","e","target","handleEndDateChange","getColorByStatusId","statusId","Number","window","location","href","current","dep","index","id","name","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const modalDep = useRef()\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [vacanciesName, setVacanciesName] = useState([]);\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [filteredVacancies, setFilteredVacancies] = useState(vacancies);\r\n    const [activeFilters, setActiveFilters] = useState({\r\n        company: [],\r\n        status: [],\r\n        department: null,\r\n        startDate: null,\r\n        endDate: null\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n\r\n\r\n                setVacancies(getVacancies.data[0].get_vacancies)\r\n\r\n\r\n            console.log('vac=',vacancies)\r\n        }\r\n        applyFilters(activeFilters);\r\n        VacanciesView()\r\n    }, [departId,vacancies])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date)\r\n                    const start = startDate ? new Date(startDate) : null\r\n                    const end = endDate ? new Date(endDate) : null\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end)\r\n                })\r\n            }))\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setFilteredData(filteredData);\r\n\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true)\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false)\r\n    }\r\n\r\n    const handleClickFilter = (type, value) => {\r\n        setActiveFilters(prevFilters => {\r\n            let newFilters;\r\n            if (type === 'status') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    status: prevFilters.status.includes(value)\r\n                        ? prevFilters.status.filter(status => status !== value)\r\n                        : [...prevFilters.status, value]\r\n                };\r\n            } else if (type === 'company') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    company: prevFilters.company.includes(value)\r\n                        ? prevFilters.company.filter(company => company !== value)\r\n                        : [...prevFilters.company, value]\r\n                };\r\n            } else if (type === 'department') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    department: prevFilters.department === value ? null : value\r\n                };\r\n            } else if (type === 'startDate') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    startDate: value\r\n                };\r\n            } else if (type === 'endDate') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    endDate: value\r\n                };\r\n            }\r\n            applyFilters(newFilters);\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    const applyFilters = (filters) => {\r\n        let filtered = vacancies;\r\n\r\n        if (filters.department) {\r\n            filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\r\n        }\r\n\r\n        if (filters.company.length > 0) {\r\n            filtered = filtered.filter(department =>\r\n                department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))\r\n            ).map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\r\n            }));\r\n        }\r\n\r\n        if (filters.status.length > 0) {\r\n            filtered = filtered.filter(department =>\r\n                department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))\r\n            ).map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\r\n            }));\r\n        }\r\n\r\n        if (filters.startDate || filters.endDate) {\r\n            filtered = filtered.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n                    const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n                    return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\r\n                })\r\n            })).filter(department => department.vacancies.length > 0);\r\n        }\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value);\r\n        handleClickFilter('startDate', e.target.value);\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value);\r\n        handleClickFilter('endDate', e.target.value);\r\n    };\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n\r\n        switch (Number(statusId)) {\r\n            case 1:\r\n                return 'Reserve' //  Резерв Белый цвет\r\n            case 2:\r\n                return 'Selection' // Подбор желтый цвет\r\n            case 3:\r\n                return 'Securely' // Обеспеченно зелёный цвет\r\n            case 4:\r\n                return 'Liquidated' // Ликвидированно белый прозрачный цвет\r\n            case 5:\r\n                return 'Finalist' //  Финалист красный цвет\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select\r\n                                        ref={modalDep}\r\n                                        className=\"ModalInputUpdateSelect\"\r\n                                        onChange={() => handleClickFilter('department', modalDep.current.value)}\r\n                                    >\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\r\n                                                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\r\n                                                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                                {\r\n                                    filteredVacancies.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n\r\n                               {\r\n                                   filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n\r\n\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}