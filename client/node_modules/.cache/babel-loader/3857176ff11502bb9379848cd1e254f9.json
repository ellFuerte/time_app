{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  vac,\n  department,\n  vacancies\n}) => {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  console.log('vac=', vac);\n  const date = moment().format('YYYY-MM-DD');\n\n  const handleClick = (name, grade, id, description, statuses) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(statuses);\n      setInputValueStatuses(statuses);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: date === vac.create_date ? 'NEW' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n          children: vac.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: vac.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: moment(vac.create_date).format('DD.MM.YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, vac.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(VacanciesItem, \"DYcL09vvjaBePglwCLEwqBv9Z9Y=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","useState","VacanciesItem","vac","department","vacancies","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","console","log","date","format","handleClick","name","grade","id","description","statuses","isAdmin","map","create_date","status_id","user_name"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;;AAGA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA,GAAD;AAAKC,EAAAA,UAAL;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAAA;;AAChD,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AAGA,QAAM,CAACgB,qBAAD,EAAwBC,wBAAxB,IAAoDjB,QAAQ,CAAC,EAAD,CAAlE;AAEA,QAAM,CAACkB,kBAAD,EAAqBC,qBAArB,IAA8CnB,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACsB,qBAAD,EAAwBC,wBAAxB,IAAoDvB,QAAQ,CAAC,EAAD,CAAlE;AAEA,QAAM,CAACwB,yBAAD,EAA4BC,4BAA5B,IAA4DzB,QAAQ,CAAC,EAAD,CAA1E;AACA,QAAM,CAAC0B,4BAAD,EAA+BC,+BAA/B,IAAkE3B,QAAQ,CAAC,EAAD,CAAhF;AACA,QAAM,CAAC4B,sBAAD,EAAyBC,yBAAzB,IAAsD7B,QAAQ,CAAC,EAAD,CAApE;AACA8B,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB7B,GAAnB;AACA,QAAM8B,IAAI,GAAGjC,MAAM,GAAGkC,MAAT,CAAgB,YAAhB,CAAb;;AACA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAaC,EAAb,EAAgBC,WAAhB,EAA4BC,QAA5B,KAAyC;AACzD,QAAGlC,SAAS,CAACmC,OAAV,KAAoB,IAAvB,EAA6B;AACzB3B,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,MAAAA,cAAc,CAAC0B,EAAD,CAAd;AAEAd,MAAAA,wBAAwB,CAACY,IAAD,CAAxB;AACApB,MAAAA,aAAa,CAACoB,IAAD,CAAb,CALyB,CAKJ;;AAGrBR,MAAAA,+BAA+B,CAACW,WAAD,CAA/B;AACArB,MAAAA,wBAAwB,CAACqB,WAAD,CAAxB;AAEAT,MAAAA,yBAAyB,CAACO,KAAD,CAAzB;AACAf,MAAAA,kBAAkB,CAACe,KAAD,CAAlB,CAZyB,CAYE;;AAE3BX,MAAAA,4BAA4B,CAACc,QAAD,CAA5B;AACApB,MAAAA,qBAAqB,CAACoB,QAAD,CAArB;AAEH;AAEJ,GApBD;;AAwBA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAA,kBAAMpC;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKC,SAAS,CAACqC,GAAV,CAAcvC,GAAG,iBACd;AAAA,gCACI;AAAA,oBAAM8B,IAAI,KAAK9B,GAAG,CAACwC,WAAb,GAA2B,KAA3B,GAAmC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,OAAO,EAAE,MAAMR,WAAW,CAAChC,GAAG,CAACiC,IAAL,EAAWjC,GAAG,CAACkC,KAAf,EAAqBlC,GAAG,CAACmC,EAAzB,EAA4BnC,GAAG,CAACoC,WAAhC,EAA4CpC,GAAG,CAACyC,SAAhD,CAA9B;AAAA,oBAA2FzC,GAAG,CAACiC;AAA/F;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAMjC,GAAG,CAAC0C;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAM7C,MAAM,CAACG,GAAG,CAACwC,WAAL,CAAN,CAAwBT,MAAxB,CAA+B,YAA/B;AAAN;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAU/B,GAAG,CAACmC,EAAd;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CA5DD;;GAAMpC,a;;KAAAA,a;AA8DN,eAAeA,aAAf","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst VacanciesItem =({vac,department,vacancies})=> {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n    console.log('vac=',vac)\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const handleClick = (name, grade,id,description,statuses) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(statuses)\r\n            setInputValueStatuses(statuses)\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>{department}</div>\r\n                {vacancies.map(vac => (\r\n                    <div key={vac.id}>\r\n                        <div>{date === vac.create_date ? 'NEW' : ''}</div>\r\n                        <li onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>{vac.name}</li>\r\n                        <div>{vac.user_name}</div>\r\n                        <div>{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}