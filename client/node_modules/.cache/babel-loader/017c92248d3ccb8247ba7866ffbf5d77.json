{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nconst [err, setErr] = useState();\nimport { CircularProgress } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport loginCall from '../../apiCalls';\nimport { AuthContext } from '../../context/AuthContext';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfetch('/healthcheck').then(response => {\n  if (!response.ok) {\n    throw new Error('Сервер недоступен');\n  } // Если сервер доступен, вы можете продолжить выполнение кода здесь\n\n}).catch(error => {\n  setErr('Ошибка:', error.message); // Вывести сообщение об ошибке\n  // Дополнительные действия при ошибке, например, показ сообщения на веб-странице\n});\nexport default function Login() {\n  _s();\n\n  const email = useRef();\n  const password = useRef();\n  const {\n    isFetching,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n\n  const handleClick = e => {\n    e.preventDefault();\n    loginCall({\n      email: email.current.value.toUpperCase(),\n      password: password.current.value\n    }, dispatch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"\\u041D\\u0435\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), err, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginCenter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            className: \"loginInput\",\n            type: \"emailLogin\",\n            ref: email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            className: \"loginInput\",\n            ref: password,\n            required: true,\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            type: \"submit\",\n            disabled: isFetching,\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this) : 'Войти'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            style: {\n              width: '167%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"loginRegisterButton\",\n              disabled: isFetching,\n              children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 31\n              }, this) : 'Создать новый аккаунт'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"SGywP+cDTWN31A62X5C34O2bhbM=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/time_app/client/src/pages/Login/Login.jsx"],"names":["useContext","useRef","useState","err","setErr","CircularProgress","Link","loginCall","AuthContext","fetch","then","response","ok","Error","catch","error","message","Login","email","password","isFetching","dispatch","handleClick","e","preventDefault","current","value","toUpperCase","color","width"],"mappings":"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","sourcesContent":["import {useContext, useRef, useState} from 'react';\r\nconst [err, setErr] = useState();\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport  loginCall  from '../../apiCalls';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport './Login.css'\r\nfetch('/healthcheck')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Сервер недоступен');\r\n      }\r\n      // Если сервер доступен, вы можете продолжить выполнение кода здесь\r\n    })\r\n    .catch(error => {\r\n      setErr('Ошибка:', error.message); // Вывести сообщение об ошибке\r\n      // Дополнительные действия при ошибке, например, показ сообщения на веб-странице\r\n    })\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const email = useRef()\r\n  const password = useRef()\r\n\r\n  const {isFetching, error, dispatch } = useContext(AuthContext)\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    loginCall({email:email.current.value.toUpperCase(), password:password.current.value}, dispatch)\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {error  &&\r\n        <div className='error'>\r\n          Неправильный логин или пароль\r\n        </div>\r\n        }\r\n      {err}\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginCenter\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input \r\n              placeholder=\"Email\"\r\n              className=\"loginInput\" \r\n              type='emailLogin'\r\n              ref={email} \r\n              required\r\n            />\r\n            <input \r\n              placeholder=\"Password\" \r\n              type='password' \r\n              className=\"loginInput\" \r\n              ref={password} \r\n              required\r\n              minLength='6'\r\n            />\r\n            <button  className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n\r\n              {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Войти'}\r\n\r\n            </button>\r\n\r\n            {/* <span className=\"loginForgot\">Забыли пароль?</span> */}\r\n            <Link to='/register' style={{width:'167%'}}>\r\n              <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n                {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Создать новый аккаунт'}\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}