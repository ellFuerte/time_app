{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\pages\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport \"./Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const email = useRef();\n  const password = useRef();\n  const passwordAgain = useRef();\n  const username = useRef();\n  const department = useRef();\n  const [deps, setDeps] = useState([]);\n  const [error, setError] = useState('');\n  const [checkVal, setCheckVal] = useState(false);\n\n  const changeVal = e => {\n    setCheckVal(!checkVal);\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    const getDeps = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n    };\n\n    getDeps();\n  }, []);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    if (password.current.value !== passwordAgain.current.value) {\n      passwordAgain.current.setCustomValidity('Пароли не совпадают');\n    } else if (department.current.value === '') {\n      setError('Не все поля заполнены');\n      return;\n    } else {\n      const user = {\n        username: username.current.value,\n        email: email.current.value,\n        department: department.current.value,\n        password: password.current.value,\n        isAdmin: checkVal\n      };\n\n      try {\n        await axios.post('/api/auth/register', user);\n        history.push('/login');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registerWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerCenter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"registerBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u0418\\u043C\\u044F\",\n            required: true,\n            ref: username,\n            className: \"registerInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            type: \"email\",\n            required: true,\n            ref: email,\n            className: \"registerInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: department,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dep.department_name,\n              children: dep.department_id\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0438\\u043A \\u043E\\u0442\\u0434\\u0435\\u043B\\u0430?\", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"trueAdmin\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: true,\n                name: \"trueAdmin\",\n                checked: checkVal,\n                onChange: changeVal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), \"\\u0414\\u0430\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"falseAdmin\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: false,\n                name: \"falseAdmin\",\n                checked: !checkVal,\n                onChange: changeVal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), \"\\u041D\\u0435\\u0442\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            required: true,\n            ref: password,\n            className: \"registerInput\",\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password Again\",\n            type: \"password\",\n            required: true,\n            ref: passwordAgain,\n            className: \"registerInput\",\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"registerButton\",\n            type: \"submit\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            style: {\n              width: '167%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"registerLoginButton\",\n              children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"KjT7eP5Bhv/BIQ+FrTi/+vZZMDU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/pages/Register/Register.jsx"],"names":["axios","useEffect","useRef","useState","useHistory","Link","Register","email","password","passwordAgain","username","department","deps","setDeps","error","setError","checkVal","setCheckVal","changeVal","e","history","getDeps","res","get","data","handleClick","preventDefault","current","value","setCustomValidity","user","isAdmin","post","push","console","log","map","dep","name","department_name","department_id","width"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordAgain = useRef()\r\n  const username = useRef()\r\n  const department = useRef()\r\n  const [deps, setDeps] = useState([])\r\n  const [error, setError] = useState('')\r\n  const [checkVal, setCheckVal] = useState(false)\r\n  const changeVal = (e) => {\r\n    setCheckVal(!checkVal)\r\n  }\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const getDeps = async () => {\r\n      const res = await axios.get('/api/departments/')\r\n      setDeps(res.data)\r\n    }\r\n\r\n    getDeps()\r\n  }, [])\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault()\r\n    if(password.current.value !== passwordAgain.current.value){\r\n      passwordAgain.current.setCustomValidity('Пароли не совпадают')\r\n    } else if(department.current.value === ''){\r\n      setError('Не все поля заполнены')\r\n      return\r\n    } else {\r\n      const user = {\r\n        username: username.current.value,\r\n        email: email.current.value,\r\n        department: department.current.value,\r\n        password: password.current.value,\r\n        isAdmin: checkVal\r\n      }\r\n\r\n      try {\r\n        await axios.post('/api/auth/register', user)\r\n        history.push('/login')\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      {error && \r\n        <div className='error'>\r\n          {error}\r\n        </div>\r\n      }\r\n      <div className=\"registerWrapper\">\r\n        <div className=\"registerCenter\">\r\n          <form className=\"registerBox\" onSubmit={handleClick}>\r\n            <input \r\n              placeholder=\"Фамилия Имя\"\r\n              required ref={username} \r\n              className=\"registerInput\" \r\n            />\r\n            <input \r\n              placeholder=\"Email\" \r\n              type='email' \r\n              required \r\n              ref={email}  \r\n              className=\"registerInput\" \r\n            />\r\n            <select ref={department}>\r\n              <option value=''>Отдел</option>\r\n\r\n              {deps.map((dep, name) =>\r\n\r\n              <option key={name} value={dep.department_name}>{dep.department_id}</option>)}\r\n\r\n            </select>\r\n            <div>\r\n              Начальник отдела?\r\n              <label htmlFor='trueAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={true}\r\n                name='trueAdmin'\r\n                checked={checkVal}\r\n                onChange={changeVal}\r\n              />Да</label>\r\n              <label htmlFor='falseAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={false}\r\n                name='falseAdmin'\r\n                checked={!checkVal}\r\n                onChange={changeVal}\r\n              />Нет</label>\r\n            </div>\r\n            <input \r\n              placeholder=\"Password\" \r\n              type='password' \r\n              required \r\n              ref={password}  \r\n              className=\"registerInput\" \r\n              minLength='6'\r\n            />\r\n            <input \r\n              placeholder=\"Password Again\" \r\n              type='password' \r\n              required \r\n              ref={passwordAgain} \r\n              className=\"registerInput\"\r\n              minLength='6'\r\n            />\r\n            <button className=\"registerButton\" type='submit'>Зарегистрироваться</button>\r\n\r\n            <Link to='/login' style={{width:'167%'}}>\r\n\r\n              <button className=\"registerLoginButton\">\r\n                Войти в аккаунт\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}