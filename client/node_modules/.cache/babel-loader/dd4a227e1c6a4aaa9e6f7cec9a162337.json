{"ast":null,"code":"import _regeneratorRuntime from\"D:/time_app/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/time_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link,useParams}from'react-router-dom';import axios from'axios';import{useEffect,useState}from'react';import'./Sidebar.css';import TreeView from'react-treeview';import'react-treeview/react-treeview.css';import{jsx as _jsx}from\"react/jsx-runtime\";var Sidebar=function Sidebar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dep=_useState2[0],setDep=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openPath=_useState4[0],setOpenPath=_useState4[1];var localUse=JSON.parse(localStorage.getItem('user'));useEffect(function(){var findPathToNode=function findPathToNode(tree,id){var path=[];var findNode=function findNode(node,id,currentPath){if(node.id===id){path=[].concat(_toConsumableArray(currentPath),[node.id]);return true;}if(node.Subclasses&&node.Subclasses.length>0){var _iterator=_createForOfIteratorHelper(node.Subclasses),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var subclass=_step.value;if(findNode(subclass,id,[].concat(_toConsumableArray(currentPath),[node.id]))){return true;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return false;};var _iterator2=_createForOfIteratorHelper(tree),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var node=_step2.value;if(findNode(node.department_tree_to_json,id,[])){break;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return path;};var getDeps=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,path;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/department_tree_to_json/');case 2:res=_context.sent;if(res.data[0].department_tree_to_json.length===0){setDep([]);}else{setDep(res.data);path=findPathToNode(res.data,parseInt(localUse.departmentId));// переменная для развертывания департамента\nconsole.log('Path to node:',path);// Отладочный вывод\nsetOpenPath(path);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function getDeps(){return _ref.apply(this,arguments);};}();getDeps();},[]);var isNodeOpen=function isNodeOpen(id){return openPath.includes(id);};var toggleNode=function toggleNode(id){if(isNodeOpen(id)){setOpenPath(openPath.filter(function(nodeId){return nodeId!==id;}));}else{setOpenPath([].concat(_toConsumableArray(openPath),[id]));}};return/*#__PURE__*/_jsx(\"div\",{className:\"sidebar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sidebarWrapper\",children:dep.length>=1?/*#__PURE__*/_jsx(\"div\",{className:\"tree\",children:/*#__PURE__*/_jsx(\"div\",{className:\"treeWrapper\",children:dep.map(function(node,i){return/*#__PURE__*/_jsx(TreeView,{nodeLabel:/*#__PURE__*/_jsx(Link,{to:\"/department/\".concat(node.department_tree_to_json.id),className:\"level1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"node\",children:node.department_tree_to_json.Name})}),collapsed:!isNodeOpen(node.department_tree_to_json.id),onClick:function onClick(){return toggleNode(node.department_tree_to_json.id);},children:node.department_tree_to_json.Subclasses.map(function(departments){return/*#__PURE__*/_jsx(TreeView,{nodeLabel:/*#__PURE__*/_jsx(Link,{to:\"/department/\".concat(departments.id),className:\"depsUser\",children:/*#__PURE__*/_jsx(\"span\",{className:\"node\",children:departments.Name})},departments.id),collapsed:!isNodeOpen(departments.id),onClick:function onClick(){return toggleNode(departments.id);},children:!!departments.Subclasses&&departments.Subclasses.map(function(departments1){return/*#__PURE__*/_jsx(TreeView,{nodeLabel:/*#__PURE__*/_jsx(Link,{to:\"/department/\".concat(departments1.id),className:\"depsUser\",children:/*#__PURE__*/_jsx(\"span\",{className:\"node\",children:departments1.Name})},departments1.id),collapsed:!isNodeOpen(departments1.id),onClick:function onClick(){return toggleNode(departments1.id);},children:!!departments1.Subclasses&&departments1.Subclasses.map(function(departments2){return/*#__PURE__*/_jsx(Link,{to:\"/department/\".concat(departments2.id),className:\"depsUser\",children:/*#__PURE__*/_jsx(\"div\",{style:{paddingBottom:'8px'},children:departments2.Name})},departments2.id);})},departments1.id);})},departments.id);})},node.department_tree_to_json.Name+'|'+i);})})}):''})});};export default Sidebar;","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","useParams","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","openPath","setOpenPath","localUse","JSON","parse","localStorage","getItem","findPathToNode","tree","id","path","findNode","node","currentPath","Subclasses","length","subclass","department_tree_to_json","getDeps","get","res","data","parseInt","departmentId","console","log","isNodeOpen","includes","toggleNode","filter","nodeId","map","i","Name","departments","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [openPath, setOpenPath] = useState([]);\r\n    const localUse = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        const findPathToNode = (tree, id) => {\r\n            let path = [];\r\n            const findNode = (node, id, currentPath) => {\r\n                if (node.id === id) {\r\n                    path = [...currentPath, node.id];\r\n                    return true;\r\n                }\r\n                if (node.Subclasses && node.Subclasses.length > 0) {\r\n                    for (let subclass of node.Subclasses) {\r\n                        if (findNode(subclass, id, [...currentPath, node.id])) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            for (let node of tree) {\r\n                if (findNode(node.department_tree_to_json, id, [])) {\r\n                    break;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n                const path = findPathToNode(res.data, parseInt(localUse.departmentId)); // переменная для развертывания департамента\r\n                console.log('Path to node:', path); // Отладочный вывод\r\n                setOpenPath(path);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const isNodeOpen = (id) => openPath.includes(id);\r\n\r\n    const toggleNode = (id) => {\r\n        if (isNodeOpen(id)) {\r\n            setOpenPath(openPath.filter(nodeId => nodeId !== id));\r\n        } else {\r\n            setOpenPath([...openPath, id]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => (\r\n                                <TreeView\r\n                                    nodeLabel={(\r\n                                        <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )}\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    collapsed={!isNodeOpen(node.department_tree_to_json.id)}\r\n                                    onClick={() => toggleNode(node.department_tree_to_json.id)}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            key={departments.id}\r\n                                            collapsed={!isNodeOpen(departments.id)}\r\n                                            onClick={() => toggleNode(departments.id)}\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    nodeLabel={(\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    key={departments1.id}\r\n                                                    collapsed={!isNodeOpen(departments1.id)}\r\n                                                    onClick={() => toggleNode(departments1.id)}\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}