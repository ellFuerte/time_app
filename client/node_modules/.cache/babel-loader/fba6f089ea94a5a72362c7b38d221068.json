{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const modalDep = useRef();\n  const [selectedValue, setSelectedValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const [filterSelect, setFilterSelect] = useState([]);\n  const [pressedInnotech, setPressedInnotech] = useState(false);\n  const [pressedCompany, setPressedCompany] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [vacanciesName, setVacanciesName] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    function filterVacanciesByDate(startDate, endDate) {\n      return vacancies.map(department => ({ ...department,\n        vacancies: department.vacancies.filter(vacancy => {\n          const vacancyDate = new Date(vacancy.create_date);\n          const start = startDate ? new Date(startDate) : null;\n          const end = endDate ? new Date(endDate) : null;\n          return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\n        })\n      }));\n    }\n\n    const filteredData = filterVacanciesByDate(startDate, endDate);\n    setIsOpen(false);\n    setFilteredData(filteredData);\n    setFilterSelect([]);\n    setVacanciesName([]);\n  };\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const filterVacanciesByCompanyName = (vacancies, companyName) => {\n    return vacancies.map(department => ({ ...department,\n      vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\n    })).filter(department => department.vacancies.length > 0);\n  };\n\n  const handleSelectChange = e => {\n    const selectedDepartmentId = parseInt(e.target.value);\n    const filter = vacancies.filter(elm => elm.department_id === selectedDepartmentId);\n    setFilterSelect(filter);\n    setIsOpen(false);\n    setFilteredData([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 1:\n        return 'Reserve';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Selection';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Securely';\n      // Установите зелёный цвет для статуса 3\n\n      case 4:\n        return 'Finalist';\n      // Установите красный цвет для статуса 4\n\n      case 5:\n        return 'Liquidated';\n      // Установите белый прозрачный цвет для статуса 4\n    }\n  };\n\n  const [pressedStatus, setPressedStatus] = useState({});\n\n  const getFilteredVacancies = () => {\n    return vacancies.filter(vacancy => {\n      const companyMatch = Object.keys(pressedCompany).some(companyName => pressedCompany[companyName] && vacancy.company_name === companyName);\n      const statusMatch = Object.keys(pressedStatus).some(statusId => pressedStatus[statusId] && vacancy.status_id === parseInt(statusId));\n      return !companyMatch && !statusMatch || companyMatch && statusMatch;\n    });\n  };\n\n  const handleClickCompanyName = name => {\n    console.log('name=', name);\n    setPressedCompany(prevState => ({ ...prevState,\n      [name]: !prevState[name]\n    }));\n  };\n\n  const handleClickStatus = id => {\n    console.log('id=', id);\n    setVacancies(prevState => ({ ...prevState,\n      [id]: !prevState[id]\n    }));\n  }; // Function to filter vacancies\n\n\n  const filteredVacancies = getFilteredVacancies();\n  console.log('filter=', filteredVacancies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n            children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnStaff\",\n            onClick: clickAdd,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: startDate,\n                onChange: handleStartDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                className: \"ModalInput\",\n                style: {\n                  'marginRight': '10px'\n                },\n                value: endDate,\n                onChange: handleEndDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: handleCombinedFilter,\n                children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"filterButton\",\n                onClick: reset,\n                children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                ref: modalDep,\n                className: \"ModalInputUpdateSelect\",\n                onChange: handleSelectChange,\n                children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.department_id,\n                  children: dep.department\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filtersButton\",\n                  onClick: () => handleClickCompanyName(company.name),\n                  style: {\n                    boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedCompany[company.name] ? 'gray' : '#1775ee'\n                  },\n                  children: company.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'filtersButton' + getColorByStatusId(status.id),\n                  onClick: () => handleClickStatus(status.id),\n                  style: {\n                    boxShadow: pressedStatus[status.id] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: pressedStatus[status.id] ? 'gray' : '',\n                    opacity: pressedStatus[status.id] ? '1' : ''\n                  },\n                  children: status.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 41\n          }, this)) : '', !isOpen ? filterSelect.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 37\n          }, this)) : '', filteredVacancies.map(vacancy => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vacancy,\n              status: status,\n              department: vacancy.department,\n              vacancies: vacancy.vacancies\n            }, vacancy.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 41\n            }, this)\n          }, vacancy.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 37\n          }, this)), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 45\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"pms7XuLt0xDSsn0kWaJkX5tVGeo=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","modalDep","selectedValue","setSelectedValue","options","setOptions","filterSelect","setFilterSelect","pressedInnotech","setPressedInnotech","pressedCompany","setPressedCompany","isOpen","setIsOpen","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","vacanciesName","setVacanciesName","status","setStatus","company","setCompany","localUser","JSON","parse","localStorage","getItem","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","filterVacanciesByDate","map","department","filter","vacancy","vacancyDate","Date","create_date","start","end","clickAdd","clickBackButton","filterVacanciesByCompanyName","companyName","company_name","length","handleSelectChange","selectedDepartmentId","parseInt","elm","department_id","getColorByStatusId","statusId","Number","pressedStatus","setPressedStatus","getFilteredVacancies","companyMatch","Object","keys","some","statusMatch","status_id","handleClickCompanyName","name","console","log","prevState","handleClickStatus","id","filteredVacancies","window","location","href","dep","index","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n\r\n    const modalDep = useRef()\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [filterSelect, setFilterSelect] = useState([])\r\n    const [pressedInnotech, setPressedInnotech] = useState(false);\r\n    const [pressedCompany, setPressedCompany] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [vacanciesName, setVacanciesName] = useState([]);\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies.data[0].get_vacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        function filterVacanciesByDate(startDate, endDate) {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => {\r\n                    const vacancyDate = new Date(vacancy.create_date);\r\n                    const start = startDate ? new Date(startDate) : null;\r\n                    const end = endDate ? new Date(endDate) : null;\r\n                    return (!start || vacancyDate >= start) && (!end || vacancyDate <= end);\r\n                })\r\n            }));\r\n        }\r\n\r\n\r\n        const filteredData = filterVacanciesByDate(startDate, endDate);\r\n        setIsOpen(false)\r\n        setFilteredData(filteredData);\r\n        setFilterSelect([])\r\n        setVacanciesName([])\r\n    }\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true);\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false);\r\n    }\r\n\r\n    const filterVacanciesByCompanyName = (vacancies, companyName) => {\r\n            return vacancies.map(department => ({\r\n                ...department,\r\n                vacancies: department.vacancies.filter(vacancy => vacancy.company_name === companyName)\r\n            })).filter(department => department.vacancies.length > 0);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSelectChange = (e) => {\r\n        const selectedDepartmentId = parseInt(e.target.value);\r\n        const filter = vacancies.filter(elm=>elm.department_id===selectedDepartmentId)\r\n        setFilterSelect(filter)\r\n        setIsOpen(false)\r\n        setFilteredData([])\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n\r\n        switch (Number(statusId)) {\r\n            case 1:\r\n                return 'Reserve'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Selection'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Securely'; // Установите зелёный цвет для статуса 3\r\n            case 4:\r\n                return 'Finalist'; // Установите красный цвет для статуса 4\r\n            case 5:\r\n                return 'Liquidated'; // Установите белый прозрачный цвет для статуса 4\r\n        }\r\n    }\r\n    const [pressedStatus, setPressedStatus] = useState({});\r\n    const getFilteredVacancies = () => {\r\n        return vacancies.filter(vacancy => {\r\n            const companyMatch = Object.keys(pressedCompany).some(companyName => pressedCompany[companyName] && vacancy.company_name === companyName);\r\n            const statusMatch = Object.keys(pressedStatus).some(statusId => pressedStatus[statusId] && vacancy.status_id === parseInt(statusId));\r\n            return (!companyMatch && !statusMatch) || (companyMatch && statusMatch);\r\n        });\r\n    };\r\n\r\n\r\n    const handleClickCompanyName = (name) => {\r\n        console.log('name=',name)\r\n        setPressedCompany(prevState => ({\r\n            ...prevState,\r\n            [name]: !prevState[name]\r\n        }));\r\n    };\r\n\r\n\r\n    const handleClickStatus = (id) => {\r\n        console.log('id=',id)\r\n        setVacancies(prevState => ({\r\n            ...prevState,\r\n            [id]: !prevState[id]\r\n        }));\r\n    };\r\n\r\n    // Function to filter vacancies\r\n\r\n\r\n    const filteredVacancies = getFilteredVacancies();\r\n    console.log('filter=',filteredVacancies)\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ? (\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>\r\n                    ) : (\r\n                        <div>\r\n                            <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                            <button className='btnStaff' onClick={clickAdd}>Добавить вакансии</button>\r\n                        </div>\r\n                    )}\r\n                        {isAddingVacancies ? (\r\n                            <VacanciesAdd />\r\n                        ) : (\r\n                            <>\r\n                            <div className=\"VacationsContainerTop\">\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{'marginRight': '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />—   <input\r\n                                    type='date'\r\n                                    placeholder=\"Выберите дату\"\r\n                                    className=\"ModalInput\"\r\n                                    style={{'marginRight': '10px'}}\r\n                                    value={endDate}\r\n                                    onChange={handleEndDateChange}\r\n                                />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n\r\n                                    <select ref={modalDep} className=\"ModalInputUpdateSelect\" onChange={handleSelectChange}>\r\n                                        {vacancies.map((dep, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={dep.department_id}\r\n                                            >\r\n                                                {dep.department}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <div>\r\n\r\n\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickCompanyName(company.name)}\r\n                                                style={{\r\n                                                    boxShadow: pressedCompany[company.name] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: pressedCompany[company.name] ? 'gray' : '#1775ee'\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n\r\n\r\n\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton'+getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickStatus(status.id)}\r\n                                                style={{\r\n                                                    boxShadow: pressedStatus[status.id] ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: pressedStatus[status.id] ? 'gray' : '',\r\n                                                    opacity: pressedStatus[status.id] ? '1' : ''\r\n                                                }}\r\n\r\n                                        >{status.name}</button>\r\n                                    ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                {\r\n                                    isOpen ?\r\n                                        (vacancies.map((vac, id) => (\r\n                                        <div className='VacationsContainer' key={id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))) : ''\r\n\r\n                                }\r\n\r\n                                {\r\n                                    !isOpen ?\r\n                                        filterSelect.map((vac, id) => (\r\n                                    <div className='VacationsContainer' key={id}>\r\n                                    <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                    )) : ''\r\n\r\n                                }\r\n\r\n                                {filteredVacancies.map(vacancy => (\r\n                                    <div key={vacancy.id}>\r\n                                        <VacanciesItem vac={vacancy} key={vacancy.department} status={status} department={vacancy.department} vacancies={vacancy.vacancies}/>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {\r\n                                    filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}