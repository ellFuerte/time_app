{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport Topbar from \"../Topbar/Topbar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacancies, setVacancies] = useState([]);\n  const [isAddingVacancies, setIsAddingVacancies] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [status, setStatus] = useState([]);\n  const [company, setCompany] = useState([]);\n  const [projectIds, setProjectIds] = useState([]);\n  const [filteredVacancies, setFilteredVacancies] = useState([]);\n  const [activeFilters, setActiveFilters] = useState({\n    company: [],\n    status: [],\n    project: [],\n    department: null,\n    startDate: null,\n    endDate: null\n  });\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const statuses = await axios.get('/api/Vacations/?status=status');\n      const companies = await axios.get('/api/Vacations/?company=company');\n      setCompany(companies.data);\n      setStatus(statuses.data);\n      const vacancies_function = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function);\n      setVacancies(getVacancies.data[0].get_vacancies);\n      const fetchedVacancies = getVacancies.data[0].get_vacancies;\n      const uniqueProjectIds = new Set();\n      fetchedVacancies.forEach(department => {\n        department.vacancies.forEach(vacancy => {\n          if (vacancy.project_id !== undefined && vacancy.project_id !== null) {\n            uniqueProjectIds.add(vacancy.project_id);\n          }\n        });\n      });\n      setProjectIds(uniqueProjectIds);\n    };\n\n    VacanciesView();\n  }, [departId]);\n  useEffect(() => {\n    applyFilters(activeFilters);\n  }, [vacancies, activeFilters]);\n\n  const clickAdd = () => {\n    setIsAddingVacancies(true);\n  };\n\n  const clickBackButton = () => {\n    setIsAddingVacancies(false);\n  };\n\n  const handleClickFilter = (type, value) => {\n    setActiveFilters(prevFilters => {\n      let newFilters;\n\n      if (type === 'status') {\n        newFilters = { ...prevFilters,\n          status: prevFilters.status.includes(value) ? prevFilters.status.filter(status => status !== value) : [...prevFilters.status, value]\n        };\n      } else if (type === 'company') {\n        newFilters = { ...prevFilters,\n          company: prevFilters.company.includes(value) ? prevFilters.company.filter(company => company !== value) : [...prevFilters.company, value]\n        };\n      } else if (type === 'department') {\n        newFilters = { ...prevFilters,\n          department: prevFilters.department === value ? null : value\n        };\n      } else if (type === 'project') {\n        newFilters = { ...prevFilters,\n          project: prevFilters.project.includes(value) ? prevFilters.project.filter(project => project !== value) : [value]\n        };\n      }\n\n      return newFilters;\n    });\n  };\n\n  const handleDateChange = (type, value) => {\n    if (type === 'startDate') {\n      setStartDate(value);\n    } else if (type === 'endDate') {\n      setEndDate(value);\n    }\n  };\n\n  const applyFilters = filters => {\n    let filtered = vacancies;\n\n    if (filtered) {\n      if (filters.department) {\n        filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\n      }\n\n      if (filters.company.length > 0) {\n        filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))).map(department => ({ ...department,\n          vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\n        }));\n      }\n\n      if (filters.status.length > 0) {\n        filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))).map(department => ({ ...department,\n          vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\n        }));\n      }\n\n      if (filters.project.length > 0) {\n        console.log('Filtering by project:', filters.project);\n        filtered = filtered.filter(department => department.vacancies.some(vacancy => filters.project.includes(String(vacancy.project_id)))).map(department => ({ ...department,\n          vacancies: department.vacancies.filter(vacancy => filters.project.includes(String(vacancy.project_id)))\n        }));\n        console.log('Filtered by project:', filtered);\n      }\n\n      if (filters.startDate || filters.endDate) {\n        filtered = filtered.map(department => ({ ...department,\n          vacancies: department.vacancies.filter(vacancy => {\n            const vacancyDate = new Date(vacancy.create_date);\n            const startDate = filters.startDate ? new Date(filters.startDate) : null;\n            const endDate = filters.endDate ? new Date(filters.endDate) : null;\n            return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\n          })\n        })).filter(department => department.vacancies.length > 0);\n      }\n    }\n\n    setFilteredVacancies(filtered);\n  };\n\n  const handleCombinedFilter = () => {\n    setActiveFilters(prevFilters => {\n      const newFilters = { ...prevFilters,\n        startDate: startDate || null,\n        endDate: endDate || null\n      };\n      applyFilters(newFilters);\n      return newFilters;\n    });\n  };\n\n  const reset = () => {\n    setActiveFilters({\n      company: [],\n      status: [],\n      project: [],\n      department: null,\n      startDate: null,\n      endDate: null\n    });\n    setStartDate('');\n    setEndDate('');\n    setFilteredVacancies(vacancies);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (Number(statusId)) {\n      case 20:\n        return 'Reserve';\n      //  Резерв Установите Белый цвет для статуса 1\n\n      case 30:\n        return 'Selection';\n      // Подбор Установите желтый цвет для статуса 2\n\n      case 50:\n        return 'Securely';\n      // Обеспеченно Установите зелёный цвет для статуса 3\n\n      case 10:\n        return 'Liquidated';\n      // Ликвидированно Установите белый прозрачный цвет для статуса 4\n\n      case 40:\n        return 'Finalist';\n      //  Финалист Установите красный цвет для статуса 5\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Vacations\",\n        children: [isAddingVacancies ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnStaff\",\n          onClick: clickBackButton,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this) : '', isAddingVacancies ? /*#__PURE__*/_jsxDEV(VacanciesAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainerTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btnStaff\",\n                onClick: () => window.location.href = `/department/${localUser.departmentId}`,\n                children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btnStaff\",\n                onClick: clickAdd,\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u044E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                  className: \"ModalInput\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  value: startDate,\n                  onChange: e => handleDateChange('startDate', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this), \"\\u2014\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n                  className: \"ModalInput\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  value: endDate,\n                  onChange: e => handleDateChange('endDate', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filterButton\",\n                  onClick: handleCombinedFilter,\n                  children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filterButton\",\n                  onClick: reset,\n                  children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"ModalInputUpdateSelect\",\n                      onChange: e => handleClickFilter('department', e.target.value),\n                      children: vacancies.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: dep.department_id,\n                        children: dep.department\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      paddingLeft: '20px',\n                      paddingTop: '5px'\n                    },\n                    children: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"ModalInputUpdateSelect\",\n                      onChange: e => handleClickFilter('project', e.target.value),\n                      children: projectIds.map((projectId, id) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: projectId,\n                        children: projectId\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 56\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: company.map((company, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"filtersButton\",\n                  onClick: () => handleClickFilter('company', company.name),\n                  style: {\n                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\n                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\n                  },\n                  children: company.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: status.map((status, id) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'filtersButton' + getColorByStatusId(status.id),\n                  onClick: () => handleClickFilter('status', status.name),\n                  style: {\n                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\n                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\n                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\n                  },\n                  children: status.name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), filteredVacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"VacationsContainer\",\n            children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n              vac: vac,\n              status: status,\n              department: vac.department,\n              vacancies: vac.vacancies\n            }, vac.department, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 41\n            }, this)\n          }, vac.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"9ZzFORg8dqHwfVC/CSB/sHuqp0Q=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useState","Pagination","ModalVacancies","axios","VacanciesItem","Topbar","Sidebar","VacanciesAdd","VacanciesView","departId","localUser","JSON","parse","localStorage","getItem","vacancies","setVacancies","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","status","setStatus","company","setCompany","projectIds","setProjectIds","filteredVacancies","setFilteredVacancies","activeFilters","setActiveFilters","project","department","statuses","get","companies","data","vacancies_function","departmentId","user_id","_id","getVacancies","post","get_vacancies","fetchedVacancies","uniqueProjectIds","Set","forEach","vacancy","project_id","undefined","add","applyFilters","clickAdd","clickBackButton","handleClickFilter","type","value","prevFilters","newFilters","includes","filter","handleDateChange","filters","filtered","department_id","parseInt","length","some","company_name","map","status_name","console","log","String","vacancyDate","Date","create_date","handleCombinedFilter","reset","getColorByStatusId","statusId","Number","window","location","href","padding","marginRight","e","target","display","dep","index","paddingLeft","paddingTop","projectId","id","name","boxShadow","background","opacity","vac"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [projectIds, setProjectIds] = useState([]);\r\n    const [filteredVacancies, setFilteredVacancies] = useState([]);\r\n    const [activeFilters, setActiveFilters] = useState({\r\n\r\n        company: [],\r\n        status: [],\r\n        project: [],\r\n        department: null,\r\n        startDate: null,\r\n        endDate: null\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function = {\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function)\r\n            setVacancies(getVacancies.data[0].get_vacancies);\r\n            const fetchedVacancies = getVacancies.data[0].get_vacancies;\r\n            const uniqueProjectIds = new Set();\r\n\r\n            fetchedVacancies.forEach(department => {\r\n                department.vacancies.forEach(vacancy => {\r\n                    if (vacancy.project_id !== undefined && vacancy.project_id !== null) {\r\n                        uniqueProjectIds.add(vacancy.project_id);\r\n                    }\r\n                });\r\n            });\r\n\r\n            setProjectIds(uniqueProjectIds);\r\n\r\n        }\r\n        VacanciesView()\r\n    }, [departId])\r\n\r\n\r\n    useEffect(() => {\r\n        applyFilters(activeFilters);\r\n    }, [vacancies, activeFilters]);\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true)\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false)\r\n    }\r\n\r\n    const handleClickFilter = (type, value) => {\r\n        setActiveFilters(prevFilters => {\r\n            let newFilters;\r\n            if (type === 'status') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    status: prevFilters.status.includes(value)\r\n                        ? prevFilters.status.filter(status => status !== value)\r\n                        : [...prevFilters.status, value]\r\n                };\r\n            } else if (type === 'company') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    company: prevFilters.company.includes(value)\r\n                        ? prevFilters.company.filter(company => company !== value)\r\n                        : [...prevFilters.company, value]\r\n                };\r\n            } else if (type === 'department') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    department: prevFilters.department === value ? null : value\r\n                };\r\n            } else if (type === 'project') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    project: prevFilters.project.includes(value)\r\n                        ? prevFilters.project.filter(project => project !== value)\r\n                        : [value]\r\n                };\r\n            }\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const handleDateChange = (type, value) => {\r\n        if (type === 'startDate') {\r\n            setStartDate(value);\r\n        } else if (type === 'endDate') {\r\n            setEndDate(value);\r\n        }\r\n    };\r\n\r\n\r\n    const applyFilters = (filters) => {\r\n        let filtered = vacancies;\r\n\r\n        if (filtered) {\r\n            if (filters.department) {\r\n                filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\r\n            }\r\n\r\n            if (filters.company.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.status.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.project.length > 0) {\r\n                console.log('Filtering by project:', filters.project);\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                }));\r\n                console.log('Filtered by project:', filtered);\r\n            }\r\n\r\n            if (filters.startDate || filters.endDate) {\r\n                filtered = filtered.map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => {\r\n                        const vacancyDate = new Date(vacancy.create_date);\r\n                        const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n                        const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n                        return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\r\n                    })\r\n                })).filter(department => department.vacancies.length > 0);\r\n            }\r\n        }\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        setActiveFilters(prevFilters => {\r\n            const newFilters = {\r\n                ...prevFilters,\r\n                startDate: startDate || null,\r\n                endDate: endDate || null\r\n            };\r\n            applyFilters(newFilters);\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const reset = () => {\r\n        setActiveFilters({\r\n            company: [],\r\n            status: [],\r\n            project:[],\r\n            department: null,\r\n            startDate: null,\r\n            endDate: null\r\n        });\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setFilteredVacancies(vacancies);\r\n    };\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (Number(statusId)) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ?\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>:''\r\n                    }\r\n                    {isAddingVacancies ? (\r\n                        <VacanciesAdd/>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"VacationsContainerTop\">\r\n\r\n                                <div>\r\n                                    <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                                    <button className='btnStaff' onClick={clickAdd}>Добавить вакансию</button>\r\n                                </div>\r\n                                <div style={{padding:'20px'}}>\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={(e) => handleDateChange('startDate', e.target.value)}\r\n                                    />\r\n                                    —\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={endDate}\r\n                                        onChange={(e) => handleDateChange('endDate', e.target.value)}\r\n                                    />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                    <div style={{display:'flex'}}>\r\n                                        <div>\r\n                                            <select\r\n                                                className=\"ModalInputUpdateSelect\"\r\n                                                onChange={(e) => handleClickFilter('department', e.target.value)}\r\n                                            >\r\n                                                {vacancies.map((dep, index) => (\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={dep.department_id}\r\n                                                    >\r\n                                                        {dep.department}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div style={{paddingLeft:'20px',paddingTop:'5px'}}>Проект:</div>\r\n                                       <div>\r\n                                               <select\r\n                                                   className='ModalInputUpdateSelect'\r\n                                                   onChange={(e) => handleClickFilter('project', e.target.value)}\r\n\r\n                                               >\r\n                                                   {projectIds.map((projectId, id) => (\r\n                                                       <option\r\n                                                           key={id}\r\n                                                           value={projectId}\r\n                                                       >\r\n                                                           {projectId}\r\n                                                       </option>\r\n                                                   ))}\r\n\r\n                                               </select>\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\r\n                                                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\r\n                                                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                filteredVacancies.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                       department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                            }\r\n\r\n\r\n                            {/*                               {\r\n                                   filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }*/}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}