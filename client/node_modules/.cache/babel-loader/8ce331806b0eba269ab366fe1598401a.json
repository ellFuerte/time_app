{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  inputValueGrade\n}) => {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const [isOpen, setIsOpen] = useState(true);\n  const [find, setFind] = useState([]);\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleClick = (name, grade, id, description, statuses) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesStatuses(statuses);\n      setInputValueStatuses(statuses);\n    }\n  };\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setSearchValue('');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const handleCombinedFilter = () => {\n    if (searchValue.length === 0 && !startDate && !endDate) {\n      // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\n      setFilteredData([]);\n      setFind([]);\n      setIsOpen(true);\n      return;\n    }\n\n    if (searchValue.length !== 0) {\n      // Если есть поисковой запрос, выполняем фильтрацию по нему\n      setFind(vacancies.filter(vac => {\n        return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n      }));\n      setFilteredData([]);\n      setIsOpen(false);\n    } else {\n      // Если нет поискового запроса, выполняем фильтрацию по дате\n      setFilteredData(vacancies.filter(item => {\n        const itemDate = new Date(item.create_date);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        return (!start || itemDate >= start) && (!end || itemDate <= end);\n      }));\n      setFind([]);\n      setIsOpen(false);\n    }\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"item-01\",\n          children: vac.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"item-11\",\n          children: date === vac.create_date ? 'NEW' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"item-21\",\n          children: vac.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"item-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"item-41\",\n          children: moment(vac.create_date).format('DD.MM.YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divHistory\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalButton\",\n            type: \"submit\",\n            onClick: ChangeData,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(VacanciesItem, \"5Lm1vGcMdxDFmPskLQUY4HISBHc=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","inputValueGrade","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","isOpen","setIsOpen","find","setFind","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","searchValue","setSearchValue","handleClick","name","grade","id","description","statuses","isAdmin","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","setInputValueGrade","handleStatusesInputChange","reset","current","handleStartDateChange","handleEndDateChange","selectValue","handleCombinedFilter","length","filter","vac","toLowerCase","includes","item","itemDate","Date","create_date","start","end","ChangeData","namevacanciesId","namevacancies","Statuses","res","put","date","format","map","status_id"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,inputValueGrade})=> {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const [isOpen, setIsOpen] = useState(true)\r\n    const [find, setFind] = useState([])\r\n\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n\r\n\r\n    const handleClick = (name, grade,id,description,statuses) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n\r\n\r\n            setSelectedVacanciesStatuses(statuses)\r\n            setInputValueStatuses(statuses)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setSearchValue('')\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n            setFilteredData([]);\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n            setFind([]);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>{department}</div>\r\n                {vacancies.map(vac => (\r\n                    <div className='VacationsContainer' onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                        <div id=\"item-01\">{vac.name}</div>\r\n                        <div id=\"item-11\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                        <div id=\"item-21\">{vac.description}</div>\r\n                        <div id=\"item-31\"></div>\r\n                        <div id=\"item-41\">{moment(vac.create_date).format('DD.MM.YYYY')}</div>\r\n                    </div>\r\n                ))}\r\n\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <hr/>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea  className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        Статус\r\n                    </div>\r\n                    <div>\r\n                        <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                            {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>Грейд</label>\r\n                        </div>\r\n                        <input type='number'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}