{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [find, setFind] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const status = await axios.get('/api/Vacations/?status=status');\n      setStatus(status.data);\n      const vacancies_post = {\n        departId: localUser.departmentId,\n        user_id: localUser._id\n      };\n      const getVacancies1 = await axios.post('/api/Vacations_function/', vacancies_post);\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        setVacancies(getVacancies1.data[0].get_vacancies); // Установка нового массива вакансий\n\n        console.log('sort=', getVacancies1.data[0].get_vacancies.department);\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]); // Обработчик изменения значения для поля ввода с именем\n\n  const reset = () => {\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const handleCombinedFilter = () => {\n    if (searchValue.length === 0 && !startDate && !endDate) {\n      // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\n      setFilteredData([]);\n      setFind([]);\n      setIsOpen(true);\n      return;\n    }\n\n    if (searchValue.length !== 0) {\n      // Если есть поисковой запрос, выполняем фильтрацию по нему\n      setFind(vacancies.filter(vac => {\n        return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n      }));\n      setIsOpen(false);\n    } else {\n      // Если нет поискового запроса, выполняем фильтрацию по дате\n      setFilteredData(vacancies.filter(item => {\n        const itemDate = new Date(item.create_date);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        return (!start || itemDate >= start) && (!end || itemDate <= end);\n      }));\n      setIsOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCombinedFilter,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: reset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          status: status,\n          department: vac.department,\n          vacancies: vac.vacancies\n        }, vac.department, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: find.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsContainer\",\n          children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n            vac: vac,\n            status: status,\n            department: vac.department,\n            vacancies: vac.vacancies\n          }, vac.department, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          status: status,\n          department: vac.department,\n          vacancies: vac.vacancies\n        }, vac.department, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"1TS1ZCOZ8Dr69ZJgS+rkm7PaER4=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesView","departId","searchValue","setSearchValue","isOpen","setIsOpen","vacancies","setVacancies","find","setFind","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","localUser","JSON","parse","localStorage","getItem","get","data","vacancies_post","departmentId","user_id","_id","getVacancies1","post","get_vacancies","console","log","department","reset","handleStartDateChange","e","target","value","handleEndDateChange","handleCombinedFilter","length","filter","vac","name","toLowerCase","includes","item","itemDate","Date","create_date","start","end","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;;AAIA,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAGA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AAIA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMuB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,aAAa,GAAG,YAAY;AAC9B,YAAMgB,MAAM,GAAG,MAAMlB,KAAK,CAACyB,GAAN,CAAU,+BAAV,CAArB;AACAN,MAAAA,SAAS,CAACD,MAAM,CAACQ,IAAR,CAAT;AAEA,YAAMC,cAAc,GAAC;AACjBxB,QAAAA,QAAQ,EAAEiB,SAAS,CAACQ,YADH;AAEjBC,QAAAA,OAAO,EAAET,SAAS,CAACU;AAFF,OAArB;AAIA,YAAMC,aAAa,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAW,0BAAX,EAAsCL,cAAtC,CAA5B;;AAEA,UAAIrB,MAAJ,EAAY;AACR;AACAG,QAAAA,YAAY,CAACsB,aAAa,CAACL,IAAd,CAAmB,CAAnB,EAAsBO,aAAvB,CAAZ,CAFQ,CAE2C;;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,aAAa,CAACL,IAAd,CAAmB,CAAnB,EAAsBO,aAAtB,CAAoCG,UAAxD;AACH;AACJ,KAfD;;AAkBAlC,IAAAA,aAAa;AAChB,GApBQ,EAoBN,CAACI,MAAD,EAASH,QAAT,CApBM,CAAT,CAnB6B,CA2C7B;;AAGA,QAAMkC,KAAK,GAAG,MAAM;AAChBxB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD;;AAMA,QAAMuB,qBAAqB,GAAIC,CAAD,IAAO;AACjC1B,IAAAA,YAAY,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAIH,CAAD,IAAO;AAC/BxB,IAAAA,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAKA,QAAME,oBAAoB,GAAG,MAAM;AAC/B,QAAIvC,WAAW,CAACwC,MAAZ,KAAuB,CAAvB,IAA4B,CAAChC,SAA7B,IAA0C,CAACE,OAA/C,EAAwD;AACpD;AACAG,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAN,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACH;;AAED,QAAIH,WAAW,CAACwC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B;AACAjC,MAAAA,OAAO,CAACH,SAAS,CAACqC,MAAV,CAAiBC,GAAG,IAAI;AAC5B,eAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgC7C,WAAW,CAAC4C,WAAZ,EAAhC,CAAP;AACH,OAFO,CAAD,CAAP;AAIAzC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAPD,MAOO;AACH;AACAU,MAAAA,eAAe,CAACT,SAAS,CAACqC,MAAV,CAAiBK,IAAI,IAAI;AACrC,cAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,WAAd,CAAjB;AACA,cAAMC,KAAK,GAAG1C,SAAS,GAAG,IAAIwC,IAAJ,CAASxC,SAAT,CAAH,GAAyB,IAAhD;AACA,cAAM2C,GAAG,GAAGzC,OAAO,GAAG,IAAIsC,IAAJ,CAAStC,OAAT,CAAH,GAAuB,IAA1C;AACA,eAAO,CAAC,CAACwC,KAAD,IAAUH,QAAQ,IAAIG,KAAvB,MAAkC,CAACC,GAAD,IAAQJ,QAAQ,IAAII,GAAtD,CAAP;AACH,OALe,CAAD,CAAf;AAOAhD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GA3BD;;AAiCA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAkBQ;AAAA;AAAA;AAAA;AAAA,gBAlBR,eAmBI;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAC,2EAFhB;AAGI,YAAA,SAAS,EAAC,YAHd;AAII,YAAA,KAAK,EAAE;AAAC,6BAAe;AAAhB,aAJX;AAKI,YAAA,KAAK,EAAEK,SALX;AAKsB,YAAA,QAAQ,EAAE0B;AALhC;AAAA;AAAA;AAAA;AAAA,kBADJ,4BAOU;AACN,YAAA,IAAI,EAAC,MADC;AAEN,YAAA,WAAW,EAAC,2EAFN;AAGN,YAAA,SAAS,EAAC,YAHJ;AAIN,YAAA,KAAK,EAAE;AAAC,6BAAe;AAAhB,aAJD;AAKN,YAAA,KAAK,EAAExB,OALD;AAKU,YAAA,QAAQ,EAAE4B;AALpB;AAAA;AAAA;AAAA;AAAA,kBAPV,eAcQ;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAEC,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdR,eAeQ;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAEN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EA0CK/B,MAAM,GACHE,SAAS,CAACgD,GAAV,CAAc,CAACV,GAAD,EAAMW,EAAN,kBACV;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,GAAG,EAAEX,GAApB;AAA8C,UAAA,MAAM,EAAE5B,MAAtD;AAA8D,UAAA,UAAU,EAAE4B,GAAG,CAACV,UAA9E;AAA0F,UAAA,SAAS,EAAEU,GAAG,CAACtC;AAAzG,WAA8BsC,GAAG,CAACV,UAAlC;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyCqB,EAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,CADG,gBAOH;AAAA,kBACK/C,IAAI,CAAC8C,GAAL,CAAS,CAACV,GAAD,EAAMW,EAAN,kBAAc;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCAChB,QAAC,aAAD;AAAe,YAAA,GAAG,EAAEX,GAApB;AAA8C,YAAA,MAAM,EAAE5B,MAAtD;AAA8D,YAAA,UAAU,EAAE4B,GAAG,CAACV,UAA9E;AAA0F,YAAA,SAAS,EAAEU,GAAG,CAACtC;AAAzG,aAA8BsC,GAAG,CAACV,UAAlC;AAAA;AAAA;AAAA;AAAA;AADgB,WAAyCqB,EAAzC;AAAA;AAAA;AAAA;AAAA,gBAAvB;AADL;AAAA;AAAA;AAAA;AAAA,cAjDR,EA0DKzC,YAAY,CAACwC,GAAb,CAAiBV,GAAG,iBACjB;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,GAApB;AAA+C,UAAA,MAAM,EAAE5B,MAAvD;AAA+D,UAAA,UAAU,EAAE4B,GAAG,CAACV,UAA/E;AAA2F,UAAA,SAAS,EAAEU,GAAG,CAACtC;AAA1G,WAA8BsC,GAAG,CAACV,UAAlC;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyCU,GAAG,CAACW,EAA7C;AAAA;AAAA;AAAA;AAAA,cADH,CA1DL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiEI;AAAA;AAAA;AAAA;AAAA,YAjEJ,eA8HI;AAAA;AAAA;AAAA;AAAA,YA9HJ;AAAA,kBADJ;AAqIH;;GAnOQvD,a;;KAAAA,a;AAqOT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [find, setFind] = useState([])\r\n\r\n\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n\r\n\r\n    const [status, setStatus] = useState([])\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    useEffect(() => {\r\n        const VacanciesView = async () => {\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n\r\n            const vacancies_post={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n            const getVacancies1 = await axios.post('/api/Vacations_function/',vacancies_post)\r\n\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                setVacancies(getVacancies1.data[0].get_vacancies); // Установка нового массива вакансий\r\n                console.log('sort=',getVacancies1.data[0].get_vacancies.department)\r\n            }\r\n        }\r\n\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n\r\n    // Обработчик изменения значения для поля ввода с именем\r\n\r\n\r\n    const reset = () => {\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n{/*                    <div className=\"VacationsMain\">\r\n\r\n                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />\r\n                           <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n\r\n                    </div>*/}\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {isOpen ? (\r\n                    vacancies.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id}>\r\n                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>\r\n                        {find.map((vac, id) => (<div className='VacationsContainer' key={id}>\r\n                                <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}>\r\n                        <VacanciesItem vac={vac} key={vac.department}  status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n\r\n\r\n\r\n{/*                <div style={{textAlign:'center'}}>\r\n\r\n                {isOpen ?\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={vacancies.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n                    :\r\n\r\n                    <Pagination postsPerPage={postsPerPageVacancies} totalPosts={find.length}\r\n                                paginate={paginateVacancies}\r\n                                currentPage={currentPageVacancies}/>}\r\n                </div>*/}\r\n\r\n\r\n{/*            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                           value={inputValueDescription}\r\n                           onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                    <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>*/}\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}