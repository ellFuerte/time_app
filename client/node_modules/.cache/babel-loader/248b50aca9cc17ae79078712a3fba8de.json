{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport TreeView from 'react-treeview';\nimport 'react-treeview/react-treeview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [dep, setDep] = useState([]);\n  const [expandedIds, setExpandedIds] = useState([]); // Функция для поиска департамента по его id в иерархической структуре данных\n\n  const findDepartmentById = (departments, idToFind) => {\n    for (const node of departments) {\n      if (node.department_tree_to_json.id === idToFind) {\n        return node; // Нашли департамент, возвращаем его\n      }\n\n      if (node.department_tree_to_json.Subclasses) {\n        const found = findDepartmentById(node.department_tree_to_json.Subclasses, idToFind);\n\n        if (found) {\n          return found; // Нашли вложенный департамент, возвращаем его\n        }\n      }\n    }\n\n    return null; // Департамент не найден\n  };\n\n  useEffect(() => {\n    const getDeps = async () => {\n      try {\n        const res = await axios.get('/api/department_tree_to_json/');\n\n        if (res.data[0].department_tree_to_json.length === 0) {\n          setDep([]);\n        } else {\n          setDep(res.data);\n          const idToExpand = 7; // id департамента для раскрытия\n\n          const depToExpand = findDepartmentById(res.data, idToExpand);\n\n          if (depToExpand) {\n            setExpandedIds([depToExpand.department_tree_to_json.id]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n\n    getDeps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarWrapper\",\n      children: dep.length >= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"treeWrapper\",\n          children: dep.map((node, i) => {\n            const label = /*#__PURE__*/_jsxDEV(Link, {\n              to: `/department/${node.department_tree_to_json.id}`,\n              className: \"level1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"node\",\n                children: node.department_tree_to_json.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this);\n\n            return /*#__PURE__*/_jsxDEV(TreeView, {\n              nodeLabel: label,\n              defaultCollapsed: !expandedIds.includes(node.department_tree_to_json.id),\n              children: node.department_tree_to_json.Subclasses.map(departments => /*#__PURE__*/_jsxDEV(TreeView, {\n                nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/department/${departments.id}`,\n                  className: \"depsUser\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"node\",\n                    children: departments.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 57\n                  }, this)\n                }, departments.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 53\n                }, this),\n                defaultCollapsed: true,\n                children: !!departments.Subclasses && departments.Subclasses.map(departments1 => /*#__PURE__*/_jsxDEV(TreeView, {\n                  nodeLabel: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments1.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"node\",\n                      children: departments1.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 65\n                    }, this)\n                  }, departments1.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 61\n                  }, this),\n                  defaultCollapsed: true,\n                  children: !!departments1.Subclasses && departments1.Subclasses.map(departments2 => /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/department/${departments2.id}`,\n                    className: \"depsUser\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        paddingBottom: '8px'\n                      },\n                      children: departments2.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 65\n                    }, this)\n                  }, departments2.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 61\n                  }, this))\n                }, departments1.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 53\n                }, this))\n              }, departments.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this))\n            }, node.department_tree_to_json.Name + '|' + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sidebar, \"zgiPLKBnYQpcR/0CqLnLqlRHh2o=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Link","axios","useEffect","useState","TreeView","Sidebar","dep","setDep","expandedIds","setExpandedIds","findDepartmentById","departments","idToFind","node","department_tree_to_json","id","Subclasses","found","getDeps","res","get","data","length","idToExpand","depToExpand","error","console","map","i","label","Name","includes","departments1","departments2","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([]);\r\n    const [expandedIds, setExpandedIds] = useState([]);\r\n\r\n    // Функция для поиска департамента по его id в иерархической структуре данных\r\n    const findDepartmentById = (departments, idToFind) => {\r\n        for (const node of departments) {\r\n            if (node.department_tree_to_json.id === idToFind) {\r\n                return node; // Нашли департамент, возвращаем его\r\n            }\r\n            if (node.department_tree_to_json.Subclasses) {\r\n                const found = findDepartmentById(node.department_tree_to_json.Subclasses, idToFind);\r\n                if (found) {\r\n                    return found; // Нашли вложенный департамент, возвращаем его\r\n                }\r\n            }\r\n        }\r\n        return null; // Департамент не найден\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            try {\r\n                const res = await axios.get('/api/department_tree_to_json/');\r\n                if (res.data[0].department_tree_to_json.length === 0) {\r\n                    setDep([]);\r\n                } else {\r\n                    setDep(res.data);\r\n                    const idToExpand = 7; // id департамента для раскрытия\r\n                    const depToExpand = findDepartmentById(res.data, idToExpand);\r\n                    if (depToExpand) {\r\n                        setExpandedIds([depToExpand.department_tree_to_json.id]);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => {\r\n                                const label = (\r\n                                    <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                        <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                    </Link>\r\n                                );\r\n\r\n                                return (\r\n                                    <TreeView\r\n                                        key={node.department_tree_to_json.Name + '|' + i}\r\n                                        nodeLabel={label}\r\n                                        defaultCollapsed={!expandedIds.includes(node.department_tree_to_json.id)}\r\n                                    >\r\n                                        {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                            <TreeView\r\n                                                nodeLabel={(\r\n                                                    <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                                        <span className=\"node\">{departments.Name}</span>\r\n                                                    </Link>\r\n                                                )}\r\n                                                key={departments.id}\r\n                                                defaultCollapsed={true}\r\n                                            >\r\n                                                {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                    <TreeView\r\n                                                        nodeLabel={(\r\n                                                            <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                                <span className=\"node\">{departments1.Name}</span>\r\n                                                            </Link>\r\n                                                        )}\r\n                                                        key={departments1.id}\r\n                                                        defaultCollapsed={true}\r\n                                                    >\r\n                                                        {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                            <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                                <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                            </Link>\r\n                                                        ))}\r\n                                                    </TreeView>\r\n                                                ))}\r\n                                            </TreeView>\r\n                                        ))}\r\n                                    </TreeView>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}