{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\time_app\\\\client\\\\src\\\\components\\\\Employee\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Delete } from '@material-ui/icons';\nimport axios from 'axios';\nimport './Employee.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Employee({\n  user\n}) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const usersStatuses = {\n    0: '',\n    1: 'start',\n    2: 'end',\n    5: 'sick_leave',\n    4: 'deleted',\n    3: 'vacation',\n    6: 'time_off',\n    7: 'other'\n  };\n\n  function findStatus(k) {\n    for (let i in usersStatuses) {\n      if (i == k) {\n        return usersStatuses[i];\n      }\n    }\n  }\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  /*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n    useEffect(() => {\r\n      const fetchUser = async () => {\r\n        const res = await axios.get('/api/post/')\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.workStart) - new Date(p1.workStart)\r\n        })\r\n        let data = (res.data[0].workEnd)\r\n        data = new Date(data)\r\n        data = data.toLocaleString()\r\n        data = data.split(',')\r\n        let dataF = data[0].split('.')\r\n        let dataS = data[1].split(':')\r\n        dataF = dataF[0]+'/'+dataF[1]\r\n        dataS = dataS[0]+':'+dataS[1]\r\n        setDate(dataF)\r\n        setTime(dataS)\r\n      }\r\n      if(user.status === 2){\r\n        fetchUser()\r\n      }\r\n    }, [user._id])*/\n\n  const [dateStart, setDateStart] = useState(null);\n  const [dateEnd, setDateEnd] = useState(null); // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get('/api/vacation?id=' + localUser._id);\n      console.log(res.data);\n\n      if (res.data.length === 0) {\n        console.log(\"ПУСТО\");\n      } else {\n        global.workdate = res.data[0].workdate;\n        global.workend = res.data[0].worked;\n      }\n    };\n\n    if (user.status === 3) {\n      fetchUser();\n    }\n  }, [user._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.status === 4 && !localUser.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user.id}`,\n      className: 'employee ' + findStatus(user.status),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: localUser.isAdmin ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.id}`,\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divname\",\n        children: user.user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"down\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"downRight\",\n          children: [user.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [date, \" \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 64\n          }, this), user.status === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px'\n            },\n            children: [global.workdate, \" - \", global.worked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(Employee, \"2X4cimOIu3H9qB1GFi09W9Al5K4=\");\n\n_c = Employee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["D:/Download/time_app/client/src/components/Employee/Employee.jsx"],"names":["Link","Delete","axios","useEffect","useState","Employee","user","localUser","JSON","parse","localStorage","getItem","usersStatuses","findStatus","k","i","date","setDate","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","fetchUser","res","get","_id","console","log","data","length","global","workdate","workend","worked","status","isAdmin","id","user_name","fontSize"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { Delete } from '@material-ui/icons'\r\nimport axios from 'axios'\r\n\r\nimport './Employee.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Employee({user}) {\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {0: '', 1: 'start', 2: 'end', 5: 'sick_leave', 4: 'deleted' ,3: 'vacation',6: 'time_off',7: 'other'}\r\n  \r\n  function findStatus(k){\r\n    for(let i in usersStatuses){\r\n      if(i == k){\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  const [date, setDate] = useState(null)\r\n  const [time, setTime] = useState(null)\r\n\r\n/*  // Проверка, если пользователь закончил работу, то вывод даты, когда он закончил\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/post/')\r\n      res.data.sort((p1, p2) => {\r\n        return new Date(p2.workStart) - new Date(p1.workStart)\r\n      })\r\n      let data = (res.data[0].workEnd)\r\n      data = new Date(data)\r\n      data = data.toLocaleString()\r\n      data = data.split(',')\r\n      let dataF = data[0].split('.')\r\n      let dataS = data[1].split(':')\r\n      dataF = dataF[0]+'/'+dataF[1]\r\n      dataS = dataS[0]+':'+dataS[1]\r\n      setDate(dataF)\r\n      setTime(dataS)\r\n    }\r\n    if(user.status === 2){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])*/\r\n\r\n  const [dateStart, setDateStart] = useState(null)\r\n  const [dateEnd, setDateEnd] = useState(null)\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n    const res = await axios.get('/api/vacation?id='+localUser._id)\r\n    console.log(res.data)\r\n      if(res.data.length===0){\r\n        console.log(\"ПУСТО\")\r\n      }else{\r\n    global.workdate=res.data[0].workdate\r\n    global.workend=res.data[0].worked\r\n  }}\r\n\r\n\r\n    if(user.status === 3){\r\n      fetchUser()\r\n    }\r\n  }, [user._id])\r\n\r\n  return (<>\r\n    {user.status === 4 && !localUser.isAdmin\r\n      ? <div></div> \r\n        : <Link to={`/profile/${user.id}`} className={'employee ' + (findStatus(user.status))}>\r\n          <div className='top'>\r\n            {localUser.isAdmin\r\n              ? <Link to={`/profile/${user.id}`} className='name'><span></span></Link>\r\n              : <div className='name'><span>{user.user_name}</span></div>\r\n            }\r\n          </div>\r\n          <div className='divname'>{user.user_name}</div>\r\n          <div className='down'>\r\n              <div className='downRight'>\r\n                {/*<div className='emailEmployee'>{user.email}</div>*/}\r\n                {user.status === 2 && <div>{date} {time}</div>}<br/>\r\n                {user.status === 3 && <div style={{fontSize:'14px'}}>{global.workdate} - {global.worked}</div>}\r\n                </div>\r\n          </div>\r\n        </Link>\r\n    }</>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}