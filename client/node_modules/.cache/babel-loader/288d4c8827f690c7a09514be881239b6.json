{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\Pagination\\\\Pagination.jsx\";\nimport './Pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  postsPerPage,\n  totalPosts,\n  paginate,\n  currentPage\n}) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pageNumbers.length > 1 ? pageNumbers.map((number, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: currentPage === number ? 'pageItemNow' : `pageItem`,\n      onClick: () => paginate(number),\n      children: number\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"}\"]\n  }, void 0, true);\n}\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/time_app/client/src/components/Pagination/Pagination.jsx"],"names":["Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","length","map","number","id"],"mappings":";AAAA,OAAO,kBAAP;;;AAEA,eAAe,SAASA,UAAT,CAAoB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAApB,EAAwE;AACrF,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGD,YAAvB,CAArB,EAA2DK,CAAC,EAA5D,EAA+D;AAC7DD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,sBACE;AAAA,eAGUD,WAAW,CAACK,MAAZ,GAAqB,CAArB,GACAL,WAAW,CAACM,GAAZ,CAAgB,CAACC,MAAD,EAASC,EAAT,kBACd;AAAc,MAAA,SAAS,EAAET,WAAW,KAAKQ,MAAhB,GAAyB,aAAzB,GAA0C,UAAnE;AAA8E,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACS,MAAD,CAArG;AAAA,gBACGA;AADH,OAAUC,EAAV;AAAA;AAAA;AAAA;AAAA,YADF,CADA,gBAKK,qCARf;AAAA,kBADF;AAgBD;KAvBuBb,U","sourcesContent":["import './Pagination.css'\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, paginate, currentPage}) {\r\n  const pageNumbers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n            { pageNumbers.length > 1 ?\r\n              pageNumbers.map((number, id) => (\r\n                <div key={id} className={currentPage === number ? 'pageItemNow' : `pageItem`} onClick={() => paginate(number)}>\r\n                  {number}\r\n                </div>\r\n              )) : <></>\r\n            }\r\n\r\n\r\n      }\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}