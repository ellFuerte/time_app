{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView(departId) {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const [currentPageVacancies, setCurrentPageVacancies] = useState(1);\n  const [postsPerPageVacancies] = useState(5);\n  const [vacancies, setVacancies] = useState([]);\n  const [find, setFind] = useState([]);\n  const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies;\n  const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies;\n  const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies);\n\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [status, setStatus] = useState([]);\n  useEffect(() => {\n    const VacanciesView = async () => {\n      const status = await axios.get('/api/Vacations/?status=status');\n      setStatus(status.data);\n      const getVacancies = await axios.get('/api/Vacations_function/');\n      const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\n\n      if (isOpen) {\n        // Фильтрация вакансий по departId\n        const filteredVacancies = sortedVacancies.filter(item => item.team_id === localUser.departmentId);\n        setVacancies(getVacancies); // Установка нового массива вакансий\n      }\n    };\n\n    VacanciesView();\n  }, [isOpen, departId]);\n\n  const handleClick = (name, grade, id, description, statuses) => {\n    if (localUser.isAdmin === true) {\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(statuses);\n      setInputValueStatuses(statuses);\n    }\n  }; // Обработчик изменения значения для поля ввода с именем\n\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const handleStatusesInputChange = e => {\n    setInputValueStatuses(e.target.value);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n    setSearchValue('');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const handleCombinedFilter = () => {\n    if (searchValue.length === 0 && !startDate && !endDate) {\n      // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\n      setFilteredData([]);\n      setFind([]);\n      setIsOpen(true);\n      return;\n    }\n\n    if (searchValue.length !== 0) {\n      // Если есть поисковой запрос, выполняем фильтрацию по нему\n      setFind(vacancies.filter(vac => {\n        return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n      }));\n      setFilteredData([]);\n      setIsOpen(false);\n    } else {\n      // Если нет поискового запроса, выполняем фильтрацию по дате\n      setFilteredData(vacancies.filter(item => {\n        const itemDate = new Date(item.create_date);\n        const start = startDate ? new Date(startDate) : null;\n        const end = endDate ? new Date(endDate) : null;\n        return (!start || itemDate >= start) && (!end || itemDate <= end);\n      }));\n      setFind([]);\n      setIsOpen(false);\n    }\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsMain\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            onChange: e => setSearchValue(e.target.value),\n            ref: searchRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), \"\\u2014   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            },\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCombinedFilter,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: reset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), isOpen ? vacancies.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac,\n          departId: departId.departId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentlySearch.map((vac, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsContainer\",\n          onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n          children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n            vac: vac,\n            departId: departId.departId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 60\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), filteredData.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => handleClick(vac.name, vac.grade),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vac: vac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"ModalInputVacancies\",\n          value: inputValue,\n          onChange: handleNameInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textDescription\",\n          value: inputValueDescription,\n          onChange: handleDescriptionInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: statusRef,\n          value: inputValueStatuses,\n          onChange: selectValue,\n          children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.id,\n            children: status.name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValueGrade,\n          onChange: handleGradeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHistory\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          type: \"submit\",\n          onClick: ChangeData,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"39nDIBvUopiuneNLzafdp0q6S78=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Pagination","ModalVacancies","axios","VacanciesItem","VacanciesView","departId","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","searchValue","setSearchValue","isOpen","setIsOpen","currentPage","setCurrentPage","postsPerPage","currentPageVacancies","setCurrentPageVacancies","postsPerPageVacancies","vacancies","setVacancies","find","setFind","lastPostIndexVacancies","firstPostIndexVacancies","currentlySearch","slice","paginate","pageNumber","paginateVacancies","pageNumberVacancies","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","filteredData","setFilteredData","status","setStatus","get","data","getVacancies","sortedVacancies","sort","a","b","create_date","localeCompare","filteredVacancies","filter","item","team_id","departmentId","handleClick","name","grade","id","description","statuses","isAdmin","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","handleStatusesInputChange","reset","current","handleStartDateChange","handleEndDateChange","selectValue","handleCombinedFilter","length","vac","toLowerCase","includes","itemDate","Date","start","end","ChangeData","namevacanciesId","namevacancies","Statuses","res","put","map","status_id"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(5)\r\n\r\n    const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n    const [postsPerPageVacancies] = useState(5)\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [find, setFind] = useState([])\r\n\r\n\r\n\r\n    const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies\r\n    const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPageVacancies\r\n    const currentlySearch = find.slice(firstPostIndexVacancies, lastPostIndexVacancies)\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n    const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies)\r\n\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [status, setStatus] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const VacanciesView = async () => {\r\n            const status = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(status.data)\r\n            const getVacancies = await axios.get('/api/Vacations_function/')\r\n\r\n            const sortedVacancies = getVacancies.data.sort((a, b) => b.create_date.localeCompare(a.create_date));\r\n            if (isOpen) {\r\n                // Фильтрация вакансий по departId\r\n                const filteredVacancies = sortedVacancies.filter(item => item.team_id === localUser.departmentId);\r\n                setVacancies(getVacancies); // Установка нового массива вакансий\r\n            }\r\n        }\r\n\r\n        VacanciesView()\r\n    }, [isOpen, departId])\r\n\r\n\r\n    const handleClick = (name, grade,id,description,statuses) => {\r\n        if(localUser.isAdmin===true) {\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(statuses)\r\n            setInputValueStatuses(statuses)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Обработчик изменения значения для поля ввода с именем\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n    const handleStatusesInputChange = (e) => {\r\n        setInputValueStatuses(e.target.value);\r\n    }\r\n\r\n    const reset = () => {\r\n        searchRef.current.value = ''\r\n        setSearchValue('')\r\n        setStartDate('')\r\n        setEndDate('')\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value)\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value)\r\n    }\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        if (searchValue.length === 0 && !startDate && !endDate) {\r\n            // Если нет поискового запроса и не выбраны даты, просто отобразите сообщение об ошибке или что-то подобное\r\n            setFilteredData([]);\r\n            setFind([]);\r\n            setIsOpen(true)\r\n            return\r\n        }\r\n\r\n        if (searchValue.length !== 0) {\r\n            // Если есть поисковой запрос, выполняем фильтрацию по нему\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase());\r\n            }));\r\n            setFilteredData([]);\r\n            setIsOpen(false);\r\n        } else {\r\n            // Если нет поискового запроса, выполняем фильтрацию по дате\r\n            setFilteredData(vacancies.filter(item => {\r\n                const itemDate = new Date(item.create_date);\r\n                const start = startDate ? new Date(startDate) : null;\r\n                const end = endDate ? new Date(endDate) : null;\r\n                return (!start || itemDate >= start) && (!end || itemDate <= end);\r\n            }));\r\n            setFind([]);\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n    const ChangeData ={\r\n    namevacanciesId:vacanciesId,\r\n    namevacancies:inputValue,\r\n    description:inputValueDescription,\r\n    Statuses:inputValueStatuses,\r\n    grade:inputValueGrade,\r\n    statuses:statusRef.current.value\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n                    <div className=\"VacationsMain\">\r\n\r\n                            <input\r\n                                type='search'\r\n                                placeholder=\"Наименование вакансии\"\r\n                                className=\"ModalInput\"\r\n                                style={{'marginRight': '10px'}}\r\n                                onChange={(e) => setSearchValue(e.target.value)}\r\n                                ref={searchRef}\r\n                            />\r\n{/*                            <select ref={department} className='depsView'>\r\n                                {deps.map((dep, name) => <option selected={dep.id === departId.departId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>*/}\r\n\r\n                    </div>\r\n                        <br/>\r\n                    <div>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                            value={startDate} onChange={handleStartDateChange}\r\n                        />—   <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        value={endDate} onChange={handleEndDateChange}\r\n                    />\r\n                            <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                            <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                    </div>\r\n\r\n                </div>\r\n                {isOpen ? (\r\n                    vacancies.map((vac, id) => (\r\n                        <div className='VacationsContainer' key={id} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                            <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>\r\n                        {currentlySearch.map((vac, id) => (<div className='VacationsContainer' key={id} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                                <VacanciesItem vac={vac} departId={departId.departId}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {filteredData.map(vac => (\r\n                    <div className='VacationsContainer' key={vac.id}\r\n                         onClick={() => handleClick(vac.name, vac.grade)}>\r\n                        <VacanciesItem vac={vac}/>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <br/>\r\n\r\n\r\n\r\n            <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                <hr/>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValue}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea  className='textDescription'\r\n                           value={inputValueDescription}\r\n                           onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    Статус\r\n                </div>\r\n                <div>\r\n                    <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                        {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div>\r\n                    <label>Грейд</label>\r\n                    </div>\r\n                    <input type='number'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='divHistory'>\r\n                    История\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                    Сохранить\r\n                </button>\r\n                </div>\r\n            </ModalVacancies>\r\n            <div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}