{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesView\\\\VacanciesView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Topbar from '../Topbar/Topbar';\nimport Pagination from \"../Pagination/Pagination\";\nimport ModalVacations from \"../Templates/ModalVacations/ModalVacations\";\nimport axios from \"axios\";\nimport './VacanciesView.css';\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VacanciesView() {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [modalVacations, setModalVacations] = useState(false);\n  const [deps, setDeps] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [find, setFind] = useState([]);\n  const [isOpen, setIsOpen] = useState(true);\n  const [vacancies, setVacancies] = useState([]);\n  const [currentPageVacancies, setCurrentPageVacancies] = useState(1);\n  const [postsPerPageVacancies] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(3);\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex);\n  const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies;\n  const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPage;\n  const currentlyVacancies = find.slice(firstPostIndexVacancies, lastPostIndexVacancies);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies);\n\n  const department = useRef();\n  const searchRef = useRef();\n  useEffect(() => {\n    const VacationsView = async () => {\n      const res = await axios.get('/api/departments/');\n      setDeps(res.data);\n      const getVacancies = await axios.get('/api/Vacations/');\n      setVacancies(getVacancies.data);\n    };\n\n    VacationsView();\n  }, []);\n\n  const search = () => {\n    setFind(vacancies.filter(vac => {\n      return vac.name.toLowerCase().includes(searchValue.toLowerCase());\n    }));\n    setIsOpen(false);\n  };\n\n  const reset = () => {\n    searchRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Vacations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainerTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsMain\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438\",\n              className: \"ModalInput\",\n              style: {\n                'marginRight': '10px'\n              },\n              onChange: e => setSearchValue(e.target.value),\n              ref: searchRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              ref: department,\n              className: \"depsView\",\n              children: deps.map((dep, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: dep.id === localUser.departmentId,\n                value: dep.id,\n                children: dep.department_name\n              }, name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 54\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filterButton\",\n              onClick: search,\n              children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filterButton\",\n              onClick: reset,\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), \"\\u2014  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n            className: \"ModalInput\",\n            style: {\n              'marginRight': '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), isOpen ? currentlyPosts.map((vacancies, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VacationsContainer\",\n        onClick: () => setModalVacations(true),\n        children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n          vacancies: vacancies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentlyVacancies.map((vacancies, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VacationsContainer\",\n          onClick: () => setModalVacations(true),\n          children: /*#__PURE__*/_jsxDEV(VacanciesItem, {\n            vacancies: vacancies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pagination\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPageVacancies,\n        totalPosts: '1',\n        paginateVacancies: paginateVacancies,\n        currentPage: currentPageVacancies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalVacations, {\n      active: modalVacations,\n      setActive: setModalVacations,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ModalButton\",\n        type: \"submit\",\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VacanciesView, \"Q7AJEe2P5nu8lb1UX9/eQ3+owLI=\");\n\n_c = VacanciesView;\nexport default VacanciesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesView\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesView/VacanciesView.jsx"],"names":["React","useEffect","useRef","useState","Topbar","Pagination","ModalVacations","axios","VacanciesItem","VacanciesView","localUser","JSON","parse","localStorage","getItem","modalVacations","setModalVacations","deps","setDeps","searchValue","setSearchValue","find","setFind","isOpen","setIsOpen","vacancies","setVacancies","currentPageVacancies","setCurrentPageVacancies","postsPerPageVacancies","currentPage","setCurrentPage","postsPerPage","lastPostIndex","firstPostIndex","currentlyPosts","slice","lastPostIndexVacancies","firstPostIndexVacancies","currentlyVacancies","paginate","pageNumber","paginateVacancies","pageNumberVacancies","department","searchRef","VacationsView","res","get","data","getVacancies","search","filter","vac","name","toLowerCase","includes","reset","current","value","e","target","map","dep","id","departmentId","department_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;;AAKA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACwB,oBAAD,EAAuBC,uBAAvB,IAAkDzB,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAAC0B,qBAAD,IAA0B1B,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC6B,YAAD,IAAiB7B,QAAQ,CAAC,CAAD,CAA/B;AAEA,QAAM8B,aAAa,GAAGH,WAAW,GAAGE,YAApC;AACA,QAAME,cAAc,GAAGD,aAAa,GAAGD,YAAvC;AACA,QAAMG,cAAc,GAAGV,SAAS,CAACW,KAAV,CAAgBF,cAAhB,EAAgCD,aAAhC,CAAvB;AAGA,QAAMI,sBAAsB,GAAGV,oBAAoB,GAAGE,qBAAtD;AACA,QAAMS,uBAAuB,GAAGD,sBAAsB,GAAGL,YAAzD;AACA,QAAMO,kBAAkB,GAAGlB,IAAI,CAACe,KAAL,CAAWE,uBAAX,EAAoCD,sBAApC,CAA3B;;AAEA,QAAMG,QAAQ,GAAGC,UAAU,IAAIV,cAAc,CAACU,UAAD,CAA7C;;AAEA,QAAMC,iBAAiB,GAAGC,mBAAmB,IAAIf,uBAAuB,CAACe,mBAAD,CAAxE;;AAKA,QAAMC,UAAU,GAAG1C,MAAM,EAAzB;AACA,QAAM2C,SAAS,GAAG3C,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6C,aAAa,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAG,MAAMxC,KAAK,CAACyC,GAAN,CAAU,mBAAV,CAAlB;AACA9B,MAAAA,OAAO,CAAC6B,GAAG,CAACE,IAAL,CAAP;AACA,YAAMC,YAAY,GAAG,MAAM3C,KAAK,CAACyC,GAAN,CAAU,iBAAV,CAA3B;AACAtB,MAAAA,YAAY,CAACwB,YAAY,CAACD,IAAd,CAAZ;AAEH,KAND;;AAQAH,IAAAA,aAAa;AAChB,GAVQ,EAUN,EAVM,CAAT;;AAmBA,QAAMK,MAAM,GAAG,MAAM;AACb7B,IAAAA,OAAO,CAACG,SAAS,CAAC2B,MAAV,CAAiBC,GAAG,IAAI;AAC5B,aAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCrC,WAAW,CAACoC,WAAZ,EAAhC,CAAP;AACH,KAFO,CAAD,CAAP;AAGJ/B,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GALD;;AAOA,QAAMiC,KAAK,GAAG,MAAM;AAEhBZ,IAAAA,SAAS,CAACa,OAAV,CAAkBC,KAAlB,GAAwB,EAAxB;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAA,mCACJ;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,WAAW,EAAC,2HAFhB;AAGI,cAAA,SAAS,EAAC,YAHd;AAII,cAAA,KAAK,EAAE;AAAC,+BAAe;AAAhB,eAJX;AAKI,cAAA,QAAQ,EAAGC,CAAD,IAAOxC,cAAc,CAACwC,CAAC,CAACC,MAAF,CAASF,KAAV,CALnC;AAMI,cAAA,GAAG,EAAEd;AANT;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI;AAAA,mCACA;AAAQ,cAAA,GAAG,EAAED,UAAb;AAAyB,cAAA,SAAS,EAAC,UAAnC;AAAA,wBACK3B,IAAI,CAAC6C,GAAL,CAAS,CAACC,GAAD,EAAMT,IAAN,kBAAe;AAAQ,gBAAA,QAAQ,EAAES,GAAG,CAACC,EAAJ,KAAWtD,SAAS,CAACuD,YAAvC;AAAgE,gBAAA,KAAK,EAAEF,GAAG,CAACC,EAA3E;AAAA,0BAAgFD,GAAG,CAACG;AAApF,iBAA0DZ,IAA1D;AAAA;AAAA;AAAA;AAAA,sBAAxB;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAgBQ;AAAA,mCACJ;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,OAAO,EAAEH,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,kBAhBR,eAmBI;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,OAAO,EAAEM,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eA0BI;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eA4BG;AAAA,kCACC;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAC,2EAFhB;AAGI,YAAA,SAAS,EAAC,YAHd;AAKI,YAAA,KAAK,EAAE;AAAC,6BAAe;AAAhB;AALX;AAAA;AAAA;AAAA;AAAA,kBADD,2BAQQ;AACC,YAAA,IAAI,EAAC,MADN;AAEC,YAAA,WAAW,EAAC,2EAFb;AAGC,YAAA,SAAS,EAAC,YAHX;AAIC,YAAA,KAAK,EAAE;AAAC,6BAAe;AAAhB;AAJR;AAAA;AAAA;AAAA;AAAA,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EA6CSlC,MAAM,GACHY,cAAc,CAAC2B,GAAf,CAAmB,CAACrC,SAAD,EAAYuC,EAAZ,kBACf;AAAK,QAAA,SAAS,EAAC,oBAAf;AAA6C,QAAA,OAAO,EAAE,MAAMhD,iBAAiB,CAAC,IAAD,CAA7E;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAES;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyCuC,EAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,CADG,gBAQH;AAAA,kBACKzB,kBAAkB,CAACuB,GAAnB,CAAuB,CAACrC,SAAD,EAAYuC,EAAZ,kBACpB;AAAK,UAAA,SAAS,EAAC,oBAAf;AAA6C,UAAA,OAAO,EAAE,MAAMhD,iBAAiB,CAAC,IAAD,CAA7E;AAAA,iCACI,QAAC,aAAD;AAAe,YAAA,SAAS,EAAES;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,WAAyCuC,EAAzC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cArDZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAiEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAII,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEnC,qBAA1B;AAAiD,QAAA,UAAU,EAAE,GAA7D;AAAkE,QAAA,iBAAiB,EAAEa,iBAArF;AACY,QAAA,WAAW,EAAEf;AADzB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAjEJ,eAyEI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEZ,cAAxB;AAAwC,MAAA,SAAS,EAAEC,iBAAnD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGQ;AACI,QAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cAHR,eAOQ;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YAzEJ,eAoFgB;AAAA;AAAA;AAAA;AAAA,YApFhB;AAAA,kBADJ;AA2FH;;GA/JQP,a;;KAAAA,a;AAgKT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport Topbar from '../Topbar/Topbar'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacations from \"../Templates/ModalVacations/ModalVacations\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\n\r\n\r\n\r\n\r\nfunction VacanciesView() {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [find, setFind] = useState([])\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const [vacancies, setVacancies] = useState([])\r\n\r\n    const [currentPageVacancies, setCurrentPageVacancies] = useState(1)\r\n    const [postsPerPageVacancies] = useState(3)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(3)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = vacancies.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n    const lastPostIndexVacancies = currentPageVacancies * postsPerPageVacancies\r\n    const firstPostIndexVacancies = lastPostIndexVacancies - postsPerPage\r\n    const currentlyVacancies = find.slice(firstPostIndexVacancies, lastPostIndexVacancies)\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    const paginateVacancies = pageNumberVacancies => setCurrentPageVacancies(pageNumberVacancies)\r\n\r\n\r\n\r\n\r\n    const department = useRef()\r\n    const searchRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const VacationsView = async () => {\r\n            const res = await axios.get('/api/departments/')\r\n            setDeps(res.data)\r\n            const getVacancies = await axios.get('/api/Vacations/')\r\n            setVacancies(getVacancies.data)\r\n\r\n        }\r\n\r\n        VacationsView()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const search = () => {\r\n            setFind(vacancies.filter(vac => {\r\n                return vac.name.toLowerCase().includes(searchValue.toLowerCase())\r\n            }))\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const reset = () => {\r\n\r\n        searchRef.current.value=''\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className='Vacations'>\r\n                <div className=\"VacationsContainerTop\">\r\n                    <h2>Вакансии</h2>\r\n                    <br/>\r\n                    <div className=\"VacationsMain\">\r\n                        <div>\r\n                    <input\r\n                        type='search'\r\n                        placeholder=\"Наименование вакансии\"\r\n                        className=\"ModalInput\"\r\n                        style={{'marginRight': '10px'}}\r\n                        onChange={(e) => setSearchValue(e.target.value)}\r\n                        ref={searchRef}\r\n                    />\r\n                    </div>\r\n                        <div>\r\n                        <select ref={department} className='depsView'>\r\n                            {deps.map((dep, name) => <option selected={dep.id === localUser.departmentId} key={name} value={dep.id}>{dep.department_name}</option>)}\r\n                        </select>\r\n                        </div>\r\n                            <div>\r\n                        <button className=\"filterButton\" onClick={search}>Найти</button>\r\n                            </div>\r\n                        <div>\r\n                        <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                            </div>\r\n                        </div>\r\n                    <br/>\r\n\r\n                   <div>\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Выберите дату\"\r\n                        className=\"ModalInput\"\r\n\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        —  <input\r\n                            type='date'\r\n                            placeholder=\"Выберите дату\"\r\n                            className=\"ModalInput\"\r\n                            style={{'marginRight': '10px'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                    {isOpen ? (\r\n                        currentlyPosts.map((vacancies, id) => (\r\n                            <div className='VacationsContainer' key={id} onClick={() => setModalVacations(true)}>\r\n                                <VacanciesItem vacancies={vacancies}/>\r\n                            </div>\r\n\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            {currentlyVacancies.map((vacancies, id) => (\r\n                                <div className='VacationsContainer' key={id} onClick={() => setModalVacations(true)}>\r\n                                    <VacanciesItem vacancies={vacancies}/>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            <div className='Pagination'>\r\n\r\n\r\n\r\n                <Pagination postsPerPage={postsPerPageVacancies} totalPosts={'1'} paginateVacancies={paginateVacancies}\r\n                            currentPage={currentPageVacancies} />\r\n            </div>\r\n\r\n            <ModalVacations active={modalVacations} setActive={setModalVacations}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                    <input\r\n                        value=''\r\n\r\n                    />\r\n                    <button className=\"ModalButton\" type=\"submit\" >\r\n                        Сохранить\r\n                    </button>\r\n            </ModalVacations>\r\n                        <div>\r\n                        </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default VacanciesView"]},"metadata":{},"sourceType":"module"}