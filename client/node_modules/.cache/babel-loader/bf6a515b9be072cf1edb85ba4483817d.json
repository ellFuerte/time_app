{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [selectDep, setSelectDep] = useState(\"\");\n  const [company, setCompany] = useState([]);\n  const [selectCompany, setSelectCompany] = useState([]);\n  const [selectItc, setSelectItc] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [old_user, setOld_user] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [user_name, setUser_name] = useState('');\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const departRef = useRef();\n  const companyRef = useRef();\n  const ITCRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const [deps, setDeps] = useState([]);\n  useEffect(() => {\n    const Department = async () => {\n      const departs = await axios.get('/api/departments/');\n      setDeps(departs.data);\n      const company = await axios.get('/api/Vacations/?company=company');\n      setCompany(company.data);\n    };\n\n    Department();\n  }, []);\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const selectDeps = () => {\n    setSelectDep(departRef.current.value);\n  };\n\n  const companySelect = () => {\n    setSelectCompany(companyRef.current.value);\n  };\n\n  const SelectITC = () => {\n    setSelectItc(ITCRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId,\n      old_user: old_user,\n      deps: selectDep,\n      company_id: selectCompany,\n      vacancy_code: selectItc\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n    setMessage('Сохранено');\n  };\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setUser_name('');\n    } else {\n      setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\n    }\n  };\n\n  const handleClick = (name, grade, id, description, status_id, user_name, user_id, department_id, company_id, vacancy_code) => {\n    if (localUser.isAdmin === true) {\n      if (user_name === null) {\n        setUser_name([]);\n      } else {\n        setUser_name(user_name);\n      }\n\n      setFilteredUsers([]);\n      setMessage([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setOld_user(user_id);\n      setSelectDep(department_id);\n      setSelectCompany(company_id);\n      setSelectItc(vacancy_code);\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    console.log('user=', userId);\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Reserve';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Selection';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Securely';\n      // Установите оранжевый цвет для статуса 3\n\n      case 4:\n        return 'Liquidated';\n      // Установите красный цвет для статуса 4\n\n      case 5:\n        return 'Finalist';\n      // Установите красный цвет для статуса 4\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"departmentName\",\n      children: department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-container\",\n      children: [vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angry-grid1\" + getColorByStatusId(vac.status_id),\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id, vac.user_name, vac.user_id, vac.department_id, vac.company_id, vac.vacancy_code),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cssportal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div1\",\n            children: [vac.user_name ? `${vac.user_name} (${vac.vacancy_code})` : vac.name + '(' + vac.vacancy_code + ')', /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"New\",\n              children: date === vac.create_date ? 'NEW' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div2\",\n            children: [\"\\u0413\\u0440\\u0435\\u0439\\u0434: \", vac.grade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div3\",\n            children: vac.status_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div4\",\n            children: [\"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442: \", vac.project_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div5\",\n            children: vac.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)\n        }, \"inputName\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 5\n          }, this)\n        }, \"textareaDescription\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: departRef,\n            value: selectDep,\n            onChange: selectDeps,\n            className: \"InputVacanciesItemDeps\",\n            children: deps.map((dep, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dep.id,\n              children: dep.department_name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this)]\n        }, \"selectDepartment\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            className: \"InputVacanciesItem\",\n            children: status.map((status, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 64\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)]\n        }, \"selectStatus\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0413\\u0440\\u0435\\u0439\\u0434:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange,\n            className: \"InputVacanciesItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this)]\n        }, \"inputGrade\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: companyRef,\n            value: selectCompany,\n            onChange: companySelect,\n            className: \"InputVacanciesItem\",\n            children: company.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: company.id,\n              children: company.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 66\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)]\n        }, \"selectCompany\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n                value: searchTerm || user_name,\n                onChange: handleInputChange,\n                className: \"InputVacanciesItem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this), filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"userListContainer\",\n                children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selectNameDiv\",\n                  value: user.id,\n                  onClick: () => handleUserClick(user.user_name, user.id),\n                  children: user.user_name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0418\\u0422\\u0421:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: ITCRef,\n              value: selectItc,\n              onChange: SelectITC,\n              className: \"InputVacanciesItem\"\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this)]\n          }, \"inputItc\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divHistory\",\n            children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ModalButton\",\n              type: \"submit\",\n              onClick: ChangeData,\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this)]\n        }, \"inputNameEmployee\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"iiTjs0elCgoC8BQRUJk2KDCgXUM=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useEffect","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","localUser","JSON","parse","localStorage","getItem","selectDep","setSelectDep","company","setCompany","selectCompany","setSelectCompany","selectItc","setSelectItc","message","setMessage","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","old_user","setOld_user","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","user_name","setUser_name","date","format","searchTerm","setSearchTerm","userId","setUserId","filteredUsers","setFilteredUsers","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","departRef","companyRef","ITCRef","searchRef","startDate","setStartDate","endDate","setEndDate","deps","setDeps","Department","departs","get","data","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","selectValue","current","selectDeps","companySelect","SelectITC","ChangeData","namevacanciesId","namevacancies","description","Statuses","grade","statuses","company_id","vacancy_code","res","put","handleInputChange","term","filtered","filter","user","toLowerCase","includes","handleClick","name","id","status_id","user_id","department_id","isAdmin","handleUserClick","userName","console","log","getColorByStatusId","statusId","map","vac","create_date","status_name","project_id","company_name","dep","index","department_name","length"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value,\r\n            users:userId,\r\n            old_user:old_user,\r\n            deps:selectDep,\r\n            company_id:selectCompany,\r\n            vacancy_code:selectItc\r\n        }\r\n\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n        setMessage('Сохранено')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id,department_id,company_id,vacancy_code) => {\r\n        if(localUser.isAdmin===true) {\r\n\r\n            if(user_name===null){\r\n                setUser_name([])\r\n            }else {\r\n                setUser_name(user_name)\r\n            }\r\n\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n\r\n            setSelectDep(department_id)\r\n\r\n            setSelectCompany(company_id)\r\n\r\n            setSelectItc(vacancy_code)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        console.log('user=',userId)\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 1:\r\n                return 'Reserve'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Selection'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Securely'; // Установите оранжевый цвет для статуса 3\r\n            case 4:\r\n                return 'Liquidated'; // Установите красный цвет для статуса 4\r\n            case 5:\r\n                return 'Finalist'; // Установите красный цвет для статуса 4\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                <h2 className='departmentName'>{department}</h2>\r\n                <div className=\"vacancies-container\" >\r\n                    {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)}\r\n                         onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,\r\n                             vac.user_name,vac.user_id,vac.department_id,vac.company_id,vac.vacancy_code)}>\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\">{vac.user_name ? `${vac.user_name} (${vac.vacancy_code})` : vac.name+'('+vac.vacancy_code+')'}\r\n                                <label className='New'>{date === vac.create_date ? 'NEW' : ''}</label></div>\r\n                            <div id=\"div2\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div3\">{vac.status_name}</div>\r\n                            <div id=\"div4\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div5\">{vac.company_name}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                        ))}\r\n\r\n\r\n                    <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                        <span className='error'>{message}</span>\r\n                        <div key=\"inputName\">\r\n                            <input\r\n                                type='text'\r\n                                className=\"ModalInputVacancies\"\r\n                                value={inputValue}\r\n                                onChange={handleNameInputChange}\r\n                            />\r\n                        </div>\r\n                        <div key=\"textareaDescription\">\r\n    <textarea\r\n        className='textDescription'\r\n        value={inputValueDescription}\r\n        onChange={handleDescriptionInputChange}\r\n    />\r\n                        </div>\r\n                        <div key=\"selectDepartment\">\r\n                            <span>Подразделение:</span><br/>\r\n                            <select\r\n                                ref={departRef}\r\n                                value={selectDep}\r\n                                onChange={selectDeps}\r\n                                className='InputVacanciesItemDeps'\r\n                            >\r\n                                {deps.map((dep, index) => <option key={index} value={dep.id}>{dep.department_name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div key=\"selectStatus\">\r\n                            <span>Статус:</span><br/>\r\n                            <select\r\n                                ref={statusRef}\r\n                                value={inputValueStatuses}\r\n                                onChange={selectValue}\r\n                                className='InputVacanciesItem'\r\n                            >\r\n                                {status.map((status, index) => <option key={index} value={status.id}>{status.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div key=\"inputGrade\">\r\n                            <span>Грейд:</span><br/>\r\n                            <input\r\n                                type='number'\r\n                                value={inputValueGrade}\r\n                                onChange={handleGradeInputChange}\r\n                                className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div key=\"selectCompany\">\r\n                            <span>Компания:</span><br/>\r\n                            <select\r\n                                ref={companyRef}\r\n                                value={selectCompany}\r\n                                onChange={companySelect}\r\n                                className='InputVacanciesItem'\r\n                            >\r\n                                {company.map((company, index) => <option key={index} value={company.id}>{company.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"container\" key=\"inputNameEmployee\">\r\n                            <div>\r\n                                <span>Имя сотрудника</span><br/>\r\n                                <div className='inputDiv'>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='Имя сотрудника'\r\n                                        value={searchTerm || user_name}\r\n                                        onChange={handleInputChange}\r\n                                        className='InputVacanciesItem'\r\n                                    />\r\n                                    {filteredUsers.length > 0 && (\r\n                                        <div className=\"userListContainer\">\r\n                                            {filteredUsers.map((user, index) => (\r\n                                                <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                    {user.user_name}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div key=\"inputItc\">\r\n                                <span>ИТС:</span><br/>\r\n                                <input\r\n                                    type='text'\r\n                                    key={1}\r\n                                    ref={ITCRef}\r\n                                    value={selectItc}\r\n                                    onChange={SelectITC}\r\n                                    className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n\r\n                            <br/>\r\n                            <div className='divHistory'>\r\n                                История\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                                    Сохранить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </ModalVacancies>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}