{"ast":null,"code":"var _jsxFileName = \"D:\\\\time_app\\\\client\\\\src\\\\components\\\\VacanciesItem\\\\VacanciesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./VcanciesItem.css\";\nimport moment from \"moment\";\nimport React, { useRef, useState } from \"react\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VacanciesItem = ({\n  department,\n  vacancies,\n  status,\n  users\n}) => {\n  _s();\n\n  console.log('vac=', vacancies);\n  const [message, setMessage] = useState(\"\");\n  const localUser = JSON.parse(localStorage.getItem('user'));\n  const [vacanciesId, setVacanciesId] = useState(\"\");\n  const [modalVacations, setModalVacations] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueDescription, setInputValueDescription] = useState(\"\");\n  const [inputValueStatuses, setInputValueStatuses] = useState(\"\");\n  const [inputValueGrade, setInputValueGrade] = useState(\"\");\n  const [users_name, setUser_name] = useState(\"\");\n  const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\n  const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\n  const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\n  const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\n  const statusRef = useRef();\n  const searchRef = useRef();\n  const [startDate, setStartDate] = useState(''); // начальная дата фильтра\n\n  const [endDate, setEndDate] = useState(''); // конечная дата фильтра\n\n  const handleClick = (name, grade, id, description, status_id, user_name) => {\n    if (localUser.isAdmin === true) {\n      setFilteredUsers([]);\n      setMessage([]);\n      setModalVacations(true);\n      setVacanciesId(id);\n      setSelectedVacanciesName(name);\n      setInputValue(name); // Установка начального значения для name\n\n      setSelectedVacanciesDescription(description);\n      setInputValueDescription(description);\n      setSelectedVacanciesGrade(grade);\n      setInputValueGrade(grade); // Установка начального значения для grade\n\n      setSelectedVacanciesStatuses(status_id);\n      setInputValueStatuses(status_id);\n      setUser_name(user_name);\n    }\n  };\n\n  const handleNameInputChange = e => {\n    setInputValue(e.target.value);\n  }; // Обработчик изменения значения для поля ввода с grade\n\n\n  const handleDescriptionInputChange = e => {\n    setInputValueDescription(e.target.value);\n  };\n\n  const handleGradeInputChange = e => {\n    setInputValueGrade(e.target.value);\n  };\n\n  const selectValue = () => {\n    setInputValueStatuses(statusRef.current.value);\n  };\n\n  const ChangeData = async () => {\n    const ChangeData = {\n      namevacanciesId: vacanciesId,\n      namevacancies: inputValue,\n      description: inputValueDescription,\n      Statuses: inputValueStatuses,\n      grade: inputValueGrade,\n      statuses: statusRef.current.value,\n      users: userId\n    };\n    const res = await axios.put('/api/Vacations/', ChangeData);\n    setMessage('Добавленно');\n  };\n\n  const date = moment().format('YYYY-MM-DD');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userId, setUserId] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    const filtered = users.filter(user => user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase()));\n\n    if (term === '') {\n      setFilteredUsers([]);\n    } else {\n      setFilteredUsers(filtered);\n    }\n  };\n\n  const handleUserClick = (userName, userId) => {\n    setUserId(userId);\n    setSearchTerm(userName);\n    setFilteredUsers([]);\n  };\n\n  const getColorByStatusId = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Red';\n      // Установите зеленый цвет для статуса 1\n\n      case 2:\n        return 'Yellow';\n      // Установите желтый цвет для статуса 2\n\n      case 3:\n        return 'Green';\n      // Установите оранжевый цвет для статуса 3\n\n      case 4:\n        return 'White';\n      // Установите красный цвет для статуса 4\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"departmentName\",\n      children: department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vacancies-container\",\n      children: [vacancies.map(vac => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angry-grid1\" + getColorByStatusId(vac.status_id),\n        onClick: () => handleClick(vac.name, vac.grade, vac.id, vac.description, vac.status_id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cssportal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div2\",\n            children: vac.user_name ? vac.user_name + '\\n' + '(' + vac.vacancy_code + ')' + '\\n' : vac.vacancy_code + '\\n' + '\\n'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div3\",\n            children: date === vac.create_date ? 'NEW' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div4\",\n            children: [\"\\u0413\\u0440\\u0435\\u0439\\u0434: \", vac.grade]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div6\",\n            children: [\"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442: \", vac.project_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div7\",\n            children: vac.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, vac.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ModalVacancies, {\n        active: modalVacations,\n        setActive: setModalVacations,\n        children: [message, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ModalInputVacancies\",\n            value: inputValue,\n            onChange: handleNameInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textDescription\",\n            value: inputValueDescription,\n            onChange: handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: statusRef,\n            value: inputValueStatuses,\n            onChange: selectValue,\n            children: status.map((status, name) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\",\n            value: searchTerm,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divSelect\",\n            children: filteredUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectNameDiv\",\n                value: user.id,\n                onClick: () => handleUserClick(user.user_name, user.id),\n                children: user.user_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputValueGrade,\n            onChange: handleGradeInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divHistory\",\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalButton\",\n            type: \"submit\",\n            onClick: ChangeData,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VacanciesItem, \"7ZpnX1gzxFmF/Y9SrYxawZ5P9FY=\");\n\n_c = VacanciesItem;\nexport default VacanciesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacanciesItem\");","map":{"version":3,"sources":["D:/time_app/client/src/components/VacanciesItem/VacanciesItem.jsx"],"names":["moment","React","useRef","useState","ModalVacancies","axios","VacanciesItem","department","vacancies","status","users","console","log","message","setMessage","localUser","JSON","parse","localStorage","getItem","vacanciesId","setVacanciesId","modalVacations","setModalVacations","inputValue","setInputValue","inputValueDescription","setInputValueDescription","inputValueStatuses","setInputValueStatuses","inputValueGrade","setInputValueGrade","users_name","setUser_name","selectedVacanciesName","setSelectedVacanciesName","selectedVacanciesStatuses","setSelectedVacanciesStatuses","selectedVacanciesDescription","setSelectedVacanciesDescription","selectedVacanciesGrade","setSelectedVacanciesGrade","statusRef","searchRef","startDate","setStartDate","endDate","setEndDate","handleClick","name","grade","id","description","status_id","user_name","isAdmin","setFilteredUsers","handleNameInputChange","e","target","value","handleDescriptionInputChange","handleGradeInputChange","selectValue","current","ChangeData","namevacanciesId","namevacancies","Statuses","statuses","userId","res","put","date","format","searchTerm","setSearchTerm","setUserId","filteredUsers","handleInputChange","term","filtered","filter","user","toLowerCase","includes","handleUserClick","userName","getColorByStatusId","statusId","map","vac","vacancy_code","create_date","project_id","company_name","length","index"],"mappings":"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","sourcesContent":["import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\nimport axios from \"axios\";\r\n\r\nconst VacanciesItem =({department,vacancies,status,users})=> {\r\n    console.log('vac=',vacancies)\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [users_name, setUser_name] = useState(\"\")\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name) => {\r\n        if(localUser.isAdmin===true) {\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setUser_name(user_name)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        setInputValueGrade(e.target.value);\r\n    }\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeData = async () => {\r\n\r\n        const ChangeData ={\r\n            namevacanciesId:vacanciesId,\r\n            namevacancies:inputValue,\r\n            description:inputValueDescription,\r\n            Statuses:inputValueStatuses,\r\n            grade:inputValueGrade,\r\n            statuses:statusRef.current.value,\r\n            users:userId\r\n        }\r\n        const res = await axios.put('/api/Vacations/', ChangeData)\r\n        setMessage('Добавленно')\r\n    }\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 1:\r\n                return 'Red'; // Установите зеленый цвет для статуса 1\r\n            case 2:\r\n                return 'Yellow'; // Установите желтый цвет для статуса 2\r\n            case 3:\r\n                return 'Green'; // Установите оранжевый цвет для статуса 3\r\n            case 4:\r\n                return 'White'; // Установите красный цвет для статуса 4\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n                <label className='departmentName'>{department}</label>\r\n                <div className=\"vacancies-container\" >\r\n                    {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)} onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id)}>\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\"></div>\r\n                            <div id=\"div2\">{vac.user_name ? vac.user_name+'\\n'+\r\n                                '('+vac.vacancy_code+')'+'\\n': vac.vacancy_code+'\\n'+'\\n'}</div>\r\n                            <div id=\"div3\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div4\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div5\"></div>\r\n                            <div id=\"div6\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div7\">{vac.company_name}</div>\r\n                        </div>\r\n                    </div>\r\n                        ))}\r\n\r\n{/*                    <div id=\"item-01\">\r\n                        <div style={{textAlign:'center'}}>\r\n                            {vac.user_name ? vac.user_name+'\\n'+\r\n                                '('+vac.vacancy_code+')': vac.vacancy_code+'\\n'+'\\n'}\r\n                        </div>\r\n                        <div id=\"item-11\">\r\n                            {date === vac.create_date ? 'NEW' : ''}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"item-21\">\r\n\r\n                    </div>\r\n                    <div id=\"item-31\">\r\n                        Грейд: {vac.grade}\r\n                    </div>\r\n                    <div id=\"item-41\">\r\n                        Проект: {vac.project_id}\r\n                    </div>\r\n                    <div>\r\n                        Компания: {vac.company_name}\r\n                    </div>*/}\r\n\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    {message}\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                    <div>\r\n                    <textarea className='textDescription'\r\n                               value={inputValueDescription}\r\n                               onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n\r\n                    \r\n                    <div>\r\n                        <select ref={statusRef} value={inputValueStatuses} onChange={selectValue}>\r\n                            {status.map((status, name) => <option key={name} value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='inputDiv'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Имя сотрудника'\r\n                            value={searchTerm}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <div className='divSelect'>\r\n                            {filteredUsers.length > 0 && (\r\n                                <div>\r\n                                    {filteredUsers.map((user, index) => (\r\n                                        <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                            {user.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                        <input type='number'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeData}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesItem"]},"metadata":{},"sourceType":"module"}