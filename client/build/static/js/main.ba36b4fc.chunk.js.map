{"version":3,"sources":["context/AuthReducer.js","context/AuthContext.js","pages/Error/Error.jsx","apiCalls.js","pages/Login/Login.jsx","components/InfoPost/InfoPost.jsx","components/Pagination/Pagination.jsx","components/VacationPost/VacationPost.jsx","components/Templates/Modal/Modal.js","components/ProfileInfo/HistoryInfo/HistoryInfo.jsx","components/ProfileInfo/Skills/Skills.jsx","components/VacanciesItem/ModalVacanciesItem/ModalVacanciesItem.jsx","components/Templates/ModalVacancies/ModalVacancies.js","components/ProfileInfo/ProfileInfo.jsx","components/Home/Home.jsx","components/Sidebar/Sidebar.jsx","components/Status/Status.jsx","components/MessagePost/MessagePost.jsx","components/SearchBlock/SearchBlock.jsx","components/Topbar/Topbar.jsx","pages/Profile/Profile.jsx","pages/Register/Register.jsx","components/Employee/Employee.jsx","components/Staff/Staff.jsx","components/Feed/Feed.jsx","pages/Department/Department.jsx","pages/Information/Information.jsx","pages/Reports/Reports.jsx","components/RepostInfoNominations/RepostInfoNominations.jsx","pages/ReportsNominations/ReportsNominations.jsx","components/ReportsInfo/RepostsInfo.jsx","pages/ReportsHistory/ReportsHistory.jsx","components/VacanciesItem/VacanciesItem.jsx","components/VacanciesAdd/VacanciesAdd.jsx","components/VacanciesView/VacanciesView.jsx","components/AdminPanel/AdminPanel.jsx","components/Layout/Layout.jsx","App.js","index.js"],"names":["AuthReducer","state","action","type","user","posts","isFetching","error","payload","INITIAL_STATE","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","localStorage","setItem","JSON","stringify","Provider","value","Error","className","loginCall","userCredential","a","axios","post","res","data","Login","useState","errorMessage","setErrorMessage","serverError","setServerError","useEffect","get","then","response","catch","message","email","useRef","password","useContext","onSubmit","e","preventDefault","current","toUpperCase","placeholder","ref","required","minLength","disabled","CircularProgress","style","color","to","width","InfoPost","workdate","workstart","workend","worklong","healthstart","healthend","commentstart","commentend","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","length","map","number","id","onClick","VacationPost","worked","work","replace","typework_id","Modal","active","setActive","stopPropagation","Close","HistoryInfo","setPosts","vacationPosts","setVacationPosts","setIsFetching","setCurrentPage","lastPostIndex","firstPostIndex","currentlyPosts","slice","lastPostIndexVacations","firstPostIndexVacations","currentlyVacations","historyStartWork","historyEndWork","isFilter","setIsFilter","newPosts","setError","modalError","setModalError","username","useParams","localUser","_id","parse","getItem","isJob","setIsJob","modalActive","setModalActive","modalName","setModalName","modalComment","vacationStart","vacationEnd","fetchUserpost","sort","p1","p2","Date","pageNumber","handleClick","start","end","filter","startdate","enddate","userId","typework","fill","handleClickCancel","fetchUservacation","handleClickAdd","currentDay","vacation","status","comment","getDate","window","location","reload","console","log","handleName","target","display","justifyContent","fontSize","marginLeft","htmlFor","name","onChange","checked","Skills","modalActiveSkills","setModalActiveSkills","skill","searchTermSkills","setSearchTermSkills","skillsAll","setAllSkills","skillId","setSkillId","userSkills","setUserSkills","filteredSkills","setFilteredSkills","selectedNumber","setSelectedNumber","getSkills","getAllSkills","getUserSkills","ButtonAddSkills","addSkills","user_id","skill_id","self_grade","SkillDelete","not_active_skill","is_active","changeGrade","event","undefined","newGradeSelf","newGradeHead","fontWeight","termCities","filtered","toLowerCase","includes","handleSkillsClick","number1","array","defaultValue","head_grade","isAdmin","ModalVacanciesItem","allDateUser","setInputValueVacanciesName","vacancies_name","setInputValueGrade","grade","setSelectDep","vacancies_department_id","setInputValueDescription","description","setInputValueStatuses","vacancies_status_id","setSelectCompany","company_id","setSelectItc","vacancy_code","setProjectItem","project_id","setVacanciesId","vacancy_id","setOld_user","planned_release_date","date","moment","format","setPlannedReleaseDate","setStatus","selectDep","company","setCompany","selectCompany","selectItc","projectItem","setMessage","plannedReleaseDate","vacanciesId","inputValueVacanciesName","old_user","inputValueDescription","inputValueStatuses","inputValueGrade","setUser_name","searchTerm","setSearchTerm","setUserId","filteredUsers","setFilteredUsers","users","setUsers","statusRef","departRef","companyRef","ITCRef","projectRef","DateReleaseRef","Department","statuses","departs","setDeps","deps","ChangeDataButton","ChangeData","namevacanciesId","namevacancies","search","put","dep","department_name","test","user_name","term","index","userName","handleUserClick","ModalVacancies","ProfileInfo","setTimeZone","setSelectedOption","modalVacancies","setModalVacancies","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","selectedValue","setSelectedValue","check","setCheck","checkedItems","setCheckedItems","votearray","setVotearray","setIsadmin","userVote","setUserVote","depsName","setDepsName","cityName","setCityName","setUser","nameValue","setNameValue","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","modalActivePass","setModalActivePass","modalActiveVote","setModalActiveVote","modalVote","setModalVote","vote","setVote","modalActiveResetPass","setModalActiveResetPass","modalActiveReset","setModalActiveReset","modalActiveDelete","setModalActiveDelete","options","setOptions","er","setErr","localUse","modalDep","modalOldPass","modalNewPass","modalNewPassAgain","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","hasImage","setHasImage","usersStatuses","hasImageStatus","Object","keys","images","some","key","nomination_status","parseInt","getDeps","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","forEach","subclass","concat","getNameDeps","fetchUser","isadmin","b","localeCompare","mass","element","city","fetchVote","phone_number","place_of_residence","split","surname","getNameAndSurname","newInfo","departmentId","see_child","main_department","city_id","cityPlaceChange","newInfo2","handleClickPassword","passwords","oldPassword","newPassword","handleResetPass","resetPassword","healthEnd","commentEnd","workEnd","now","alert","handleDelete","newPost","href","Array","isArray","secureButton","addNomination","id_nomination","clearSecureButton","nextModal","src","title","setAllDateUser","alt","k","findStatus","paddingTop","Create","cursor","Delete","border","padding","charAt","formattedValue","cleaned","startsWith","match","Boolean","join","formatPhoneNumber","city_name","handleUserClickCities","option","nominations_name","position","prev","handleInputChangeUsers","top","left","zIndex","cityId","selectIndex","toString","arr","str1","existingIndex","findIndex","item","newArray","votearr","prevState","clickVote","voteUser","vote_for_user","nominations_id","voteId","inputClick","Home","Sidebar","setDep","department_tree_to_json","label","nodeLabel","defaultCollapsed","departments","departments1","departments2","paddingBottom","require","Status","places","setplaces","office","setoffice","workplace","setworkplace","setPlace","err","modalActiveReserve","setModalActiveReserve","PlaceRef","DataTime","Offices","is_canceled","offices","officesMap","add","placeMap","location_res","handlerStart","healthStart","commentStart","workStart","handlerEnd","newstatus","clickReserve","space","wp_id","ww","reservePlace","booking_date","DataClick","clickOffice","clickPlace","clearPlace","canceled","deletePlace","size","height","textAlign","workplace_id","place","MessagePost","SearchBlock","nominations","setNominations","admin","setAdmin","setDate","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","Topbar","countAll_users","setCountAll_users","countWorked_today","setCountWorked_today","countWorked_yesterday","setCountWorked_yesterday","countSickLeave_today","setCountSickLeave_today","countSick_yesterday","setCountSick_yesterday","countVacation_today","setCountVacation_today","countVacation_yesterday","setCountVacation_yesterday","setNotificationCount","filterUsers","setAllUsers","fetchUserName","get_statistics_all_users","getUsers","searchValue","setSearchValue","allUsers","findUsers","setFindUsers","isBlock","setIsBlock","onKeyPress","ExitToApp","clear","align","Profile","Register","passwordAgain","firstname","department","history","useHistory","telephone","link_vacancies","companyName","setGrade","project","setProject","inputValue","setInputValue","checkVal","setCheckVal","vacancies","setVacancies","filteredVacancies","setFilteredVacancies","changeVal","getVacancies","setCustomValidity","trim","noITC","ITC","handleSubmit","handleClickSubmit","onMouseDown","vac","onInput","Employee","Staff","setChecked","statisticsWork","setStatisticsWork","UsersDep","setUsersDeps","isOpen","setIsOpen","modalMain","setModalMain","departId","filterUsersFoo","all","all_users","document","indexOf","statusChild","fetchUsers","getUsersByDepIsCheckedTrue","info","depsId","depUsers","get_users_by_dep","sortedUsers","combineUsers","combinedArray","us","clickcheckbox","ischeked","handleModalClick","get_users_by_depIsOpen","dep_users","float","Feed","Information","rel","marginTop","opacity","Reports","RepostsInfoNominations","Кто","Номинант","ReportsNominations","direction","sortConfig","setSortConfig","sortConfig1","setSortConfig1","sortConfig2","setSortConfig2","sortConfig3","setSortConfig3","setisOpen","startDateNomination","endDateNomination","requestSort","sortedPosts","useMemo","sortablePosts","filename","RepostsInfo","ReportsHistory","sortConfig4","setSortConfig4","indexOfLastPost","indexOfFirstPost","currentPosts","VacanciesItem","modalVacations","setModalVacations","setSelectedVacanciesName","setSelectedVacanciesStatuses","setSelectedVacanciesDescription","setSelectedVacanciesGrade","getColorByStatusId","statusId","status_id","create_date","status_name","company_name","paddingLeft","VacanciesAdd","searchQuery","setSearchQuery","messageITC","setMessageITC","isView","setIsView","NameVacationRef","TeamRef","StatusRef","CodeVacations","Company","Description","CodeProject","Grade","departament","unshift","splice","companies","vacancies_function","clickHandler","codeVacation","get_vacancies","vacancy","userNameToSend","Vacations","team_id","codeVacations","codeProject","is_checked","selected","paddingRight","VacanciesView","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","projectIds","setProjectIds","activeFilters","setActiveFilters","fetchedVacancies","uniqueProjectIds","Set","sortedProjectIds","from","sortedUniqueProjectIds","applyFilters","handleClickFilter","prevFilters","newFilters","handleDateChange","filters","String","vacancyDate","Number","marginRight","projectId","boxShadow","background","AdminPanel","Layout","App","userStorage","authUser","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"4qEA4BeA,EA5BK,SAACC,EAAOC,GAC1B,OAAOA,EAAOC,MACZ,IAAK,cACH,MAAO,CACLC,KAAM,KACNC,MAAO,KACPC,YAAY,EACZC,OAAO,GAEX,IAAK,gBACH,MAAO,CACLH,KAAMF,EAAOM,QACbH,MAAO,KACPC,YAAY,EACZC,OAAO,GAEX,IAAK,aACH,MAAO,CACLH,KAAM,KACNC,MAAO,KACPC,YAAY,EACZC,MAAOL,EAAOM,SAElB,QACE,OAAOP,I,OCpBPQ,EAAgB,CACpBL,KAAM,KACNE,YAAY,EACZC,OAAO,GAGIG,EAAcC,wBAAcF,GAE5BG,EAAsB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEnC,EAA0BC,qBAAWd,EAAaS,GAAlD,mBAAOR,EAAP,KAAcc,EAAd,KAMA,OAJkB,OAAfd,EAAMG,MACPY,aAAaC,QAAQ,OAAQC,KAAKC,UAAUlB,EAAMG,OAIlD,cAACM,EAAYU,SAAb,CACEC,MAAO,CACLjB,KAAKH,EAAMG,KACXE,WAAWL,EAAMK,WACjBC,MAAON,EAAMM,MACbQ,YALJ,SAQGF,K,OC3BQ,SAASS,IACtB,OACI,qBAAKC,UAAU,QAAf,SACE,oBAAIA,UAAU,aAAd,0B,oDCHFC,EAAS,uCAAG,WAAOC,EAAgBV,GAAvB,eAAAW,EAAA,6DAChBX,EAAS,CAACZ,KAAM,gBADA,kBAGIwB,IAAMC,KAAK,YAAaH,GAH5B,OAGRI,EAHQ,OAIdd,EAAS,CAACZ,KAAM,gBAAiBK,QAASqB,EAAIC,OAJhC,gDAMdf,EAAS,CAACZ,KAAM,aAAcK,QAAQ,EAAD,KANvB,yDAAH,wDASAgB,I,OCFA,SAASO,IAEpB,MAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAC,oBAAS,sBAAC,sBAAAX,EAAA,sDACNC,IAAMW,IAAI,aACLC,MAAK,SAAAC,GACF,IAAKA,EACD,MAAM,IAAIlB,MAAM,wGAGvBmB,OAAM,SAAAlC,GACH6B,GAAe,GACfF,EAAgB,yCAAa3B,EAAMmC,YATrC,2CAWP,IAGL,IAAMC,EAAQC,mBACRC,EAAWD,mBAEjB,EAAuCE,qBAAWpC,GAA3CJ,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,MAAOQ,EAA1B,EAA0BA,SAM1B,OACI,sBAAKQ,UAAU,QAAf,WACMU,GAAgB1B,GACd,qBAAKgB,UAAU,QAAf,6KAIHY,GACG,qBAAKZ,UAAU,QAAf,+GAOR,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,cAAf,SACE,uBAAMA,UAAU,WAAWwB,SAtBf,SAACC,GACnBA,EAAEC,iBACFzB,EAAU,CAACmB,MAAMA,EAAMO,QAAQ7B,MAAM8B,cAAeN,SAASA,EAASK,QAAQ7B,OAAQN,IAoBhF,UACE,uBACEqC,YAAY,QACZ7B,UAAU,aACVpB,KAAK,aACLkD,IAAKV,EACLW,UAAQ,IAEV,uBACEF,YAAY,WACZjD,KAAK,WACLoB,UAAU,aACV8B,IAAKR,EACLS,UAAQ,EACRC,UAAU,MAEZ,wBAAShC,UAAU,cAAcpB,KAAK,SAASqD,SAAUlD,EAAzD,SAEGA,EAAa,cAACmD,EAAA,EAAD,CAAkBC,MAAO,CAACC,MAAM,WAAc,mCAK9D,cAAC,IAAD,CAAMC,GAAG,YAAYF,MAAO,CAACG,MAAM,QAAnC,SACE,wBAAQtC,UAAU,sBAAsBiC,SAAUlD,EAAlD,SACGA,EAAa,cAACmD,EAAA,EAAD,CAAkBC,MAAO,CAACC,MAAM,WAAc,qI,OC7E7D,SAASG,EAAT,GAA2B,IAARlC,EAAO,EAAPA,KAGhC,OACI,qBAAIL,UAAU,OAAd,UACI,oBAAIA,UAAU,eAAd,SAA8BK,EAAKmC,WACnC,oBAAIxC,UAAU,YAAd,SAA2BK,EAAKoC,YAChC,oBAAIzC,UAAU,YAAd,SAA2BK,EAAKqC,UAChC,oBAAI1C,UAAU,YAAd,SAA2BK,EAAKsC,WAChC,qBAAI3C,UAAU,YAAd,UAAgD,MAArBK,EAAKuC,YAAqB,iCAAU,uCAAS,uBAAK,uBAAyB,MAAnBvC,EAAKwC,WAAwC,MAAnBxC,EAAKwC,UAAoB,uCAA8B,MAAnBxC,EAAKwC,UAAoB,iCAAU,MACpL,qBAAI7C,UAAU,cAAd,UAA6BK,EAAKyC,aAAa,uBAAK,uBAAMzC,EAAK0C,iB,OCV1D,SAASC,EAAT,GAGb,IAHsF,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YACjEC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAaD,GAAeK,IACzDD,EAAYI,KAAKH,GAGnB,OACE,mCACID,EAAYK,OAAS,EACnB,qBAAK1D,UAAU,aAAf,SAEIqD,EAAYM,KAAI,SAACC,EAAQC,GAAT,OACd,qBAAc7D,UAAWoD,IAAgBQ,EAAS,cAAzB,WAAqDE,QAAS,kBAAMX,EAASS,IAAtG,SACGA,GADOC,QAMlB,+B,OCnBO,SAASE,EAAT,GAA+B,IAAR1D,EAAO,EAAPA,KAGpC,OACI,+BAEE,oBAAIL,UAAU,eAAd,SAA8BK,EAAKmC,WACnC,oBAAIxC,UAAU,eAAd,SAA8BK,EAAK2D,SACnC,oBAAIhE,UAAU,eAAd,SAA8BK,EAAK4D,KAAKC,QAAQ,WAAY,QAC5D,oBAAIlE,UAAU,eAAd,SAAmD,MAArBK,EAAK8D,YAAsB,uCAA+B,MAArB9D,EAAK8D,YAAsB,+DAAmC,MAArB9D,EAAK8D,YAAsB,kFAAsC,MAArB9D,EAAK8D,YAAsB,iCAAQ,KAC3L,oBAAInE,UAAU,sBAAd,SAAqCK,EAAKyC,kB,2BCCnCsB,MAVd,YAA+C,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWhF,EAAW,EAAXA,SAClC,OACE,qBAAKU,UAAWqE,EAAS,eAAiB,QAA1C,SACE,sBAAKrE,UAAWqE,EAAS,sBAAwB,eAAgBP,QAAS,SAACrC,GAAD,OAAOA,EAAE8C,mBAAnF,UACE,qBAAKvE,UAAU,aAAf,SAA4B,sBAAM8D,QAAS,kBAAMQ,GAAU,IAA/B,SAAuC,cAACE,EAAA,EAAD,QAClElF,QCKM,SAASmF,IACpB,MAA0BhE,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4F,EAAd,KACA,EAA0CjE,mBAAS,IAAnD,mBAAOkE,EAAP,KAAsBC,EAAtB,KACA,EAAoCnE,oBAAS,GAA7C,mBAAO1B,EAAP,KAAmB8F,EAAnB,KACA,EAAsCpE,mBAAS,GAA/C,mBAAO2C,EAAP,KAAoB0B,EAApB,KACA,EAAuBrE,mBAAS,IAAzBwC,EAAP,oBAEM8B,EAAgB3B,EAAcH,EAC9B+B,EAAiBD,EAAgB9B,EACjCgC,EAAiBnG,EAAMoG,MAAMF,EAAgBD,GAG7CI,EAAyB/B,EAAcH,EACvCmC,EAA0BD,EAAyBlC,EACnDoC,EAAqBV,EAAcO,MAAME,EAAyBD,GAIlEG,EAAmBjE,iBAAO,MAC1BkE,EAAiBlE,iBAAO,MAC9B,EAAgCZ,oBAAS,GAAzC,mBAAO+E,EAAP,KAAiBC,EAAjB,KACA,EAAgChF,mBAAS,IAAzC,mBAAOiF,EAAP,KACA,GADA,KAC0BjF,mBAAS,KAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACA,EAAoClF,mBAAS,IAA7C,mBAAOmF,EAAP,KAAmBC,EAAnB,KACMC,EAASC,cAEXC,EAAcF,EAAW,CAACG,IAAIH,EAASA,SAAS1E,MAAM,IAAMzB,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAIhG,GAA0B1F,oBAAS,GAAnC,qBAAO2F,GAAP,MAAcC,GAAd,MAEA,GAAsC5F,oBAAS,GAA/C,qBAAO6F,GAAP,MAAoBC,GAApB,MACA,GAAkC9F,mBAAS,MAA3C,qBAAO+F,GAAP,MAAkBC,GAAlB,MACMC,GAAerF,mBACfsF,GAAgBtF,mBAChBuF,GAAcvF,mBAIpBP,qBAAU,WACN+D,GAAc,GAEdgC,OACD,CAACf,IAEJ,IAAMe,GAAa,uCAAG,4BAAA1G,EAAA,sEACAC,IAAMW,IAAI,uBAAuBiF,EAAUC,KAD3C,OACZ3F,EADY,OAElBoE,EAASpE,EAAIC,KAAKuG,MAAK,SAACC,EAAIC,GACxB,OAAO,IAAIC,KAAKD,EAAGvE,WAAa,IAAIwE,KAAKF,EAAGtE,eAEhDoC,GAAc,GALI,2CAAH,qDASb1B,GAAW,SAAA+D,GAAU,OAAIpC,EAAeoC,IAGxCC,GAAW,uCAAG,kCAAAhH,EAAA,sDACViH,EAAQ9B,EAAiB3D,QAAQ7B,MACjCuH,EAAM9B,EAAe5D,QAAQ7B,MACrB,KAAVsH,GAAwB,KAARC,EAChB1B,EAAS,wEAEK,KAAVyB,GAAwB,KAARC,GAChB1B,EAAS,6EACT0B,EAAKD,EACLzB,EAAS,0KAIH2B,EAAS,CACXC,UAAWjC,EAAiB3D,QAAQ7B,MACpC0H,QAASjC,EAAe5D,QAAQ7B,MAChC2H,OAAQzB,EAAUC,IAClByB,SAAStB,IAEbT,EAAS,IAEHgC,EAVN,uCAUa,4BAAAxH,EAAA,sEACSC,IAAMC,KAAK,mBAAmBiH,GADvC,OACHhH,EADG,OAETsE,EAAiBtE,EAAIC,KAAKuG,MAAK,SAACC,EAAIC,GAChC,OAAO,IAAIC,KAAKD,EAAGvE,WAAa,IAAIwE,KAAKF,EAAGtE,eAEhDiC,EAASpE,EAAIC,KAAKuG,MAAK,SAACC,EAAIC,GACxB,OAAO,IAAIC,KAAKD,EAAGvE,WAAa,IAAIwE,KAAKF,EAAGtE,eAEhDkD,EAAS,IARA,2CAVb,qDAoBAgC,MA/BQ,2CAAH,qDAgDXC,GAAiB,uCAAG,sBAAAzH,EAAA,sDACtBwF,EAAS,IACTF,GAAY,GACZH,EAAiB3D,QAAQ7B,MAAQ,GACjCyF,EAAe5D,QAAQ7B,MAAQ,GAJT,2CAAH,qDASvBgB,qBAAU,WACN+D,GAAc,GAEdgD,OACD,CAAC/B,IAEJ,IAAM+B,GAAiB,uCAAG,4BAAA1H,EAAA,sEACJC,IAAMW,IAAI,oBAAoBiF,EAAUC,KADpC,OAChB3F,EADgB,OAEtBsE,EAAiBtE,EAAIC,KAAKuG,MAAK,SAACC,EAAIC,GAChC,OAAO,IAAIC,KAAKD,EAAGI,OAAS,IAAIH,KAAKF,EAAGK,WAE5CvC,GAAc,GALQ,2CAAH,qDAQjBiD,GAAc,uCAAG,WAAOrG,GAAP,iBAAAtB,EAAA,yDACnBsB,EAAEC,iBAEIqG,EAAa,IAAId,KAEY,KAAhCN,GAAchF,QAAQ7B,OAA8C,KAA9B8G,GAAYjF,QAAQ7B,OAA8B,OAAd0G,IAAqD,KAA/BE,GAAa/E,QAAQ7B,MALrG,uBAMf+F,EAAc,+JANC,+BAUhB,IAAIoB,KAAKN,GAAchF,QAAQ7B,OAAS,IAAImH,KAAKL,GAAYjF,QAAQ7B,QAAwC,KAA9B8G,GAAYjF,QAAQ7B,OAVnF,uBAWf+F,EAAc,2IAXC,iCAgBbmC,EAAW,CACbP,OAAQzB,EAAUC,IAClBgC,OAAOzB,GACP0B,QAASxB,GAAa/E,QAAQ7B,MAC9BsH,MAAO,IAAIH,KAAKN,GAAchF,QAAQ7B,OACtCuH,IAAK,IAAIJ,KAAKL,GAAYjF,QAAQ7B,QAUvB,IAAImH,KAAKN,GAAchF,QAAQ7B,QAAUiI,GAAcA,EAAWI,WAAaH,EAASX,IAAIc,UAAU,EA/BlG,oBAkCT/H,IAAMC,KAAK,iBAAiB2H,GAlCnB,QA0CfI,OAAOC,SAASC,SA1CD,mDA4CfC,QAAQC,IAAR,MA5Ce,2DAAH,sDA6DdC,GAAa,SAAAhH,GACfgF,GAAahF,EAAEiH,OAAO5I,QAE1B,OACI,sBAAKE,UAAU,cAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,mBAAhB,wDACA,sBAAMA,UAAU,eAAe8D,QAnBhB,WACpBsC,GACCyB,KACAhB,KAEJR,IAAUD,IACVT,EAAS,IACTF,GAAY,GACZH,EAAiB3D,QAAQ7B,MAAQ,GACjCyF,EAAe5D,QAAQ7B,MAAQ,IAUvB,SACLsG,GAAQ,wBAAQpG,UAAU,eAAemC,MAAO,CAACG,MAAM,SAA/C,+GAAsF,wBAAQtC,UAAU,eAAlB,qDAGvFoG,KAAUJ,GAAaF,IAAaE,EAAUC,MAE7C,qBAAKjG,UAAU,cAAc8D,QAAS,kBAAMyC,IAAe,IAA3D,SAAkE,0CAEzE,uBACCvH,GAAS,qBAAKgB,UAAU,mBAAf,SAAmChB,IAC7C,sBAAKgB,UAAU,gBAAf,UACI,uBACIpB,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,aACV8B,IAAKwD,EACLnD,MAAO,CAAC,YAAe,UAN/B,WAQO,uBACHvD,KAAK,OACLiD,YAAY,sEACZ7B,UAAU,aACV8B,IAAKyD,EACLpD,MAAO,CAAC,YAAe,UAEvB,wBAAQnC,UAAU,eAAe8D,QAASqD,GAA1C,0BACA,wBAAQnH,UAAU,eAAe8D,QAAS8D,GAA1C,iEAEJ,uBACA,uBACCxB,GAEG,+BACI,oBAAIpG,UAAU,kBAAd,sCACA,oBAAIA,UAAU,kBAAd,iFACA,oBAAIA,UAAU,kBAAd,mGACA,oBAAIA,UAAU,kBAAd,sFACA,oBAAIA,UAAU,kBAAd,qHACA,oBAAIA,UAAU,qBAAd,mFAGJ,+BACI,oBAAIA,UAAU,sBAAd,kDACA,oBAAIA,UAAU,kBAAd,4CACA,oBAAIA,UAAU,kBAAd,sFACA,oBAAIA,UAAU,kBAAd,wDACA,oBAAIA,UAAU,iBAAd,mFAIPoG,GACKrH,EACI,qBAAKiB,UAAU,aAAf,iEACAwF,EACIE,EAAS/B,KAAI,SAACtD,EAAMwD,GAAP,OAAc,cAAC,EAAD,CAAmBxD,KAAMA,EAAMyF,SAAUA,GAA1BjC,MAC1CoB,EAAetB,KAAI,SAACtD,EAAMwD,GAAP,OAAc,cAAC,EAAD,CAAmBxD,KAAMA,EAAMyF,SAAUA,GAA1BjC,MACxD9E,EACI,qBAAKiB,UAAU,aAAf,iEACAwF,EACIE,EAAS/B,KAAI,SAACtD,EAAMwD,GAAP,OAAc,cAAC,EAAD,CAAuBxD,KAAMA,EAAMyF,SAAUA,GAA1BjC,MAC9CwB,EAAmB1B,KAAI,SAACtD,EAAMwD,GAAP,OAAc,cAAC,EAAD,CAAuBxD,KAAMA,GAAVwD,MAGrEuC,GACG,cAAC,EAAD,CAAYnD,aAAcA,EAAcC,WAAYpE,EAAM4E,OAAQP,SAAUA,GAAUC,YAAaA,IACnG,cAAC,EAAD,CAAYH,aAAcA,EAAcC,WAAYyB,EAAcjB,OAAQP,SAAUA,GAAUC,YAAaA,IAE/G,eAAC,EAAD,CAAOiB,OAAQiC,GAAahC,UAAWiC,GAAvC,UACI,sJACA,uBACCX,GAAc,qBAAK5F,UAAU,mBAAf,SAAmC4F,IAClD,uBAAM5F,UAAU,gBAAgBwB,SAAUsG,GAA1C,UACI,sBAAK3F,MAAO,CAACwG,QAAQ,OAAQC,eAAe,gBAAiBC,SAAU,OAAQvG,MAAM,MAAOwG,WAAW,OAAvG,UACI,wBAAOC,QAAQ,YAAf,UACI,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,YACHmF,KAAK,YACLC,SAAUR,GACVS,QAAuB,MAAd1C,KAPjB,kEASA,wBAAOuC,QAAQ,WAAf,UACI,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,WACHmF,KAAK,WACLC,SAAUR,GACVS,QAAuB,MAAd1C,KAPjB,0CASA,wBAAOuC,QAAQ,OAAf,UACI,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,QACHmF,KAAK,OACLC,SAAUR,GACVS,QAAuB,MAAd1C,KAPjB,oCASA,wBAAOuC,QAAQ,gBAAf,UACI,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,gBACHmF,KAAK,gBACLC,SAAUR,GACVS,QAAuB,MAAd1C,KAPjB,wFAWJ,sBAAKxG,UAAU,oBAAf,UACI,uBACIpB,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,0BACV8B,IAAK6E,GACLxE,MAAO,CAAC,YAAe,UAN/B,YAQQ,uBACJvD,KAAK,OACLiD,YAAY,sEACZ7B,UAAU,0BACV8B,IAAK8E,GACLzE,MAAO,CAAC,YAAe,aAG3B,uBACIN,YAAY,qEACZ7B,UAAU,iCACV8B,IAAK4E,KAGT,wBAAQ1G,UAAU,cAAcpB,KAAK,SAASqD,SAAUlD,EAAxD,uE,gEC9CLoK,G,cAnSA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,kBAAmBC,EAA0B,EAA1BA,qBAE3BC,EAAQjI,mBACRyE,EAAWC,cACXC,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAClD,EAAgD1F,mBAAS,IAAzD,mBAAO8I,EAAP,KAAyBC,EAAzB,KACA,EAAkC/I,mBAAS,IAA3C,mBAAOgJ,EAAP,KAAkBC,EAAlB,KACA,EAA0BjJ,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACA,EAA8BlF,mBAAS,IAAvC,mBAAOkJ,EAAP,KAAgBC,EAAhB,KACA,EAAoCnJ,mBAAS,IAA7C,mBAAOoJ,EAAP,KAAmBC,EAAnB,KACA,EAA4CrJ,mBAAS,IAArD,mBAAOsJ,EAAP,KAAuBC,EAAvB,KACA,EAA4CvJ,mBAAS,MAArD,mBAAOwJ,EAAP,KAAuBC,EAAvB,KACA,EAA8CzJ,mBAAS,MAAvD,6BAGAK,qBAAU,WACN,IAAMqJ,EAAS,uCAAG,kCAAAhK,EAAA,sEACIC,IAAMW,IAAI,aAAe+E,EAASA,UADtC,cACRxF,EADQ,OAERmH,EAAOnH,EAAIC,KAAKsD,GAFR,SAKazD,IAAMW,IAAI,gBALvB,cAOmC,QAF3CqJ,EALQ,QAOE7J,KAAK,GAAlB,oBACCmJ,EAAa,IAEbA,EAAaU,EAAa7J,KAAK,GAAlB,qBAVH,UAacH,IAAMW,IAAI,eAAe0G,GAbvC,QAeqC,QAF7C4C,EAbQ,QAeG9J,KAAK,GAAnB,qBACCuJ,EAAc,IAEdA,EAAcO,EAAc9J,KAAK,GAAnB,sBAlBJ,4CAAH,qDAuBf4J,MACD,IAIH,IA8BMG,EAAe,uCAAG,kCAAAnK,EAAA,yDACpB+J,EAAkB,MAEK,IAAnBP,EAAQjG,OAHQ,gBAIhBiC,EAAS,yFAJO,0BAKS,MAAlBsE,EALS,gBAMhBtE,EAAS,uHANO,4BAOU,IAAnBgE,EAAQjG,QAAgBuG,EAAiB,GAPhC,iBAQhBtE,EAAS,yFARO,+BAWV4E,EAAY,CACdC,QAAS1E,EAASA,SAClB2E,SAAUd,EACVe,WAAYT,IAGbN,EAAQjG,OAAO,GAAwB,OAAnBuG,GAA8C,IAAnBN,EAAQjG,QAAgBuG,EAAiB,IAEvFtE,EAAS,IAnBG,UAqBQvF,IAAMC,KAAK,eAAgBkK,GArBnC,gCAuBEnK,IAAMW,IAAI,aAAe+E,EAASA,UAvBpC,eAuBVxF,EAvBU,OAwBVmH,EAASnH,EAAIC,KAAKsD,GAxBR,UAyBYzD,IAAMW,IAAI,eAAiB0G,GAzBvC,QA2BsC,QAFhD4C,EAzBU,QA2BE9J,KAAK,GAAnB,qBACAuJ,EAAc,IAEdA,EAAcO,EAAc9J,KAAK,GAAnB,sBA9BF,4CAAH,qDAmCfoK,EAAW,uCAAE,WAAOlJ,GAAP,uBAAAtB,EAAA,6DACTsK,EAAShJ,EAAEiH,OAAO5I,MAClB8K,EAAmB,CACrBC,WAAU,EACVJ,SAASA,GAJE,SAMYrK,IAAMC,KAAK,eAAeuK,GANtC,8BAOGxK,IAAMW,IAAI,aAAe+E,EAASA,UAPrC,cAOTxF,EAPS,OAQTmH,EAASnH,EAAIC,KAAKsD,GART,UASazD,IAAMW,IAAI,eAAiB0G,GATxC,QAWuC,QAFhD4C,EATS,QAWG9J,KAAK,GAAnB,qBACAuJ,EAAc,IAEdA,EAAcO,EAAc9J,KAAK,GAAnB,sBAdH,4CAAF,sDAkBXuK,EAAW,uCAAG,WAAOC,EAAOlH,GAAd,qBAAA1D,EAAA,+DACQ4K,EAAMrC,OAAtBM,EADQ,EACRA,KAAMlJ,EADE,EACFA,MACRgL,EAAc,CAChBN,QAAS1E,EAASA,SAClB2E,SAAU5G,GAED,cAATmF,QAAkCgC,IAAVlL,EACxBgL,EAAYG,aAAenL,EACX,cAATkJ,QAAkCgC,IAAVlL,IAC/BgL,EAAYI,aAAepL,GATf,SAWVM,IAAMC,KAAK,eAAgByK,GAXjB,2CAAH,wDAiBjB,OAEI,8BACI,eAAC,EAAD,CAAOzG,OAAQ+E,EAAmB9E,UAAW+E,EAA7C,UACI,uEACA,qBAAKrJ,UAAU,QAAf,SAAwBhB,IACxB,uBAEA,qBAAKgB,UAAU,eAIf,uBACA,uBACA,sBAAKA,UAAU,OAAf,UACI,gCACI,8BACI,uBAAOmC,MAAO,CAACgJ,WAAY,QAA3B,sGAEJ,gCACI,uBACItJ,YAAY,6HACZC,IAAKwH,EACLtJ,UAAU,gBACVF,MAAOyJ,EACPN,SAnHI,SAACxH,GAC7B,IAAM2J,EAAa3J,EAAEiH,OAAO5I,MAC5B0J,EAAoB4B,GACpB,IAAMC,EAAW5B,EAAUnC,QAAO,SAAAgC,GAAK,OACnCA,EAAMN,MAAQM,EAAMN,KAAKsC,cAAcC,SAASH,EAAWE,kBAG3DtB,EADe,KAAfoB,EACkB,GAEAC,MA6GF,8BACKtB,EAAerG,OAAS,GACrB,qBAAK1D,UAAU,oBAAf,SACK+J,EAAepG,KAAI,SAAC2F,EAAOzF,GAAR,OAChB,qBAAK7D,UAAU,gBAAyBF,MAAO+D,EAAIC,QAAS,kBA5G1E,SAACD,EAAGmF,GAC1BgB,EAAkB,IAClBJ,EAAW/F,GACX2F,EAAoBR,GAyGkFwC,CAAkBlC,EAAMzF,GAAGyF,EAAMN,OAAnG,SACKM,EAAMN,MADyBnF,gBAW5D,qBAAK1B,MAAO,CAACG,MAAO,UAEpB,gCACI,8BACI,uBAAOH,MAAO,CAACgJ,WAAY,QAA3B,kHAEJ,8BACI,qBAAKnL,UAAU,gBAAf,SACK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG2D,KAAI,SAAC8H,GAAD,OACjB,qBAAKzL,UAAS,2BAAsBiK,IAAmBwB,EAAU,WAAa,IAE1E3H,QAAS,kBA1JzB,SAAC2H,GACbvB,EAAkBuB,GACtBlD,QAAQC,IAAR,6BAAkCiD,IAwJatE,CAAYsE,IAF/B,SAIKA,GAHIA,gBA+B7B,uBACA,wBAAQzL,UAAU,cAAcpB,KAAK,SAASkF,QAASwG,EAAvD,mGAGA,uBACA,uBACA,qBAAKtK,UAAU,aAAf,SACI,wBAAOA,UAAU,eAAjB,UACI,gCACA,qBAAIA,UAAU,gBAAd,UACI,gEACA,mIACA,+IACA,4BAIJ,gCACC6J,EAAWlG,KAAI,SAAC+H,EAAO7H,GAAR,OACZ,qBAAI7D,UAAU,aAAd,UACI,6BACK0L,EAAM1C,OAEX,6BAEI,wBACIA,KAAK,YACL2C,aAAcD,EAAMhB,WACpBzB,SAAU,SAAC8B,GAAD,OAAWD,EAAYC,EAAOW,EAAM7H,KAHlD,SAKK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGF,KAAI,SAAAC,GAAM,OACvB,wBAAqB9D,MAAO8D,EAA5B,SAAqCA,GAAxBA,UAIzB,6BACI,yBACAoF,KAAK,YACL2C,aAAcD,EAAME,WACpB3J,UAAW+D,EAAU6F,QACrB5C,SAAU,SAAC8B,GAAD,OAAWD,EAAYC,EAAOW,EAAM7H,KAJ9C,UAMsB,OAArB6H,EAAME,YAAwB5F,EAAU6F,QAAwC,GAA9B,6FAC7B,OAArBH,EAAME,WAAsB,6FAA8B,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGjI,KAAI,SAAAC,GAAM,OACvB,wBAAqB9D,MAAO8D,EAA5B,SAAqCA,GAAxBA,WAIrB,6BAAI,wBAAQ9D,MAAO4L,EAAM7H,GAAI7D,UAAU,cAAc8D,QAAS6G,EAA1D,4DA9BwB9G,aAoC5C,uBACA,uBACA,uBAAK,8B,iBCuCNiI,EAtUW,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,YAGxBjL,qBAAU,WACN,GAAIiL,IACAC,EAA2BD,EAAYE,gBACvCC,GAAmBH,EAAYI,OAC/BC,EAAaL,EAAYM,yBACzBC,GAAyBP,EAAYQ,aACrCC,GAAsBT,EAAYU,qBAClCC,EAAiBX,EAAYY,YAC7BC,EAAab,EAAYc,cACzBC,EAAef,EAAYgB,YAC3BC,EAAejB,EAAYkB,YAC3BC,EAAYnB,EAAYlI,IAGc,OAAnCkI,EAAYoB,sBACf,CACI,IAAMC,EAAOC,IAAOtB,EAAYoB,sBAAsBG,OAAO,cAC7DC,EAAsBH,MAO/B,CAACrB,IAIJ,MAA4BtL,mBAAS,IAArC,mBAAOwH,EAAP,KAAeuF,EAAf,KACA,EAAkC/M,mBAAS,IAA3C,mBAAOgN,EAAP,KAAkBrB,EAAlB,KAEA,EAA8B3L,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAA0ClN,mBAAS,IAAnD,mBAAOmN,EAAP,KAAsBlB,EAAtB,KAGA,EAAkCjM,mBAAS,IAA3C,mBAAOoN,EAAP,KAAkBjB,EAAlB,KAEA,EAAsCnM,mBAAS,IAA/C,mBAAOqN,EAAP,KAAoBhB,EAApB,KAEA,EAA8BrM,mBAAS,IAAvC,mBAAOU,EAAP,KAAgB4M,EAAhB,KAGA,EAAoDtN,mBAAS,IAA7D,mBAAOuN,EAAP,KAA2BT,EAA3B,KAEA,EAAsC9M,mBAAS,IAA/C,mBAAOwN,EAAP,KAAoBjB,EAApB,KAEA,EAA8DvM,mBAAS,IAAvE,mBAAOyN,EAAP,KAAgClC,EAAhC,KAEA,EAAgCvL,mBAAS,IAAzC,mBAAO0N,EAAP,KAAiBjB,EAAjB,KAEA,EAA0DzM,mBAAS,IAAnE,oBAAO2N,GAAP,MAA8B9B,GAA9B,MAEA,GAAoD7L,mBAAS,IAA7D,qBAAO4N,GAAP,MAA2B7B,GAA3B,MAEA,GAA8C/L,mBAAS,IAAvD,qBAAO6N,GAAP,MAAwBpC,GAAxB,MAEA,GAAkCzL,mBAAS,IAA3C,qBAAkB8N,IAAlB,aAEA,GAAoC9N,mBAAS,IAA7C,qBAAO+N,GAAP,MAAmBC,GAAnB,MACA,GAA4BhO,mBAAS,IAArC,qBAAOgH,GAAP,MAAeiH,GAAf,MACA,GAA0CjO,mBAAS,IAAnD,qBAAOkO,GAAP,MAAsBC,GAAtB,MACA,GAA0BnO,mBAAS,IAAnC,qBAAOoO,GAAP,MAAcC,GAAd,MAGMC,GAAY1N,mBACZ2N,GAAY3N,mBACZ4N,GAAa5N,mBACb6N,GAAS7N,mBACT8N,GAAa9N,mBACb+N,GAAiB/N,mBAEvBP,qBAAU,WACN,IAAMuO,EAAU,uCAAG,kCAAAlP,EAAA,sEACQC,IAAMW,IAAI,iCADlB,cACTuO,EADS,OAEf9B,EAAU8B,EAAS/O,MAFJ,SAGOH,IAAMW,IAAI,qBAHjB,cAGTwO,EAHS,OAIfC,GAAQD,EAAQhP,MAJD,UAKOH,IAAMW,IAAI,mCALjB,eAKT2M,EALS,OAMfC,EAAWD,EAAQnN,MANJ,UAOIH,IAAMW,IAAI,aAPd,QAOTlC,EAPS,OAQfiQ,GAASjQ,EAAK0B,MARC,4CAAH,qDAYhB8O,MACD,IACH,OAAwB5O,mBAAS,IAAjC,qBAAOgP,GAAP,MAAaD,GAAb,MA+CME,GAAgB,uCAAG,4BAAAvP,EAAA,yDAEfwP,EAAa,CACfC,gBAAiB3B,EACjB4B,cAAe3B,EACf3B,YAAa6B,GACbjC,MAAOmC,GACPgB,SAAUP,GAAUpN,QAAQ7B,MAC5B+O,MAAwB,IAAhBpH,GAAO/D,OAAayK,EAAW1G,GACvCqI,OAAQrI,GACR0G,SAAUA,EACVsB,KAAMhC,EACNd,WAAYiB,EACZf,aAAcgB,EACdd,WAAYe,EACZX,qBAA2D,IAAtCiC,GAAezN,QAAQ7B,MAAM4D,OAAa,KAAM0L,GAAezN,QAAQ7B,SAGhE,MAA5BiP,GAAUpN,QAAQ7B,OAA4B,OAAXqO,GAAmB1G,GAAO/D,OAAO,GAlBnD,gBAmBjBqK,EAAW,wHAnBM,uCAwBC3N,IAAM2P,IAAI,kBAAmBJ,GAxB9B,cAyBjB5B,EAAW,0DACX3F,OAAOC,SAASC,SA1BC,4CAAH,qDA6DlB,OACI,gCACI,qBAAKtI,UAAU,uBAAf,SACI,+BAAQmB,MAEZ,8BACI,uBAAOvC,KAAK,OAAOoB,UAAU,sBACtBF,MAAOoO,EACPjF,SAlHO,SAACxH,GAC3BuK,EAA2BvK,EAAEiH,OAAO5I,YAoH5B,8BACI,0BAAUE,UAAU,kBACVF,MAAOsO,GACPnF,SAlHW,SAACxH,GAClC6K,GAAyB7K,EAAEiH,OAAO5I,YAoH1B,gCACI,mHAA2B,uBAC3B,wBAAQgC,IAAKkN,GACLlP,MAAO2N,EACPxE,SAzGL,WACfmD,EAAa4C,GAAUrN,QAAQ7B,QAyGXE,UAAU,yBAHlB,SAIKyP,GAAK9L,KAAI,SAACqM,EAAKhH,GAAN,OAAe,wBACQlJ,MAAOkQ,EAAInM,GADnB,SACwBmM,EAAIC,iBADfjH,WAK9C,gCACI,yEAAoB,uBACpB,wBAAQlH,IAAKiN,GACLjP,MAAOuO,GACPpF,SAxHJ,WAChBuD,GAAsBuC,GAAUpN,QAAQ7B,QAwHpBE,UAAU,2BAHlB,SAIKiI,EAAOtE,KAAI,SAACsE,EAAQe,GAAT,OAAkB,wBACQlJ,MAAOmI,EAAOpE,GADtB,SAC2BoE,EAAOe,MADrBA,WAKnD,gCACI,mEAAmB,uBACnB,uBAAOpK,KAAK,OACLkB,MAAOwO,GACPrF,SA3IQ,SAACxH,GAExB,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACtBoM,GAAmBzK,EAAEiH,OAAO5I,QAyIb+B,YAAY,iCACZ7B,UAAU,0BAGrB,gCACI,qFAAsB,uBACtB,wBAAQ8B,IAAKmN,GACLnP,MAAO8N,EACP3E,SApIF,WAClByD,EAAiBuC,GAAWtN,QAAQ7B,QAoIhBE,UAAU,2BAHlB,SAIK0N,EAAQ/J,KAAI,SAAC+J,EAAS1E,GAAV,OAAmB,wBAAmBlJ,MAAO4N,EAAQ7J,GAAlC,SAAuC6J,EAAQ1E,MAAlCA,WAIrD,sBAAKhJ,UAAU,YAAf,UACI,gCAEI,oHAA4B,uBAC5B,sBAAKA,UAAU,WAAf,UACI,uBACIpB,KAAK,OACLiD,YAAY,kFACZ/B,MAAO0O,IAAezC,GAAeA,EAAYoE,UACjDlH,SAnGF,SAACxH,GACvB,IAAM2O,EAAO3O,EAAEiH,OAAO5I,MAElB2O,GADM,KAAP2B,EACe,KAGAA,GAElB,IAAM/E,EAAWwD,GAAMvH,QAAO,SAAAzI,GAAI,OAC9BA,EAAKsR,WAAatR,EAAKsR,UAAU7E,cAAcC,SAAS6E,EAAK9E,kBAGpD,KAAT8E,EACA7B,GAAa,IAEbK,GAAiBvD,IAqFGrL,UAAU,uBAGb2O,GAAcjL,OAAS,GACpB,qBAAK1D,UAAU,oBAAf,SACK2O,GAAchL,KAAI,SAAC9E,EAAMwR,GAAP,OACf,qBAAKrQ,UAAU,gBAA4BF,MAAOjB,EAAKgF,GAClDC,QAAS,kBAtF1B,SAACwM,EAAS7I,GAE9BiH,GAAUjH,GACVc,QAAQC,IAAI,OAAOf,GACnBgH,GAAc6B,GACd1B,GAAiB,IAiFmC2B,CAAgB1R,EAAKsR,UAAWtR,EAAKgF,KADzD,SAEKhF,EAAKsR,WAF0BE,WAQpD,gCACI,kGAAyB,uBACzB,uBAAOzR,KAAK,OACLkD,IAAKsN,GACLvN,YAAY,qBACZ7B,UAAU,qBACVF,MAAOkO,EACP/E,SA3JX,WAChBsE,EAAsB6B,GAAezN,QAAQ7B,aA6J7B,gCACI,uDAAiB,uBACjB,uBAAOlB,KAAK,OACLkD,IAAKoN,GACLpP,MAAO+N,EACP5E,SA7Kb,WACd2D,EAAasC,GAAOvN,QAAQ7B,QA6KD+B,YAAY,qBACZ7B,UAAU,0BAGrB,gCACI,yEAAoB,uBACpB,uBAAOpB,KAAK,OACLkD,IAAKqN,GACLrP,MAAOgO,EACP7E,SAnLf,SAACxH,GACT,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACtBgN,EAAerL,EAAEiH,OAAO5I,QAkLD+B,YAAY,wGACZ7B,UAAU,6BAIzB,uBACA,qBAAKA,UAAU,aAAf,wDAGA,uBACA,8BACI,wBAAQA,UAAU,cAAcpB,KAAK,SAASkF,QAAS4L,GAAvD,6E,OCnTTc,MAVf,YAAwD,IAA/BnM,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWhF,EAAW,EAAXA,SAC1C,OACE,qBAAKU,UAAWqE,EAAS,gBAAkB,SAA3C,SACE,sBAAKrE,UAAWqE,EAAS,uBAAyB,gBAAiBP,QAAS,SAACrC,GAAD,OAAOA,EAAE8C,mBAArF,UACE,qBAAKvE,UAAU,cAAf,SAA6B,sBAAM8D,QAAS,kBAAMQ,GAAU,IAA/B,SAAuC,cAACE,EAAA,EAAD,QACnElF,QCKM,SAASmR,IACpB,MAAgChQ,mBAAS,IAAzC,mBAAiBiQ,GAAjB,WACA,EAA4CjQ,mBAAS,IAArD,mBAAuBkQ,GAAvB,WACA,EAA0BlQ,mBAAS,IAAnC,mBAAOzB,EAAP,KAEA,GAFA,KAE4CyB,oBAAS,IAArD,mBAAOmQ,EAAP,KAAuBC,EAAvB,KACA,EAAsCpQ,mBAAS,IAA/C,mBAAOqQ,EAAP,KAAoBC,EAApB,KACA,EAAoDtQ,mBAAS,MAA7D,mBAAOuQ,EAAP,KAA2BC,EAA3B,KACA,EAA0CxQ,mBAAS,IAAnD,mBAAOyQ,EAAP,KAAsBC,EAAtB,KAIA,EAA0B1Q,qBAA1B,mBAAO2Q,EAAP,KAAcC,EAAd,KACA,EAAwC5Q,mBAAS,IAAjD,mBAAO6Q,EAAP,KAAqBC,EAArB,KACA,EAAkC9Q,mBAAS,IAA3C,mBAAO+Q,EAAP,KAAkBC,GAAlB,KACA,GAA8BhR,mBAAS,IAAvC,qBAAgBiR,IAAhB,aACA,GAAgCjR,mBAAS,IAAzC,qBAAOkR,GAAP,MAAiBC,GAAjB,MAGA,GAAgCnR,mBAAS,IAAzC,qBAAOoR,GAAP,MAAiBC,GAAjB,MACA,GAAgCrR,mBAAS,IAAzC,qBAAOsR,GAAP,MAAiBC,GAAjB,MAEA,GAAwBvR,mBAAS,IAAjC,qBAAO5B,GAAP,MAAaoT,GAAb,MAEA,GAAkCxR,mBAAS,IAA3C,qBAAOyR,GAAP,MAAkBC,GAAlB,MAGA,GAA0B1R,mBAAS,IAAnC,qBAAOW,GAAP,MAAcgR,GAAd,MACA,GAAsC3R,mBAAS,IAA/C,qBAAO4R,GAAP,MAAoBC,GAApB,MAGA,GAA0B7R,mBAAS,IAAnC,qBAAO8R,GAAP,MAAcC,GAAd,MACA,GAAsC/R,mBAAS,IAA/C,qBAAOgS,GAAP,MAAoBC,GAApB,MAGA,GAAoDjS,mBAAS,IAA7D,qBAAOkS,GAAP,MAA2BC,GAA3B,MACA,GAAkEnS,mBAAS,IAA3E,qBAAOoS,GAAP,MAAkCC,GAAlC,MAGA,GAAoDrS,mBAAS,IAA7D,qBAAOsS,GAAP,MAA2BC,GAA3B,MACA,GAAkEvS,mBAAS,IAA3E,qBAAOwS,GAAP,MAAkCC,GAAlC,MAGA,GAAgDzS,mBAAS,IAAzD,qBAAO0S,GAAP,MAAyBC,GAAzB,MACA,GAA8D3S,mBAAS,IAAvE,qBAAO4S,GAAP,MAAgCC,GAAhC,MAEA,GAAkC7S,mBAAS,IAA3C,qBAAO8S,GAAP,MAAkBC,GAAlB,MACA,GAAgD/S,mBAAS,IAAzD,qBAAOgT,GAAP,MAAyBC,GAAzB,MAGA,GAAwCjT,mBAAS,IAAjD,qBAAOkT,GAAP,MAAqBC,GAArB,MACA,GAAoCnT,oBAAS,GAA7C,qBAAO1B,GAAP,MAAmB8F,GAAnB,MACA,GAAsCpE,oBAAS,GAA/C,qBAAO6F,GAAP,MAAoBC,GAApB,MACA,GAA8C9F,oBAAS,GAAvD,qBAAOoT,GAAP,MAAwBC,GAAxB,MACA,GAA8CrT,oBAAS,GAAvD,qBAAOsT,GAAP,MAAwBC,GAAxB,MACA,GAAkCvT,oBAAS,GAA3C,qBAAOwT,GAAP,MAAkBC,GAAlB,MACA,GAAwBzT,mBAAS,IAAjC,qBAAO0T,GAAP,MAAaC,GAAb,MACA,GAAwD3T,oBAAS,GAAjE,qBAAO4T,GAAP,MAA6BC,GAA7B,MACA,GAAgD7T,oBAAS,GAAzD,qBAAO8T,GAAP,MAAyBC,GAAzB,MACA,GAAkD/T,oBAAS,GAA3D,qBAAOgU,GAAP,MAA0BC,GAA1B,MACA,GAAkDjU,oBAAS,GAA3D,qBAAO2I,GAAP,MAA0BC,GAA1B,MAGA,GAA8B5I,mBAAS,IAAvC,qBAAOkU,GAAP,MAAgBC,GAAhB,MACA,GAAqBnU,mBAAS,IAA9B,qBAAOoU,GAAP,MAAWC,GAAX,MACMhP,GAAWC,cAGbC,GAAcF,GAAW,CAACG,IAAKH,GAASA,SAAU1E,MAAO,IAAMzB,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAC7F4O,GAAWpV,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAE3C6O,GAAW3T,mBACX4T,GAAe5T,mBACf6T,GAAe7T,mBACf8T,GAAoB9T,mBACpB+T,GAAc/T,mBACdgU,GAAoBhU,mBACpBiU,GAAoBjU,mBACpBkU,GAAkBlU,mBAClBmU,GAAYnU,mBACZoU,GAAiBpU,mBAGvB,GAAgCZ,mBAAS,IAAzC,qBAAOiV,GAAP,MAAiBC,GAAjB,MACA,GAAgDlV,mBAAS,IAAzD,qBAAOmV,GAAP,MAAyBC,GAAzB,MACA,GAA4CpV,mBAAS,IAArD,qBAAOqV,GAAP,MAAuBC,GAAvB,MACA,GAA4BtV,mBAAS,IAArC,qBAAOuV,GAAP,MAAeC,GAAf,MACA,GAAgCxV,oBAAS,GAAzC,qBAAOyV,GAAP,MAAiBC,GAAjB,MA4BMC,GAAgB,CAClB,EAAG,GACH,EAAG,QACH,EAAG,MACH,EAAG,aACH,EAAG,UACH,EAAG,WACH,EAAG,WACH,EAAG,SAYPtV,qBAAU,WAEN,IAAMuV,EAAiBC,OAAOC,KAAKC,IAAQC,MAAK,SAAAC,GAAG,OAC/C7X,GAAK8X,oBAAsBD,GAAO7X,GAAK8X,oBAAsBC,SAASF,MAE1EP,GAAYE,GAGZ,IAQMQ,EAAO,uCAAG,gCAAA1W,EAAA,sEAEUC,IAAMW,IAAI,iCAFpB,OAEFT,EAFE,OAGFC,EAAOD,EAAIC,KAAK,GAAT,wBACPuW,EAAmBC,EAAexW,GACxCqU,GAAWkC,GACX3F,EAAiBtS,GAAKmY,eANd,2CAAH,qDASPD,EAAiB,SAAjBA,EAAkBE,GACpB,IAAIC,EAAc,CAAC,CAAErT,GAAIoT,EAAKpT,GAAImF,KAAMiO,EAAKE,OAM7C,OALIF,EAAKG,YAAcH,EAAKG,WAAW1T,OAAS,GAC5CuT,EAAKG,WAAWC,SAAQ,SAAAC,GACpBJ,EAAcA,EAAYK,OAAOR,EAAeO,OAGjDJ,GAILM,EAAW,uCAAG,8BAAArX,EAAA,6DACVsP,EAAO,CACT5Q,KAAMiH,GAASA,UAFH,SAIE1F,IAAMC,KAAK,oBAAqBoP,GAJlC,OAIVnP,EAJU,OAKhBoQ,EAAYpQ,EAAIC,KAAK,GAAT,UACZuR,GAAYxR,EAAIC,KAAK,GAAT,iBACZyR,GAAY1R,EAAIC,KAAK,GAAT,WAPI,2CAAH,qDAUXkX,EAAS,uCAAG,oCAAAtX,EAAA,6DACd6F,GAAUC,IAAQD,GAAUC,IAAMD,GAAUC,IAAMD,GAAUnC,GAC5DmC,GAAUC,IAAQH,GAAWA,GAASA,SAAWE,GAAUC,IAF7C,SAGI7F,IAAMW,IAAI,aAAe+E,GAASA,UAHtC,cAGRxF,EAHQ,OAId2R,GAAQ3R,EAAIC,MACZmR,GAAWpR,EAAIC,KAAKmX,SACpB7S,IAAc,GANA,UAQKzE,IAAMW,IAAI,cARf,eAQRlC,EARQ,OASRiI,EAAOjI,EAAK0B,KAAKuG,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAC5D0H,EAAO/Q,EAAKQ,QAAO,SAAAwQ,GAAO,OAAIA,EAAQjU,KAAOiC,GAASA,UAA+B,IAAnBgS,EAAQ7P,UAChF2J,GAAYiG,GAXE,UAaKzX,IAAMW,IAAI,gBAbf,QAaRgX,EAbQ,OAcd9B,GAAU8B,EAAKxX,MAdD,4CAAH,qDAiBTyX,EAAS,uCAAG,4BAAA7X,EAAA,sEACIC,IAAMW,IAAI,cADd,OACRT,EADQ,OAEd8T,GAAQ9T,EAAIC,MAFE,2CAAH,qDAIX1B,IAAQA,GAAKuC,OAASA,IACtBgR,GAASvT,GAAKuC,OAEdvC,IAAQA,GAAKoZ,cAAgB1F,IAC7BC,GAAS3T,GAAKoZ,cAGdpZ,IAAQA,GAAK8T,oBAAsBA,IACnCC,GAAsB/T,GAAK8T,oBAG3B9T,IAAQA,GAAKkU,oBAAsBA,IACnCC,GAAsBnU,GAAKkU,oBAE3BlU,IAAQA,GAAKsU,kBAAoBA,IACjCC,GAAoBvU,GAAKsU,kBAEzBtU,IAAQA,GAAKqZ,oBAAsB3E,IACnCC,GAAa3U,GAAKqZ,oBA7EI,WACtB,GAAIrZ,GAAKsR,UAAW,CAChB,MAAwBtR,GAAKsR,UAAUgI,MAAM,KAA7C,mBAAOnP,EAAP,KAAaoP,EAAb,KACAxE,GAAgBwE,GAAW,IAC3BjG,GAAanJ,IA4ErBqP,GACAL,IACAP,IACAZ,IACAW,MACD,CACC3Y,GAAKsR,UACLtR,GAAKuC,MACLvC,GAAKoZ,aACLpZ,GAAK8T,mBACL9T,GAAKkU,mBACLlU,GAAKsU,iBACLtU,GAAKqZ,qBAGT,IAmGM/Q,GAAW,uCAAG,WAAO1F,GAAP,mBAAAtB,EAAA,yDAEV6I,EAAOnK,GAAKsR,UACLnH,EAAKmP,MAAM,KACxB1W,EAAEC,iBACI4W,EAAU,CACZC,aAAcvD,GAASrT,QAAQ7B,OAASjB,GAAKmY,cAC7C5V,MAAQA,IAAgBiR,GAAYzQ,cACpCkE,SAAUoM,GAAY,IAAMyB,GAC5B1N,IAAKpH,GAAKgF,GACVgI,QAAShN,GAAK6Y,QACdc,UAAW3Z,GAAK2Z,UAChBvQ,OAAQpJ,GAAKoJ,OACbwQ,gBAAiB5Z,GAAK4Z,gBACtBR,aAA6C,KAA9B7C,GAAYzT,QAAQ7B,MAAe,GAAKsV,GAAYzT,QAAQ7B,MAC3E6S,mBAAoB0C,GAAkB1T,QAAQ7B,MAC9CiT,mBAAoBuC,GAAkB3T,QAAQ7B,MAC9CqT,iBAAkBoC,GAAgB5T,QAAQ7B,MAC1C4Y,QAAShD,GACTiD,gBAAgBlD,GAAe9T,QAAQ7B,OAGvCiV,GAAS9O,MAAQH,GAASA,SAtBd,wBAuBN8S,EAAW,CACbL,aAAcvD,GAASrT,QAAQ7B,OAASjB,GAAKmY,cAC7C5V,MAAQA,IAAgBiR,GAAYzQ,cACpCkE,SAAUoM,GAAY,IAAMyB,GAC5BsE,aAA6C,KAA9B7C,GAAYzT,QAAQ7B,MAAe,GAAKsV,GAAYzT,QAAQ7B,MAC3E6S,mBAAoB0C,GAAkB1T,QAAQ7B,MAC9CiT,mBAAoBuC,GAAkB3T,QAAQ7B,MAC9CqT,iBAAkBoC,GAAgB5T,QAAQ7B,MAC1C4Y,QAAShD,GACTzP,IAAKpH,GAAKgF,GACV8U,gBAAgBlD,GAAe9T,QAAQ7B,OAjC/B,SAoCNM,IAAM2P,IAAI,aAAc6I,GApClB,OAqCZxQ,OAAOC,SAASC,SArCJ,yCAuCNlI,IAAM2P,IAAI,aAAcuI,GAvClB,eAwCLA,EAAQL,oBACRK,EAAQ3F,0BACR2F,EAAQvF,0BACRuF,EAAQnF,wBACRmF,EAAQI,eACRJ,EAAQK,gBACflZ,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,eAAmB0Y,KAChD/R,IAAe,GACf6B,OAAOC,SAASC,SAhDJ,4CAAH,sDAqDXuQ,GAAmB,uCAAG,WAAOpX,GAAP,eAAAtB,EAAA,yDACxBsB,EAAEC,iBACEwT,GAAavT,QAAQ7B,QAAUqV,GAAkBxT,QAAQ7B,MAFrC,uBAGpBgV,GAAO,2IAHa,iCAMlBgE,EAAY,CACdrR,OAAQsN,GAAS9O,IACjB3E,SAAUyT,GAASzT,SACnByX,YAAa9D,GAAatT,QAAQ7B,MAClCkZ,YAAa9D,GAAavT,QAAQ7B,OAVd,kBAadM,IAAM2P,IAAI,oBAAqB+I,GAbjB,OAcpBhF,IAAmB,GAdC,kDAmBpBgB,GAAO,iJAnBa,0DAAH,sDAwBnBmE,GAAe,uCAAG,WAAOxX,GAAP,eAAAtB,EAAA,6DACpBsB,EAAEC,iBAEIwX,EAAgB,CAClBzR,OAAQ3B,GAASA,SACjBkT,YAAa,aALG,kBASV5Y,IAAM2P,IAAI,sBAAuBmJ,GATvB,OAUhB5E,IAAwB,GAVR,yGAAH,sDAefrM,GAAM,uCAAG,4BAAA9H,EAAA,yDACS,IAAhBtB,GAAKoJ,OADE,uBAEDA,EAAS,CACXA,OAAQ,EACR9D,YAAa,EACbsD,OAAQ5I,GAAKgF,GACbsV,UAAW,IACXC,WAAY,IACZC,QAAS,IAAIpS,KAAKA,KAAKqS,QARpB,SAUDlZ,IAAM2P,IAAI,aAAc9H,GAVvB,6BAYPsR,MAAM,qIAZC,2CAAH,qDAiBNC,GAAY,uCAAG,WAAO/X,GAAP,eAAAtB,EAAA,6DACjBsB,EAAEC,iBACFmD,IAAc,GAER4U,EAAU,CACZhS,OAAQ3B,GAASA,SACjBqT,UAAW,EACXlR,OAAQ,GAPK,kBAUP7H,IAAM2P,IAAI,gBAAiB0J,GAVpB,OA0Bb/E,IAAqB,GACrBtM,OAAOC,SAASqR,KAAhB,mBAAmC7a,GAAKgF,IA3B3B,kDA6Bb0E,QAAQC,IAAR,MA7Ba,0DAAH,uDAgClBxC,GAAenH,KAAS8a,MAAMC,QAAQ/a,IAASA,GAAOmH,IAC5CF,SAAaE,GAAUmK,UAAYnK,GAAUmK,UAAYnK,GAAUF,SAC7E,IAAMkD,GAAOhD,GAAU5E,MAAMkK,cA0HvBuO,GAAY,uCAAG,4BAAA1Z,EAAA,6DACjBoI,QAAQC,IAAI,QAAS8I,GADJ,SAGClR,IAAMW,IAAI,aAAe+E,GAASA,UAHnC,iBAKXgU,EAAgB,CAClBrS,OAAQ3B,GAASA,SACjBiU,cAAe3I,QAGLpG,IAAVoG,EAVa,gBAWb0D,GAAO,2GAXM,wCAaP1U,IAAMC,KAAK,aAAcyZ,GAblB,QAcb5F,IAAa,GACb9L,OAAOC,SAASC,SAfH,4CAAH,qDAmBZ0R,GAAiB,uCAAG,4BAAA7Z,EAAA,sEACJC,IAAMW,IAAI,aAAe+E,GAASA,UAD9B,qBAEhBgU,EAAgB,CAClBrS,OAAQ3B,GAASA,SACjBiU,cAAe,MAJG,SAOhB3Z,IAAMC,KAAK,aAAcyZ,GAPT,OAQtB5F,IAAa,GACb9L,OAAOC,SAASC,SATM,2CAAH,qDAmCjB2R,GAAS,uCAAG,sBAAA9Z,EAAA,sDACd+T,IAAa,GACbF,IAAmB,GAFL,2CAAH,qDAKTwC,GAAS,CACX,EAAK,CAAC0D,IAAK,kBAAmBC,MAAO,kCACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,qGACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,kEACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,8CACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,mFACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,6EACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,4BACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,oPACrC,EAAK,CAACD,IAAK,kBAAmBC,MAAO,sNACrC,GAAM,CAACD,IAAK,mBAAoBC,MAAO,yEA4B3C,GAAmC1Z,qBAAnC,qBAAOsL,GAAP,MAAmBqO,GAAnB,MAQA,OAEI,sBAAKpa,UAAU,cAAf,UAEKsW,OAAOC,KAAKC,IAAQ7S,KAAI,SAAC+S,EAAK7S,GAAN,OACpBhF,GAAK8X,oBAAsBD,GAAO7X,GAAK8X,oBAAsBC,SAASF,KACvE,qBAEIwD,IAAK1D,GAAOE,GAAKwD,IACjBC,MAAO3D,GAAOE,GAAKyD,MACnBE,IAAG,oBAAe3D,GAClB1W,UAAU,iBAJL6D,MAQZ9E,GAAa,qBAAKiB,UAAU,aAAf,iEACV,sBAAKA,UAAW,cArlB5B,SAAoBsa,GAChB,IAAK,IAAIhX,KAAK8S,GACV,GAAI9S,GAAKgX,EACL,OAAOlE,GAAc9S,GAklBYiX,CAAW1b,GAAKoJ,QAAjD,UACQ,sBAAKjI,UAAU,cAAcmC,MAAO,CAAEqY,WAAYtE,GAAW,OAAS,OAAtE,UACKrX,GAAKsR,UAIL4E,GAASlJ,SAAWkJ,GAAS9O,MAAMH,GAASA,SAAW,cAAC2U,EAAA,EAAD,CAAQtY,MAAO,CAAC2G,WAAY,MAAOD,SAAU,QAAS6R,OAAQ,WACjG5W,QAAS,kBAAMyC,IAAe,MAAW,GAI7DwO,GAASlJ,QAAU,cAAC8O,EAAA,EAAD,CAAQxY,MAAO,CAACuY,OAAQ,UAAW7R,SAAU,SACrC/E,QAAS,kBAAM4Q,IAAqB,MAAW,8BAErD,IAArBK,GAASlJ,SAAoBkJ,GAAS9O,MAAQpH,GAAKgF,GAAK,cAAC,IAAD,CAAMxB,GAAE,cAAR,SAAyB,cAAC,IAAD,CAC9EF,MAAO,CAACuY,OAAQ,UAAWtY,MAAO,QAASyG,SAAU,aAAqB,MAGlF,8BACI,uBAAO1G,MAAO,CAACuY,OAAO,WAAY5W,QA1C9B,WACrBiR,GAASlJ,UACRgF,GAAkB,GAClBuJ,GAAevb,MAuCgEmB,UAAU,uBAAzE,SAAiGnB,GAAKgO,iBAQ9G,sBAAK1K,MAAO,CAACyY,OAAQ,mBAAmBC,QAAQ,QAAhD,UACA,sBAAK7a,UAAU,kBAAf,oBAAyCgJ,GAAK8R,OAAO,GAAGlZ,cAAgBoH,GAAK9D,MAAM,MACnF,sBAAKlF,UAAU,kBAAf,yDAA2CnB,GAAKoZ,gBAChD,sBAAKjY,UAAU,kBAAf,WAC0B,IAArB+U,GAASlJ,SAAqBkJ,GAAS9O,MAAMH,GAASA,SAAU,kEAAkB,IAC7D,IAArBiP,GAASlJ,SAAqBkJ,GAAS9O,MAAMH,GAASA,SAAUjH,GAAK8T,mBAAqB,MAE/F,sBAAK3S,UAAU,kBAAf,oGAAmDnB,GAAKkU,sBACxD,sBAAK/S,UAAU,kBAAf,kIAAwDnB,GAAKsU,oBAC7D,sBAAKnT,UAAU,kBAAf,0GAAoD+R,MACpD,sBAAK/R,UAAU,kBAAf,WAC0B,IAArB+U,GAASlJ,SAAsBkJ,GAAS9O,MAAMH,GAASA,SAAW,yKAAoC,IACjF,IAArBiP,GAASlJ,SAAqBkJ,GAAS9O,MAAMH,GAASA,SAAWjH,GAAKqZ,mBAAqB,MAEhG,sBAAKlY,UAAU,kBAAf,6FAAiD6R,SAKhDkD,GAASlJ,SAAWkJ,GAAS9O,MAAMH,GAASA,SAC7C,qBAAK9F,UAAU,aAAa8D,QAAS,kBAAMgQ,IAAmB,IAA9D,mGAA2F,GAG1FiB,GAASlJ,QACN,qBAAK7L,UAAU,aAAa8D,QAAS,kBAAMwQ,IAAwB,IAAnE,mGACmB,GAGtBS,GAASlJ,QACN,qBAAK7L,UAAU,aAAa8D,QAAS,kBAAM0Q,IAAoB,IAA/D,oEAAuF,GAG1FO,GAAS9O,MAAQpH,GAAKgF,GACnB,qBAAK7D,UAAU,aAAa8D,QAAS,kBAAMkQ,IAAmB,IAA9D,4FAA2F,GAG9Fe,GAASlJ,QAAU,qBAAK7L,UAAU,aAAa8D,QAASmW,GAArC,2HAA4E,GAGhG,qBAAKja,UAAU,aAAa8D,QAAS,kBAAMuF,IAAqB,IAAhE,kDACA,cAAC,EAAD,CAAQD,kBAAmBA,GAAmBC,qBAAsBA,GAAsBvD,SAAUA,GAASA,cAMrH,eAAC,EAAD,CAAOzB,OAAQiC,GAAahC,UAAWiC,GAAvC,UACI,sJACA,uBACCvH,GAAS,qBAAKgB,UAAU,aAAf,SAA6BhB,IACvC,uBAAMgB,UAAU,gBAAgBwB,SAAU2F,GAA1C,UACI,8BACI,uBACItF,YAAY,6CACZ7B,UAAU,mBACViJ,SA9dC,SAACxH,GACtB0Q,GAAa1Q,EAAEiH,OAAO5I,QA8dFA,MAAOoS,OAGf,8BACI,uBACIrQ,YAAY,qBACZ7B,UAAU,mBACViJ,SAleI,SAACxH,GACzBmS,GAAgBnS,EAAEiH,OAAO5I,QAkeLA,MAAO6T,OAGf,8BACI,uBACI9R,YAAY,QACZjD,KAAK,QACLoB,UAAU,mBACViJ,SAxkBE,SAACxH,GAEnBA,EAAEiH,OAAO5I,QACTsS,GAAS,IACTE,GAAe7Q,EAAEiH,OAAO5I,QAEL,KAAnB2B,EAAEiH,OAAO5I,QACTsS,GAAS,IACTE,GAAe,MAikBCxS,MAAOsB,IAASiR,GAChBrQ,UAAW,MAGnB,8BACI,uBACIH,YAAY,6CACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAKsT,GACLnM,SAxjBE,SAACxH,GACnBA,EAAEiH,OAAO5I,QACT0S,GAAS,IACTE,GAAejR,EAAEiH,OAAO5I,QAEL,KAAnB2B,EAAEiH,OAAO5I,QACT0S,GAAS,IACTE,GAAe,KAEnB,IAAM5S,EAAQ2B,EAAEiH,OAAO5I,MACvB,GAAIA,EAAM4D,OAAS,EACfgP,GAAe,QACZ,CACH,IAAMqI,EA5BY,SAACjb,GAEvB,IAAIkb,EAAUlb,EAAMoE,QAAQ,MAAO,IAC/B8W,EAAQC,WAAW,OACnBD,EAAUA,EAAQ9V,MAAM,IAK5B,IAAMgW,GAFNF,EAAUA,EAAQ9V,MAAM,EAAG,KAELgW,MAAM,0CAC5B,OAAIA,EACO,MAAQ,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAI5T,OAAO6T,SAASC,KAAK,KAE1E,MAAQJ,EAeYK,CAAkBvb,GACzC4S,GAAeqI,KA2iBCjb,MAAOyS,IAASE,OAGxB,8BACI,uBACI5Q,YAAY,0PACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAKuT,GACLpM,SAhjBG,SAACxH,GACpBA,EAAEiH,OAAO5I,QACT8S,GAAsB,IACtBE,GAA6BrR,EAAEiH,OAAO5I,QAEnB,KAAnB2B,EAAEiH,OAAO5I,QACT8S,GAAsB,IACtBE,GAA6B,MA0iBbhT,MAAO6S,IAAsBE,OAGrC,8BACI,uBACIhR,YAAY,wFACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAKwT,GACLrM,SA/iBG,SAACxH,GACpBA,EAAEiH,OAAO5I,QACTkT,GAAsB,IACtBE,GAA6BzR,EAAEiH,OAAO5I,QAEnB,KAAnB2B,EAAEiH,OAAO5I,QACTkT,GAAsB,IACtBE,GAA6B,MAyiBbpT,MAAOiT,IAAsBE,OAGrC,8BACI,uBACIpR,YAAY,sHACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAKyT,GACLtM,SA9iBC,SAACxH,GAClBA,EAAEiH,OAAO5I,QACTsT,GAAoB,IACpBE,GAA2B7R,EAAEiH,OAAO5I,QAEjB,KAAnB2B,EAAEiH,OAAO5I,QACTsT,GAAoB,IACpBE,GAA2B,MAwiBXxT,MAAOqT,IAAoBE,OAGnC,gCACI,uBACIxR,YAAY,iCACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAK0T,GACL1V,MAAO8V,IAAoB7D,GAC3B9I,SAzwBQ,SAACxH,GAC7B,IAAM2J,EAAa3J,EAAEiH,OAAO5I,MAG5B,GAFA+V,GAAoBzK,GAED,KAAfA,EAIA,OAHAuK,GAAY,IACZI,GAAkB,SAClB/D,GAAY,IAIhB,IAAM3G,EAAW2K,GAAO1O,QAAO,SAAAyQ,GAAI,OAC/BA,EAAKuD,WAAavD,EAAKuD,UAAUhQ,cAAcC,SAASH,EAAWE,kBAEvEyK,GAAkB1K,MA6vBF,gCACKyK,GAAepS,OAAS,GACrB,qBAAK1D,UAAU,oBAAf,SACK8V,GAAenS,KAAI,SAACoU,EAAMlU,GAAP,OAChB,qBAAK7D,UAAU,gBAAyBF,MAAOiY,EAAKlU,GAC/CC,QAAS,kBAvxBpB,SAACwX,EAAWzX,GACtC8R,GAAY9R,GACZgS,GAAoByF,GACpBvF,GAAkB,IAoxBkCwF,CAAsBxD,EAAKuD,UAAWvD,EAAKlU,KAD/D,SAEKkU,EAAKuD,WAF0BzX,QAOhD,uBACIhC,YAAY,uKACZjD,KAAK,OACLoB,UAAU,mBACV8B,IAAK2T,GACLxM,SAhkBV,SAACxH,GACXA,EAAEiH,OAAO5I,QACT0T,GAAa,IACbE,GAAoBjS,EAAEiH,OAAO5I,QAEV,KAAnB2B,EAAEiH,OAAO5I,QACT0T,GAAa,IACbE,GAAoB,MA0jBA5T,MAAOyT,IAAaE,WAIhC,8BACI,wBACI3T,MAAOoR,EACPjI,SAhOH,SAACxH,GAClB0P,EAAiB1P,EAAEiH,OAAO5I,QAgONgC,IAAKkT,GACLhV,UAAU,yBAJd,SAMK2U,GAAQhR,KAAI,SAAC6X,GAAD,OACT,wBAAwB1b,MAAO0b,EAAO3X,GAAtC,SACK2X,EAAOxS,MADCwS,EAAO3X,WAMhC,wBAAQ7D,UAAU,cAAcpB,KAAK,SAASqD,SAAUlD,GAAxD,oEAKR,eAAC,EAAD,CAAOsF,OAAQwP,GAAiBvP,UAAWwP,GAA3C,UACI,sJACA,uBACCe,IAAM,qBAAK7U,UAAU,aAAf,SAA6B6U,KACpC,uBAAM7U,UAAU,gBAAgBwB,SAAUqX,GAA1C,UACI,uBACIhX,YAAY,4EACZjD,KAAK,WACLoB,UAAU,sBACV8B,IAAKmT,KAET,uBACIpT,YAAY,sEACZjD,KAAK,WACLoB,UAAU,sBACV8B,IAAKoT,GACLlT,UAAU,MAEd,uBACIH,YAAY,4GACZjD,KAAK,WACLoB,UAAU,sBACV8B,IAAKqT,GACLnT,UAAU,MAEd,wBAAQhC,UAAU,4BAA4BpB,KAAK,SAASqD,SAAUlD,GAAtE,oEAKR,eAAC,EAAD,CAAOsF,OAAQgQ,GAAsB/P,UAAWgQ,GAAhD,UACI,sJACA,uBACA,uBAAMtU,UAAU,gBAAgBwB,SAAUyX,GAA1C,UACI,+IACA,wBAAQjZ,UAAU,4BAA4BpB,KAAK,SAASqD,SAAUlD,GAAtE,oEAKR,eAAC,EAAD,CAAOsF,OAAQkQ,GAAkBjQ,UAAWkQ,GAA5C,UACI,sJACA,uBACA,uBAAMxU,UAAU,gBAAgBwB,SAAUyG,GAA1C,UACI,0SACA,wBAAQjI,UAAU,oBAAoBpB,KAAK,SAASqD,SAAUlD,GAA9D,0EAKR,eAAC,EAAD,CAAOsF,OAAQoQ,GAAmBnQ,UAAWoQ,GAA7C,UACI,sJACA,uBACA,uBAAM1U,UAAU,gBAAgBwB,SAAUgY,GAA1C,UACI,8KACA,wBAAQxZ,UAAU,oBAAoBpB,KAAK,SAASqD,SAAUlD,GAA9D,8DAQR,eAAC,EAAD,CAAOsF,OAAQ0P,GAAiBzP,UAAW0P,GAA3C,UACI,yFACCa,IAAM,qBAAK7U,UAAU,aAAf,SAA6B6U,KACpC,uBACA,sBAAK7U,UAAU,MAAf,UACI,8BAEQmU,GAAKxQ,KAAI,SAACwQ,EAAMtQ,GAAP,OAEL,wBAAgBkF,QAASoL,EAAKtQ,GAA9B,UACI,oBAAI7D,UAAU,YAAd,SAA2BmU,EAAKsH,mBAC/BtH,EAAK5H,cAFE1I,QAMxB,qBAAK7D,UAAU,KAAf,SAoBSmU,GAAKxQ,KAAI,SAACwQ,EAAMtQ,GAAP,OACN,sBAAgB1B,MAAO,CAAEuZ,SAAU,YAAnC,UACI,uBACIzS,SAAU,SAACxH,GAAD,OAhVf,SAACA,EAAEoC,GAC9B,IAAMwM,EAAQxM,EAAK,EACX/D,EAAU2B,EAAEiH,OAAZ5I,MACRiR,GAAe,SAAA4K,GAAI,kCAAUA,GAAV,kBAAiBtL,EAAQvQ,OAC5CmR,EAAsBZ,GAEtB,IAAMjF,EAAa3J,EAAEiH,OAAO5I,MAC5B+V,GAAoBzK,GACpB,IAAMC,EAAWsG,GAASrK,QAAO,SAAAyQ,GAAI,OACjCA,EAAK5H,WAAa4H,EAAK5H,UAAU7E,cAAcC,SAASH,EAAWE,kBAGnEyK,GADe,KAAf3K,EACkB,GAEAC,GAkU2BuQ,CAAuBna,EAAGoC,IAC3C/D,MAAOgR,EAAYjN,EAAG,IAAM,GAC5B7D,UAAU,WAEbgR,IAAuBnN,EAAG,GAAKiS,GAAepS,OAAS,GACpD,qBAAK1D,UAAU,oBAAoBmC,MAAO,CAAEuZ,SAAU,WAAYG,IAAK,OAAQC,KAAM,EAAGC,OAAQ,IAAKjT,WAAW,QAAhH,SACKgN,GAAenS,KAAI,SAACoU,EAAMiE,GAAP,OAChB,qBACIhc,UAAU,gBAEV8D,QAAS,SAACrC,GAAD,OAtdvC,SAACA,EAAGoC,EAAGsM,EAAU8L,GAC/BlG,GAAkB,IAClBxN,QAAQC,IAAI,SAAS3E,EAAGsM,GACxBY,GAAe,SAAA4K,GAAI,kCAAUA,GAAV,kBAAiB3K,EAAqBb,OACzD1O,EAAEC,iBACF,IAAMnB,EAAMsD,EAAGqY,WACTC,EAAM5b,EAAK4X,MAAM,KACvB,GAAe,KAAXgE,EAAI,IAAwB,KAAXA,EAAI,GAAzB,CAGgBA,EAAI,GAAGD,WAAnB,IACME,EAAOD,EAAI,GAAGD,WAQdG,EAAgB7K,EAAU8K,WAAU,SAAAC,GAAI,OAAIA,EAAKpE,MAAM,KAAK,KAAOiE,KACzE,IAAuB,IAAnBC,EAAsB,CACtB,IAAMG,EAAQ,YAAOhL,GAIrB,OAHAgL,EAASH,GAAiB9b,EAC1BgI,QAAQC,IAAI,yKAAmCgU,QAC/C/K,GAAa+K,GAKrB,IAAMC,EAAO,YAAOjL,GACpBiL,EAAQhZ,KAAKlD,GAEb,IAAMic,EAAWC,EAAQnV,QAAO,SAAAwQ,GAAO,MAAgB,KAAZA,KAC3CvP,QAAQC,IAAI,YAAagU,GACzB/K,GAAa+K,GAGb7L,GAAkB,SAAA+L,GAAS,kCACpBA,GADoB,kBAEtBT,GAAc,QA+ayCU,CAAUlb,EAAGuP,EAAqB,IAAM+G,EAAKlU,GAAIkU,EAAK5H,YAH1E,SAIK4H,EAAK5H,WAFD6L,UAXfnY,EAAG,WAuB7B,wBAAQ7D,UAAU,SAASpB,KAAK,SAASqD,SAAUlD,GAAY+E,QA3iB5D,WACc,IAArB0N,EAAU9N,OACVoR,GAAO,yKAEPtD,EAAU6F,QAAV,uCAAkB,WAAOlD,GAAP,iBAAAhU,EAAA,6DAGJgc,EAAMhI,EAAKgE,MAAM,KAEjByE,EAAW,CACbpS,QAASuK,GAAS9O,IAClB4W,cAAeV,EAAI,GACnBW,eAAgBX,EAAI,IARd,SAUJ/b,IAAMC,KAAK,aAAcuc,GAVrB,2CAAlB,uDAaA5I,IAAmB,KA0hBf,+FAKJ,eAAC,EAAD,CAAO3P,OAAQ4P,GAAW3P,UAAW4P,GAArC,UACI,gJACCW,IAAM,qBAAK7U,UAAU,aAAf,SAA6B6U,KACpC,uBACA,8BACI,qBAAK7U,UAAU,gBAAf,SACKmU,GAAKxQ,KAAI,SAACwQ,EAAMtQ,GAAP,OACN,qBAAc7D,UAAU,WAAxB,SACI,wBAAgB+I,QAASoL,EAAKtQ,GAAI7D,UAAU,YAA5C,UAEI,uBACIpB,KAAK,WACLiF,GAAIsQ,EAAKtQ,GACT/D,MAAOqU,EAAKtQ,GACZoF,SAAU,SAACxH,GAAD,OAta3B,SAACsJ,EAAOgS,GACvB,MAAsBhS,EAAMrC,OAArB7E,EAAP,EAAOA,GAAIqF,EAAX,EAAWA,QAEPqI,EADArI,GAGgB,MAEpBmI,EAAStG,EAAMrC,OAAO5I,OACtByR,GAAgB,SAAAmL,GAAS,kCAClBA,GADkB,kBAEpB7Y,EAAKqF,OAGV+I,IAAQ,SAAAyK,GAAS,kCACNA,GADM,IAET/F,kBAAmBzN,EAAU6T,EAAS,UAuZGC,CAAWvb,EAAG0S,EAAKtQ,KACpCqF,QAASrK,GAAK8X,oBAAsBxC,EAAKtQ,KAG5CsQ,EAAKsH,iBAAkB,IAExB,qBAAKvB,IAAG,oBAAe/F,EAAKtQ,GAApB,QAA8BwW,IAAG,oBAAelG,EAAKsH,kBACxDzb,UAAU,aAbP6D,IADNA,UAqBtB,wBAAQ7D,UAAU,SAASpB,KAAK,SAASqD,SAAUlD,GAAY+E,QAAS+V,GAAxE,oEACA,wBAAQ7Z,UAAU,SAASpB,KAAK,SAASqD,SAAUlD,GAAY+E,QAASkW,GAAxE,sGAKJ,cAAC,EAAD,CAAgB3V,OAAQuM,EAAgBtM,UAAWuM,EAAnD,SACI,cAAC,EAAD,CACI9E,YAAaA,OAMjC,cAAC,EAAD,O,OCrkCe,SAASkR,EAAKnX,GACzB,IAAME,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SACpD,OACI,qBAAKnG,UAAU,OAAf,SACI,sBAAKA,UAAU,cAAf,UACQ,cAAC,EAAD,CAAa8F,SAAUA,IAEzBE,EAAUC,MAAMH,EAASA,SAASA,UAAYE,EAAU6F,SAAY7F,EAAUC,MAAMH,EAASA,SAASA,SACpG,cAAC,EAAD,IAAgB,Q,6BC8EnBoX,G,OAlFC,WACZ,MAAsBzc,mBAAS,IAA/B,mBAAOuP,EAAP,KAAYmN,EAAZ,KAiBA,OAdArc,qBAAU,WAEN,IAAM+V,EAAO,uCAAG,4BAAA1W,EAAA,sEACMC,IAAMW,IAAI,iCADhB,OAEuC,KAD7CT,EADM,QAEJC,KAAK,GAAG6c,wBAAwB1Z,OACpCyZ,EAAO,IAEPA,EAAO7c,EAAIC,MALH,2CAAH,qDAQbsW,MACD,IAIC,sBAAK7W,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAf,SACKgQ,EAAItM,QAAU,EAAI,qBAAK1D,UAAU,OAAf,SACX,qBAAKA,UAAU,cAAf,SAEKgQ,EAAIrM,KAAI,SAACsT,EAAM3T,GAEZ,IAAM+Z,EAAQ,cAAC,IAAD,CAAMhb,GAAE,sBAAiB4U,EAAKmG,wBAAwBvZ,IAChD7D,UAAU,SADhB,SAGV,sBAAMA,UAAU,OAAhB,SAAwBiX,EAAKmG,wBAAwBjG,SAEzD,OAEI,cAAC,IAAD,CAA4DmG,UAAWD,EAC7DE,kBAAkB,EAD5B,SAEKtG,EAAKmG,wBAAwBhG,WAAWzT,KAAI,SAAC6Z,GAAD,OAEzC,cAAC,IAAD,CAAUF,UACN,cAAC,IAAD,CAAMjb,GAAE,sBAAiBmb,EAAY3Z,IAAM7D,UAAU,WAArD,SAEI,sBAAMA,UAAU,OAAhB,SAAwBwd,EAAYrG,QAD7BqG,EAAY3Z,IAEI0Z,kBAAkB,EAJjD,WAMOC,EAAYpG,YAAcoG,EAAYpG,WAAWzT,KAAI,SAAC8Z,GAAD,OACpD,cAAC,IAAD,CAAUH,UAEN,cAAC,IAAD,CAAMjb,GAAE,sBAAiBob,EAAa5Z,IAAM7D,UAAU,WAAtD,SAGI,sBAAMA,UAAU,OAAhB,SAAwByd,EAAatG,QAF9BsG,EAAa5Z,IAKH0Z,kBAAkB,EAR3C,WAUOE,EAAarG,YAAcqG,EAAarG,WAAWzT,KAAI,SAAC+Z,GAAD,OAEtD,cAAC,IAAD,CAAMrb,GAAE,sBAAiBqb,EAAa7Z,IAAM7D,UAAU,WAAtD,SAGI,qBACImC,MAAO,CAACwb,cAAe,OAD3B,SACoCD,EAAavG,QAH1CuG,EAAa7Z,QALxB4Z,EAAa5Z,QAXd2Z,EAAY3Z,QARpBoT,EAAKmG,wBAAwBjG,KAAO,IAAM7T,UAyCvE,KAGV,6B,SChFN+J,G,OAASuQ,EAAQ,KACjBxH,EAAgB,CACpB,EAAG,GACH,EAAG,QACH,EAAG,MACH,EAAG,aACH,EAAG,UACH,EAAG,WACH,EAAG,WACH,EAAG,SAGL,SAASmE,EAAWD,GAClB,IAAK,IAAIhX,KAAK8S,EACZ,GAAI9S,GAAKgX,EACP,OAAOlE,EAAc9S,GAKZ,SAASua,IACtB,IAAM7X,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAElD,EAA4B1F,mBAAS,IAArC,mBAAOqd,EAAP,KAAeC,EAAf,KACA,EAA4Btd,mBAAS,IAArC,mBAAOud,EAAP,KAAeC,EAAf,KACA,EAAkCxd,mBAAS,IAA3C,mBAAOyd,EAAP,KAAkBC,EAAlB,KACA,EAA0B1d,mBAAS,IAAnC,mBAAc2d,GAAd,WACA,EAAsB3d,mBAAS,IAA/B,mBAAO4d,EAAP,KAAYvJ,EAAZ,KACA,EAAwBrU,mBAAS,IAAjC,mBAAO5B,EAAP,KAAaoT,EAAb,KACA,EAAoCxR,oBAAS,GAA7C,mBAAO1B,EAAP,KAAmB8F,EAAnB,KACA,EAA0BpE,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACA,EAAsClF,oBAAS,GAA/C,mBAAO6F,EAAP,KAAoBC,EAApB,KACA,EAAoD9F,oBAAS,GAA7D,mBAAO6d,EAAP,KAA2BC,EAA3B,KACA,EAAkC9d,qBAAlC,mBAAO+F,EAAP,KAAkBC,GAAlB,KACMC,GAAerF,mBACfmd,GAAWnd,mBACXod,GAAWpd,mBACXqd,GAAUrd,mBAIhBP,qBAAU,WAGR,IAAM2W,EAAS,uCAAG,gDAAAtX,EAAA,sEAEEC,IAAMW,IAAI,aAAeiF,EAAUC,KAFrC,cAEV3F,EAFU,OAGhB2R,EAAQ3R,EAAIC,MAHI,SAKGH,IAAMW,IAAI,2BAA6BiF,EAAUC,KALpD,cAKVhC,EALU,OAMVqD,EAASrD,EAAK1D,KAAK+G,QAAO,SAAAwQ,GAAO,OAA4B,IAAxBA,EAAQ6G,eACnDR,EAAa7W,GAPG,UASMlH,IAAMW,IAAI,oBAThB,WASV6d,EATU,OAUVC,EAAaD,EAAQre,KAAKoD,KAAI,SAAAmU,GAAO,OAAIA,EAAQzP,YACvD4V,EAAUY,GAGJzR,EAAOC,IAASC,OAAO,cACzBmR,GAAS9c,UACX8c,GAAS9c,QAAQ7B,MAAQsN,GAItBsR,GAAQ/c,SAAqC,KAA1B+c,GAAQ/c,QAAQ7B,OACnC0e,GAAS7c,SAAsC,KAA3B6c,GAAS7c,QAAQ7B,OACrC2e,GAAS9c,SAAsC,KAA3B8c,GAAS9c,QAAQ7B,MAtB1B,wBAwBF,EAENgf,EAAM,CACV1R,KAAMA,EACN4Q,OAJU,GAxBE,UA+BO5d,IAAMC,KAAK,mBAAoBye,GA/BtC,QA+BRhB,EA/BQ,OAgCdC,EAAUD,EAAOvd,MAhCH,YAkCZme,GAAQ/c,QAlCI,oBAmCgB,OAA1B+c,GAAQ/c,QAAQ7B,MAnCN,iBAoCZ4e,GAAQ/c,QAAQ7B,MAAQ,GApCZ,+BAuCNgf,EAAM,CACV1R,KAAMA,EACN4Q,OAAQU,GAAQ/c,QAAQ7B,OAzCd,UA4CSM,IAAMC,KAAK,mBAAoBye,GA5CxC,QA4CNhB,EA5CM,OA6CZC,EAAUD,EAAOvd,MA7CL,QA+CVud,GAAUA,EAAOpa,OAAS,GACtBqb,EAAWjB,EAAOna,KAAI,SAAAmU,GAAO,OAAIA,EAAQkH,gBAC/CZ,EAASW,IAETX,EAAS,IAnDG,4CAAH,qDAuDf3G,MACC,CAACzR,EAAUC,MAGd,IAAMgZ,GAAY,uCAAG,WAAOxd,GAAP,eAAAtB,EAAA,yDACnBsB,EAAEC,iBACiB,KAAd8E,GAAkD,KAA/BE,GAAa/E,QAAQ7B,MAF1B,uBAGjB6F,EAAS,6HAHQ,6BAMA,KAAda,GAAkC,KAAdA,EANN,gBAOjBb,EAAS,kKAPQ,8BASjBd,GAAc,GAER4U,EAAU,CACdhS,OAAQzB,EAAUC,IAClB9B,YAAa,EACb8D,OAAQ,EACRiX,aAAc1Y,EACd2Y,aAAczY,GAAa/E,QAAQ7B,OAAS,IAC5Csf,UAAW,IAAInY,KAAKA,KAAKqS,QAjBV,oBAoBGlZ,IAAMC,KAAK,aAAcoZ,GApB5B,eAuBfha,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,2BAAmBoG,GAAnB,IAA8BiC,OAAQ,MACnEG,OAAOC,SAASC,SAxBD,mDA0BfC,QAAQC,IAAR,MA1Be,2DAAH,sDAiCZ6W,GAAU,uCAAG,WAAO5d,GAAP,qBAAAtB,EAAA,yDACjBsB,EAAEC,iBAEiB,KAAd8E,GAAkD,KAA/BE,GAAa/E,QAAQ7B,MAH5B,uBAIf6F,EAAS,6HAJM,6BAQE,KAAda,GAAkC,KAAdA,EARR,gBASfb,EAAS,kKATM,8BAWfd,GAAc,GAXC,mBAcKzE,IAAMW,IAAI,oBAAsBiF,EAAUC,KAd/C,eAcP3F,EAdO,OAeP8M,EAAOC,IAASC,OAAO,YAI3BgS,EADEhf,EAAIC,KAAKmD,OAAS,GAAK0J,GAAQ9M,EAAIC,KAAK,GAAT,UAA2B6M,GAAQ9M,EAAIC,KAAK,GAAT,OACxDD,EAAIC,KAAK,GAAT,YAEA,EAGRkZ,EAAU,CACdhS,OAAQzB,EAAUC,IAClB9B,YAAa,EACb8D,OAAQqX,EACRnG,WAAY3S,EACZ4S,WAAY1S,GAAa/E,QAAQ7B,OAAS,IAC1CuZ,QAAS,IAAIpS,KAAKA,KAAKqS,QA9BZ,UAiCPlZ,IAAM2P,IAAI,aAAc0J,GAjCjB,QAmCbha,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,2BAAmBoG,GAAnB,IAA8BiC,OAAQ,MACnEG,OAAOC,SAASC,SApCH,kDAsCbC,QAAQC,IAAR,MAtCa,0DAAH,sDA4CVC,GAAa,SAAAhH,GACjBgF,GAAahF,EAAEiH,OAAO5I,QAGlByf,GAAY,uCAAG,0CAAApf,EAAA,yDACnB2U,EAAO,IACwB,KAA3B0J,GAAS7c,QAAQ7B,OAA2C,KAA3B2e,GAAS9c,QAAQ7B,MAFnC,0CAKX0f,EAAQhB,GAAS7c,QAAQ7B,MAAMoc,WAC/BuD,EAAQD,EAAMrH,MAAM,KACpBuH,EAAKD,EAAM,GAAGtH,MAAM,MACtBsH,EAAM,GARO,iBASf3K,EAAO,uEATQ,+BAWT6K,EAAe,CACnBnV,QAASxE,EAAUC,IACnBwZ,MAAOC,EAAG,GACV1B,OAAQU,GAAQ/c,QAAQ7B,MACxB8f,aAAcnB,GAAS9c,QAAQ7B,MAC/B6e,aAAa,GAhBA,UAkBTve,IAAMC,KAAK,uBAAwBsf,GAlB1B,eAoBXb,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OAtBT,UAwBIM,IAAMC,KAAK,mBAAoBye,GAxBnC,QAwBXhB,EAxBW,OAyBjBC,EAAUD,EAAOvd,MAzBA,yBA2BAH,IAAMW,IAAI,2BAA6BiF,EAAUC,KA3BjD,QA2BbhC,EA3Ba,OA4BbqD,EAASrD,EAAK1D,KAAK+G,QAAO,SAAAwQ,GAAO,OAA4B,IAAxBA,EAAQ6G,eACnDR,EAAa7W,GA7BM,4CAAH,qDAkCZuY,GAAS,uCAAG,gCAAA1f,EAAA,6DACViN,EAAOC,IAASC,OAAO,cACzBmR,GAAS9c,QAAQ7B,MAAQsN,GAC3BqR,GAAS9c,QAAQ7B,MAAQsN,EACzB0H,EAAO,uGAEPA,EAAO,IAEHgK,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OAVV,SAYKM,IAAMC,KAAK,mBAAoBye,GAZpC,OAYVhB,EAZU,OAahBC,EAAUD,EAAOvd,MAbD,2CAAH,qDAgBTuf,GAAW,uCAAG,kCAAA3f,EAAA,yDAElB2U,EAAO,IACD1H,EAAOC,IAASC,OAAO,cACE,KAA3BmR,GAAS9c,QAAQ7B,MAJH,gBAKhB2e,GAAS9c,QAAQ7B,MAAQsN,EALT,8BAOV0R,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OATV,SAWKM,IAAMC,KAAK,mBAAoBye,GAXpC,OAWVhB,EAXU,OAYhBC,EAAUD,EAAOvd,MACXwe,EAAWjB,EAAOvd,KAAKoD,KAAI,SAAAmU,GAAO,OAAIA,EAAQkH,gBACpDZ,EAASW,GAdO,4CAAH,qDAkBXgB,GAAU,uCAAG,gCAAA5f,EAAA,yDACjB2U,EAAO,IACwB,KAA3B2J,GAAS9c,QAAQ7B,OAA2C,KAA3B0e,GAAS7c,QAAQ7B,MAFrC,8CAITgf,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OANX,SAQMM,IAAMC,KAAK,mBAAoBye,GARrC,OAQThB,EARS,OASfC,EAAUD,EAAOvd,MACXwe,EAAWjB,EAAOvd,KAAKoD,KAAI,SAAAmU,GAAO,OAAIA,EAAQkH,gBACpDZ,EAASW,GAXM,4CAAH,qDAgBViB,GAAU,uCAAG,wCAAA7f,EAAA,6DACjB2U,EAAO,IAED1H,EAAOC,IAASC,OAAO,cAEvBqR,EAAc,CAClBnU,QAASxE,EAAUC,IACnBga,UAAU,EACV7S,KAAMA,GARS,SAWXhN,IAAMC,KAAK,6BAA8Bse,GAX9B,uBAYEve,IAAMW,IAAI,2BAA6BiF,EAAUC,KAZnD,cAYXhC,EAZW,OAcXqD,EAASrD,EAAK1D,KAAK+G,QAAO,SAAAwQ,GAAO,OAA4B,IAAxBA,EAAQ6G,eACnDR,EAAa7W,GAEPwX,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OAnBT,UAqBIM,IAAMC,KAAK,mBAAoBye,GArBnC,QAqBXhB,EArBW,OAsBjBC,EAAUD,EAAOvd,MACXwe,EAAWjB,EAAOvd,KAAKoD,KAAI,SAAAmU,GAAO,OAAIA,EAAQkH,gBACpDZ,EAASW,GAxBQ,4CAAH,qDA4BVmB,GAAW,uCAAG,WAAOze,GAAP,uBAAAtB,EAAA,6DAClB2U,EAAO,IACPrT,EAAEC,iBAEIid,EAAc,CAClBnU,QAASxE,EAAUC,IACnBpC,GAAIpC,EAAEiH,OAAO5I,MACbmgB,UAAU,GAPM,SAUZ7f,IAAMC,KAAK,4BAA6Bse,GAV5B,uBAWCve,IAAMW,IAAI,2BAA6BiF,EAAUC,KAXlD,cAWZhC,EAXY,OAYZqD,EAASrD,EAAK1D,KAAK+G,QAAO,SAAAwQ,GAAO,OAA4B,IAAxBA,EAAQ6G,eAC7CG,EAAM,CACV1R,KAAMqR,GAAS9c,QAAQ7B,MACvBke,OAAQU,GAAQ/c,QAAQ7B,OAfR,UAiBGM,IAAMC,KAAK,mBAAoBye,GAjBlC,QAiBZhB,EAjBY,OAkBlBC,EAAUD,EAAOvd,MACjB4d,EAAa7W,GAnBK,4CAAH,sDAwBjB,OACI,qCACE,uBAAOsT,OAAO,IAAd,SACE,+BACE,6BACE,wBAAQhc,KAAK,SAASkF,QAAS,kBAAMyC,GAAe,IAC5CvG,UAAW,aAAgBua,EAAW1b,EAAKoJ,QADnD,SAEGlJ,EACK,cAACmD,EAAA,EAAD,CAAkBC,MAAO,CAACC,MAAO,QAAS+d,KAAM,OAAQ7d,MAAO,OAAQ8d,OAAQ,UAC/D,IAAhBvhB,EAAKoJ,OACD,uCACA,6DAId,6BACE,wBAAQrJ,KAAK,SAASkF,QAAS,kBAAMya,GAAsB,IAAOve,UAAU,YAA5E,SACE,oKAMR,eAAC,EAAD,CAAOqE,OAAQiC,EAAahC,UAAWiC,EAAvC,UACE,sJACA,uBACCvH,GAAS,qBAAKgB,UAAU,aAAf,SAA6BhB,IACvC,uBAAMgB,UAAU,gBAAgBwB,SAA0B,IAAhB3C,EAAKoJ,OAAeoX,GAAaJ,GAA3E,UACE,sBAAKjf,UAAU,iBAAf,UACE,wBAAO+I,QAAQ,YAAf,UACE,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,YACHmF,KAAK,YACLC,SAAUR,GACVS,QAAwB,KAAd1C,IAPhB,0CASA,wBAAOuC,QAAQ,WAAf,UACE,uBACInK,KAAK,QACLkB,MAAO,EACP+D,GAAG,WACHmF,KAAK,WACLC,SAAUR,GACVS,QAAwB,KAAd1C,IAPhB,uCAUF,uBACI3E,YAAY,qEACZ7B,UAAU,mBACV8B,IAAK4E,KAET,wBAAQ1G,UAAU,cAAcpB,KAAK,SAASqD,SAAUlD,EAAxD,SACmB,IAAhBF,EAAKoJ,OACA,uCACA,iEAKZ,eAAC,EAAD,CAAO5D,OAAQia,EAAoBha,UAAWia,EAA9C,UACE,oBAAIpc,MAAO,CAACke,UAAW,UAAvB,kLAEA,uBACChC,GACD,qBAAKre,UAAU,aAAf,SACGqe,IAGH,uBACA,uBACA,sBAAKre,UAAU,OAAf,UACE,gCACE,uBAAOmC,MAAO,CAACgJ,WAAY,QAA3B,wCAAkD,uBAChDvM,KAAK,OACLoB,UAAU,iBACV8B,IAAK2c,GACLxV,SAAU4W,QAId,qBAAK1d,MAAO,CAACG,MAAO,UAEpB,gCAAK,uBAAOH,MAAO,CAACgJ,WAAY,QAA3B,wCAEH,wBAAQrJ,IAAK4c,GAAS5a,QAASgc,GAAa9f,UAAU,aAAtD,SAEGge,EAAOra,KAAI,SAACM,EAAMJ,GAAP,OAAc,wBAAiBsW,MAAOlW,EAAMnE,MAAO+D,EAAK,EAA1C,SAA8CI,GAAjCJ,WAK3C,qBAAK1B,MAAO,CAACG,MAAO,UAEpB,gCAAK,uBAAOH,MAAO,CAACgJ,WAAY,QAA3B,8CAEH,wBAAQrJ,IAAK0c,GAAU1a,QAASic,GAAY/f,UAAU,aAAtD,SAEG8d,EAAOna,KAAI,SAACM,EAAMJ,GAAP,OAAc,wBAAiBsW,MAAOlW,EAAKqc,aACrBxgB,MAAOmE,EAAKqc,aAAe,IAAMrc,EAAK+a,aAD9C,SAC6D/a,EAAK+a,cADrDnb,cAM7C,uBACA,wBAAQ7D,UAAU,cAAc8D,QAASyb,GAAc3gB,KAAK,SAASqD,SAAUlD,EAA/E,uIAGA,uBACA,uBACA,uBAEA,qBAAKiB,UAAU,aAAf,SACGke,EAAUva,KAAI,SAAC+H,EAAO7H,GAAR,OACX,sBAAK7D,UAAU,QAAf,uCAA8B0L,EAAMkU,aAApC,oCAA0DlU,EAAM6U,MAAhE,6BAA6E7U,EAAMrD,SACjF,wBAAQrI,UAAU,cAAuBF,MAAO4L,EAAM7H,GAAIC,QAASoc,GAAnE,gFAAqCrc,WAG7C,uBACA,uBACA,wBAAQC,QAASkc,GAAYhgB,UAAU,cAAvC,gHACA,uBAAK,6B,kBCrbAwgB,EARI,SAAC,GAAW,IAAV3hB,EAAS,EAATA,KACjB,OACI,mCACA,eAAC,IAAD,CAAMwD,GAAE,IAAOrC,UAAU,cAAzB,cAAwC,qBAAKA,UAAU,iBAAf,SAAiCnB,EAAKsR,kB,OCSvE,SAASsQ,GAAT,GAA8B,IAAR5hB,EAAO,EAAPA,KACjC,EAAsC4B,mBAAS,IAA/C,mBAAOigB,EAAP,KAAoBC,EAApB,KACA,EAA0BlgB,qBAA1B,mBAAOmgB,EAAP,KAAcC,EAAd,KACA,EAAwBpgB,mBAAS,IAAjC,mBAAO2M,EAAP,KAAa0T,EAAb,KACA,EAAwBrgB,mBAAS,IAAjC,mBAAOsgB,EAAP,KAAaC,EAAb,KACA,EAAkCvgB,qBAAlC,mBAAOwgB,EAAP,KAAkBC,EAAlB,KACA,EAA8BzgB,qBAA9B,mBAAO0gB,EAAP,KAAgBC,EAAhB,KAEMpb,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAE5CiQ,EAAgB,CAClB,EAAG,GACH,EAAG,QACH,EAAG,MACH,EAAG,aACH,EAAG,UACH,EAAG,WACH,EAAG,WACH,EAAG,SAYPtV,qBAAU,WAEN,IAAM2W,EAAS,uCAAG,gCAAAtX,EAAA,sEACMC,IAAMW,IAAI,aAAelC,EAAKgF,IADpC,cACRgL,EADQ,gBAEIzO,IAAMW,IAAI,oBAAsBlC,EAAKgF,IAFzC,cAERvD,EAFQ,gBAGKF,IAAMW,IAAI,uBAAyBlC,EAAKgF,IAH7C,OAGRxD,EAHQ,OAIdsgB,EAAe9R,EAAMtO,KAAKoW,oBAEC,IAAvB9H,EAAMtO,KAAKmX,QACXmJ,EAAS,IAETA,EAAS,KAIW,IAApBvgB,EAAIC,KAAKmD,QACTwd,EAAa,IACbE,EAAW,MAEXF,EAAa5gB,EAAIC,KAAK,GAAGiC,UACzB4e,EAAW9gB,EAAIC,KAAK,GAAGyD,SAKF,IAArB3D,EAAKE,KAAKmD,QACVod,EAAQ,IACRE,EAAQ,MAERF,EAAQzgB,EAAKE,KAAK,GAAGiC,UACrBwe,EAAQ3gB,EAAKE,KAAK,GAAGmC,UA5BX,4CAAH,qDAgCK,IAAhB7D,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAC5B,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAElDwP,MAGL,CAAC5Y,EAAKgF,KAGT,IAAM2S,EAAS,CACX,EAAK,CAAE0D,IAAK,kBAAmBC,MAAO,kCACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,qGACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,kEACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,8CACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,mFACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,6EACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,4BACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,oPACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,sNACtC,GAAM,CAAED,IAAK,mBAAoBC,MAAO,yEAI5C,OACI,mCACI,qBAAKna,UAAU,uBAAf,SACQ,cAAC,IAAD,CAAMqC,GAAE,mBAAcxD,EAAKgF,IAAM7D,UAAU,OACrC8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,mBAAmC7a,EAAKgF,KAD7D,SAEI,qBAAK7D,UAAW,YAvEpC,SAAoBsa,GAChB,IAAK,IAAIhX,KAAK8S,EACV,GAAI9S,GAAKgX,EACL,OAAOlE,EAAc9S,GAoEkBiX,CAAW1b,EAAKoJ,QAA/C,SACI,sBAAKjI,UAAU,aAAf,UACI,qBAAK6D,GAAG,SAAR,SACI,uBAAM7D,UAAU,aAAhB,UAA8BnB,EAAKsR,UAAWnK,EAAU6F,QAAU+U,EAAM,QAE5E,sBAAK/c,GAAG,SAAR,UAEqB,IAAhBhF,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,kDAAsCihB,EAAtC,IAAkDE,KACvD,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,4CAAqCihB,EAArC,IAAiDE,KACtD,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,6FAA8CihB,EAA9C,IAA0DE,KAC/D,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,0EAA0CihB,EAA1C,IAAsDE,KAC3D,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,UAA+BoN,EAA/B,IAAsC2T,QAGhE,qBAAKld,GAAG,SAAR,SAEKyS,OAAOC,KAAKC,GAAQ7S,KAAI,SAAC+S,EAAK7S,GAAN,OACpBhF,EAAK8X,oBAAsBD,GAAO7X,EAAK8X,oBAAsBC,SAASF,IAAQgK,IAAchK,GAAOgK,IAAc9J,SAASF,KAE3H,qBAEIwD,IAAK1D,EAAOE,GAAKwD,IACjBC,MAAO3D,EAAOE,GAAKyD,MACnBE,IAAG,oBAAe3D,IAHb7S,mBCpHlC,SAASwd,KACtB,IAAMrb,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAClD,EAA4C1F,mBAAS,GAArD,mBAAO6gB,EAAP,KAAuBC,EAAvB,KACA,EAAkD9gB,mBAAS,GAA3D,mBAAO+gB,EAAP,KAA0BC,EAA1B,KACA,EAA0DhhB,mBAAS,GAAnE,mBAAOihB,EAAP,KAA8BC,EAA9B,KACA,EAAwDlhB,mBAAS,GAAjE,mBAAOmhB,EAAP,KAA6BC,EAA7B,KACA,EAAsDphB,mBAAS,GAA/D,mBAAOqhB,EAAP,KAA4BC,EAA5B,KACA,EAAsDthB,mBAAS,GAA/D,mBAAOuhB,EAAP,KAA4BC,EAA5B,KACA,EAA8DxhB,mBAAS,GAAvE,mBAAOyhB,EAAP,KAAgCC,EAAhC,KACiBpc,cAAYD,SAC7BhF,qBAAU,WAER,IAAM2W,EAAS,uCAAG,8BAAAtX,EAAA,sEACEC,IAAMW,IAAI,cADZ,OACVT,EADU,OAEhB8hB,GAAqB9hB,EAAIC,MACzBD,EAAIC,KAAKuG,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cA6EpCtB,EA5EavO,EAAIC,KAA7B8hB,EA6ECxT,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,UAC5BsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WACjCsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WACjCsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,WAChGsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WAhFpCqa,EAAYD,GALI,iCAgFpB,IAAoBxT,IAhFA,OAAH,qDASTnH,EAAQ,uCAAG,sBAAAvH,EAAA,sEACGC,IAAMW,IAAI,yBADb,yDAAH,qDAKRwhB,EAAa,uCAAG,4BAAApiB,EAAA,sEACFC,IAAMW,IAAI,aAAeiF,EAAUC,KADjC,OACd3F,EADc,OAEpB2R,EAAQ3R,EAAIC,MAFQ,2CAAH,qDAKbiiB,EAAwB,uCAAG,8BAAAriB,EAAA,yDACzBsiB,EAAW,CACf5e,GAAImC,EAAUC,MAEU,IAAtBD,EAAU6F,QAJiB,iCAKXzL,IAAMC,KAAK,gCAAiCoiB,GALjC,OAQgC,QAHvDniB,EALuB,QAQtBC,KAAK,GAAT,yBAAwC,GAAxC,UACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,UAAwD,EAExDghB,EAAkBjhB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,UAAwDmD,QAGP,OAAlEpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,kBACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,kBAAgE,EAEhEkhB,EAAqBnhB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,kBAAgEmD,QAGf,OAArEpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,qBACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,qBAAmE,EAEnEohB,EAAyBrhB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,qBAAmEmD,QAIhC,OAA3DpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,WACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,WAAyD,EAEzDshB,EAAwBvhB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,WAAyDmD,QAIjB,OAA/DpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eAA6D,EAE7DwhB,EAAuBzhB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eAA6DmD,QAGpB,OAA/DpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eAA6D,EAE7D0hB,EAAuB3hB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,eAA6DmD,QAGhB,OAAnEpD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,mBACDD,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,mBAAiE,EAEjE4hB,EAA2B7hB,EAAIC,KAAK,GAAT,yBAAwC,GAAxC,mBAAiEmD,QAjDjE,4CAAH,qDAqD9BgE,IACA8a,IACAD,IACA9K,MAEC,IAWH,MAAwBhX,mBAAS,IAAjC,mBAAO5B,EAAP,KAAaoT,EAAb,KACA,EAAsCxR,mBAAS,IAA/C,mBAAOiiB,EAAP,KAAoBC,EAApB,KACA,EAAgCliB,mBAAS,IAAzC,mBAAOmiB,EAAP,KAAiBN,EAAjB,KACA,EAAkC7hB,mBAAS,IAA3C,mBAAOoiB,GAAP,KAAkBC,GAAlB,KACA,GAA8BriB,oBAAS,GAAvC,qBAAOsiB,GAAP,MAAgBC,GAAhB,MAuBM7b,GAAc,SAAC1F,GACI,KAAnBA,EAAEiH,OAAO5I,QACXgjB,GAAaF,EAAStb,QAAO,SAAAzI,GAC3B,OAAOA,EAAKsR,UAAU7E,cAAcC,SAASmX,EAAYpX,mBAE3D0X,IAAW,KAGXnkB,EAAK4Z,gBAKT,OAAkDhY,mBAAS,GAA3D,qBAA0B2hB,IAA1B,aACA,GAA4B3hB,oBAAS,GAArC,qBACA,IADA,YACkCA,oBAAS,IAA3C,iCAcA,OACI,gCACE,sBAAKT,UAAU,kBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,eAAf,SACGgG,EAAU6F,QACT,sBAAK7L,UAAU,aAAf,UACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,eAC3CS,MAAM,oGADZ,SACiCmH,IAFnC,KAGE,cAAC,IAAD,CAAMthB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,uBAC3CS,MAAM,2GADZ,SACmCqH,IAJrC,KAKE,cAAC,IAAD,CAAMxhB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,0BAC3CS,MAAM,+FADZ,SACiCuH,IANnC,KAOE,cAAC,IAAD,CAAM1hB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,gBAC3CS,MAAM,kFADZ,SAC8ByH,IARhC,KASE,cAAC,IAAD,CAAM5hB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,oBAC3CS,MAAM,sEADZ,SAC4B2H,IAV9B,KAWE,cAAC,IAAD,CAAM9hB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,oBAC3CS,MAAM,+FADZ,SACiC6H,IAZnC,IAaE,cAAC,IAAD,CAAMhiB,UAAU,kBAAkB8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,wBAC3CS,MAAM,mFADZ,SAC+B+H,OACxB,KAIb,sBAAKliB,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8BACE,cAAC,IAAD,CAAMqC,GAAE,sBAAiBxD,EAAK4Z,iBAAmBzY,UAAU,aAA3D,SACE,qBAAKka,IAAK,oBACTG,IAAI,MACJ/X,MAAM,MACN8d,OAAO,WAEZ,qBAAKpgB,UAAU,OAEf,qBAAKA,UAAU,UAAf,SAAyB,cAAC,IAAD,CAAMqC,GAAE,mBAAcxD,EAAKgF,IACrBC,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,mBAAmC7a,EAAKgF,KACvD7D,UAAU,aAFhB,SAE8BgG,EAAUF,aAIhEE,EAAU6F,QACL,qBAAK7L,UAAU,OAAY,GAGhCgG,EAAU6F,QAEP,qBAAK7L,UAAU,UAAf,SACE,cAAC,IAAD,CAAMqC,GAAG,WAAWrC,UAAU,aAA9B,SAA2C,sBAAMA,UAAU,OAAhB,sDAEpC,GAEb,qBAAKA,UAAU,OAaf,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAMqC,GAAG,eAAerC,UAAU,aAAlC,SAA+C,sBAAMA,UAAU,OAAhB,sBAInD,sBAAKA,UAAU,SAAf,UACE,uBAAOijB,WAhHI,SAACxhB,GACR,UAAVA,EAAEiV,KAAsC,KAAnBjV,EAAEiH,OAAO5I,QAChCgjB,GAAaF,EAAStb,QAAO,SAAAzI,GAC3B,OAAOA,EAAKsR,UAAU7E,cAAcC,SAASmX,EAAYpX,mBAE3D0X,IAAW,KA2GgCljB,MAAO4iB,EAAazZ,SAAU,SAACxH,GAAD,OAAOkhB,EAAelhB,EAAEiH,OAAO5I,QACzFlB,KAAK,SAASoK,KAAK,GAAGnH,YAAY,0GAAqB7B,UAAU,UACxE,wBAAQ8D,QAASqD,GAAarH,MAAO4iB,EAAazZ,SAAU,SAACxH,GAAD,OAAOkhB,EAAelhB,EAAEiH,OAAO5I,QACnFlB,KAAK,SAASoB,UAAU,cAgBlC,qBAAKA,UAAU,OAAf,SACE,cAACkjB,EAAA,EAAD,CAAWpf,QA/IR,WACbrE,aAAa0jB,QACb/a,OAAOC,SAASC,SAChBF,OAAOC,SAASqR,KAAO,eAgJlBqJ,GACK,eAAC,EAAD,CAAO1e,OAAQ8C,GAAa7C,UAAW0e,GAAvC,UACA,6BAAI,mBAAGI,MAAM,SAAT,8CACJ,8EAAcP,GAAUnf,UACxB,uBACA,iCACE,8BACGmf,GAAUlf,KAAI,SAAC9E,GAAD,OAAU,cAAC,GAAD,CAAaA,KAAMA,SAE9C,wBAAQmB,UAAU,SAASpB,KAAK,SAASkF,QAAS,kBAAMkf,IAAW,IAAnE,8DAKF,gC,OCjRC,SAASK,KACpB,IAAMvd,EAASC,cACjB,OACE,mCAII,cAAC,EAAD,CAAMD,SAAUA,M,OCPT,SAASwd,KACtB,IAAMliB,EAAQC,mBACRC,EAAWD,mBACXkiB,EAAgBliB,mBAChByE,EAAWzE,mBACXmiB,EAAYniB,mBACZoiB,EAAapiB,mBACbqiB,EAAUC,cACVC,EAAYviB,mBACZ0W,EAAO1W,mBACPsR,EAAqBtR,mBACrB0R,EAAqB1R,mBACrBwiB,EAAiBxiB,mBACjB8R,EAAiB9R,mBACjB6W,EAAmB7W,mBACnByiB,EAAYziB,mBAIlB,EAA0BZ,mBAAS,IAAnC,mBAAO0L,EAAP,KAAc4X,EAAd,KAEA,EAA8BtjB,mBAAS,IAAvC,mBAAOujB,EAAP,KAAgBC,EAAhB,KAIA,EAA8BxjB,mBAAS,IAAvC,mBAAOkU,EAAP,KAAgBC,EAAhB,KAEA,EAA8BnU,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KAEA,EAA0BlN,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KAGA,EAA4BlF,mBAAS,IAArC,mBAAOuV,EAAP,KAAeC,EAAf,KAEA,EAAoCxV,mBAAS,IAA7C,mBAAOyjB,EAAP,KAAmBC,EAAnB,KAEA,EAAgC1jB,oBAAS,GAAzC,mBAAO2jB,EAAP,KAAiBC,GAAjB,KACA,GAAkC5jB,mBAAS,IAA3C,qBAAO6jB,GAAP,MAAkBC,GAAlB,MAEA,GAAkD9jB,mBAAS,IAA3D,qBAAO+jB,GAAP,MAA0BC,GAA1B,MACA,GAA4ChkB,mBAAS,IAArD,qBAAOqV,GAAP,MAAuBC,GAAvB,MAIA,GAAoCtV,mBAAS,IAA7C,qBAAO+N,GAAP,MAAmBC,GAAnB,MACA,GAAgDhO,mBAAS,IAAzD,qBAAOmV,GAAP,MAAyBC,GAAzB,MAGA,GAAsCpV,mBAAS,IAA/C,qBAAOwN,GAAP,MAAoBjB,GAApB,MACA,GAAgCvM,mBAAS,IAAzC,qBAAOiV,GAAP,MAAiBC,GAAjB,MAmDM+O,GAAY,WAChBL,IAAaD,IAGftjB,qBAAU,WAEN,IAAM+V,EAAO,uCAAG,sCAAA1W,EAAA,sEACQC,IAAMW,IAAI,mCADlB,cACR2M,EADQ,OAGdC,EAAWD,EAAQnN,MAHL,SAKaH,IAAMW,IAAI,mBALvB,cAKR4jB,EALQ,OAMdJ,GAAaI,EAAapkB,MANZ,UASMH,IAAMW,IAAI,gBAThB,eASRgX,EATQ,OAUd9B,EAAU8B,EAAKxX,MAVD,UAYIH,IAAMW,IAAI,iCAZd,QAYRT,EAZQ,OAaRC,EAAOD,EAAIC,KAAK,GAAT,wBACPuW,EAAmBC,EAAexW,GACxCqU,EAAWkC,GAfG,4CAAH,qDAmBPC,EAAiB,SAAjBA,EAAkBE,GACtB,IAAIC,EAAc,CAAC,CAAErT,GAAIoT,EAAKpT,GAAImF,KAAMiO,EAAKE,OAM7C,OALIF,EAAKG,YAAcH,EAAKG,WAAW1T,OAAS,GAC9CuT,EAAKG,WAAWC,SAAQ,SAAAC,GACtBJ,EAAcA,EAAYK,OAAOR,EAAeO,OAG7CJ,GAEXL,MACC,IAGH,IAcM1P,GAAW,uCAAG,WAAO1F,GAAP,mBAAAtB,EAAA,yDAClBsB,EAAEC,iBAGY,+BACHwO,KAAK1B,IALE,uBAMhB7I,EAAS,qQANO,6BAWdrE,EAASK,QAAQ7B,QAAUyjB,EAAc5hB,QAAQ7B,MAXnC,uBAYhByjB,EAAc5hB,QAAQijB,kBAAkB,4GAZxB,6BAiBe,KAA7BnB,EAAW9hB,QAAQ7B,MAjBL,wBAkBhB6F,EAAS,mHAlBO,8BAuBZqD,EAAOwa,EAAU7hB,QAAQ7B,MAAQ,IAAMgG,EAASnE,QAAQ7B,MAC5B,KAA9BgkB,EAAYniB,QAAQ7B,MAxBN,wBAyBhB6F,EAAS,mHAzBO,kCA6BZ9G,EAAO,CACXsR,UAAWnH,EACX5H,MAAOA,EAAMO,QAAQ7B,MAAM8B,cAC3BoV,cAAeyM,EAAW9hB,QAAQ7B,MAClCwB,SAAUA,EAASK,QAAQ7B,MAC3B4X,QAAS0M,EACTnM,aAAc2L,EAAUjiB,QAAQ7B,MAChC+jB,eAAwC,IAAvB5V,GAAYvK,OAAeuK,GAAcO,GAAWqW,OAAOjjB,cAC5E8W,QAA8B,IAApBhD,GAAShS,OAAe,KAAOgS,GACzCL,kBAAmB1C,EAAmBhR,QAAQ7B,MAC9CwV,kBAAmBvC,EAAmBpR,QAAQ7B,MAC9CyV,gBAAiBpC,EAAiBxR,QAAQ7B,MAC1CoY,mBAAoBA,EAAmBvW,QAAQ7B,MAC/CgkB,YAAaA,EAAYniB,QAAQ7B,MACjCqM,MAAOA,EACP6X,QAASA,GA5CO,oBAgDE5jB,IAAMC,KAAK,iBAAkBxB,GAhD/B,WAiDQ,yBADlByB,EAhDU,QAiDRC,KAAK0H,OAjDG,iBAkDdtC,EAAS,kMAlDK,2BAoDU,mBAApBrF,EAAIC,KAAK0H,OApDC,iBAqDZtC,EAAS,wHArDG,2BAsDgB,UAAnBrF,EAAIC,KAAKukB,MAtDN,iBAuDZnf,EAAS,2NAvDG,2BAyDU,2BAAjBrF,EAAIC,KAAKwkB,IAzDF,iBA0Ddpf,EAAS,qIA1DK,+BA6DZ4C,QAAQC,IAAI,OAAO3J,GA7DP,UA8DNuB,IAAMC,KAAK,iBAAkBxB,GA9DvB,QA+DZ6kB,EAAQjgB,KAAK,UA/DD,2DAmEhBkC,EAAS,8HAnEO,2DAAH,sDA0FjB,SAASqf,GAAavjB,GACG,KAAnBA,EAAEiH,OAAO5I,OACX6F,EAAS,mLAEPlE,EAAEiH,OAAO5I,MAAM4D,OAAS,GAC1BiC,EAAS,IAKb,SAASsf,KACPtf,EAAS,IACNue,EAAWxgB,QAAQ,GAEpBygB,EAAc,IAiBlB,OAEI,sBAAKnkB,UAAU,WAAf,UACE,uBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,uBAAMA,UAAU,cAAcwB,SAAU2F,GAAxC,UACGnI,GACD,qBAAKgB,UAAU,gBAAf,SACGhB,IAGH,uBACI6C,YAAY,qBACZE,UAAQ,EAACD,IAAKgE,EACd9F,UAAU,gBACVklB,YAAaD,KAEjB,uBACIpjB,YAAY,6CACZE,UAAQ,EAACD,IAAK0hB,EACdxjB,UAAU,gBACVklB,YAAaD,KAGjB,uBACIpjB,YAAY,6CACZjD,KAAK,OACLmD,UAAQ,EACRD,IAAK8hB,EACL5jB,UAAU,gBACVklB,YAAaD,GACbhc,SA3CK,SAAC8B,GACpB,IAAMjL,EAAQiL,EAAMrC,OAAO5I,MAC3B,GAAIA,EAAM4D,OAAS,EACjBygB,EAAc,QACT,CACL,IAAMpJ,EA5CgB,SAACjb,GAEzB,IAAIkb,EAAUlb,EAAMoE,QAAQ,MAAO,IAC/B8W,EAAQC,WAAW,OACrBD,EAAUA,EAAQ9V,MAAM,IAK1B,IAAMgW,GAFNF,EAAUA,EAAQ9V,MAAM,EAAG,KAELgW,MAAM,0CAC5B,OAAIA,EACK,MAAQ,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAI5T,OAAO6T,SAASC,KAAK,KAExE,MAAQJ,EA+BUK,CAAkBvb,GACzCqkB,EAAcpJ,KAsCFjb,MAAOokB,IAEX,uBACIriB,YAAY,iCACZC,IAAKiW,EACL/X,UAAU,gBACVF,MAAO8V,GACP3M,SApOgB,SAACxH,GAC/B,IAAM2J,EAAa3J,EAAEiH,OAAO5I,MAC5B+V,GAAoBzK,GACpB,IAAMC,EAAW2K,EAAO1O,QAAO,SAAAyQ,GAAI,OAC/BA,EAAKuD,WAAavD,EAAKuD,UAAUhQ,cAAcC,SAASH,EAAWE,kBAGrEyK,GADiB,KAAf3K,EACgB,GAEAC,IA4NN6Z,YAAaD,KAEjB,8BACGnP,GAAepS,OAAS,GACrB,qBAAK1D,UAAU,oBAAf,SACG8V,GAAenS,KAAI,SAACoU,EAAMlU,GAAP,OAChB,qBAAK7D,UAAU,gBAAyBF,MAAOiY,EAAKlU,GAAIC,QAAS,kBAnQ3D,SAACwX,EAAUzX,GACvC8R,GAAY9R,GACZgS,GAAoByF,GACpBvF,GAAkB,IAgQ2EwF,CAAsBxD,EAAKuD,UAAWvD,EAAKlU,KAAlH,SACGkU,EAAKuD,WAD4BzX,UAOhD,uBACIhC,YAAY,uKACZjD,KAAK,OACLmD,UAAQ,EAACD,IAAKoW,EACdlY,UAAU,gBACVklB,YAAaD,KAEjB,uBACIpjB,YAAY,0PACZjD,KAAK,OACLmD,UAAQ,EAACD,IAAK6Q,EACd3S,UAAU,gBACVklB,YAAaD,KAEjB,uBACIpjB,YAAY,wFACZE,UAAQ,EAACD,IAAKiR,EACd/S,UAAU,gBACVklB,YAAaD,KAEjB,uBACIpjB,YAAY,qGACZE,UAAQ,EAACD,IAAK+hB,EACd7jB,UAAU,gBACVF,MAAO0O,GACPvF,SA7RmB,SAACxH,GAClC,IAAM2O,EAAO3O,EAAEiH,OAAO5I,MACC,IAApB0O,GAAW9K,QACZsJ,GAAe,IAGjByB,GAAc2B,GACd,IAAM/E,EAAWiZ,GAAUhd,QAAO,SAAA6d,GAAG,OACjCA,EAAItY,cAAgBsY,EAAItY,aAAavB,cAAcC,SAAS6E,EAAK9E,kBAGnEmZ,GADW,KAATrU,EACmB,GAEA/E,IAiRT6Z,YAAaD,KAEjB,8BACGT,GAAkB9gB,OAAS,GACxB,qBAAK1D,UAAU,oBAAf,SACGwkB,GAAkB7gB,KAAI,SAACwhB,EAAKthB,GAAN,OACnB,qBAAK7D,UAAU,gBAAyBF,MAAO+D,EAAIC,QAAS,kBAhT5D,SAAC+I,EAAahJ,GACpCmJ,GAAenJ,GACf4K,GAAc5B,GACd4X,GAAqB,IA6SmElU,CAAgB4U,EAAItY,aAAcsY,EAAIthB,KAAxG,SACGshB,EAAItY,cAD6BhJ,UAOhD,uBACIhC,YAAY,sHACZE,UAAQ,EAACD,IAAKqR,EACdnT,UAAU,gBACVklB,YAAaD,KAEjB,uBACIpjB,YAAY,iCACZjD,KAAK,OACLmD,UAAQ,EACR/B,UAAU,gBACVklB,YAAaD,GACbhc,SAhPM,SAACxH,GAEjB,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACxBikB,EAAStiB,EAAEiH,OAAO5I,QA8ONA,MAAOqM,IAEX,yBAAQrK,IAAKgiB,EAAa9jB,UAAU,aAApC,UACE,wBAAQF,MAAM,GAAd,+GACC4N,EAAQ/J,KAAI,SAAC+J,EAAS1E,GAAV,OAAmB,wBAAmBlJ,MAAO4N,EAAQ7J,GAAlC,SAAuC6J,EAAQ1E,MAAlCA,SAE/C,uBACInH,YAAY,iIACZjD,KAAK,OACLmD,UAAQ,EACR/B,UAAU,gBACVklB,YAAaD,GACbhc,SAtPQ,SAACxH,GACnB,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACxBmkB,EAAWxiB,EAAEiH,OAAO5I,QAqPRA,MAAOkkB,IAEX,uBACIniB,YAAY,yEACZjD,KAAK,QACLmD,UAAQ,EAACD,IAAKV,EACdpB,UAAU,gBACVklB,YAAaF,GACbI,QAASJ,KAEb,yBACIljB,IAAK2hB,EACLzjB,UAAU,aAFd,UAIE,wBAAQF,MAAM,GAAd,6IACC6U,EAAQhR,KAAI,SAAC6X,GAAD,OACT,wBAAwB1b,MAAO0b,EAAO3X,GAAtC,SACG2X,EAAOxS,MADGwS,EAAO3X,UAK5B,+HAEE,wBAAOkF,QAAQ,YAAf,UACA,uBACEnK,KAAK,QACLkB,OAAO,EACPkJ,KAAK,YACLE,QAASkb,EACTnb,SAAUyb,GACVQ,YAAaD,KAPf,kBASA,wBAAOlc,QAAQ,aAAf,UACA,uBACEnK,KAAK,QACLkB,OAAO,EACPkJ,KAAK,aACLE,SAAUkb,EACVnb,SAAUyb,GACVQ,YAAaD,KAPf,2BAUF,uBACEpjB,YAAY,uCACZjD,KAAK,WACLmD,UAAQ,EAACD,IAAKR,EACdtB,UAAU,gBACVgC,UAAU,IACVkjB,YAAaD,KAEf,uBACEpjB,YAAY,6EACZjD,KAAK,WACLmD,UAAQ,EAACD,IAAKyhB,EACdvjB,UAAU,gBACVgC,UAAU,IACVkjB,YAAaD,KAEf,wBAAQjlB,UAAU,iBAAiBpB,KAAK,SAAxC,0HACA,cAAC,IAAD,CAAMyD,GAAG,SAASF,MAAO,CAACG,MAAM,QAAhC,SACE,wBAAQtC,UAAU,sBAAlB,0G,OCrcC,SAASqlB,GAAT,GAA2B,IAARxmB,EAAO,EAAPA,KAC1B6kB,EAASC,cACf,EAAsCljB,mBAAS,IAA/C,mBAAOigB,EAAP,KAAoBC,EAApB,KACA,EAA0BlgB,qBAA1B,mBAAOmgB,EAAP,KAAcC,EAAd,KACA,EAAwBpgB,mBAAS,IAAjC,mBAAO2M,EAAP,KAAa0T,EAAb,KACA,EAAwBrgB,mBAAS,IAAjC,mBAAOsgB,EAAP,KAAaC,EAAb,KACA,EAAkCvgB,qBAAlC,mBAAOwgB,EAAP,KAAkBC,EAAlB,KACA,EAA8BzgB,qBAA9B,mBAAO0gB,EAAP,KAAgBC,EAAhB,KAEMpb,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAE5CiQ,EAAgB,CACpB,EAAG,GACH,EAAG,QACH,EAAG,MACH,EAAG,aACH,EAAG,UACH,EAAG,WACH,EAAG,WACH,EAAG,SAYLtV,qBAAU,WAER,IAAM2W,EAAS,uCAAG,gCAAAtX,EAAA,sEACIC,IAAMW,IAAI,aAAelC,EAAKgF,IADlC,cACVgL,EADU,gBAEEzO,IAAMW,IAAI,oBAAsBlC,EAAKgF,IAFvC,cAEVvD,EAFU,gBAGGF,IAAMW,IAAI,uBAAyBlC,EAAKgF,IAH3C,OAGVxD,EAHU,OAIhBsgB,EAAe9R,EAAMtO,KAAKoW,oBAEC,IAAvB9H,EAAMtO,KAAKmX,QACbmJ,EAAS,IAETA,EAAS,KAIa,IAApBvgB,EAAIC,KAAKmD,QACXwd,EAAa,IACbE,EAAW,MAEXF,EAAa5gB,EAAIC,KAAK,GAAGiC,UACzB4e,EAAW9gB,EAAIC,KAAK,GAAGyD,SAKA,IAArB3D,EAAKE,KAAKmD,QACZod,EAAQ,IACRE,EAAQ,MAERF,EAAQzgB,EAAKE,KAAK,GAAGiC,UACrBwe,EAAQ3gB,EAAKE,KAAK,GAAGmC,UA5BP,4CAAH,qDAgCO,IAAhB7D,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAC5B,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAEpDwP,MAGH,CAAC5Y,EAAKgF,KAET,IAKM2S,EAAS,CACb,EAAK,CAAE0D,IAAK,kBAAmBC,MAAO,kCACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,qGACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,kEACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,8CACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,mFACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,6EACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,4BACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,oPACtC,EAAK,CAAED,IAAK,kBAAmBC,MAAO,sNACtC,GAAM,CAAED,IAAK,mBAAoBC,MAAO,yEAI1C,OACI,mCACE,qBAAKrW,QArBS,WAClB4f,EAAQjgB,KAAR,mBAAyB5E,EAAKgF,MAoBC7D,UAAU,OAArC,SACA,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAW,YA1E1B,SAAoByB,GAClB,IAAK,IAAI6B,KAAK8S,EACZ,GAAI9S,GAAK7B,EACP,OAAO2U,EAAc9S,GAuEciX,CAAW1b,EAAKoJ,QAA/C,SACE,sBAAKjI,UAAU,aAAf,UACE,qBAAK6D,GAAG,SAAR,SACE,uBAAM7D,UAAU,aAAhB,UAA8BnB,EAAKsR,UAAWnK,EAAU6F,QAAU+U,EAAQ,QAE5E,sBAAK/c,GAAG,SAAR,UACmB,IAAhBhF,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,kDAAsCihB,EAAtC,IAAkDE,KACvD,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,4CAAqCihB,EAArC,IAAiDE,KACtD,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,6FAA8CihB,EAA9C,IAA0DE,KAC/D,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,0EAA0CihB,EAA1C,IAAsDE,KAC3D,IAAhBtiB,EAAKoJ,QAAgB,sBAAKjI,UAAU,eAAf,UAA+BoN,EAA/B,IAAsC2T,QAE9D,qBAAKld,GAAG,SAAR,SACGyS,OAAOC,KAAKC,GAAQ7S,KAAI,SAAC+S,EAAK7S,GAAN,OACpBhF,EAAK8X,oBAAsBD,GAAO7X,EAAK8X,oBAAsBC,SAASF,IAAQgK,IAAgBhK,GAAOgK,IAAgB9J,SAASF,KAC/H,qBAEIwD,IAAK1D,EAAOE,GAAKwD,IACjBC,MAAO3D,EAAOE,GAAKyD,MACnBE,IAAG,oBAAe3D,IAHb7S,mB,OC5GhB,SAASyhB,KACpB,MAA8B7kB,oBAAS,GAAvC,mBAAOyI,EAAP,KAAgBqc,EAAhB,KAEA,EAA4C9kB,mBAAS,IAArD,mBAAO+kB,EAAP,KAAuBC,EAAvB,KACA,EAA0BhlB,mBAAS,IAAnC,mBAAOoO,EAAP,KAAcC,EAAd,KACA,EAAiCrO,mBAAS,IAA1C,mBAAOilB,EAAP,KAAiBC,EAAjB,KACA,EAAwBllB,mBAAS,IAAjC,mBAAO5B,EAAP,KAAaoT,EAAb,KACA,EAA4BxR,oBAAS,GAArC,mBAAOmlB,EAAP,KAAeC,EAAf,KACA,EAA0BplB,oBAAS,GAAnC,mBAAO2F,EAAP,KAAcC,EAAd,KACA,EAAkC5F,oBAAS,GAA3C,mBAAOqlB,EAAP,KAAkBC,EAAlB,KACM/f,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAC5C6f,EAAWjgB,cAAYD,SAgL7B,SAASmgB,EAAepX,GACpB,OAAOA,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,UAC5BsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WACjCsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WACjCsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,QAAgC,IAAhBpJ,EAAKoJ,WAChGsP,OAAO1I,EAAMvH,QAAO,SAAAzI,GAAI,OAAoB,IAAhBA,EAAKoJ,WAlL1CnH,qBAAU,WAGN,IAAM0hB,EAAwB,uCAAG,8CAAAriB,EAAA,0DAEH,IAAtB6F,EAAU6F,QAFe,wBAGnB4W,EAAW,CACb5e,GAAImC,EAAUC,KAJO,SAMP7F,IAAMC,KAAK,gCAAiCoiB,GANrC,OAMnBniB,EANmB,OAOnB4lB,EAAM5lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,UAAqD1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAExGgW,EAAYF,EAAeC,GAE8B,OAAzD5lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,YAAoE4D,SAAS/d,SAASqR,KAAK2M,QAAQ,gBACnG9M,MAAM,6LAE2D,OAAjEjZ,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,oBAA4E4D,SAAS/d,SAASqR,KAAK2M,QAAQ,yBAC3G9M,MAAM,6GACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUuS,eAEoB,OAApEjY,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,uBAA+E4D,SAAS/d,SAASqR,KAAK2M,QAAQ,4BAC9G9M,MAAM,sGACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUuS,eAEU,OAA1DjY,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,aAAqE4D,SAAS/d,SAASqR,KAAK2M,QAAQ,kBACpG9M,MAAM,kHACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUuS,eAEc,OAA9DjY,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,iBAAyE4D,SAAS/d,SAASqR,KAAK2M,QAAQ,qBACxG9M,MAAM,qNACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUyS,kBAEc,OAA9DnY,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,iBAAyE4D,SAAS/d,SAASqR,KAAK2M,QAAQ,qBACxG9M,MAAM,mMACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUyS,kBAEkB,OAAlEnY,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,qBAA6E4D,SAAS/d,SAASqR,KAAK2M,QAAQ,yBAC5G9M,MAAM,6LACNnR,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUyS,mBAE7C2N,SAAS/d,SAASqR,KAAK2M,QAAQ,iBAClChgB,EAASD,GACTqf,EAAkBU,KAEfC,SAAS/d,SAASqR,KAAK2M,QAAQ,yBACmC,OAAjE/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,oBAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,kBAA6D1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cACrHsV,EAAkBQ,EAAenf,OAIlCsf,SAAS/d,SAASqR,KAAK2M,QAAQ,4BACsC,OAApE/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,uBAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,qBAAgE1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cACxHsV,EAAkBQ,EAAenf,OAIlCsf,SAAS/d,SAASqR,KAAK2M,QAAQ,kBAC4B,OAA1D/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,aAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,WAAsD1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAC9GsV,EAAkBQ,EAAenf,OAIlCsf,SAAS/d,SAASqR,KAAK2M,QAAQ,sBACgC,OAA9D/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,iBAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,eAA0D1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAClHsV,EAAkBQ,EAAenf,OAIlCsf,SAAS/d,SAASqR,KAAK2M,QAAQ,sBACgC,OAA9D/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,iBAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,eAA0D1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAClHsV,EAAkBQ,EAAenf,OAIlCsf,SAAS/d,SAASqR,KAAK2M,QAAQ,0BACoC,OAAlE/lB,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,qBAGAnc,EAASD,GACHU,EAAOxG,EAAIC,KAAK,GAAGiiB,yBAAyB,GAArC,mBAA8D1b,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cACtHsV,EAAkBQ,EAAenf,MAlGhB,4CAAH,qDA0GxBwf,EAAW,uCAAG,4BAAAnmB,EAAA,sEACGC,IAAMW,IAAI,aAAeiF,EAAUC,KADtC,OACVpH,EADU,OAEhB0mB,EAAW1mB,EAAK0B,KAAKiY,WACrBvG,EAAQpT,EAAK0B,MAHG,2CAAH,qDAMXgmB,EAAU,uCAAG,8BAAApmB,EAAA,sEACGC,IAAMW,IAAI,aADb,cACTT,EADS,QAEXC,KAAKuG,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAC9CxB,EAAgBsX,EAAe3lB,EAAIC,MAH1B,kBAIRoO,EAAcrH,QAAO,SAAAzI,GAAI,OAAIA,EAAKmY,gBAAkBgP,MAJ5C,2CAAH,qDAOVQ,EAA0B,uCAAG,oCAAArmB,EAAA,6DACzBsmB,EAAO,CAAEC,OAAQV,GADQ,SAEb5lB,IAAMC,KAAK,yBAA0BomB,GAFxB,UAEzBnmB,EAFyB,OAId,QADXqmB,EAAWrmB,EAAIC,KAAK,GAAGqmB,kBAHE,yCAKpB,IALoB,cAOrBC,EAAcF,EAAS7f,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cAClExB,EAAgBsX,EAAeY,GARV,kBASpBlY,GAToB,4CAAH,qDAa1BmY,EAAY,uCAAG,gCAAA3mB,EAAA,+EAEOomB,IAFP,UAEP1X,EAFO,OAGTkY,EAAgB,IAEhB7d,GAAWrK,EAAK4Z,kBAAkBuN,EALzB,wBAMT3f,GAAS,GANA,SAOQmgB,IAPR,OAOHQ,EAPG,OAQTD,EAAgBA,EAAcxP,OAAOyP,GAR5B,wBAUTD,EAAgBlY,EAVP,QAabC,EAASiY,GAbI,kDAebxe,QAAQvJ,MAAM,6MAAd,MAfa,0DAAH,qDAoBlB8nB,IAGAzgB,GAAS,GAEN2f,GACCL,EAAa,IAEjBnD,IACA8D,MAGD,CAACN,EAASnnB,EAAK4Z,kBAelB,IAAMwO,EAAa,uCAAG,4BAAA9mB,EAAA,6DAClBolB,GAAYrc,GACNud,EAAO,CACThf,OAAQzB,EAAUC,IAClBihB,UAAWhe,GAJG,SAMZ9I,IAAMC,KAAK,oBAAqBomB,GANpB,2CAAH,qDAUbU,EAAgB,uCAAG,4BAAAhnB,EAAA,6DACf2e,EAAM,CACRjb,GAAImC,EAAUC,IACdygB,OAAQV,GAHS,SAKH5lB,IAAM2P,IAAI,YAAa+O,GALpB,cAMrBiH,GAAa,GANQ,2CAAH,qDAWhBqB,EAAsB,uCAAG,kCAAAjnB,EAAA,0DAEvBiG,EAFuB,uBAGjBqgB,EAAO,CACTC,OAAQV,GAJW,SAML5lB,IAAMC,KAAK,yBAA0BomB,GANhC,OAMjBnmB,EANiB,OAQL,QADZ+mB,EAAY/mB,EAAIC,KAAK,GAAT,oBAEd8mB,EAAUvgB,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAEgQ,UAAUyH,cAAcD,EAAExH,cACjDkS,EAAc4D,EAAeoB,GACjC1B,EAAatD,GACbvT,EAAS,IACTzI,GAAUD,GACVyf,GAAU,IAdS,2CAAH,qDAoB5B,OAEI,sBAAK7lB,UAAU,QAAf,UACI,mCACKgmB,GACG,qCACK5f,EACG,wBAAQtC,QAASsjB,EAAwBpnB,UAAU,WAAWmC,MAAO,CAAEG,MAAO,SAA9E,+GAIA,wBAAQwB,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,sBAAsCsM,IAAYhmB,UAAU,WAAWiC,SAAUiH,GAAWrK,EAAK4Z,kBAAoBuN,EAA5I,mGAIJ,wBAAQliB,QAAS,kBAAMiiB,GAAa,IAAO/lB,UAAU,WAAWmC,MAAO,CAAEmlB,MAAO,SAAhF,mGACCthB,EAAU6F,QAAU,cAAC,IAAD,CAAMxJ,GAAE,kBAAR,SAA6B,wBAAQrC,UAAU,WAAlB,iHAAiE,QAM/H,sBAAKA,UAAU,kBAAf,UAGQ6O,EAAMlL,KAAI,SAAC9E,EAAMgF,GAAP,OAAc,cAAC,GAAD,CAAmBhF,KAAMA,GAAVgF,MAG1C+hB,EACGF,EAAS/hB,KAAI,SAAC9E,EAAMgF,GAAP,OAAc,cAAC,GAAD,CAAmBhF,KAAMA,GAAVgF,MACzC,GAIHmiB,EAEG,GADCR,EAAe7hB,KAAI,SAAC9E,EAAMgF,GAAP,OAAc,cAAC,GAAD,CAAmBhF,KAAMA,GAAVgF,SAK1D,eAAC,EAAD,CAAOQ,OAAQyhB,EAAWxhB,UAAWyhB,EAArC,UACI,sJACA,uBACA,uBAAM/lB,UAAU,gBAAhB,UACI,kCACI,uBACIpB,KAAK,WACLqK,SAAUge,EACV/d,QAASA,IAJjB,uGAOA,wBAAQlJ,UAAU,wBAAwBpB,KAAK,SAASkF,QAASqjB,EAAjE,2L,OCrSL,SAASI,KACtB,OAEE,sBAAKvnB,UAAU,OAAf,UACE,8BACI,qBAAIA,UAAU,KAAd,8MAAyD,mBAAGA,UAAU,KAAK0Z,KAAK,iDAAiDhR,OAAO,SAA/E,iMAE7D,qBAAK1I,UAAU,cAAf,SAEE,cAAC,GAAD,MAGA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,gB,OCZZ,SAASqP,KAEtB,OACE,mCAII,cAAC,GAAD,M,OCPO,SAASmY,KACtB,OACE,qCACE,cAAC,GAAD,IACA,qBAAKxnB,UAAU,cAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,0EACA,qBAAKA,UAAU,kBAAf,SACA,mBAAGA,UAAU,qBAAqB0Z,KAAK,iDAAiDhR,OAAO,SAAS+e,IAAI,sBAA5G,SACE,8ZAEF,uBACA,sBAAKznB,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAEf,sBAAKA,UAAU,WAAf,UAEE,kKACA,mbAAgF,uEAAhF,uBAAoG,iEAApG,yEAAiI,iEAAjI,ySACA,4EACA,oBAAGmC,MAAO,CAACulB,UAAW,QAAtB,UAA+B,mBAAGvlB,MAAO,CAACC,MAAO,SAAlB,wDAA/B,qLACA,8BAAG,mBAAGD,MAAO,CAACC,MAAO,OAAlB,wDAAH,wKACA,8BAAG,mBAAGD,MAAO,CAACC,MAAO,UAAlB,kDAAH,4JAEA,8BAAG,mBAAGD,MAAO,CAACC,MAAO,cAAlB,4CAAH,mKACA,8BAAG,mBAAGD,MAAO,CAACC,MAAO,aAAlB,0EAAH,kPACA,8BAAG,mBAAGD,MAAO,CAACwlB,QAAS,OAApB,0EAAH,uHACA,6HACA,8cAEA,qGACA,ogBAAgG,wHAAhG,sjBACA,smBACA,iJAAyB,oIAAzB,8TAA+G,oCAA/G,keACA,oLACA,i/BACA,ubAEA,sEACA,olBAEA,uHACA,qeAA0F,wHAA1F,+kBAEA,+LACA,0c,OC3CC,SAASC,KACpB,OACI,qCACI,cAAC,GAAD,IACA,qBAAK5nB,UAAU,UAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,uBACA,cAAC,IAAD,CAAMqC,GAAG,kBAAkBrC,UAAU,cAArC,oGACA,uBACA,cAAC,IAAD,CAAMqC,GAAG,sBAAsBrC,UAAU,cAAzC,8H,4BCbL,SAAS6nB,GAAT,GAA0C,IAAT/oB,EAAQ,EAARA,MAE5C,OACI,mCACI,qBAAIkB,UAAU,OAAd,UACI,oBAAIA,UAAU,eAAd,SAA6B,cAAC,IAAD,CAAMqC,GAAE,mBAAcvD,EAAM0L,SAAWxK,UAAU,OAAjD,SAAyDlB,EAAMgpB,uBAC5F,oBAAI9nB,UAAU,eAAd,SAA8BlB,EAAMipB,mDACpC,oBAAI/nB,UAAU,iBAAd,SAAgClB,EAAM2c,mBACtC,oBAAIzb,UAAU,eAAd,SAA8BlB,EAAMsO,YCDrC,SAAS4a,KACpB,MAAoCvnB,mBAAS,CAAEiW,IAAK,qBAAOuR,UAAW,cAAtE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsC1nB,mBAAS,CAAEiW,IAAK,mDAAYuR,UAAW,cAA7E,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsC5nB,mBAAS,CAAEiW,IAAK,mBAAoBuR,UAAW,cAArF,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsC9nB,mBAAS,CAAEiW,IAAK,OAAQuR,UAAW,cAAzE,mBAAOO,EAAP,KAAoBC,EAApB,KAGA,EAA0BhoB,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACML,EAAmBjE,iBAAO,MAC1BkE,EAAiBlE,iBAAO,MAC9B,EAAgCZ,oBAAS,GAAzC,mBAAiBgF,GAAjB,WACA,EAA0BhF,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4F,EAAd,KACA,EAA4BjE,oBAAS,GAArC,mBAAOmlB,EAAP,KAAe8C,EAAf,KACM5iB,EAAWC,cAKXoB,EAAW,uCAAG,kCAAAhH,EAAA,sDACViH,EAAQ9B,EAAiB3D,QAAQ7B,MACjCuH,EAAM9B,EAAe5D,QAAQ7B,MACrB,KAAVsH,GAAwB,KAARC,EAChB1B,EAAS,wEAEK,KAAVyB,GAAwB,KAARC,GAChB1B,EAAS,6EAET0B,EAAMD,EACNzB,EAAS,0KAGH2B,EAAS,CACXqhB,oBAAqBrjB,EAAiB3D,QAAQ7B,MAC9C8oB,kBAAmBrjB,EAAe5D,QAAQ7B,OAE9C6F,EAAS,IAEHgC,EARH,uCAQU,4BAAAxH,EAAA,sEACSC,IAAMC,KAAK,oBAAqBiH,GADzC,OACHhH,EADG,OAEToE,EAASpE,EAAIC,MACboF,EAAS,IAHA,2CARV,qDAaHgC,MAxBQ,2CAAH,qDA4BXC,EAAiB,uCAAG,sBAAAzH,EAAA,sDACtBwF,EAAS,IACTF,GAAY,GACZH,EAAiB3D,QAAQ7B,MAAQ,GACjCyF,EAAe5D,QAAQ7B,MAAQ,GAJT,2CAAH,qDAQjB+oB,EAAc,SAACnS,GACjB,GAAuC,KAAnCpR,EAAiB3D,QAAQ7B,OAAiD,KAAjCyF,EAAe5D,QAAQ7B,MAAc,CAC9E,IAAImoB,EAAY,aACZC,EAAWxR,MAAQA,GAAgC,cAAzBwR,EAAWD,WACrCG,EAAY1R,MAAQA,GAAiC,cAA1B0R,EAAYH,WACvCK,EAAY5R,MAAQA,GAAiC,cAA1B4R,EAAYL,WACvCO,EAAY9R,MAAQA,GAAiC,cAA1B8R,EAAYP,aAEvCA,EAAY,cAEhBE,EAAc,CAAEzR,MAAKuR,cACrBI,EAAe,CAAE3R,MAAKuR,cACtBM,EAAe,CAAE7R,MAAKuR,cACtBQ,EAAe,CAAE/R,MAAKuR,gBAMxBa,EAAcC,mBAAQ,WACxB,IAAMC,EAAa,YAAOlqB,GAc1B,OAbmB,OAAfopB,GACAc,EAAcliB,MAAK,SAAC3G,EAAGwX,GACnB,OAAIxX,EAAE+nB,EAAWxR,KAAOiB,EAAEuQ,EAAWxR,KACD,cAAzBwR,EAAWD,WAA6B,EAAI,EAEnD9nB,EAAE+nB,EAAWxR,KAAOiB,EAAEuQ,EAAWxR,KACD,cAAzBwR,EAAWD,UAA4B,GAAK,GAEvDS,GAAU,GACH,MAIRM,IACR,CAAClqB,EAAOopB,IAIX,OACI,qCACI,cAAC,GAAD,IACA,qBAAKloB,UAAU,UAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,kBAAd,sHACChB,GAAS,qBAAKgB,UAAU,mBAAf,SAAmChB,IAC7C,uBACA,uBACA,sBAAKmD,MAAO,CAACwG,QAAQ,QAArB,UACI,8BACJ,uBACI/J,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,aACV8B,IAAKwD,EACLnD,MAAO,CAAC,YAAe,YAGvB,2CACO,uBACPvD,KAAK,OACLiD,YAAY,sEACZ7B,UAAU,aACV8B,IAAKyD,EACLpD,MAAO,CAAC,YAAe,aAG3B,8BACA,wBAAQnC,UAAU,gBAAgB8D,QAASqD,EAA3C,8CAEI,8BACA,wBAAQnH,UAAU,gBAAgB8D,QAAS8D,EAA3C,mEAGJ,wBAGCge,GAAU,8BACP,cAAC,WAAD,CAASrlB,KAAMzB,EAAOmqB,SAAU,kBAAhC,4BAGJ,uBACA,uBACA,uBACA,+BACI,qBAAIjpB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,EAAY,uBAA7D,uFACsC,uBAAnBX,EAAWxR,KAC1B,sBAAM1W,UAAU,SAAhB,SAAmD,cAAzBkoB,EAAWD,UAA4B,SAAM,cAG3E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,EAAY,qDAA7D,gFACqC,qDAApBT,EAAY1R,KACzB,sBAAM1W,UAAU,UAAhB,SAAqD,cAA1BooB,EAAYH,UAA4B,SAAM,cAG7E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,EAAY,qBAA7D,uFACuC,qBAApBP,EAAY5R,KAC3B,sBAAM1W,UAAU,UAAhB,SAAqD,cAA1BsoB,EAAYL,UAA4B,SAAM,cAG7E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,EAAY,SAA7D,yGAC0C,SAApBL,EAAY9R,KAC9B,sBAAM1W,UAAU,UAAhB,SAAqD,cAA1BwoB,EAAYP,UAA4B,SAAM,iBAM7Ea,EAAYnlB,KAAI,SAAC7E,EAAO+E,GAAR,OAAe,cAAC,GAAD,CAAgC/E,MAAOA,EAAOgH,SAAUA,GAA5BjC,c,OCzKpE,SAASqlB,GAAT,GAA+B,IAATpqB,EAAQ,EAARA,MAEjC,OACI,mCACA,qBAAIkB,UAAU,OAAd,UACI,oBAAIA,UAAU,SAAd,SAAuB,cAAC,IAAD,CAAMqC,GAAE,mBAAcvD,EAAM+E,IAAM7D,UAAU,OAA5C,SAAoDlB,EAAMqR,cACjF,oBAAInQ,UAAU,iBAAd,SAAgClB,EAAM2D,YACtC,oBAAIzC,UAAU,eAAd,SAA8BlB,EAAM4D,UACpC,oBAAI1C,UAAU,cAAd,SAA6BlB,EAAM6D,WACnC,oBAAI3C,UAAU,mBAAd,SAAkClB,EAAMoJ,e,OCLrC,SAASihB,KACpB,MAAoC1oB,mBAAS,CAAEiW,IAAK,YAAauR,UAAW,cAA5E,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsC1nB,mBAAS,CAAEiW,IAAK,YAAauR,UAAW,cAA9E,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsC5nB,mBAAS,CAAEiW,IAAK,UAAWuR,UAAW,cAA5E,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsC9nB,mBAAS,CAAEiW,IAAK,WAAYuR,UAAW,cAA7E,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAsChoB,mBAAS,CAAEiW,IAAK,UAAWuR,UAAW,cAA5E,mBAAOmB,EAAP,KAAoBC,EAApB,KAEA,EAAsC5oB,mBAAS,GAA/C,mBAAO2C,EAAP,KAAoB0B,EAApB,KACA,EAAuBrE,mBAAS,IAAzBwC,EAAP,oBAEM8B,EAAgB3B,EAAcH,EAC9B+B,EAAiBD,EAAgB9B,EAEvC,EAA4BxC,oBAAS,GAArC,mBAAeolB,GAAf,WACA,EAA0BplB,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACML,EAAmBjE,iBAAO,MAC1BkE,EAAiBlE,iBAAO,MAC9B,EAAgCZ,oBAAS,GAAzC,mBAAiBgF,GAAjB,WACA,EAA0BhF,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4F,EAAd,KAEMoB,GADiBhH,EAAMoG,MAAMF,EAAgBD,GAClCgB,eAGXujB,GAAkBlmB,EAAcH,EAChCsmB,GAAmBD,GAAkBrmB,EAKrCkE,GAAW,uCAAG,kCAAAhH,EAAA,sDACViH,EAAQ9B,EAAiB3D,QAAQ7B,MACjCuH,EAAM9B,EAAe5D,QAAQ7B,MACrB,KAAVsH,GAAwB,KAARC,EAChB1B,EAAS,wEAEK,KAAVyB,GAAwB,KAARC,GAChB1B,EAAS,6EAET0B,EAAMD,EACNzB,EAAS,0KAGH2B,EAAS,CACXC,UAAWjC,EAAiB3D,QAAQ7B,MACpC0H,QAASjC,EAAe5D,QAAQ7B,OAEpC6F,EAAS,IAEHgC,EARH,uCAQU,4BAAAxH,EAAA,sEACSC,IAAMC,KAAK,oBAAqBiH,GADzC,OACHhH,EADG,OAEToE,EAASpE,EAAIC,MACboF,EAAS,IACTkgB,GAAU,GAJD,2CARV,qDAcHle,MAzBQ,2CAAH,qDA6BXC,GAAiB,uCAAG,sBAAAzH,EAAA,sDACtBwF,EAAS,IACTF,GAAY,GACZH,EAAiB3D,QAAQ7B,MAAQ,GACjCyF,EAAe5D,QAAQ7B,MAAQ,GAJT,2CAAH,qDAQjB+oB,GAAc,SAACnS,GACjB,GAAuC,KAAnCpR,EAAiB3D,QAAQ7B,OAAiD,KAAjCyF,EAAe5D,QAAQ7B,MAAc,CAC9E,IAAImoB,EAAY,aACZC,EAAWxR,MAAQA,GAAgC,cAAzBwR,EAAWD,WACrCG,EAAY1R,MAAQA,GAAiC,cAA1B0R,EAAYH,WACvCK,EAAY5R,MAAQA,GAAiC,cAA1B4R,EAAYL,WACvCO,EAAY9R,MAAQA,GAAiC,cAA1B8R,EAAYP,WACvCmB,EAAY1S,MAAQA,GAAiC,cAA1B0S,EAAYnB,aAEvCA,EAAY,cAEhBE,EAAc,CAAEzR,MAAKuR,cACrBI,EAAe,CAAE3R,MAAKuR,cACtBM,EAAe,CAAE7R,MAAKuR,cACtBQ,EAAe,CAAE/R,MAAKuR,cACtBoB,EAAe,CAAE3S,MAAKuR,gBAoBxBuB,GAhBcT,mBAAQ,WACxB,IAAMC,EAAa,YAAOlqB,GAY1B,OAXmB,OAAfopB,GACAc,EAAcliB,MAAK,SAAC3G,EAAGwX,GACnB,OAAIxX,EAAE+nB,EAAWxR,KAAOiB,EAAEuQ,EAAWxR,KACD,cAAzBwR,EAAWD,WAA6B,EAAI,EAEnD9nB,EAAE+nB,EAAWxR,KAAOiB,EAAEuQ,EAAWxR,KACD,cAAzBwR,EAAWD,UAA4B,GAAK,EAEhD,KAGRe,IACR,CAAClqB,EAAOopB,IAEsBhjB,MAAMqkB,GAAkBD,IAEzD,OACI,qCACI,cAAC,GAAD,IACA,qBAAKtpB,UAAU,UAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,kBAAd,oGACChB,GAAS,qBAAKgB,UAAU,mBAAf,SAAmChB,IAC7C,uBACA,uBACA,sBAAKmD,MAAO,CAACwG,QAAQ,QAArB,UACI,8BACJ,uBACI/J,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,aACV8B,IAAKwD,EACLnD,MAAO,CAAC,YAAe,YAEvB,2CACO,uBACPvD,KAAK,OACLiD,YAAY,sEACZ7B,UAAU,aACV8B,IAAKyD,EACLpD,MAAO,CAAC,YAAe,aAG3B,8BACA,wBAAQnC,UAAU,gBAAgB8D,QAASqD,GAA3C,8CAEI,8BACJ,wBAAQnH,UAAU,gBAAgB8D,QAAS8D,GAA3C,mEAGA,uBACA,uBACA,uBACA,+BACI,qBAAI5H,UAAU,oBAAoB8D,QAAS,kBAAM+kB,GAAY,cAA7D,gCAC4B,cAAnBX,EAAWxR,KAChB,sBAAM1W,UAAU,YAAhB,SAAsD,cAAzBkoB,EAAWD,UAA4B,SAAM,cAG9E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,GAAY,cAA7D,kDACgC,cAApBT,EAAY1R,KACpB,sBAAM1W,UAAU,YAAhB,SAAuD,cAA1BooB,EAAYH,UAA4B,SAAM,cAG/E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,GAAY,YAA7D,4CAC+B,YAApBP,EAAY5R,KACnB,sBAAM1W,UAAU,UAAhB,SAAqD,cAA1BsoB,EAAYL,UAA4B,SAAM,cAG7E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,GAAY,aAA7D,sFACsC,aAApBL,EAAY9R,KAC1B,sBAAM1W,UAAU,WAAhB,SAAsD,cAA1BwoB,EAAYP,UAA4B,SAAM,cAG9E,qBAAIjoB,UAAU,oBAAoB8D,QAAS,kBAAM+kB,GAAY,YAA7D,gFACqC,YAApBO,EAAY1S,KACzB,sBAAM1W,UAAU,UAAhB,SAAqD,cAA1BopB,EAAYnB,UAA4B,SAAM,iBAK7EuB,GAAa7lB,KAAI,SAAC7E,EAAO+E,GAAR,OAAe,cAAC,GAAD,CAAsB/E,MAAOA,EAAOgH,SAAUA,GAA5BjC,MAGtD,cAAC,EAAD,CAAYZ,aAAcA,EAAcC,WAAYpE,EAAM4E,OAAQP,SAjJjE,SAAA+D,GAAU,OAAIpC,EAAeoC,IAkJlB9D,YAAaA,Y,kBCsO9BqmB,GAjZM,SAAC,GAAkC,IAAjChG,EAAgC,EAAhCA,WAAWa,EAAqB,EAArBA,UAAUrc,EAAW,EAAXA,OAClCjC,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAElD,EAAkC1F,mBAAS,IAA3C,mBAAOgN,EAAP,KAAkBrB,EAAlB,KAEA,EAA8B3L,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAA0ClN,mBAAS,IAAnD,mBAAOmN,EAAP,KAAsBlB,EAAtB,KAGA,EAAkCjM,mBAAS,IAA3C,mBAAOoN,EAAP,KAAkBjB,EAAlB,KAEA,EAAsCnM,mBAAS,IAA/C,mBAAOqN,EAAP,KAAoBhB,EAApB,KAEA,EAA8BrM,mBAAS,IAAvC,mBAAOU,EAAP,KAAgB4M,EAAhB,KAGA,EAAoDtN,mBAAS,IAA7D,mBAAOuN,EAAP,KAA2BT,EAA3B,KAEA,EAAsC9M,mBAAS,IAA/C,mBAAOwN,EAAP,KAAoBjB,EAApB,KAEA,EAA4CvM,oBAAS,GAArD,mBAAOipB,EAAP,KAAuBC,EAAvB,KAEA,EAAoClpB,mBAAS,IAA7C,mBAAOyjB,EAAP,KAAmBC,EAAnB,KAEA,GAAgC1jB,mBAAS,IAAzC,qBAAO0N,GAAP,MAAiBjB,GAAjB,MAEA,GAA0DzM,mBAAS,IAAnE,qBAAO2N,GAAP,MAA8B9B,GAA9B,MAEA,GAAoD7L,mBAAS,IAA7D,qBAAO4N,GAAP,MAA2B7B,GAA3B,MAEA,GAA8C/L,mBAAS,IAAvD,qBAAO6N,GAAP,MAAwBpC,GAAxB,MAEA,GAAkCzL,mBAAS,IAA3C,qBAAO0P,GAAP,MAAkB5B,GAAlB,MAEMnB,GAAOC,MAASC,OAAO,cAC7B,GAAoC7M,mBAAS,IAA7C,qBAAO+N,GAAP,MAAmBC,GAAnB,MACA,GAA4BhO,mBAAS,IAArC,qBAAOgH,GAAP,MAAeiH,GAAf,MACA,GAA0CjO,mBAAS,IAAnD,qBAAOkO,GAAP,MAAsBC,GAAtB,MACA,GAA0BnO,mBAAS,IAAnC,qBAAOoO,GAAP,MAAcC,GAAd,MAEA,GAA0DrO,mBAAS,IAAnE,qBAA8BmpB,IAA9B,aACA,GAAkEnpB,mBAAS,IAA3E,qBAAkCopB,IAAlC,aACA,GAAwEppB,mBAAS,IAAjF,qBAAqCqpB,IAArC,aACA,GAA4DrpB,mBAAS,IAArE,qBAA+BspB,IAA/B,aAEMhb,GAAY1N,mBACZ2N,GAAY3N,mBACZ4N,GAAa5N,mBACb6N,GAAS7N,mBACT8N,GAAa9N,mBACb+N,GAAiB/N,mBAIvB,IAFkBA,mBAEgBZ,mBAAS,KAA3C,qBACA,IADA,YAC8BA,mBAAS,KAAvC,qBAEA,IAFA,YAEwBA,mBAAS,KAAjC,qBAAOgP,GAAP,MAAaD,GAAb,MAIA1O,qBAAU,WACN,IAAMuO,EAAU,uCAAG,gCAAAlP,EAAA,sEAEOC,IAAMW,IAAI,qBAFjB,cAETwO,EAFS,OAGfC,GAAQD,EAAQhP,MAHD,SAIOH,IAAMW,IAAI,mCAJjB,cAIT2M,EAJS,OAKfC,EAAWD,EAAQnN,MALJ,UAMIH,IAAMW,IAAI,aANd,QAMTlC,EANS,OAOfiQ,GAASjQ,EAAK0B,MAPC,4CAAH,qDAWhB8O,MACD,IAIH,IA4CMK,GAAgB,uCAAG,4BAAAvP,EAAA,yDAEfwP,EAAa,CACfC,gBAAiB3B,EACjB4B,cAAeqU,EACf3X,YAAa6B,GACbjC,MAAOmC,GACPgB,SAAUP,GAAUpN,QAAQ7B,MAC5B+O,MAAwB,IAAhBpH,GAAO/D,OAAayK,GAAW1G,GACvCqI,OAAQtB,GACRL,SAAUA,GACVsB,KAAMhC,EACNd,WAAYiB,EACZf,aAAcgB,EACdd,WAAYe,EACZX,qBAA2C,KAArBa,EAA0B,KAAOA,GAE3DzF,QAAQC,IAAI,OAAOmH,KAEa,MAA5BZ,GAAUpN,QAAQ7B,OAA4B,OAAXqO,IAAmB1G,GAAO/D,OAAO,GAnBnD,gBAoBjBqK,EAAW,wHApBM,uCAwBC3N,IAAM2P,IAAI,kBAAmBJ,GAxB9B,cAyBjB5B,EAAW,0DACX3F,OAAOC,SAASC,SA1BC,4CAAH,qDAmGhB0hB,GAAqB,SAACC,GACxB,OAAQA,GACJ,KAAK,GACD,MAAO,UACX,KAAK,GACD,MAAO,YACX,KAAK,GACD,MAAO,WACX,KAAK,GACD,MAAO,aACX,KAAK,GACD,MAAO,aAOnB,OACI,qCACI,oBAAIjqB,UAAU,iBAAd,SAAgCyjB,IAChC,sBAAKzjB,UAAU,sBAAf,UACKskB,EAAU3gB,KAAI,SAAAwhB,GAAG,OACd,qBAAkBnlB,UAAW,cAAcgqB,GAAmB7E,EAAI+E,WAC7DpmB,QAAS,kBAzEV,SAACkF,EAAMmD,EAAMtI,EAAG0I,EAAY2d,EAAU/Z,EAAU3F,EAAQwM,EAAcrK,EAAWE,EAAaE,EAAWI,IAClG,IAApBnH,EAAU6F,UAGL0C,GADW,OAAZ4B,EACc,GAEAA,GAGjBvB,GAAiB,IACjBb,EAAW,IACX4b,GAAkB,GAClB3c,EAAenJ,GACf+lB,GAAyB5gB,GACzBmb,EAAcnb,GAGd8gB,GAAgCvd,GAChCD,GAAyBC,GAEzBwd,GAA0B5d,GAC1BD,GAAmBC,GAEnB0d,GAA6BK,GAC7B1d,GAAsB0d,GAEtBhd,GAAY1C,GAEZ4B,EAAa4K,GAEbtK,EAAiBC,GAEjBC,EAAaC,GAEbC,EAAeC,GAEfQ,EAAsBJ,IAqCMhG,CAAYge,EAAInc,KAAMmc,EAAIhZ,MAAMgZ,EAAIthB,GAAGshB,EAAI5Y,YAAY4Y,EAAI+E,UACtE/E,EAAIhV,UAAUgV,EAAI3a,QAAQ2a,EAAInO,cAAcmO,EAAIxY,WAAWwY,EAAItY,aAAasY,EAAIpY,WAAWoY,EAAIhY,uBAFxG,SAII,sBAAKtJ,GAAG,iBAAR,UACI,qBAAKA,GAAG,SACR,qBAAKA,GAAG,OAAR,SAAgBshB,EAAIhV,YACpB,qBAAKtM,GAAG,OAAR,SAAgBuJ,KAAS+X,EAAIgF,YAAc,MAAQ,KACnD,qBAAKtmB,GAAG,SACR,qBAAKA,GAAG,OAAR,SAAgBshB,EAAInc,OACpB,qBAAKnF,GAAG,SACR,qBAAKA,GAAG,SACR,qBAAKA,GAAG,OAAR,SAAgBshB,EAAItY,eACpB,qBAAKhJ,GAAG,SACR,sBAAKA,GAAG,QAAR,6CAAwBshB,EAAIhZ,SAC5B,qBAAKtI,GAAG,QAAR,SAAiBshB,EAAIiF,cACrB,sBAAKvmB,GAAG,QAAR,mDAAyBshB,EAAIpY,cAC7B,qBAAKlJ,GAAG,QAAR,SAAiBshB,EAAIkF,mBAjBnBlF,EAAIthB,OA2BlB,eAAC,EAAD,CAAgBQ,OAAQqlB,EAAgBplB,UAAWqlB,EAAnD,UACI,qBAAK3pB,UAAU,uBAAf,SACI,+BAAQmB,MAEZ,8BACI,uBAAOvC,KAAK,OAAOoB,UAAU,sBACtBF,MAAOokB,EACPjb,SAxMG,SAACxH,GAC3B0iB,EAAc1iB,EAAEiH,OAAO5I,YA0MX,8BACA,0BAAUE,UAAU,kBACVF,MAAOsO,GACPnF,SAzMW,SAACxH,GAClC6K,GAAyB7K,EAAEiH,OAAO5I,YA2MtB,gCACI,mHAA2B,uBAC3B,wBAAQgC,IAAKkN,GACLlP,MAAO2N,EACPxE,SAjMT,WACfmD,EAAa4C,GAAUrN,QAAQ7B,QAiMPE,UAAU,yBAHlB,SAIKyP,GAAK9L,KAAI,SAACqM,EAAKhH,GAAN,OAAe,wBACQlJ,MAAOkQ,EAAInM,GADnB,SACwBmM,EAAIC,iBADfjH,WAK9C,gCACI,yEAAoB,uBACpB,wBAAQlH,IAAKiN,GACLjP,MAAOuO,GACPpF,SAhNF,WACtBuD,GAAsBuC,GAAUpN,QAAQ7B,QAgNhBE,UAAU,2BAHlB,SAIKiI,EAAOtE,KAAI,SAACsE,EAAQe,GAAT,OAAkB,wBACQlJ,MAAOmI,EAAOpE,GADtB,SAC2BoE,EAAOe,MADrBA,WAKnD,gCACI,mEAAmB,uBACnB,uBAAOpK,KAAK,OACLkB,MAAOwO,GACPrF,SAlOI,SAACxH,GAExB,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACtBoM,GAAmBzK,EAAEiH,OAAO5I,QAgOT+B,YAAY,iCACZ7B,UAAU,0BAGrB,gCACI,qFAAsB,uBACtB,wBAAQ8B,IAAKmN,GACLnP,MAAO8N,EACP3E,SA5NN,WAClByD,EAAiBuC,GAAWtN,QAAQ7B,QA4NZE,UAAU,2BAHlB,SAIK0N,EAAQ/J,KAAI,SAAC+J,EAAS1E,GAAV,OAAmB,wBAAmBlJ,MAAO4N,EAAQ7J,GAAlC,SAAuC6J,EAAQ1E,MAAlCA,WAIrD,sBAAKhJ,UAAU,YAAf,UACI,gCAEI,oHAA4B,uBAC5B,sBAAKA,UAAU,WAAf,UACI,uBACIpB,KAAK,OACLiD,YAAY,kFACZ/B,MAAO0O,IAAc2B,GACrBlH,SAzLN,SAACxH,GACvB,IAAM2O,EAAO3O,EAAEiH,OAAO5I,MAElB2O,GADM,KAAP2B,EACe,KAGAA,GAElB,IAAM/E,EAAWwD,GAAMvH,QAAO,SAAAzI,GAAI,OAC9BA,EAAKsR,WAAatR,EAAKsR,UAAU7E,cAAcC,SAAS6E,EAAK9E,kBAGpD,KAAT8E,EACA7B,GAAa,IAEbK,GAAiBvD,IA2KOrL,UAAU,uBAGbmO,GAAU,cAAC,IAAD,CAAMnO,UAAU,uBAAuBmC,MAAO,CAACmoB,YAAY,QAASjoB,GAAE,mBAAc8L,IAApF,0GAAyH,GAGnIQ,GAAcjL,OAAS,GACpB,qBAAK1D,UAAU,oBAAf,SACK2O,GAAchL,KAAI,SAAC9E,EAAMwR,GAAP,OACf,qBAAKrQ,UAAU,gBAA4BF,MAAOjB,EAAKgF,GAClDC,QAAS,kBAxI9B,SAACwM,EAAS7I,GAE9BiH,GAAUjH,GACVgH,GAAc6B,GACd1B,GAAiB,IAoIuC2B,CAAgB1R,EAAKsR,UAAWtR,EAAKgF,KADzD,SAEKhF,EAAKsR,WAF0BE,WAQpD,gCACI,kGAAyB,uBACzB,uBAAOzR,KAAK,OACLkD,IAAKsN,GACLvN,YAAY,qBACZ7B,UAAU,qBACVF,MAAOkO,GAAsB,GAC7B/E,SAtPf,WAChBsE,EAAsB6B,GAAezN,QAAQ7B,aAwPzB,gCACI,uDAAiB,uBACjB,uBAAOlB,KAAK,OACLkD,IAAKoN,GACLpP,MAAO+N,EACP5E,SAxQjB,WACd2D,EAAasC,GAAOvN,QAAQ7B,QAwQG+B,YAAY,qBACZ7B,UAAU,0BAGrB,gCACI,yEAAoB,uBACpB,uBAAOpB,KAAK,OACLkD,IAAKqN,GACLrP,MAAOgO,EACP7E,SA9QnB,SAACxH,GACT,QAAQyO,KAAKzO,EAAEiH,OAAO5I,QACtBgN,EAAerL,EAAEiH,OAAO5I,QA6QG+B,YAAY,wGACZ7B,UAAU,6BAIzB,uBACA,qBAAKA,UAAU,aAAf,wDAGA,uBACA,8BACI,wBAAQA,UAAU,cAAcpB,KAAK,SAASkF,QAAS4L,GAAvD,mF,OC7Fb6a,OA9Sf,WACI,IAAMvkB,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAClD,EAAsC1F,mBAAS,IAA/C,mBAAO+pB,EAAP,KAAoBC,EAApB,KACA,EAAwBhqB,mBAAS,IAAjC,mBAAOgP,EAAP,KAAaD,EAAb,KACA,EAA4B/O,mBAAS,IAArC,mBAAOgH,EAAP,KAAeiH,EAAf,KACA,EAA0BjO,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc2G,EAAd,KACA,EAA8BlF,mBAAS,IAAvC,mBAAOU,EAAP,KAAgB4M,EAAhB,KACA,EAAoCtN,mBAAS,IAA7C,mBAAOiqB,EAAP,KAAmBC,EAAnB,KACA,EAA4BlqB,oBAAS,GAArC,mBAAOmqB,EAAP,KAAeC,EAAf,KACA,EAAkCpqB,mBAAS,IAA3C,mBAAO6jB,EAAP,KAAkBC,EAAlB,KACA,EAA4B9jB,mBAAS,IAArC,mBAAOwH,EAAP,KAAeuF,EAAf,KACA,EAA8B/M,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAAgClN,oBAAS,GAAzC,mBAAO2jB,EAAP,KAAiBC,EAAjB,KACA,EAA0B5jB,mBAAS,IAAnC,mBAAOoO,EAAP,KAAcC,GAAd,KACMgc,GAAgBzpB,mBAChB0pB,GAAU1pB,mBACV2pB,GAAY3pB,mBACZ4pB,GAAgB5pB,mBAChB6pB,GAAU7pB,mBACV8pB,GAAc9pB,mBACd+pB,GAAc/pB,mBACdgqB,GAAQhqB,mBAURqjB,GAAY,WACdL,GAAaD,IAEjBtjB,qBAAU,WACN,IAAM+V,EAAO,uCAAG,sCAAA1W,EAAA,sEACcC,IAAMW,IAAI,qBADxB,cACNuqB,EADM,OAEZ9b,EAAQ8b,EAAY/qB,MAFR,SAMWH,IAAMW,IAAI,iCANrB,cAMNuO,EANM,QAOH/O,KAAKgrB,QAAQjc,EAAS/O,KAAKirB,OAAOlc,EAAS/O,KAAK+b,WAAU,SAAArU,GAAM,MAAoB,yCAAhBA,EAAOe,QAAoB,GAAG,IAC3GwE,EAAU8B,EAAS/O,MARP,UAWYH,IAAMW,IAAI,mCAXtB,eAWN0qB,EAXM,OAYZ9d,EAAW8d,EAAUlrB,MAZT,UAaOH,IAAMW,IAAI,aAbjB,eAaNlC,EAbM,OAcZiQ,GAASjQ,EAAK0B,MAERmrB,EAAmB,CACrB1F,SAAUhgB,EAAUuS,aACpB/N,QAASxE,EAAUC,KAlBX,UAoBe7F,IAAMC,KAAK,2BAA2BqrB,GApBrD,QAoBN/G,EApBM,OAqBZJ,EAAaI,EAAapkB,MArBd,4CAAH,qDAyBbsW,MACD,IAGH,IAMA,GAAoCpW,mBAAS,IAA7C,qBAAO+N,GAAP,MAAmBC,GAAnB,MAEA,GAA0ChO,mBAAS,IAAnD,qBAAOkO,GAAP,MAAsBC,GAAtB,MAkBM+c,GAAY,uCAAG,oCAAAxrB,EAAA,yDAEXyrB,EAAeX,GAActpB,QAAQ7B,MAAMwL,cAAcuZ,QAGvCP,EAAU7N,MAAK,qBAAGoV,cACxBpV,MAAK,qBAAG6N,UACR7N,MAAK,SAAAqV,GAAO,OAClBA,EAAQjf,cAAgBif,EAAQjf,aAAavB,gBAAkBsgB,WAR1D,uBAcbjB,EAAc,qIACdhlB,EAAS,IACToI,EAAW,IAhBE,6BAoBbge,EAAiB,GACF,KAAfvd,KACAud,EAAiBtkB,GAEfukB,EAAY,CACdnc,cAAeib,GAAgBnpB,QAAQ7B,MACvCyM,YAAa4e,GAAYxpB,QAAQ7B,MACjCmsB,QAASlB,GAAQppB,QAAQ7B,MACzBoqB,UAAWc,GAAUrpB,QAAQ7B,MAC7BosB,cAAeN,EAAahqB,cAC5BuqB,YAAaf,GAAYzpB,QAAQ7B,MACjC6M,WAAYue,GAAQvpB,QAAQ7B,MAC5BqM,MAAOkf,GAAM1pB,QAAQ7B,MACrBssB,WAAYhI,EACZ9T,SAAUyb,GAIwB,KAAlCjB,GAAgBnpB,QAAQ7B,OACM,KAA9BqrB,GAAYxpB,QAAQ7B,OACM,KAA1BirB,GAAQppB,QAAQ7B,OACY,KAA5BkrB,GAAUrpB,QAAQ7B,OACD,KAAjB8rB,GAC8B,KAA9BR,GAAYzpB,QAAQ7B,OACI,KAAxBurB,GAAM1pB,QAAQ7B,OACY,KAA1BorB,GAAQvpB,QAAQ7B,MA7CH,iBA+Cb6F,EAAS,mFACTklB,GAAU,GAhDG,yCAkDKzqB,IAAMC,KAAK,kBAAmB2rB,GAlDnC,WAmDM,MAnDN,OAmDL/jB,OAnDK,wBAoDTtC,EAAS,IACToI,EAAW,2GACL2d,EAAmB,CACrB1F,SAAUhgB,EAAUuS,aACpB/N,QAASxE,EAAUC,KAxDd,UA0DkB7F,IAAMC,KAAK,2BAA2BqrB,GA1DxD,QA0DH/G,EA1DG,OA2DTJ,EAAaI,EAAapkB,MA3DjB,4CAAH,qDA+ElB,SAAS0kB,KACL0F,EAAc,IACdhlB,EAAS,IACToI,EAAW,IAGf,OACI,qCACI,uBACA,sBAAK/N,UAAU,mBAAf,UACI,oBAAImC,MAAO,CAACke,UAAU,UAAtB,gHAEKrhB,GAAS4rB,GAAUzpB,IAAYupB,GAChC,qBAAK1qB,UAAU,QAAf,0EAGAmB,IAAYnC,IAAU4rB,IAAWF,GACjC,qBAAK1qB,UAAU,QAAf,0EAGAhB,GAAS4rB,IAAWF,GACpB,qBAAK1qB,UAAU,QAAf,gHAGA0qB,IAAevpB,GACf,qBAAKnB,UAAU,QAAf,SAAwB0qB,IAE5B,wBAEA,gCACI,qBAAK1qB,UAAU,iBAAf,uIACA,uBAAO8B,IAAKgpB,GAAiBlsB,KAAK,OAAOiD,YAAY,4HAAwB7B,UAAU,gBAAgBklB,YAAaD,QAExH,gCACI,qBAAKjlB,UAAU,aAAf,+GACA,0BAAU8B,IAAKqpB,GAAatpB,YAAY,oGAAoB7B,UAAU,mBAAmBklB,YAAaD,QAE1G,gCACI,qBAAKjlB,UAAU,aAAf,4FACA,wBAAQ8B,IAAKipB,GAAS/qB,UAAU,gBAAgBklB,YAAaD,GAA7D,SACKxV,EAAK9L,KAAI,SAACqM,EAAKhH,GAAN,OAAe,wBAAQqjB,SAAUrc,EAAInM,KAAOmC,EAAUuS,aAC/BzY,MAAOkQ,EAAInM,GADnB,SACwBmM,EAAIC,iBAD8BjH,WAI3F,gCACI,qBAAKhJ,UAAU,aAAf,kDACA,wBAAQ8B,IAAKkpB,GAAWhrB,UAAU,gBAAgBklB,YAAaD,GAA/D,SACKhd,EAAOtE,KAAI,SAACsE,EAAQpE,GAAT,OAAgB,wBAAiB/D,MAAOmI,EAAOpE,GAA/B,SAAoCoE,EAAOe,MAA9BnF,WAIjD,gCACI,qBAAK7D,UAAU,aAAf,iFACA,uBAAO8B,IAAKmpB,GACLnrB,MAAO0qB,EACPvhB,SAvMI,SAACxH,GACxBgpB,EAAehpB,EAAEiH,OAAO5I,QAuMLlB,KAAK,OACLiD,YAAY,sEACZ7B,UAAU,gBACVklB,YAAaD,QAKxB,sBAAKjlB,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,6FACA,uBACIpB,KAAK,OACLiD,YAAY,kFACZ7B,UAAU,gBACVF,MAAO0O,GACPvF,SArKM,SAACxH,GACvB,IAAM2O,EAAO3O,EAAEiH,OAAO5I,MACtB2O,GAAc2B,GACd,IAAM/E,EAAWwD,EAAMvH,QAAO,SAAAzI,GAAI,OAC9BA,EAAKsR,WAAatR,EAAKsR,UAAU7E,cAAcC,SAAS6E,EAAK9E,kBAG7DsD,GADS,KAATwB,EACiB,GAEA/E,IA6JL6Z,YAAaD,KAEjB,qBAAKjlB,UAAU,YAAf,SACK2O,GAAcjL,OAAS,GACpB,8BACKiL,GAAchL,KAAI,SAAC9E,EAAMwR,GAAP,OACf,qBAAKrQ,UAAU,gBAA4BF,MAAOjB,EAAKgF,GAAIC,QAAS,kBAvL5E,SAACwM,EAAS7I,GAC9BiH,EAAUjH,GACVgH,GAAc6B,GACd1B,GAAiB,IAoLqF2B,CAAgB1R,EAAKsR,UAAWtR,EAAKgF,KAA/G,SACKhF,EAAKsR,WAD0BE,aASxD,gCACI,qBAAKrQ,UAAU,aAAf,8DACA,yBAAQ8B,IAAKopB,GAASlrB,UAAU,gBAAgBklB,YAAaD,GAA7D,UACI,wBAAQnlB,MAAM,GAAd,8DACC4N,EAAQ/J,KAAI,SAAC+J,EAAS1E,GAAV,OAAmB,wBAAmBlJ,MAAO4N,EAAQ7J,GAAlC,SAAuC6J,EAAQ1E,MAAlCA,YAIrD,gCACI,qBAAKhJ,UAAU,aAAf,2EACA,uBAAO8B,IAAKspB,GAAaxsB,KAAK,SAASiD,YAAY,mJAAgC7B,UAAU,gBAAgBklB,YAAaD,QAE9H,gCACI,qBAAKjlB,UAAU,aAAf,4CACA,uBAAO8B,IAAKupB,GAAOzsB,KAAK,SAASiD,YAAY,iCAAQ7B,UAAU,gBAAgBklB,YAAaD,QAEhG,sBAAK9iB,MAAO,CAACulB,UAAU,QAAvB,UACI,uBAAOvlB,MAAO,CAACmqB,aAAa,QAA5B,qOACA,wBAAOvjB,QAAQ,WAAf,UACI,uBACInK,KAAK,QACLkB,OAAO,EACP+D,GAAG,WACHmF,KAAK,eACLE,SAAUkb,EACVnb,SAAUyb,KAPlB,kBASA,wBAAO3b,QAAQ,YAAf,UACI,uBACInK,KAAK,QACLkB,OAAO,EACP+D,GAAG,WACHmF,KAAK,gBACLE,QAASkb,EACTnb,SAAUyb,KAPlB,2BAUJ,sBAAKviB,MAAO,CAACke,UAAU,SAAS7F,WAAW,QAA3C,UACI,wBAAQxa,UAAU,eAAe8D,QAAS6nB,GAA1C,oEACA,wBAAQ3rB,UAAU,eAAe8D,QA7I9B,WACfqnB,GAAYxpB,QAAQ7B,MAAQ,GAC5BgrB,GAAgBnpB,QAAQ7B,MAAM,GAC9BmrB,GAActpB,QAAQ7B,MAAM,GAC5BsrB,GAAYzpB,QAAQ7B,MAAM,GAC1BurB,GAAM1pB,QAAQ7B,MAAM,GACpB2O,GAAc,IACdG,GAAiB,IACjB6b,EAAe,IACf1c,EAAW,IACXpI,EAAS,KAmIG,wECmEL4mB,OApWf,SAAuBvG,GACnB,IAAMhgB,EAAYrG,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAClD,EAAkC1F,mBAAS,IAA3C,mBAAO6jB,EAAP,KAAkBC,EAAlB,KACA,EAAkD9jB,oBAAS,GAA3D,mBAAO+rB,EAAP,KAA0BC,EAA1B,KACA,EAAkChsB,mBAAS,IAA3C,mBAAOisB,EAAP,KAAkBC,EAAlB,KACA,EAA8BlsB,mBAAS,IAAvC,mBAAOmsB,EAAP,KAAgBC,EAAhB,KACA,EAA4BpsB,mBAAS,IAArC,mBAAOwH,EAAP,KAAeuF,EAAf,KACA,EAA8B/M,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAAoClN,mBAAS,IAA7C,mBAAOqsB,EAAP,KAAmBC,EAAnB,KACA,EAAkDtsB,mBAAS,IAA3D,mBAAO+jB,EAAP,KAA0BC,EAA1B,KACA,EAA0ChkB,mBAAS,CAE/CiN,QAAS,GACTzF,OAAQ,GACR+b,QAAS,GACTP,WAAY,KACZiJ,UAAW,KACXE,QAAS,OAPb,mBAAOI,EAAP,KAAsBC,EAAtB,KAYAnsB,qBAAU,WAGN,IAAMyrB,EAAa,uCAAG,0CAAApsB,EAAA,sEAEKC,IAAMW,IAAI,iCAFf,cAEZuO,EAFY,gBAGMlP,IAAMW,IAAI,mCAHhB,cAGZ0qB,EAHY,OAIlB9d,EAAW8d,EAAUlrB,MACrBiN,EAAU8B,EAAS/O,MAEbmrB,EAAqB,CACvB1F,SAAUhgB,EAAUuS,aACpB/N,QAASxE,EAAUC,KATL,UAYS7F,IAAMC,KAAK,2BAA4BqrB,GAZhD,QAYZ/G,EAZY,OAalBJ,EAAaI,EAAapkB,KAAK,GAAGsrB,eAC5BqB,EAAmBvI,EAAapkB,KAAK,GAAGsrB,cACxCsB,EAAmB,IAAIC,IAE7BF,EAAiB7V,SAAQ,SAAAoM,GACrBA,EAAWa,UAAUjN,SAAQ,SAAAyU,QACE9gB,IAAvB8gB,EAAQ/e,YAAmD,OAAvB+e,EAAQ/e,YAC5CogB,EAAiBrO,IAAIgN,EAAQ/e,kBAInCsgB,EAAmB1T,MAAM2T,KAAKH,GAAkBrmB,MAAK,SAAC3G,EAAGwX,GAAJ,OAAUxX,EAAIwX,KACnE4V,EAAyB,IAAIH,IAAIC,GACvCN,EAAcQ,GA1BI,4CAAH,qDA6BnBhB,MACD,CAACvG,IAGJllB,qBAAU,WACN0sB,EAAaR,KACd,CAAC1I,EAAW0I,IAEf,IAQMS,EAAoB,SAAC7uB,EAAMkB,GAC7BmtB,GAAiB,SAAAS,GACb,IAAIC,EA4BJ,MA3Ba,WAAT/uB,EACA+uB,EAAU,2BACHD,GADG,IAENzlB,OAAQylB,EAAYzlB,OAAOsD,SAASzL,GAC9B4tB,EAAYzlB,OAAOX,QAAO,SAAAW,GAAM,OAAIA,IAAWnI,KAD7C,sBAEE4tB,EAAYzlB,QAFd,CAEsBnI,MAElB,YAATlB,EACP+uB,EAAU,2BACHD,GADG,IAENhgB,QAASggB,EAAYhgB,QAAQnC,SAASzL,GAChC4tB,EAAYhgB,QAAQpG,QAAO,SAAAoG,GAAO,OAAIA,IAAY5N,KAD/C,sBAEC4tB,EAAYhgB,SAFb,CAEsB5N,MAEnB,eAATlB,EACP+uB,EAAU,2BACHD,GADG,IAENjK,WAAYiK,EAAYjK,aAAe3jB,EAAQ,KAAOA,IAE1C,YAATlB,IACP+uB,EAAU,2BACHD,GADG,IAEN1J,QAAS0J,EAAY1J,QAAQzY,SAASzL,GAChC4tB,EAAY1J,QAAQ1c,QAAO,SAAA0c,GAAO,OAAIA,IAAYlkB,KAClD,CAACA,MAGR6tB,MAITC,EAAmB,SAAChvB,EAAMkB,GACf,cAATlB,EACA+tB,EAAa7sB,GACG,YAATlB,GACPiuB,EAAW/sB,IAKb0tB,EAAe,SAACK,GAClB,IAAIxiB,EAAWiZ,EAEXjZ,IACIwiB,EAAQpK,aACRpY,EAAWA,EAAS/D,QAAO,SAAAmc,GAAU,OAAIA,EAAWzM,gBAAkBJ,SAASiX,EAAQpK,gBAGvFoK,EAAQngB,QAAQhK,OAAS,IACzB2H,EAAWA,EAAS/D,QAAO,SAAAmc,GAAU,OACjCA,EAAWa,UAAU7N,MAAK,SAAAqV,GAAO,OAAI+B,EAAQngB,QAAQnC,SAASugB,EAAQzB,oBACxE1mB,KAAI,SAAA8f,GAAU,kCACTA,GADS,IAEZa,UAAWb,EAAWa,UAAUhd,QAAO,SAAAwkB,GAAO,OAAI+B,EAAQngB,QAAQnC,SAASugB,EAAQzB,uBAIvFwD,EAAQ5lB,OAAOvE,OAAS,IACxB2H,EAAWA,EAAS/D,QAAO,SAAAmc,GAAU,OACjCA,EAAWa,UAAU7N,MAAK,SAAAqV,GAAO,OAAI+B,EAAQ5lB,OAAOsD,SAASugB,EAAQ1B,mBACvEzmB,KAAI,SAAA8f,GAAU,kCACTA,GADS,IAEZa,UAAWb,EAAWa,UAAUhd,QAAO,SAAAwkB,GAAO,OAAI+B,EAAQ5lB,OAAOsD,SAASugB,EAAQ1B,sBAItFyD,EAAQ7J,QAAQtgB,OAAS,IACzB6E,QAAQC,IAAI,wBAAyBqlB,EAAQ7J,SAC7C3Y,EAAWA,EAAS/D,QAAO,SAAAmc,GAAU,OACjCA,EAAWa,UAAU7N,MAAK,SAAAqV,GAAO,OAAI+B,EAAQ7J,QAAQzY,SAASuiB,OAAOhC,EAAQ/e,mBAC/EpJ,KAAI,SAAA8f,GAAU,kCACTA,GADS,IAEZa,UAAWb,EAAWa,UAAUhd,QAAO,SAAAwkB,GAAO,OAAI+B,EAAQ7J,QAAQzY,SAASuiB,OAAOhC,EAAQ/e,qBAE9FxE,QAAQC,IAAI,uBAAwB6C,KAGpCwiB,EAAQnB,WAAamB,EAAQjB,WAC7BvhB,EAAWA,EAAS1H,KAAI,SAAA8f,GAAU,kCAC3BA,GAD2B,IAE9Ba,UAAWb,EAAWa,UAAUhd,QAAO,SAAAwkB,GACnC,IAAMiC,EAAc,IAAI9mB,KAAK6kB,EAAQ3B,aAC/BuC,EAAYmB,EAAQnB,UAAY,IAAIzlB,KAAK4mB,EAAQnB,WAAa,KAC9DE,EAAUiB,EAAQjB,QAAU,IAAI3lB,KAAK4mB,EAAQjB,SAAW,KAC9D,QAASF,GAAaqB,GAAerB,MAAgBE,GAAWmB,GAAenB,WAEnFtlB,QAAO,SAAAmc,GAAU,OAAIA,EAAWa,UAAU5gB,OAAS,OAI/D+gB,EAAqBpZ,IA+BnB2e,EAAqB,SAACC,GACxB,OAAQ+D,OAAO/D,IACX,KAAK,GACD,MAAO,UACX,KAAK,GACD,MAAO,YACX,KAAK,GACD,MAAO,WACX,KAAK,GACD,MAAO,aACX,KAAK,GACD,MAAO,aAKnB,OACI,qCACI,cAAC,GAAD,IACA,sBAAKjqB,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACKwsB,EACG,wBAAQxsB,UAAU,WAAW8D,QAvJzB,WACpB2oB,GAAqB,IAsJL,4CAAsE,GAEzED,EACG,cAAC,GAAD,IAEA,qCACI,sBAAKxsB,UAAU,wBAAf,UAEI,gCACI,wBAAQA,UAAU,WAAW8D,QAAS,kBAAMsE,OAAOC,SAASqR,KAAhB,sBAAsC1T,EAAUuS,eAA5F,4CACA,wBAAQvY,UAAU,WAAW8D,QArK5C,WACb2oB,GAAqB,IAoKO,kHAEJ,sBAAKtqB,MAAO,CAAC0Y,QAAQ,QAArB,UACA,kFACA,gCACI,uBACIjc,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,aACVmC,MAAO,CAAC8rB,YAAa,QACrBnuB,MAAO4sB,EACPzjB,SAAU,SAACxH,GAAD,OAAOmsB,EAAiB,YAAansB,EAAEiH,OAAO5I,UAPhE,SAUI,uBACIlB,KAAK,OACLiD,YAAY,4EACZ7B,UAAU,aACVmC,MAAO,CAAC8rB,YAAa,QACrBnuB,MAAO8sB,EACP3jB,SAAU,SAACxH,GAAD,OAAOmsB,EAAiB,UAAWnsB,EAAEiH,OAAO5I,UAE1D,wBAAQE,UAAU,eAAe8D,QAlFpC,WACzBmpB,GAAiB,SAAAS,GACb,IAAMC,EAAU,2BACTD,GADS,IAEZhB,UAAWA,GAAa,KACxBE,QAASA,GAAW,OAGxB,OADAY,EAAaG,GACNA,MA0EiB,4CACA,wBAAQ3tB,UAAU,eAAe8D,QAvEnD,WACVmpB,EAAiB,CACbvf,QAAS,GACTzF,OAAQ,GACR+b,QAAQ,GACRP,WAAY,KACZiJ,UAAW,KACXE,QAAS,OAEbD,EAAa,IACbE,EAAW,IACXpI,EAAqBH,IA4DO,iEAEJ,uBACA,8BACI,sBAAKniB,MAAO,CAACwG,QAAQ,QAArB,UACI,8BACI,wBACI3I,UAAU,yBACViJ,SAAU,SAACxH,GAAD,OAAOgsB,EAAkB,aAAchsB,EAAEiH,OAAO5I,QAF9D,SAIKwkB,EAAU3gB,KAAI,SAACqM,EAAKK,GAAN,OACX,wBAEIvQ,MAAOkQ,EAAIgH,cAFf,SAIKhH,EAAIyT,YAHApT,UAQrB,qBAAKlO,MAAO,CAACmoB,YAAY,OAAO9P,WAAW,OAA3C,mDACD,8BACQ,wBACIxa,UAAU,yBACViJ,SAAU,SAACxH,GAAD,OAAOgsB,EAAkB,UAAWhsB,EAAEiH,OAAO5I,QAF3D,SAKKgtB,EAAWnpB,KAAI,SAACuqB,EAAWrqB,GAAZ,OACZ,wBAEI/D,MAAOouB,EAFX,SAIKA,GAHIrqB,eAchC,uBACI,8BACK6J,EAAQ/J,KAAI,SAAC+J,EAAS7J,GAAV,OACT,wBAEI7D,UAAU,gBACV8D,QAAS,kBAAM2pB,EAAkB,UAAW/f,EAAQ1E,OACpD7G,MAAO,CACHgsB,UAAWnB,EAActf,QAAQnC,SAASmC,EAAQ1E,MAAQ,+FAAiG,GAC3JolB,WAAYpB,EAActf,QAAQnC,SAASmC,EAAQ1E,MAAQ,OAAS,UACpE2e,QAASqF,EAActf,QAAQnC,SAASmC,EAAQ1E,MAAQ,IAAM,IAPtE,SAUK0E,EAAQ1E,MATJnF,QAajB,uBACA,8BACKoE,EAAOtE,KAAI,SAACsE,EAAQpE,GAAT,OACR,wBAEI7D,UAAW,gBAAkBgqB,EAAmB/hB,EAAOpE,IACvDC,QAAS,kBAAM2pB,EAAkB,SAAUxlB,EAAOe,OAClD7G,MAAO,CACHgsB,UAAWnB,EAAc/kB,OAAOsD,SAAStD,EAAOe,MAAQ,+FAAiG,GACzJolB,WAAYpB,EAAc/kB,OAAOsD,SAAStD,EAAOe,MAAQ,OAAS,GAClE2e,QAASqF,EAAc/kB,OAAOsD,SAAStD,EAAOe,MAAQ,IAAM,IAPpE,SAUKf,EAAOe,MATHnF,cAgBrB2gB,EAAkB7gB,KAAI,SAAAwhB,GAAG,OACrB,qBAAKnlB,UAAU,qBAAf,SACI,cAAC,GAAD,CAAemlB,IAAKA,EAA0Bld,OAAQA,EACvCwb,WAAY0B,EAAI1B,WAAYa,UAAWa,EAAIb,WAD5Ba,EAAI1B,aADG0B,EAAIthB,oB,OC/UlE,SAAUwqB,KAElB,OACQ,qBAAKruB,UAAU,UAAf,SAEI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,OAAf,SACG,cAAC,IAAD,CAAMqC,GAAG,IAAIrC,UAAU,cAAvB,gEAEH,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMqC,GAAG,IAAIrC,UAAU,cAAvB,+FAEJ,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMqC,GAAG,IAAIrC,UAAU,cAAvB,qFCnBpB,SAASsuB,GAAT,GAA+B,IAAbhvB,EAAY,EAAZA,SAC7B,OACI,qCACI,cAAC,GAAD,IACA,sBAAKU,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACKV,UC+FNivB,OAhFf,WACE,MAAkC9tB,oBAAS,GAA3C,mBAEO5B,GAFP,UAEe0C,qBAAWpC,GAAnBN,MACD2vB,EAAc7uB,KAAKuG,MAAMzG,aAAa0G,QAAQ,SAE9CsoB,EAAW5vB,GAAQ2vB,EAGzB,OACI,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACGF,EAAW,cAAC,IAAD,CAAUpsB,GAAE,sBAAiBosB,EAAShW,mBAAwB,cAAC,IAAD,CAAUpW,GAAG,aAEzF,cAAC,IAAD,CAAOssB,KAAK,SAAZ,SACGF,EAAW,cAAC,IAAD,CAAUpsB,GAAE,sBAAiBosB,EAAShW,mBAAwB,cAAC,EAAD,MAE5E,cAAC,IAAD,CAAOkW,KAAK,YAAZ,SACGF,EAAW,cAAC,IAAD,CAAUpsB,GAAG,MAAS,cAAC,GAAD,MAEpC,cAAC,IAAD,CAAOssB,KAAK,qBAAZ,SACGF,EAAW,cAACH,GAAD,UAAQ,cAAC,GAAD,CAASG,SAAUA,MAAwB,cAAC,EAAD,MAEjE,cAAC,IAAD,CAAOE,KAAK,wBAAZ,SACGF,EAAW,cAACH,GAAD,UAAQ,cAAC,GAAD,MAA0B,cAAC,EAAD,MAEhD,cAAC,IAAD,CAAOK,KAAK,eAAZ,SACGF,EAAW,cAAC,GAAD,IAAkB,cAAC,EAAD,MAEhC,cAAC,IAAD,CAAOE,KAAK,WAAZ,SACGF,EAAW,cAAC,GAAD,IAAc,cAAC,EAAD,MAE5B,cAAC,IAAD,CAAOE,KAAK,sBAAZ,SACGF,EAAW,cAAC,GAAD,IAAyB,cAAC,EAAD,MAEvC,cAAC,IAAD,CAAOE,KAAK,kBAAZ,SACGF,EAAW,cAAC,GAAD,IAAqB,cAAC,EAAD,MAEnC,cAAC,IAAD,CAAOE,KAAK,aAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,qBAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,wBAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,cAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,kBAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,kBAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,sBAAZ,SACGF,EAAW,cAAC,GAAD,IAAiB,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOE,KAAK,WAAZ,SACGF,EAAW,cAAC,EAAD,IAAc,cAAC,EAAD,MAE5B,cAAC,IAAD,CAAOE,KAAK,iBAAZ,SACGF,EAAW,cAAC,GAAD,IAAoB,cAAC,EAAD,MAElC,cAAC,IAAD,CAAOE,KAAK,gBAAZ,SACGF,EAAW,cAAC,GAAD,IAAmB,cAAC,EAAD,MAEjC,cAAC,IAAD,CAAOE,KAAK,cAAZ,SACGF,EAAY,cAACH,GAAD,UAAQ,cAAC,GAAD,MAA0B,cAAC,EAAD,MAEjD,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAAC,EAAD,Y,OCvFZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJ1I,SAAS2I,eAAe,W","file":"static/js/main.ba36b4fc.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_START':\r\n      return {\r\n        user: null,\r\n        posts: null,\r\n        isFetching: true,\r\n        error: false,\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        user: action.payload,\r\n        posts: null,\r\n        isFetching: false,\r\n        error: false,\r\n      }\r\n    case 'LOGIN_FAIL':\r\n      return {\r\n        user: null,\r\n        posts: null,\r\n        isFetching: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AuthReducer","import { createContext, useReducer } from \"react\"\r\n\r\nimport AuthReducer from './AuthReducer'\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n  isFetching: false,\r\n  error: false,\r\n}\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE)\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE)\r\n\r\n  if(state.user !== null){\r\n    localStorage.setItem('user', JSON.stringify(state.user))\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user:state.user,\r\n        isFetching:state.isFetching,\r\n        error: state.error,\r\n        dispatch\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import './Error.css'\r\n\r\nexport default function Error() {\r\n  return (\r\n      <div className='error'>\r\n        <h1 className='errorTitle'>ERROR 404!</h1>\r\n      </div>\r\n  )\r\n}\r\n","import axios from \"axios\"\r\n\r\nconst loginCall = async (userCredential, dispatch) => {\r\n  dispatch({type: \"LOGIN_START\"})\r\n  try {\r\n    const res = await axios.post(\"api/login\", userCredential)\r\n    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data})\r\n  } catch (error) {\r\n    dispatch({type: \"LOGIN_FAIL\", payload: error})\r\n  }\r\n}\r\nexport default loginCall","import {useContext, useRef, useEffect,useState} from 'react';\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport  loginCall  from '../../apiCalls';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport './Login.css'\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [serverError, setServerError] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        axios.get('/api/user')\r\n            .then(response => {\r\n                if (!response) {\r\n                    throw new Error('Сервер недоступен');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setServerError(true);\r\n                setErrorMessage('Ошибка: ' + error.message);\r\n            });\r\n    }, []);\r\n\r\n\r\n  const email = useRef()\r\n  const password = useRef()\r\n\r\n  const {isFetching, error, dispatch } = useContext(AuthContext)\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    loginCall({email:email.current.value.toUpperCase(), password:password.current.value}, dispatch)\r\n  }\r\n\r\n  return (\r\n      <div className=\"login\">\r\n          {!errorMessage && error &&\r\n              <div className='error'>\r\n                  Неправильный логин или пароль\r\n              </div>}\r\n\r\n          {serverError &&\r\n              <div className='error'>\r\n                  Сервер недоступен\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginCenter\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input \r\n              placeholder=\"Email\"\r\n              className=\"loginInput\" \r\n              type='emailLogin'\r\n              ref={email} \r\n              required\r\n            />\r\n            <input \r\n              placeholder=\"Password\" \r\n              type='password' \r\n              className=\"loginInput\" \r\n              ref={password} \r\n              required\r\n              minLength='6'\r\n            />\r\n            <button  className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n\r\n              {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Войти'}\r\n\r\n            </button>\r\n\r\n            {/* <span className=\"loginForgot\">Забыли пароль?</span> */}\r\n            <Link to='/register' style={{width:'167%'}}>\r\n              <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n                {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Создать новый аккаунт'}\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './InfoPost.css'\n\nexport default function InfoPost({post}) {\n\n\n  return (\n      <tr className='info'>\n          <td className='infopostdate'>{post.workdate}</td>\n          <td className='infotable'>{post.workstart}</td>\n          <td className='infotable'>{post.workend}</td>\n          <td className='infotable'>{post.worklong}</td>\n          <td className='infotable'>{post.healthstart === '0'? 'Болен' : 'Здоров'}<br/><br/>{post.healthend === '1' || post.healthend === '-' ? 'Здоров' : post.healthend === '0' ? 'Болен' : ''}</td>\n          <td className='infoComment'>{post.commentstart}<br/><br/>{post.commentend}</td>\n      </tr>\n\n\n\n  )\n}\n\n\n","import './Pagination.css'\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, paginate, currentPage}) {\r\n  const pageNumbers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { pageNumbers.length > 1 \r\n        ? <div className=\"pagination\">\r\n            {\r\n              pageNumbers.map((number, id) => (\r\n                <div key={id} className={currentPage === number ? 'pageItemNow' : `pageItem`} onClick={() => paginate(number)}>\r\n                  {number}\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n      : <></>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import './VacationPost.css'\n\nexport default function VacationPost({post}) {\n\n\n  return (\n      <tr>\n\n        <td className=\"vacationpost\">{post.workdate}</td>\n        <td className=\"vacationpost\">{post.worked}</td>\n        <td className=\"vacationpost\">{post.work.replace(/(^|\\s)0/g, \"$1\")}</td>\n        <td className=\"vacationpost\">{post.typework_id === '5' ? 'Отпуск' :post.typework_id === '3' ? 'Больничный' :post.typework_id === '7' ? 'Другая причина':post.typework_id === '6' ? 'Отгул':''}</td>\n        <td className=\"vacationpostComment\">{post.commentstart}</td>\n\n      </tr>\n  )\n}\n\n\n\n","import { Close } from '@material-ui/icons'\r\nimport './Modal.css'\r\n\r\n function Modal({active, setActive, children}) {\r\n  return (\r\n    <div className={active ? 'modal active' : 'modal'} >\r\n      <div className={active ? 'modalContent active' : 'modalContent'} onClick={(e) => e.stopPropagation()}>\r\n        <div className='closeModal'><span onClick={() => setActive(false)}><Close/></span></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Modal","import axios from 'axios'\r\nimport { useRef } from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport InfoPost from '../../InfoPost/InfoPost'\r\nimport Pagination from '../../Pagination/Pagination'\r\nimport VacationPost from '../../VacationPost/VacationPost'\r\nimport './HistoryInfo.css'\r\nimport Modal from '../../Templates/Modal/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function HistoryInfo() {\r\n    const [posts, setPosts] = useState([])\r\n    const [vacationPosts, setVacationPosts] = useState([])\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n    const lastPostIndexVacations = currentPage * postsPerPage\r\n    const firstPostIndexVacations = lastPostIndexVacations - postsPerPage\r\n    const currentlyVacations = vacationPosts.slice(firstPostIndexVacations, lastPostIndexVacations)\r\n\r\n\r\n\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [newPosts, setNewPosts] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [modalError, setModalError] = useState('')\r\n    const username=useParams()\r\n\r\n    let localUser = !!username ? {_id:username.username,email:\"\"} : JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n\r\n    const [isJob, setIsJob] = useState(true)\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalName, setModalName] = useState(null)\r\n    const modalComment = useRef()\r\n    const vacationStart = useRef()\r\n    const vacationEnd = useRef()\r\n\r\n    // получение всех постов работы от послелнего к первому\r\n\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n\r\n        fetchUserpost()\r\n    }, [username])\r\n\r\n    const fetchUserpost = async () => {\r\n        const res = await axios.get('/api/post?type=1&id='+localUser._id)\r\n        setPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.workstart) - new Date(p1.workstart)\r\n        }))\r\n        setIsFetching(false)\r\n    }\r\n\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    // фильтер постов по дате\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\" ) {\r\n            setError('Введите дату')\r\n        } else{\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')}\r\n            if (end< start) {\r\n                setError('Конечная дата меньше начальной')}\r\n\r\n            else{\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                    userId: localUser._id,\r\n                    typework:isJob\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/filter',filter)\r\n                    setVacationPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n                    setPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }}\r\n\r\n        /*      let filterPosts = isJob\r\n              ?  posts.filter(post => post.workdate.split('T')[0] >= start)\r\n              : vacationPosts.filter(post => post.start.split('T')[0] >= start)\r\n            if(end){\r\n              filterPosts = isJob\r\n                ? filterPosts.filter(post => post.workdate.split('T')[0] <= end)\r\n                : filterPosts.filter(post => post.end.split('T')[0] <= end)\r\n            }\r\n            setNewPosts(filterPosts)*/\r\n\r\n    }\r\n\r\n\r\n    // сброс фильтра\r\n    const handleClickCancel = async () =>{\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    // получение всех постов об отпуске/больничном от послелнего к первому\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n\r\n        fetchUservacation()\r\n    }, [username])\r\n\r\n    const fetchUservacation = async () => {\r\n        const res = await axios.get('/api/vacation?id='+localUser._id)\r\n        setVacationPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.start) - new Date(p1.start)\r\n        }))\r\n        setIsFetching(false)\r\n    }\r\n    // добавление больничного\r\n    const handleClickAdd = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const currentDay = new Date()\r\n\r\n        if(vacationStart.current.value === '' || vacationEnd.current.value === '' || modalName === null || modalComment.current.value === ''){\r\n            setModalError('Вcе поля должны быть заполнены')\r\n            return\r\n        }\r\n\r\n        if(new Date(vacationStart.current.value) > new Date(vacationEnd.current.value) && vacationEnd.current.value !== ''){\r\n            setModalError('Вторая дата меньше первой')\r\n            return\r\n        }\r\n\r\n\r\n        const vacation = {\r\n            userId: localUser._id,\r\n            status:modalName,\r\n            comment: modalComment.current.value,\r\n            start: new Date(vacationStart.current.value),\r\n            end: new Date(vacationEnd.current.value)\r\n        }\r\n\r\n        /*    const newPost = {\r\n              userId: localUser._id,\r\n              healthEnd: 1,\r\n              workEnd: new Date(Date.now()),\r\n              workTime: new Date(Date.now()) - new Date(posts[0].workStart)\r\n            }*/\r\n\r\n        const isTrue = new Date(vacationStart.current.value) <= currentDay && currentDay.getDate() <= vacation.end.getDate()+1\r\n\r\n        try {\r\n            await axios.post('/api/vacation/',vacation)\r\n            /*      if (isTrue) {\r\n                   /!* await axios.put(\"/api/post/\"+posts[0]._id, newPost)*!/\r\n                    await axios.put('/api/user/'+localUser._id, {status:3, userId: username})\r\n                    if (localUser._id === username) {\r\n                      localStorage.setItem('user', JSON.stringify({...localUser, status:3}))\r\n                    }\r\n                  }*/\r\n            window.location.reload()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // переход на страницу с больничным и обратно\r\n    const handleWorkVacation = () => {\r\n        if(isJob){\r\n            fetchUservacation()}else {\r\n            fetchUserpost()\r\n        }\r\n        setIsJob(!isJob)\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n    const handleName = e => {\r\n        setModalName(e.target.value)\r\n    }\r\n    return (\r\n        <div className='historyInfo'>\r\n            <div className='historyInfoTop'>\r\n                <span className='historyInfoTitle'>История</span>\r\n                <span className='workVacation' onClick={handleWorkVacation}>\r\n          {isJob ? <button className=\"filterButton\" style={{width:'155px'}}>Отпуск/Больничный</button> : <button className=\"filterButton\">Работа</button> }\r\n        </span>\r\n\r\n                {!isJob && (localUser || username === localUser._id)\r\n\r\n                && <div className='addVacation' onClick={() => setModalActive(true)}><span>+</span></div>}\r\n            </div>\r\n            <hr/>\r\n            {error && <div className='errorHistoryInfo'>{error}</div>}\r\n            <div className='historyFilter'>\r\n                <input\r\n                    type='date'\r\n                    placeholder=\"Начало работы\"\r\n                    className=\"ModalInput\"\r\n                    ref={historyStartWork}\r\n                    style={{'marginRight': '10px'}}\r\n                />\r\n                —  <input\r\n                type='date'\r\n                placeholder=\"Конец работы\"\r\n                className=\"ModalInput\"\r\n                ref={historyEndWork}\r\n                style={{'marginRight': '10px'}}\r\n            />\r\n                <button className=\"filterButton\" onClick={handleClick}>Ок</button>\r\n                <button className=\"filterButton\" onClick={handleClickCancel}>Сбросить</button>\r\n            </div>\r\n            <hr/>\r\n            <br/>\r\n            {isJob\r\n                ?\r\n                <tr>\r\n                    <td className=\"historyinfodate\">Дата</td>\r\n                    <td className=\"historyinfopost\">Время начала</td>\r\n                    <td className=\"historyinfopost\">Время окончания</td>\r\n                    <td className=\"historyinfopost\">Длительность</td>\r\n                    <td className=\"historyinfopost\">Состояние здоровья</td>\r\n                    <td className=\"historyinfocomment\">Комментарий</td>\r\n                </tr>\r\n                :\r\n                <tr>\r\n                    <td className=\"historyinfopostdate\">Начало</td>\r\n                    <td className=\"historyinfopost\">Конец</td>\r\n                    <td className=\"historyinfopost\">Длительность</td>\r\n                    <td className=\"historyinfopost\">Причина</td>\r\n                    <td className=\"historycomment\">Комментарий</td>\r\n                </tr>\r\n            }\r\n\r\n            {isJob\r\n                ? isFetching\r\n                    ? <div className='isFatching'>Загрузка...</div>\r\n                    : isFilter\r\n                        ? newPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n                        : currentlyPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n                : isFetching\r\n                    ? <div className='isFatching'>Загрузка...</div>\r\n                    : isFilter\r\n                        ? newPosts.map((post, id) => <VacationPost key={id} post={post} username={username}/>)\r\n                        : currentlyVacations.map((post, id) => <VacationPost key={id} post={post}/>)\r\n            }\r\n\r\n            {isJob ?\r\n                <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage}/>:\r\n                <Pagination postsPerPage={postsPerPage} totalPosts={vacationPosts.length} paginate={paginate} currentPage={currentPage}/>\r\n            }\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                {modalError && <div className='errorHistoryInfo'>{modalError}</div>}\r\n                <form className=\"modalLoginBox\" onSubmit={handleClickAdd}>\r\n                    <div style={{display:'flex', justifyContent:'space-between', fontSize: '20px', width:'60%', marginLeft:'20%'}}>\r\n                        <label htmlFor='sickLeave'>\r\n                            <input\r\n                                type='radio'\r\n                                value={3}\r\n                                id='sickLeave'\r\n                                name='sickLeave'\r\n                                onChange={handleName}\r\n                                checked={modalName === '3'}\r\n                            />Больничный</label>\r\n                        <label htmlFor='vacation'>\r\n                            <input\r\n                                type='radio'\r\n                                value={5}\r\n                                id='vacation'\r\n                                name='vacation'\r\n                                onChange={handleName}\r\n                                checked={modalName === '5'}\r\n                            />Отпуск</label>\r\n                        <label htmlFor='time'>\r\n                            <input\r\n                                type='radio'\r\n                                value={6}\r\n                                id='other'\r\n                                name='time'\r\n                                onChange={handleName}\r\n                                checked={modalName === '6'}\r\n                            />Отгул</label>\r\n                        <label htmlFor='anotherReason'>\r\n                            <input\r\n                                type='radio'\r\n                                value={7}\r\n                                id='anotherReason'\r\n                                name='anotherReason'\r\n                                onChange={handleName}\r\n                                checked={modalName === '7'}\r\n                            />Другая причина</label>\r\n\r\n                    </div>\r\n                    <div className='inputVacanciesDiv'>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Начало работы\"\r\n                            className=\"ModalInputInfoVacancies\"\r\n                            ref={vacationStart}\r\n                            style={{'marginRight': '10px'}}\r\n                        />\r\n                        —   <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInputInfoVacancies\"\r\n                        ref={vacationEnd}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                    </div>\r\n                    <input\r\n                        placeholder=\"Комментарий\"\r\n                        className=\"ModalInputInfoVacanciesComment\"\r\n                        ref={modalComment}\r\n                    />\r\n\r\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n                        Изменить\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport './Skills.css'\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Skills = ({ modalActiveSkills, setModalActiveSkills}) => {\r\n\r\n    const skill = useRef()\r\n    const username = useParams()\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [searchTermSkills, setSearchTermSkills] = useState('');\r\n    const [skillsAll, setAllSkills] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [skillId, setSkillId] = useState([])\r\n    const [userSkills, setUserSkills] = useState([])\r\n    const [filteredSkills, setFilteredSkills] = useState([]);\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [selectedNumber2, setSelectedNumber2] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const getSkills = async () => {\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            const userId=res.data.id\r\n\r\n\r\n            const getAllSkills = await axios.get('/api/Skills/')\r\n\r\n            if(getAllSkills.data[0]['get_all_skills_json']===null){\r\n                setAllSkills([])\r\n            }else {\r\n                setAllSkills(getAllSkills.data[0]['get_all_skills_json'])\r\n            }\r\n\r\n            const getUserSkills = await axios.get('/api/Skills/'+userId)\r\n\r\n            if(getUserSkills.data[0]['get_user_skills_json']===null){\r\n                setUserSkills([])\r\n            }else {\r\n                setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n\r\n            }\r\n\r\n        }\r\n        getSkills()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleClick = (number1) => {\r\n            setSelectedNumber(number1)\r\n        console.log(`You clicked number ${number1}`);\r\n    };\r\n    const handleClick2 = (number2) => {\r\n        setSelectedNumber2(number2)\r\n        console.log(`You clicked number ${number2}`);\r\n    };\r\n\r\n\r\n    const handleInputChangeSkills = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermSkills(termCities);\r\n        const filtered = skillsAll.filter(skill =>\r\n            skill.name && skill.name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        if (termCities === '') {\r\n            setFilteredSkills([])\r\n        } else {\r\n            setFilteredSkills(filtered);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSkillsClick = (id,name) => {\r\n        setFilteredSkills([])\r\n        setSkillId(id)\r\n        setSearchTermSkills(name)\r\n    }\r\n\r\n    const ButtonAddSkills = async () => {\r\n        setSelectedNumber(null)\r\n\r\n        if (skillId.length === 0) {\r\n            setError('Выберите умение')\r\n        } else if (selectedNumber == null) {\r\n            setError('Укажите уровень от 1 до 5')\r\n        } else if (skillId.length === 0 && selectedNumber > 0) {\r\n            setError('Выберите умение')\r\n        } else {\r\n\r\n            const addSkills = {\r\n                user_id: username.username,\r\n                skill_id: skillId,\r\n                self_grade: selectedNumber\r\n            }\r\n\r\n            if(skillId.length>0 || selectedNumber !== null || skillId.length === 0 && selectedNumber > 0 )\r\n            {\r\n                setError('')\r\n            }\r\n            const getSkills = await axios.post('/api/Skills/', addSkills)\r\n\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            const userId = res.data.id\r\n            const getUserSkills = await axios.get('/api/Skills/' + userId)\r\n\r\n            if (getUserSkills.data[0]['get_user_skills_json'] === null) {\r\n                setUserSkills([])\r\n            } else {\r\n                setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n            }\r\n        }\r\n    }\r\n\r\n    const SkillDelete= async (e) => {\r\n        const skill_id=e.target.value\r\n        const not_active_skill = {\r\n            is_active:false,\r\n            skill_id:skill_id\r\n        }\r\n        const DeleteSkills = await axios.post('/api/Skills/',not_active_skill)\r\n        const res = await axios.get('/api/user/' + username.username)\r\n        const userId = res.data.id\r\n        const getUserSkills = await axios.get('/api/Skills/' + userId)\r\n\r\n        if (getUserSkills.data[0]['get_user_skills_json'] === null) {\r\n            setUserSkills([])\r\n        } else {\r\n            setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n        }\r\n    }\r\n\r\n    const changeGrade = async (event, id) => {\r\n        const { name, value } = event.target;\r\n        const changeGrade = {\r\n            user_id: username.username,\r\n            skill_id: id\r\n        }\r\n        if (name === 'gradeSelf' && value !== undefined) {\r\n            changeGrade.newGradeSelf = value;\r\n        } else if (name === 'gradeHead' && value !== undefined) {\r\n            changeGrade.newGradeHead = value;\r\n        }\r\n        await axios.post('/api/Skills/', changeGrade);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Modal active={modalActiveSkills} setActive={setModalActiveSkills}>\r\n                <h1>Навыки:</h1>\r\n                <div className='error'>{error}</div>\r\n                <br/>\r\n\r\n                <div className='modalError'>\r\n\r\n                </div>\r\n\r\n                <hr/>\r\n                <br/>\r\n                <div className='flex'>\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Выберите умение:</label>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Начните вводить умение\"\r\n                                ref={skill}\r\n                                className=\"registerInput\"\r\n                                value={searchTermSkills}\r\n                                onChange={handleInputChangeSkills}\r\n                            />\r\n\r\n                            <div>\r\n                                {filteredSkills.length > 0 && (\r\n                                    <div className='divSelectRegister'>\r\n                                        {filteredSkills.map((skill, id) => (\r\n                                            <div className='selectNameDiv' key={id} value={id} onClick={() => handleSkillsClick(skill.id,skill.name)}>\r\n                                                {skill.name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{width: '50px'}}></div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Оценка сотрудника:</label>\r\n                        </div>\r\n                        <div>\r\n                            <div className='MainContainer'>\r\n                                {[1, 2, 3, 4, 5].map((number1) => (\r\n                                    <div className={`WrapperContainer ${selectedNumber === number1 ? 'selected' : ''}`}\r\n                                        key={number1}\r\n                                        onClick={() => handleClick(number1)}\r\n                                    >\r\n                                        {number1}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n{/*                    <div style={{width: '50px'}}></div>\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Оценка руководителя:</label>\r\n                        </div>\r\n                        <div>\r\n                            <div className='MainContainer'>\r\n                                {[1, 2, 3, 4, 5].map((number2) => (\r\n                                    <div className={`WrapperContainer ${selectedNumber2 === number2 ? 'selected' : ''}`}\r\n                                         key={number2}\r\n                                         onClick={() => handleClick2(number2)}\r\n                                    >\r\n                                        {number2}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>*/}\r\n\r\n                </div>\r\n                <br/>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ButtonAddSkills}>\r\n                    Добавить умение\r\n                </button>\r\n                <br/>\r\n                <br/>\r\n                <div className='divreserve'>\r\n                    <table className=\"skills-table\">\r\n                        <thead>\r\n                        <tr className=\"skills-header\">\r\n                            <th>Навык</th>\r\n                            <th>Оценка сотрудника</th>\r\n                            <th>Оценка руководителя</th>\r\n                            <th></th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {userSkills.map((array, id) => (\r\n                            <tr className=\"skill-item\" key={id}>\r\n                                <td>\r\n                                    {array.name}\r\n                                </td>\r\n                                <td>\r\n\r\n                                    <select\r\n                                        name='gradeSelf'\r\n                                        defaultValue={array.self_grade}\r\n                                        onChange={(event) => changeGrade(event, array.id)}\r\n                                    >\r\n                                        {[1, 2, 3, 4, 5].map(number => (\r\n                                            <option key={number} value={number}>{number}</option>\r\n                                        ))}\r\n                                    </select>\r\n                               </td>\r\n                                <td>\r\n                                    <select\r\n                                    name='gradeHead'\r\n                                    defaultValue={array.head_grade}\r\n                                    disabled={!localUser.isAdmin}\r\n                                    onChange={(event) => changeGrade(event, array.id)}\r\n                                >\r\n                                    {array.head_grade === null && !localUser.isAdmin ? <option>Нет оценки</option> : ''}\r\n                                    {array.head_grade === null ? <option>Нет оценки</option> : ''}\r\n                                    {[1, 2, 3, 4, 5].map(number => (\r\n                                        <option key={number} value={number}>{number}</option>\r\n                                    ))}\r\n                                </select>\r\n                                </td>\r\n                                <td><button value={array.id} className='SkillButton' onClick={SkillDelete}>Удалить</button></td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <br/><br/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;","import React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst ModalVacanciesItem =({allDateUser})=> {\r\n\r\n\r\n    useEffect(() => {\r\n        if (allDateUser) {\r\n            setInputValueVacanciesName(allDateUser.vacancies_name)\r\n            setInputValueGrade(allDateUser.grade)\r\n            setSelectDep(allDateUser.vacancies_department_id)\r\n            setInputValueDescription(allDateUser.description)\r\n            setInputValueStatuses(allDateUser.vacancies_status_id)\r\n            setSelectCompany(allDateUser.company_id)\r\n            setSelectItc(allDateUser.vacancy_code)\r\n            setProjectItem(allDateUser.project_id)\r\n            setVacanciesId(allDateUser.vacancy_id)\r\n            setOld_user(allDateUser.id)\r\n\r\n\r\n            if(allDateUser.planned_release_date!==null)\r\n            {\r\n                const date = moment(allDateUser.planned_release_date).format('YYYY-MM-DD')\r\n                setPlannedReleaseDate(date)\r\n            }\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n    }, [allDateUser]);\r\n\r\n\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [inputValueVacanciesName, setInputValueVacanciesName] = useState('')\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(statuses.data)\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n    const [deps, setDeps] = useState([])\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValueVacanciesName(e.target.value)\r\n    }\r\n\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n\r\n    }\r\n\r\n    const ChangeDataButton = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValueVacanciesName,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: (userId.length===0 ? old_user : userId),\r\n            search: userId,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:DateReleaseRef.current.value.length===0 ? null :DateReleaseRef.current.value\r\n        }\r\n\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        console.log('old=',userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className='MessageItemVacancies'>\r\n                    <span >{message}</span>\r\n                </div>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValueVacanciesName}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Подразделение:</span><br/>\r\n                    <select ref={departRef}\r\n                            value={selectDep}\r\n                            onChange={selectDeps}\r\n                            className='InputVacanciesItemDeps'>\r\n                        {deps.map((dep, name) => <option key={name}\r\n                                                         value={dep.id}>{dep.department_name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Статус:</span><br/>\r\n                    <select ref={statusRef}\r\n                            value={inputValueStatuses}\r\n                            onChange={selectValue}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {status.map((status, name) => <option key={name}\r\n                                                              value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Грейд:</span><br/>\r\n                    <input type='text'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                           placeholder='Грейд'\r\n                           className='InputVacanciesItem'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Компания:</span><br/>\r\n                    <select ref={companyRef}\r\n                            value={selectCompany}\r\n                            onChange={companySelect}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div>\r\n\r\n                        <span>Имя сотрудника:</span><br/>\r\n                        <div className='inputDiv'>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Имя сотрудника'\r\n                                value={searchTerm || (allDateUser && allDateUser.user_name)}\r\n                                onChange={handleInputChange}\r\n                                className='InputVacanciesItem'\r\n                            />\r\n\r\n                            {filteredUsers.length > 0 && (\r\n                                <div className=\"userListContainer\">\r\n                                    {filteredUsers.map((user, index) => (\r\n                                        <div className='selectNameDiv' key={index} value={user.id}\r\n                                             onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                            {user.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <span>Дата выхода:</span><br/>\r\n                            <input type='date'\r\n                                   ref={DateReleaseRef}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                                   value={plannedReleaseDate}\r\n                                   onChange={DataCurrent}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>ИТС:</span><br/>\r\n                            <input type='text'\r\n                                   ref={ITCRef}\r\n                                   value={selectItc}\r\n                                   onChange={SelectITC}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>Проект:</span><br/>\r\n                            <input type='text'\r\n                                   ref={projectRef}\r\n                                   value={projectItem}\r\n                                   onChange={Project}\r\n                                   placeholder='Проект(Нет проекта=0)'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeDataButton}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ModalVacanciesItem;","import { Close } from '@material-ui/icons'\r\nimport './ModalVacancies.css'\r\n\r\nfunction ModalVacancies({active, setActive, children}) {\r\n  return (\r\n    <div className={active ? 'modal1 active' : 'modal1'}>\r\n      <div className={active ? 'modalContent1 active' : 'modalContent1'} onClick={(e) => e.stopPropagation()}>\r\n        <div className='closeModal1'><span onClick={() => setActive(false)}><Close/></span></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ModalVacancies","import axios from 'axios'\nimport React, {useEffect, useRef, useState} from 'react'\nimport {Create, Delete, Message} from '@material-ui/icons'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Modal from '../Templates/Modal/Modal'\nimport './ProfileInfo.css'\nimport {Link, useParams} from \"react-router-dom\";\nimport Skills from '../ProfileInfo/Skills/Skills'\n\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\n\n\nexport default function ProfileInfo() {\n    const [timeZone, setTimeZone] = useState([])\n    const [selectedOption, setSelectedOption] = useState({});\n    const [error, setError] = useState('')\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n    const [inputValues, setInputValues] = useState('');\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\n    const [selectedValue, setSelectedValue] = useState('');\n\n\n\n    const [check, setCheck] = useState();\n    const [checkedItems, setCheckedItems] = useState({});\n    const [votearray, setVotearray] = useState([])\n    const [isAdmin, setIsadmin] = useState([])\n    const [userVote, setUserVote] = useState([])\n\n\n    const [depsName, setDepsName] = useState([])\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n    const [nameValue, setNameValue] = useState(\"\");\n\n\n    const [email, setEmail] = useState([])\n    const [emailChange, setEmailChange] = useState([])\n\n\n    const [phone, setPhone] = useState([])\n    const [phoneChange, setPhoneChange] = useState([])\n\n\n    const [additional_contact, setAdditional_Contact] = useState([])\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\n\n\n    const [distribution_group, setDistribution_Group] = useState([])\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\n\n\n    const [activity_profile, setActivity_Profile] = useState([])\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\n\n    const [CityPlace, setCityPlace] = useState([])\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\n\n\n    const [surnameValue, setSurnameValue] = useState([])\n    const [isFetching, setIsFetching] = useState(false)\n    const [modalActive, setModalActive] = useState(false)\n    const [modalActivePass, setModalActivePass] = useState(false)\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n    const [modalVote, setModalVote] = useState(false)\n    const [vote, setVote] = useState([])\n    const [modalActiveResetPass, setModalActiveResetPass] = useState(false)\n    const [modalActiveReset, setModalActiveReset] = useState(false)\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n\n    const [options, setOptions] = useState([]);\n    const [er, setErr] = useState('')\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n    const modalDep = useRef()\n    const modalOldPass = useRef()\n    const modalNewPass = useRef()\n    const modalNewPassAgain = useRef()\n    const phoneNumber = useRef()\n    const additionalContact = useRef()\n    const distributionGroup = useRef()\n    const activityProfile = useRef()\n    const modalCity = useRef()\n    const modalCityPlace = useRef()\n\n\n    const [citiesId, setCitiesId] = useState([])\n    const [searchTermCities, setSearchTermCities] = useState('');\n    const [filteredCities, setFilteredCities] = useState([]);\n    const [cities, setCities] = useState([])\n    const [hasImage, setHasImage] = useState(false);\n\n\n    const handleUserClickCities = (city_name, id) => {\n        setCitiesId(id)\n        setSearchTermCities(city_name)\n        setFilteredCities([])\n    }\n\n\n    const handleInputChangeCities = (e) => {\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n\n        if (termCities === '') {\n            setCitiesId('');\n            setFilteredCities([]);\n            setCityName('');\n            return; // Добавьте это, чтобы избежать выполнения нижестоящего кода при пустом termCities\n        }\n\n        const filtered = cities.filter(city =>\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        setFilteredCities(filtered);\n    }\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n        const hasImageStatus = Object.keys(images).some(key =>\n            user.nomination_status === key || user.nomination_status === parseInt(key)\n        );\n        setHasImage(hasImageStatus);\n\n\n        const getNameAndSurname = () => {\n            if (user.user_name) {\n                const [name, surname] = user.user_name.split(\" \");\n                setSurnameValue(surname || \"\");\n                setNameValue(name);\n            }\n        }\n\n        const getDeps = async () => {\n\n                const res = await axios.get('/api/department_tree_to_json/');\n                const data = res.data[0]['department_tree_to_json'];\n                const extractedOptions = extractOptions(data);\n                setOptions(extractedOptions);\n                setSelectedValue(user.department_id);\n\n        }\n        const extractOptions = (node) => {\n            let optionsList = [{ id: node.id, name: node.Name }];\n            if (node.Subclasses && node.Subclasses.length > 0) {\n                node.Subclasses.forEach(subclass => {\n                    optionsList = optionsList.concat(extractOptions(subclass));\n                });\n            }\n            return optionsList;\n\n        };\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsadmin(res.data.isadmin)\n            setIsFetching(false)\n\n            const user = await axios.get('/api/user/')\n            const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\n            const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\n            setUserVote(mass)\n\n            const city = await axios.get('/api/Cities/')\n            setCities(city.data)\n        }\n        // Номинации\n        const fetchVote = async () => {\n            const res = await axios.get('/api/vote/')\n            setVote(res.data)\n        }\n        if (user && user.email && email) {\n            setEmail(user.email);\n        }\n        if (user && user.phone_number && phone) {\n            setPhone(user.phone_number);\n        }\n\n        if (user && user.additional_contact && additional_contact) {\n            setAdditional_Contact(user.additional_contact);\n        }\n\n        if (user && user.distribution_group && distribution_group) {\n            setDistribution_Group(user.distribution_group);\n        }\n        if (user && user.activity_profile && activity_profile) {\n            setActivity_Profile(user.activity_profile);\n        }\n        if (user && user.place_of_residence && CityPlace) {\n            setCityPlace(user.place_of_residence);\n        }\n\n        getNameAndSurname();\n        fetchVote()\n        fetchUser()\n        getDeps()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n    ])\n\n    const handleEmailChange = (e) => {\n\n        if (e.target.value) {\n            setEmail('')\n            setEmailChange(e.target.value)\n        }\n        if (e.target.value === '') {\n            setEmail('')\n            setEmailChange('')\n        }\n\n    }\n    const formatPhoneNumber = (value) => {\n        // Убираем все символы, кроме цифр\n        let cleaned = value.replace(/\\D/g, '');\n        if (cleaned.startsWith('7')) {\n            cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\n        }\n        // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\n        cleaned = cleaned.slice(0, 10);\n        // Разделяем на части, добавляя дефисы\n        const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\n        if (match) {\n            return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\n        }\n        return '+7 ' + cleaned;\n    };\n    const handlePhoneChange = (e) => {\n        if (e.target.value) {\n            setPhone('')\n            setPhoneChange(e.target.value)\n        }\n        if (e.target.value === '') {\n            setPhone('')\n            setPhoneChange('')\n        }\n        const value = e.target.value;\n        if (value.length < 1) {\n            setPhoneChange('')\n        } else {\n            const formattedValue = formatPhoneNumber(value);\n            setPhoneChange(formattedValue);\n        }\n    }\n\n    const additional_Contact = (e) => {\n        if (e.target.value) {\n            setAdditional_Contact('')\n            setAdditional_Contact_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setAdditional_Contact('')\n            setAdditional_Contact_Change('')\n        }\n    }\n\n    const distribution_Group = (e) => {\n        if (e.target.value) {\n            setDistribution_Group('')\n            setDistribution_Group_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setDistribution_Group('')\n            setDistribution_Group_Change('')\n        }\n    }\n\n    const activity_Profile = (e) => {\n        if (e.target.value) {\n            setActivity_Profile('')\n            setActivity_Profile_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setActivity_Profile('')\n            setActivity_Profile_Change('')\n        }\n    }\n\n    const cityPlace = (e) => {\n        if (e.target.value) {\n            setCityPlace('')\n            setCityPlace_Change(e.target.value)\n        }\n        if (e.target.value === '') {\n            setCityPlace('')\n            setCityPlace_Change('')\n        }\n    }\n\n    const handleNameChange = (e) => {\n        setNameValue(e.target.value);\n    }\n\n    const handleSurnameChange = (e) => {\n        setSurnameValue(e.target.value)\n    }\n\n\n    // изменение данных пользователя\n    const handleClick = async (e) => {\n\n        const name = user.user_name\n        const part = name.split(' ')\n        e.preventDefault()\n        const newInfo = {\n            departmentId: modalDep.current.value || user.department_id,\n            email: (email ? email : emailChange.toUpperCase()),\n            username: nameValue + ' ' + surnameValue,\n            _id: user.id,\n            isAdmin: user.isadmin,\n            see_child: user.see_child,\n            status: user.status,\n            main_department: user.main_department,\n            phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\n            additional_contact: additionalContact.current.value,\n            distribution_group: distributionGroup.current.value,\n            activity_profile: activityProfile.current.value,\n            city_id: citiesId,\n            cityPlaceChange:modalCityPlace.current.value\n        }\n\n        if (localUse._id !== username.username) {\n            const newInfo2 = {\n                departmentId: modalDep.current.value || user.department_id,\n                email: (email ? email : emailChange.toUpperCase()),\n                username: nameValue + ' ' + surnameValue,\n                phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\n                additional_contact: additionalContact.current.value,\n                distribution_group: distributionGroup.current.value,\n                activity_profile: activityProfile.current.value,\n                city_id: citiesId,\n                _id: user.id,\n                cityPlaceChange:modalCityPlace.current.value\n            }\n\n            await axios.put('/api/user/', newInfo2)\n            window.location.reload()\n        } else {\n            await axios.put('/api/user/', newInfo)\n            delete newInfo.phone_number\n            delete newInfo.additional_contact\n            delete newInfo.distribution_group\n            delete newInfo.activity_profile\n            delete newInfo.city_id\n            delete newInfo.cityPlaceChange\n            localStorage.setItem('user', JSON.stringify({...newInfo}))\n            setModalActive(false)\n            window.location.reload()\n        }\n    }\n\n    // изменить пароль\n    const handleClickPassword = async (e) => {\n        e.preventDefault()\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\n            setErr('Новые пароли не совпадают')\n            return\n        }\n        const passwords = {\n            userId: localUse._id,\n            password: localUse.password,\n            oldPassword: modalOldPass.current.value,\n            newPassword: modalNewPass.current.value\n        }\n        try {\n            await axios.put('/api/newPassword/', passwords)\n            setModalActivePass(false)\n            /*      localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n        } catch (er) {\n            setErr('Старые пароли не совпадают')\n        }\n    }\n\n    // сбросить пароль\n    const handleResetPass = async (e) => {\n        e.preventDefault()\n\n        const resetPassword = {\n            userId: username.username,\n            newPassword: 'qwerty123'\n        }\n\n        try {\n            await axios.put('/api/resetPassword/', resetPassword)\n            setModalActiveResetPass(false)\n        } catch (error) {\n        }\n    }\n\n    const status = async () => {\n        if (user.status === 1) {\n            const status = {\n                status: 2,\n                typework_id: 1,\n                userId: user.id,\n                healthEnd: '-',\n                commentEnd: '-',\n                workEnd: new Date(Date.now())\n            }\n            await axios.put(\"/api/post/\", status)\n        } else {\n            alert(\"Пользователь не в работе\")\n        }\n    }\n\n    // удалить пользователя\n    const handleDelete = async (e) => {\n        e.preventDefault()\n        setIsFetching(true)\n\n        const newPost = {\n            userId: username.username,\n            healthEnd: 1,\n            status: 4\n        }\n        try {\n            await axios.put('/api/deluser/', newPost)\n\n            /*                  workEnd: new Date(Date.now()),\n                              workTime: new Date(Date.now()) - new Date(posts[0].workStart)\n\n                        localStorage.setItem('user', JSON.stringify({...localUser, status:3}))*/\n\n\n            /*      if(user.status === 1){\n                    await axios.put(\"/api/post/\"+posts[0]._id, newPost)\n                  }\n                 localStorage.clear()\n                  window.location.reload()\n                  window.location.href = '/'*/\n\n\n            setModalActiveDelete(false)\n            window.location.href = `/profile/${user.id}`\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const button = () => {\n        if (votearray.length === 0) {\n            setErr('Выберите участников номинации')\n        } else {\n            votearray.forEach(async (vote) => {\n\n\n                    const arr = vote.split(\"_\")\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    }\n                    await axios.post('/api/vote/', voteUser)\n                }\n            )\n            setModalActiveVote(false)\n        }\n    }\n    /*    const button = () => {\n            if (votearray.length === 0 || votearray.length <= 9) {\n                setErr('Выберите участников номинации');\n                return;\n            }\n            if (votearray.length === 10 && er) {\n                return;\n            } else {\n                const duplicates = {};\n                let hasDuplicates = false; // Флаг для отслеживания наличия повторяющихся элементов\n                votearray.forEach(async (vote) => {\n                    const arr = vote.split(\"_\");\n                    const vote_for_user = arr[1];\n\n                    // Проверяем, был ли уже такой элемент\n                    if (duplicates[vote_for_user]) {\n                        // Если был, устанавливаем флаг и завершаем итерацию\n                        hasDuplicates = true;\n                        return;\n                    } else {\n                        // Иначе, добавляем его в объект duplicates\n                        duplicates[vote_for_user] = true;\n                    }\n\n                    const voteUser = {\n                        user_id: localUse._id,\n                        vote_for_user: arr[1],\n                        nominations_id: arr[0]\n                    };\n\n                    await axios.post('/api/vote/', voteUser);\n                });\n\n                // Если есть повторяющиеся элементы, прекращаем выполнение функции\n                if (hasDuplicates) {\n                    setErr('Есть сотрудники которые участвуют больше одной номинации');\n                    return;\n                }\n\n                setModalActiveVote(false);\n            }\n        };*/\n    /*    const clickVote = (e) => {\n            e.preventDefault()\n            const data = e.target.value.toString()\n            const arr = data.split(\"_\")\n            let votearr = votearray\n            votearr.push(data)\n            const newArray = votearr.filter(element => element !== \"\")\n            console.log('newArray=', newArray)\n            setVotearray(newArray)\n        }*/\n\n\n    const clickVote = (e, id,user_name,selectIndex) => {\n        setFilteredCities([])\n        console.log('index=',id,user_name)\n        setInputValues(prev => ({ ...prev, [selectedInputIndex]: user_name }));\n        e.preventDefault();\n        const data =id.toString();\n        const arr = data.split(\"_\");\n        if (arr[0] === '' || arr[1] === '') {\n            return;\n        } else {\n            const str = arr[1].toString();\n            const str1 = arr[0].toString();\n\n            /*            if (votearray.some(item => item.split(\"_\")[1] === str)) {\n                            setErr('Такой сотрудник уже есть в другой номинации');\n                        }else{\n                            setErr('');\n                        }*/\n\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\n            if (existingIndex !== -1) {\n                const newArray = [...votearray];\n                newArray[existingIndex] = data;\n                console.log('Массив с обновленным элементом:', newArray);\n                setVotearray(newArray);\n                return;\n            }\n        }\n\n        const votearr = [...votearray];\n        votearr.push(data);\n\n        const newArray = votearr.filter(element => element !== \"\");\n        console.log('newArray=', newArray);\n        setVotearray(newArray);\n\n        // Устанавливаем флаг для скрытия опции \"Выберите участника\" для данного select\n        setSelectedOption(prevState => ({\n            ...prevState,\n            [selectIndex]: true\n        }));\n\n    };\n\n\n    const secureButton = async () => {\n        console.log('chek=', checkedItems)\n\n        const res = await axios.get('/api/user/' + username.username)\n\n        const addNomination = {\n            userId: username.username,\n            id_nomination: check\n        }\n\n        if (check === undefined) {\n            setErr('Выберите номинацию')\n        } else {\n            await axios.post('/api/vote/', addNomination)\n            setModalVote(false)\n            window.location.reload()\n        }\n    }\n\n    const clearSecureButton = async () => {\n        const res = await axios.get('/api/user/' + username.username)\n        const addNomination = {\n            userId: username.username,\n            id_nomination: null\n        }\n\n        await axios.post('/api/vote/', addNomination)\n        setModalVote(false)\n        window.location.reload()\n\n    }\n\n\n    const inputClick = (event, voteId) => {\n        const {id, checked} = event.target\n        if (checked) {\n            setCheckedItems(checked)\n        } else {\n            setCheckedItems(null)\n        }\n        setCheck(event.target.value)\n        setCheckedItems(prevState => ({\n            ...prevState,\n            [id]: checked,\n        }))\n\n        setUser(prevState => ({\n                ...prevState,\n                nomination_status: checked ? voteId : null\n            }\n        ))\n    }\n\n\n    const nextModal = async () => {\n        setModalVote(true)\n        setModalActiveVote(false)\n    }\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n    const handleChange = (e) => {\n        setSelectedValue(e.target.value);\n    };\n\n\n    const handleInputChangeUsers = (e,id) => {\n        const index = id + 1\n        const { value } = e.target;\n        setInputValues(prev => ({ ...prev, [index]: value }));\n        setSelectedInputIndex(index);\n\n        const termCities = e.target.value;\n        setSearchTermCities(termCities);\n        const filtered = userVote.filter(city =>\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\n        );\n        if (termCities === '') {\n            setFilteredCities([])\n        } else {\n            setFilteredCities(filtered);\n        }\n    }\n\n    const [allDateUser,setAllDateUser]=useState()\n    const getChangeVacancies =  () => {\n        if(localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                        <div className='ProfileName' style={{ paddingTop: hasImage ? '30px' : '0px' }}>\n                            {user.user_name}\n\n\n\n                            {localUse.isAdmin || localUse._id===username.username ? <Create style={{marginLeft: '5px', fontSize: 'large', cursor: 'pointer'}}\n                                                 onClick={() => setModalActive(true)}/> : ''}\n\n\n\n                            {localUse.isAdmin ? <Delete style={{cursor: 'pointer', fontSize: 'large'}}\n                                                        onClick={() => setModalActiveDelete(true)}/> : <></>}\n\n                            {localUse.isAdmin === true && localUse._id === user.id ? <Link to={`/AdminPanel`}><ErrorIcon\n                                style={{cursor: 'pointer', color: 'black', fontSize: 'large'}}/></Link> : ''}\n                        </div>\n\n                        <div>\n                            <label style={{cursor:'pointer'}} onClick={getChangeVacancies} className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                        </div>\n\n                        {/*                {\n                    <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                }*/}\n\n\n                    <div style={{border: '3px dashed black',padding:'10px'}}>\n                    <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                    <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false || localUse._id===username.username? 'Доп.Контакт: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username? user.additional_contact : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                    <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                    <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                    <div className='ProfileInfoCard'>\n                        {localUse.isAdmin !== false  || localUse._id===username.username ? 'Адрес фактического проживания: ' : ''}\n                        {localUse.isAdmin !== false || localUse._id===username.username ? user.place_of_residence : ''}\n                    </div>\n                    <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n\n\n                    {localUse.isAdmin || localUse._id===username.username ?\n                    <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>:''\n                    }\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveResetPass(true)}>Сбросить\n                            пароль</div> : ''}\n\n\n                    {localUse.isAdmin ?\n                        <div className='changePass' onClick={() => setModalActiveReset(true)}>Закончить</div> :'' }\n\n\n                    {localUse._id === user.id ?\n                        <div className='changePass' onClick={() => setModalActiveVote(true)}>Проголосовать</div> : ''}\n\n\n                    {localUse.isAdmin ? <div className=\"changePass\" onClick={nextModal}>Закрепить номинацию</div> : ''}\n\n\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills} username={username.username} />\n\n\n                </div>\n            }\n\n            <Modal active={modalActive} setActive={setModalActive}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {error && <div className='modalError'>{error}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClick}>\n                    <div>\n                        <input\n                            placeholder=\"Фамилия\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleNameChange}\n                            value={nameValue}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Имя\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleSurnameChange}\n                            value={surnameValue}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Email\"\n                            type=\"email\"\n                            className=\"ModalInputUpdate\"\n                            onChange={handleEmailChange}\n                            value={email || emailChange}\n                            minLength={6}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Телефон\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={phoneNumber}\n                            onChange={handlePhoneChange}\n                            value={phone || phoneChange}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={additionalContact}\n                            onChange={additional_Contact}\n                            value={additional_contact || additional_contact_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Группа рассылки\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={distributionGroup}\n                            onChange={distribution_Group}\n                            value={distribution_group || distribution_group_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Профиль деятельности\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={activityProfile}\n                            onChange={activity_Profile}\n                            value={activity_profile || activity_profile_change}\n                        />\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"Город\"\n                            type='text'\n                            className=\"ModalInputUpdate\"\n                            ref={modalCity}\n                            value={searchTermCities || cityName}\n                            onChange={handleInputChangeCities}\n                        />\n                        <div>\n                            {filteredCities.length > 0 && (\n                                <div className='divSelectRegister'>\n                                    {filteredCities.map((city, id) => (\n                                        <div className='selectNameDiv' key={id} value={city.id}\n                                             onClick={() => handleUserClickCities(city.city_name, city.id)}>\n                                            {city.city_name}\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                            <input\n                                placeholder=\"Адрес фактического проживания\"\n                                type='text'\n                                className=\"ModalInputUpdate\"\n                                ref={modalCityPlace}\n                                onChange={cityPlace}\n                                value={CityPlace || CityPlace_Change}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <select\n                            value={selectedValue} // Привязываем значение к selectedValue\n                            onChange={handleChange}\n                            ref={modalDep}\n                            className=\"ModalInputUpdateSelect\"\n                        >\n                            {options.map((option) => (\n                                <option key={option.id} value={option.id}>\n                                    {option.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActivePass} setActive={setModalActivePass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                {er && <div className='modalError'>{er}</div>}\n                <form className=\"modalLoginBox\" onSubmit={handleClickPassword}>\n                    <input\n                        placeholder=\"Старый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalOldPass}\n                    />\n                    <input\n                        placeholder=\"Новый пароль\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPass}\n                        minLength='6'\n                    />\n                    <input\n                        placeholder=\"Новый пароль ещё раз\"\n                        type='password'\n                        className=\"inputChangePassword\"\n                        ref={modalNewPassAgain}\n                        minLength='6'\n                    />\n                    <button className=\"ModalButtonChangePassword\" type=\"submit\" disabled={isFetching}>\n                        Изменить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveResetPass} setActive={setModalActiveResetPass}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleResetPass}>\n                    <h2>Новый пароль будет: qwerty123</h2>\n                    <button className=\"ModalButtonRePasswordUser\" type=\"submit\" disabled={isFetching}>\n                        Сбросить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveReset} setActive={setModalActiveReset}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={status}>\n                    <h2>Вы хотите завершить отметку времени пользователя?</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Закончить\n                    </button>\n                </form>\n            </Modal>\n            <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\n                <h1>Изменение информации:</h1>\n                <hr/>\n                <form className=\"modalLoginBox\" onSubmit={handleDelete}>\n                    <h2>Пользователь будет удален</h2>\n                    <button className=\"ModalButtonDelete\" type=\"submit\" disabled={isFetching}>\n                        Удалить\n                    </button>\n                </form>\n            </Modal>\n\n\n\n            <Modal active={modalActiveVote} setActive={setModalActiveVote}>\n                <h1>Номинации:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div className='div'>\n                    <div>\n                        {\n                            vote.map((vote, id) =>\n\n                                <label key={id} htmlFor={vote.id}>\n                                    <h3 className='inputVote'>{vote.nominations_name}</h3>\n                                    {vote.description}\n                                </label>\n                            )}\n                    </div>\n                    <div className='di'>\n{/*                        {vote.map((vote, id) => (\n                                <select\n                                    onChange={(e) => clickVote(e, id)}\n                                    key={id}\n                                    value={userVote.id}\n                                    className='select'>\n\n                                    {!selectedOption[id] &&\n\n                                    <option value=''>Выберите участника</option>}\n\n                                    {userVote.map((userVote, id) => (\n\n                                        <option key={id} value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>\n                                    ))}\n                                </select>\n                            )\n                        )}*/}\n\n                            {vote.map((vote, id) => (\n                                <div key={id+1} style={{ position: 'relative' }}>\n                                    <input\n                                        onChange={(e) => handleInputChangeUsers(e, id)}\n                                        value={inputValues[id+1] || ''}\n                                        className='select'\n                                    />\n                                    {selectedInputIndex === id+1 && filteredCities.length > 0 && (\n                                        <div className='divSelectRegister' style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000,marginLeft:'20px' }}>\n                                            {filteredCities.map((city, cityId) => (\n                                                <div\n                                                    className='selectNameDiv'\n                                                    key={cityId}\n                                                    onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\n                                                    {city.user_name}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={button}>Проголосовать</button>\n\n\n\n            </Modal>\n            <Modal active={modalVote} setActive={setModalVote}>\n                <h1>Закрепить номинацию:</h1>\n                {er && <div className='modalError'>{er}</div>}\n                <hr/>\n                <div>\n                    <div className='voteContainer'>\n                        {vote.map((vote, id) => (\n                            <div key={id} className=\"voteItem\">\n                                <label key={id} htmlFor={vote.id} className=\"inputVote\">\n\n                                    <input\n                                        type='checkbox'\n                                        id={vote.id}\n                                        value={vote.id}\n                                        onChange={(e) => inputClick(e, vote.id)}\n                                        checked={user.nomination_status === vote.id}\n                                    />\n\n                                    {vote.nominations_name}{' '}\n\n                                    <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`}\n                                         className='images'/>\n\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={secureButton}>Закрепить</button>\n                <button className=\"button\" type=\"submit\" disabled={isFetching} onClick={clearSecureButton}>Снять\n                    номинацию\n                </button>\n            </Modal>\n\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem\n                    allDateUser={allDateUser}\n                />\n            </ModalVacancies>\n\n\n\n<Skills/>\n\n        </div>\n    )\n}\n\n\n\n\n/*                            <select onChange={clickVote} key={id} value={userVote.id} className='select'>\n                                <option value=''>Выберите участника</option>\n\n                                {userVote.map((userVote, id) => <option key={id}\n                                                                        value={vote.id + '_' + userVote.id}>{userVote.user_name}</option>)}\n                            </select>*/","import HistoryInfo from '../ProfileInfo/HistoryInfo/HistoryInfo'\r\nimport ProfileInfo from '../ProfileInfo/ProfileInfo'\r\nimport './Home.css'\r\n\r\n\r\nexport default function Home(username) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n  return (\r\n      <div className='home'>\r\n          <div className=\"homeWrapper\">\r\n                  <ProfileInfo username={username}/>\r\n\r\n              {(localUser._id!==username.username.username && localUser.isAdmin) || localUser._id===username.username.username ?\r\n                  <HistoryInfo/> :''\r\n              }\r\n\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [dep, setDep] = useState([])\r\n    // загрузка всех департаментов\r\n\r\n    useEffect(() => {\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/')\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([])\r\n            } else {\r\n                setDep(res.data)\r\n            }\r\n        }\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n\r\n                            {dep.map((node, i) => {\r\n\r\n                                const label = <Link to={`/department/${node.department_tree_to_json.id}`}\r\n                                                    className='level1'>\r\n\r\n                                    <span className=\"node\">{node.department_tree_to_json.Name}</span></Link>\r\n\r\n                                return (\r\n\r\n                                    <TreeView key={node.department_tree_to_json.Name + '|' + i} nodeLabel={label}\r\n                                              defaultCollapsed={false}>\r\n                                        {node.department_tree_to_json.Subclasses.map((departments) => (\r\n\r\n                                            <TreeView nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser'\r\n                                                      key={departments.id}>\r\n                                                    <span className=\"node\">{departments.Name}</span></Link>)}\r\n                                                      key={departments.id} defaultCollapsed={true}>\r\n\r\n                                                {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                    <TreeView nodeLabel={(\r\n\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser'\r\n                                                              key={departments1.id}>\r\n\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n\r\n                                                        </Link>\r\n                                                    )} key={departments1.id} defaultCollapsed={true}>\r\n\r\n                                                        {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n\r\n                                                            <Link to={`/department/${departments2.id}`} className='depsUser'\r\n                                                                  key={departments2.id}>\r\n\r\n                                                                <div\r\n                                                                    style={{paddingBottom: '8px'}}>{departments2.Name}\r\n                                                                </div>\r\n\r\n                                                            </Link>\r\n                                                        ))}\r\n                                                    </TreeView>\r\n                                                ))}\r\n                                            </TreeView>\r\n                                        ))}\r\n                                    </TreeView>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n                }\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import {useEffect, useRef, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport './Status.css'\r\n\r\nconst moment = require('moment');\r\nconst usersStatuses = {\r\n  0: '',\r\n  1: 'start',\r\n  2: 'end',\r\n  3: 'sick_leave',\r\n  4: 'deleted',\r\n  5: 'vacation',\r\n  6: 'time_off',\r\n  7: 'other'\r\n}\r\n\r\nfunction findStatus(k) {\r\n  for (let i in usersStatuses) {\r\n    if (i == k) {\r\n      return usersStatuses[i]\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Status() {\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const [places, setplaces] = useState([])\r\n  const [office, setoffice] = useState([])\r\n  const [workplace, setworkplace] = useState([])\r\n  const [place, setPlace] = useState([])\r\n  const [err, setErr] = useState('')\r\n  const [user, setUser] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalActiveReserve, setModalActiveReserve] = useState(false)\r\n  const [modalName, setModalName] = useState()\r\n  const modalComment = useRef()\r\n  const PlaceRef = useRef()\r\n  const DataTime = useRef()\r\n  const Offices = useRef()\r\n\r\n\r\n  // получение данных пользователя о работе\r\n  useEffect(() => {\r\n\r\n\r\n    const fetchUser = async () => {\r\n\r\n      const res = await axios.get('/api/user/' + localUser._id)\r\n      setUser(res.data)\r\n\r\n      const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n      const filter = work.data.filter(element => element.is_canceled !== true)\r\n      setworkplace(filter)\r\n\r\n      const offices = await axios.get('/api/office_get/')\r\n      const officesMap = offices.data.map(element => element.location)\r\n      setoffice(officesMap)\r\n\r\n\r\n      const date = moment().format('YYYY-MM-DD')\r\n      if (DataTime.current) {\r\n        DataTime.current.value = date;\r\n      }\r\n\r\n      if (\r\n          !Offices.current || Offices.current.value === '' ||\r\n          !PlaceRef.current || PlaceRef.current.value === '' ||\r\n          !DataTime.current || DataTime.current.value === ''\r\n      ) {\r\n        const off = 1;\r\n\r\n        const add = {\r\n          date: date,\r\n          office: off\r\n        };\r\n\r\n        const places = await axios.post('/api/workplaces/', add);\r\n        setplaces(places.data);\r\n      }\r\n      if (Offices.current) {\r\n        if (Offices.current.value === null) {\r\n          Offices.current.value = '';\r\n        } else {\r\n\r\n          const add = {\r\n            date: date,\r\n            office: Offices.current.value\r\n          };\r\n\r\n          const places = await axios.post('/api/workplaces/', add)\r\n          setplaces(places.data)\r\n        }\r\n        if (places && places.length > 0) {\r\n          const placeMap = places.map(element => element.location_res);\r\n          setPlace(placeMap);\r\n        } else {\r\n          setPlace([]); // Установите пустой массив, если нет данных\r\n        }\r\n      }\r\n    }\r\n    fetchUser()\r\n  }, [localUser._id])\r\n\r\n  // начало работы.\r\n  const handlerStart = async (e) => {\r\n    e.preventDefault()\r\n    if (+modalName === 0 && modalComment.current.value === '') {\r\n      setError('Заполните комментарий')\r\n      return\r\n    }\r\n    if (+modalName !== 0 && +modalName !== 1) {\r\n      setError('Заполните состояние здоровья')\r\n    } else {\r\n      setIsFetching(true)\r\n\r\n      const newPost = {\r\n        userId: localUser._id,\r\n        typework_id: 1,\r\n        status: 1,\r\n        healthStart: +modalName,\r\n        commentStart: modalComment.current.value || '-',\r\n        workStart: new Date(Date.now())\r\n      }\r\n      try {\r\n        const res = await axios.post(\"/api/post/\", newPost)\r\n        /*await axios.post(\"/api/status/\")*/\r\n        /*await axios.put('/api/user/'+user._id, {status:1, userId: user._id})*/\r\n        localStorage.setItem('user', JSON.stringify({...localUser, status: 1}))\r\n        window.location.reload()\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // конец работы\r\n  const handlerEnd = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (+modalName === 0 && modalComment.current.value === '') {\r\n      setError('Заполните комментарий');\r\n      return;\r\n    }\r\n\r\n    if (+modalName !== 0 && +modalName !== 1) {\r\n      setError('Заполните состояние здоровья');\r\n    } else {\r\n      setIsFetching(true);\r\n\r\n      try {\r\n        const res = await axios.get('/api/vacation?id=' + localUser._id);\r\n        const date = moment().format('DD.MM.YY')\r\n        let newstatus;\r\n\r\n        if (res.data.length > 0 && date >= res.data[0]['workdate'] && date <= res.data[0]['worked']) {\r\n          newstatus = res.data[0]['typework_id']\r\n        } else {\r\n          newstatus = 2\r\n        }\r\n\r\n        const newPost = {\r\n          userId: localUser._id,\r\n          typework_id: 1,\r\n          status: newstatus,\r\n          healthEnd: +modalName,\r\n          commentEnd: modalComment.current.value || '-',\r\n          workEnd: new Date(Date.now())\r\n        };\r\n\r\n        await axios.put(\"/api/post/\", newPost);\r\n        /*await axios.put('/api/user/'+user._id, {status:2, userId: user._id})*/\r\n        localStorage.setItem('user', JSON.stringify({...localUser, status: 2}));\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleName = e => {\r\n    setModalName(e.target.value)\r\n  }\r\n\r\n  const clickReserve = async () => {\r\n    setErr('')\r\n    if (PlaceRef.current.value === '' || DataTime.current.value === '') {\r\n\r\n    } else {\r\n      const space = PlaceRef.current.value.toString()\r\n      const wp_id = space.split('(')\r\n      const ww = wp_id[0].split(\"^\")\r\n      if (wp_id[1]) {\r\n        setErr('Место занято')\r\n      } else {\r\n        const reservePlace = {\r\n          user_id: localUser._id,\r\n          wp_id: ww[0],\r\n          office: Offices.current.value,\r\n          booking_date: DataTime.current.value,\r\n          is_canceled: false\r\n        }\r\n        await axios.post(\"/api/workplace_logs/\", reservePlace)\r\n      }\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n    }\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    setworkplace(filter)\r\n\r\n  }\r\n\r\n\r\n  const DataClick = async () => {\r\n    const date = moment().format('YYYY-MM-DD');\r\n    if (DataTime.current.value < date) {\r\n      DataTime.current.value = date\r\n      setErr('Не актуальная дата')\r\n    } else {\r\n      setErr('')\r\n    }\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n  }\r\n\r\n  const clickOffice = async () => {\r\n\r\n    setErr('')\r\n    const date = moment().format('YYYY-MM-DD');\r\n    if (DataTime.current.value === '') {\r\n      DataTime.current.value = date\r\n    } else {\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n      const placeMap = places.data.map(element => element.location_res)\r\n      setPlace(placeMap)\r\n    }\r\n  }\r\n\r\n  const clickPlace = async () => {\r\n    setErr('')\r\n    if (DataTime.current.value === '' || PlaceRef.current.value === '') {\r\n    } else {\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n      const placeMap = places.data.map(element => element.location_res)\r\n      setPlace(placeMap)\r\n    }\r\n  }\r\n\r\n\r\n  const clearPlace = async () => {\r\n    setErr('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n\r\n    const is_canceled = {\r\n      user_id: localUser._id,\r\n      canceled: true,\r\n      date: date\r\n    }\r\n\r\n    await axios.post('/api/workplace_logs_clear/', is_canceled)\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    setworkplace(filter)\r\n\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n    const placeMap = places.data.map(element => element.location_res)\r\n    setPlace(placeMap)\r\n\r\n  }\r\n\r\n  const deletePlace = async (e) => {\r\n    setErr('')\r\n    e.preventDefault()\r\n\r\n    const is_canceled = {\r\n      user_id: localUser._id,\r\n      id: e.target.value,\r\n      canceled: true\r\n    }\r\n\r\n    await axios.post('/api/workplace_logs_post/', is_canceled)\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n    setworkplace(filter)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n        <table border=\"0\">\r\n          <tr>\r\n            <td>\r\n              <button type='submit' onClick={() => setModalActive(true)}\r\n                      className={'statusBtn ' + (findStatus(user.status))}>\r\n                {isFetching\r\n                    ? <CircularProgress style={{color: 'white', size: '20px', width: '20px', height: '20px'}}/>\r\n                    : user.status !== 1\r\n                        ? 'Начать'\r\n                        : 'Закончить'\r\n                }\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button type='submit' onClick={() => setModalActiveReserve(true)} className='statusBtn'>\r\n                <h5>Зарезервировать место</h5>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n          <h1>Изменение информации:</h1>\r\n          <hr/>\r\n          {error && <div className='modalError'>{error}</div>}\r\n          <form className=\"modalLoginBox\" onSubmit={user.status === 1 ? handlerEnd : handlerStart}>\r\n            <div className='statusCheckbox'>\r\n              <label htmlFor='sickLeave'>\r\n                <input\r\n                    type='radio'\r\n                    value={1}\r\n                    id='sickLeave'\r\n                    name='sickLeave'\r\n                    onChange={handleName}\r\n                    checked={+modalName === 1}\r\n                />Здоров</label>\r\n              <label htmlFor='vacation'>\r\n                <input\r\n                    type='radio'\r\n                    value={0}\r\n                    id='vacation'\r\n                    name='vacation'\r\n                    onChange={handleName}\r\n                    checked={+modalName === 0}\r\n                />Болен</label>\r\n            </div>\r\n            <input\r\n                placeholder=\"Комментарий\"\r\n                className=\"ModalInputStatus\"\r\n                ref={modalComment}\r\n            />\r\n            <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n              {user.status !== 1\r\n                  ? 'Начать'\r\n                  : 'Закончить'\r\n              }\r\n            </button>\r\n          </form>\r\n        </Modal>\r\n        <Modal active={modalActiveReserve} setActive={setModalActiveReserve}>\r\n          <h1 style={{textAlign: 'center'}}>Зарезервировать рабочее место</h1>\r\n\r\n          <br/>\r\n          {err &&\r\n          <div className='modalError'>\r\n            {err}\r\n          </div>\r\n          }\r\n          <hr/>\r\n          <br/>\r\n          <div className='flex'>\r\n            <div>\r\n              <label style={{fontWeight: \"bold\"}}>Дата: </label><input\r\n                type='date'\r\n                className=\"ModalInputDate\"\r\n                ref={DataTime}\r\n                onChange={DataClick}\r\n            />\r\n            </div>\r\n\r\n            <div style={{width: '50px'}}></div>\r\n\r\n            <div><label style={{fontWeight: \"bold\"}}>Офис: </label>\r\n\r\n              <select ref={Offices} onClick={clickOffice} className='selectwork'>\r\n\r\n                {office.map((work, id) => <option key={id} title={work} value={id + 1}>{work}</option>)}\r\n\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{width: '50px'}}></div>\r\n\r\n            <div><label style={{fontWeight: \"bold\"}}>Место: </label>\r\n\r\n              <select ref={PlaceRef} onClick={clickPlace} className='selectwork'>\r\n\r\n                {places.map((work, id) => <option key={id} title={work.workplace_id}\r\n                                                  value={work.workplace_id + \"^\" + work.location_res}>{work.location_res}</option>)}\r\n\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <button className=\"ModalButton\" onClick={clickReserve} type=\"submit\" disabled={isFetching}>\r\n            Зарезервировать место\r\n          </button>\r\n          <br/>\r\n          <br/>\r\n          <hr/>\r\n\r\n          <div className='divreserve'>\r\n            {workplace.map((array, id) =>\r\n                <div className='place'>Дата: {array.booking_date} Место: {array.place} Офис:{array.location}\r\n                  <button className='placeButton' key={id} value={array.id} onClick={deletePlace}>Снять резерв</button>\r\n                </div>)}\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <button onClick={clearPlace} className=\"ModalButton\">Отменить все места</button>\r\n          <br/><br/>\r\n        </Modal>\r\n      </>\r\n  )\r\n}\r\n","import './MessagePost.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MessagePost =({user})=> {\r\n    return (\r\n        <>\r\n        <Link to={`/`} className='LinkMessage'> <div className='messageContent'>{user.user_name}</div></Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MessagePost;","import {Link} from 'react-router-dom'\r\nimport './SearchBlock.css'\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\nfunction findStatus(k){\r\n    for(let i in usersStatuses){\r\n        if(i == k){\r\n            return usersStatuses[i]\r\n        }\r\n    }\r\n}\r\n\r\nexport default function SearchBlock({user}) {\r\n    const [nominations, setNominations] = useState([])\r\n    const [admin, setAdmin] = useState()\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [dateStart, setDateStart] = useState()\r\n    const [dateEnd, setDateEnd] = useState()\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const usersStatuses = {\r\n        0: '',\r\n        1: 'start',\r\n        2: 'end',\r\n        3: 'sick_leave',\r\n        4: 'deleted',\r\n        5: 'vacation',\r\n        6: 'time_off',\r\n        7: 'other'\r\n    }\r\n\r\n    function findStatus(k) {\r\n        for (let i in usersStatuses) {\r\n            if (i == k) {\r\n                return usersStatuses[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n    useEffect(() => {\r\n\r\n        const fetchUser = async () => {\r\n            const users = await axios.get('/api/user/' + user.id)\r\n            const res = await axios.get('/api/vacation?id=' + user.id);\r\n            const post = await axios.get('/api/post?type=1&id=' + user.id);\r\n            setNominations(users.data.nomination_status)\r\n\r\n            if (users.data.isadmin !== true) {\r\n                setAdmin('');\r\n            } else {\r\n                setAdmin('*');\r\n            }\r\n\r\n\r\n            if (res.data.length === 0) {\r\n                setDateStart('')\r\n                setDateEnd('')\r\n            } else {\r\n                setDateStart(res.data[0].workdate)\r\n                setDateEnd(res.data[0].worked)\r\n            }\r\n\r\n\r\n\r\n            if (post.data.length === 0) {\r\n                setDate('')\r\n                setTime('')\r\n            } else {\r\n                setDate(post.data[0].workdate)\r\n                setTime(post.data[0].workend)\r\n            }\r\n        }\r\n\r\n        if (user.status === 1 || user.status === 2 || user.status === 3\r\n            || user.status === 5 || user.status === 6 || user.status === 7)\r\n        {\r\n            fetchUser()\r\n        }\r\n\r\n    }, [user.id])\r\n\r\n\r\n    const images = {\r\n        '1': { src: '../images/1.png', title: 'Тучка' },\r\n        '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n        '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n        '4': { src: '../images/4.png', title: 'Портной' },\r\n        '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n        '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n        '7': { src: '../images/7.png', title: 'Крот' },\r\n        '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n        '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n        '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"searchBlockContainer\">\r\n                    <Link to={`/profile/${user.id}`} className='name'\r\n                          onClick={() => window.location.href = `/profile/${user.id}`}>\r\n                        <div className={'employee ' + (findStatus(user.status))}>\r\n                            <div className=\"angry-grid\">\r\n                                <div id=\"item-0\">\r\n                                    <span className='searchName'>{user.user_name}{localUser.isAdmin ? admin:''}</span>\r\n                                </div>\r\n                                <div id=\"item-1\">\r\n\r\n                                    {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n\r\n                                </div>\r\n                                <div id=\"item-2\">\r\n\r\n                                    {Object.keys(images).map((key, id) => (\r\n                                        (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations===key || nominations===parseInt(key)) &&\r\n\r\n                                        <img\r\n                                            key={id}\r\n                                            src={images[key].src}\r\n                                            title={images[key].title}\r\n                                            alt={`Image for ${key}`}\r\n                                        />\r\n\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import {ExitToApp} from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Status from '../Status/Status'\r\nimport Modal from \"../Templates/Modal/Modal\";\r\nimport './Topbar.css'\r\nimport MessagePost from '../MessagePost/MessagePost'\r\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\r\n\r\n\r\nexport default function Topbar() {\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n  const [countAll_users, setCountAll_users] = useState(0)\r\n  const [countWorked_today, setCountWorked_today] = useState(0)\r\n  const [countWorked_yesterday, setCountWorked_yesterday] = useState(0)\r\n  const [countSickLeave_today, setCountSickLeave_today] = useState(0)\r\n  const [countSick_yesterday, setCountSick_yesterday] = useState(0)\r\n  const [countVacation_today, setCountVacation_today] = useState(0)\r\n  const [countVacation_yesterday, setCountVacation_yesterday] = useState(0)\r\n  const departId = useParams().username\r\n  useEffect(() => {\r\n\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user/')\r\n      setNotificationCount(res.data)\r\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n      let filterUsers = filterUser(res.data)\r\n      setAllUsers(filterUsers)\r\n\r\n    }\r\n\r\n    const typework = async () => {\r\n      const res = await axios.get('/api/typework_status/')\r\n    }\r\n\r\n\r\n    const fetchUserName = async () => {\r\n      const res = await axios.get('/api/user/' + localUser._id)\r\n      setUser(res.data)\r\n    }\r\n\r\n    const get_statistics_all_users = async () => {\r\n      const getUsers = {\r\n        id: localUser._id\r\n      }\r\n      if (localUser.isAdmin === true) {\r\n        const res = await axios.post('/api/get_statistics_all_users', getUsers)\r\n\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['all_users']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['all_users']=0\r\n        }else{\r\n          setCountAll_users(res.data[0]['get_statistics_all_users'][0]['all_users'].length)\r\n        }\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['not_working_today']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['not_working_today']=0\r\n        }else{\r\n          setCountWorked_today(res.data[0]['get_statistics_all_users'][0]['not_working_today'].length)\r\n        }\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday']=0\r\n        }else{\r\n          setCountWorked_yesterday(res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday'].length)\r\n        }\r\n\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['sick_today']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['sick_today']=0\r\n        }else {\r\n          setCountSickLeave_today(res.data[0]['get_statistics_all_users'][0]['sick_today'].length)\r\n        }\r\n\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['sick_yesterday']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['sick_yesterday']=0\r\n        }else{\r\n          setCountSick_yesterday(res.data[0]['get_statistics_all_users'][0]['sick_yesterday'].length)\r\n        }\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['vacation_today']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['vacation_today']=0\r\n        }else{\r\n          setCountVacation_today(res.data[0]['get_statistics_all_users'][0]['vacation_today'].length)\r\n        }\r\n\r\n        if(res.data[0]['get_statistics_all_users'][0]['vacation_yesterday']===null){\r\n          res.data[0]['get_statistics_all_users'][0]['vacation_yesterday']=0\r\n        }else{\r\n          setCountVacation_yesterday(res.data[0]['get_statistics_all_users'][0]['vacation_yesterday'].length)\r\n        }\r\n      }\r\n    }\r\n    typework()\r\n    get_statistics_all_users()\r\n    fetchUserName()\r\n    fetchUser()\r\n\r\n  }, [])\r\n\r\n\r\n  function filterUser(users) {\r\n    return users.filter(user => user.status === 1)\r\n        .concat(users.filter(user => user.status === 2))\r\n        .concat(users.filter(user => user.status === 3))\r\n        .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n        .concat(users.filter(user => user.status === 4))\r\n  }\r\n\r\n  const [user, setUser] = useState([])\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n  const [allUsers, setAllUsers] = useState([])\r\n  const [findUsers, setFindUsers] = useState([])\r\n  const [isBlock, setIsBlock] = useState(false)\r\n\r\n  // выход\r\n  const logOut = () => {\r\n    localStorage.clear()\r\n    window.location.reload()\r\n    window.location.href = '/'\r\n  }\r\n\r\n\r\n  // получение всех пользователей\r\n\r\n\r\n  //Поиск пользователя\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && e.target.value !== '') {\r\n      setFindUsers(allUsers.filter(user => {\r\n        return user.user_name.toLowerCase().includes(searchValue.toLowerCase())\r\n      }))\r\n      setIsBlock(true)\r\n    }\r\n  }\r\n  //Поиск пользователя\r\n  const handleClick = (e) => {\r\n    if (e.target.value !== '') {\r\n      setFindUsers(allUsers.filter(user => {\r\n        return user.user_name.toLowerCase().includes(searchValue.toLowerCase())\r\n      }))\r\n      setIsBlock(true)\r\n    }\r\n  }\r\n  if (user.main_department === departId) {\r\n  }\r\n\r\n\r\n\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n\r\n  };\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className='topbarContainer'>\r\n          <div className=\"topbarLeft\">\r\n            <Status/>\r\n          </div>\r\n          <div className=\"topbarCenter\">\r\n            {localUser.isAdmin ?\r\n              <div className='statistics'>\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/all_users/`}\r\n                      title=\"Всего сотрудников\">{countAll_users}</Link> /\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/not_working_today/`}\r\n                      title=\"Сегодня не работают\">{countWorked_today}</Link> /\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/not_worked_yesterday/`}\r\n                      title=\"Вчера не работали\">{countWorked_yesterday}</Link> /\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/sick_today/`}\r\n                      title=\"Сегодня болеют\">{countSickLeave_today}</Link> /\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/sick_yesterday/`}\r\n                      title=\"Вчера болели\">{countSick_yesterday}</Link> /\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/vacation_today/`}\r\n                      title=\"Сегодня в отпуске\">{countVacation_today}</Link>/\r\n                <Link className=\"topbarLinkCount\" onClick={() => window.location.href = `/vacation_yesterday/`}\r\n                      title=\"Вчера в отпуске\">{countVacation_yesterday}</Link>\r\n              </div> : ''\r\n          }\r\n\r\n          </div>\r\n          <div className=\"topbarRight\">\r\n            <div className=\"topbarLinks\">\r\n              <div>\r\n                <Link to={`/department/${user.main_department}`} className=\"topbarLink\">\r\n                  <img src={'../images/VTB.png'}\r\n                   alt='VTB'\r\n                   width='150'\r\n                   height='50'/></Link>\r\n              </div>\r\n              <div className='vr'></div>\r\n\r\n              <div className='topPage'><Link to={`/profile/${user.id}`}\r\n                                             onClick={() => window.location.href = `/profile/${user.id}`}\r\n                                             className=\"topbarLink\">{localUser.username}</Link>\r\n\r\n              </div>\r\n\r\n              {localUser.isAdmin\r\n                  ? <div className='vr'></div>:''\r\n              }\r\n\r\n              {localUser.isAdmin\r\n                  ?\r\n                  <div className='topPage'>\r\n                    <Link to='/Reports' className=\"topbarLink\"><span className='link'>Отчеты</span></Link>\r\n\r\n                  </div> : ''}\r\n\r\n              <div className='vr'></div>\r\n\r\n             {/* <div className='topPageVacations' onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n                <span className='link'>Вакансии</span>\r\n                  {isHovered && (\r\n                      <div className='vacationList'>\r\n                        <ul className='vacationListUl'>\r\n                          <li><Link to='/VacanciesAdd' className='LinkVacations'>Добавить вакансию</Link></li>\r\n                          <li><Link to='/VacanciesView' className='LinkVacations'>Просмотреть вакансии</Link></li>\r\n                        </ul>\r\n                      </div>\r\n                  )}\r\n              </div>*/}\r\n              <div className='topPage'>\r\n                <Link to='/Information' className=\"topbarLink\"><span className='link'>?</span></Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"search\">\r\n              <input onKeyPress={handleKeyPress} value={searchValue} onChange={(e) => setSearchValue(e.target.value)}\r\n                     type=\"search\" name=\"\" placeholder=\"поиск пользователя\" className=\"input\"/>\r\n              <button onClick={handleClick} value={searchValue} onChange={(e) => setSearchValue(e.target.value)}\r\n                      type=\"submit\" className=\"submit\"/>\r\n            </div>\r\n\r\n{/*            <div className=\"notification\">\r\n              <div onClick={togglePopup} className='image-container'>\r\n                <img src='../images/bell.png' className=\"message\"/>\r\n                {notificationCount.length > 0 && <div className=\"notification-badge\">{notificationCount.length}</div>}\r\n              </div>\r\n              {isOpen && (\r\n                  <div className=\"notification-popup\">\r\n                    {allUsers.map((user, id) => (\r\n                        <MessagePost key={id} user={user} />\r\n                    ))}\r\n                  </div>\r\n              )}\r\n            </div>*/}\r\n            <div className=\"exit\">\r\n              <ExitToApp onClick={logOut}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isBlock\r\n            ? <Modal active={handleClick} setActive={setIsBlock} >\r\n              <h1><p align=\"center\">Поиск</p></h1>\r\n              <h4>Найдено: {findUsers.length}</h4>\r\n              <hr/>\r\n              <form>\r\n                <div>\r\n                  {findUsers.map((user) => <SearchBlock user={user} />)}\r\n                </div>\r\n                <button className=\"button\" type=\"submit\" onClick={() => setIsBlock(false)}>\r\n                  Закрыть\r\n                </button>\r\n              </form>\r\n            </Modal>\r\n            : <></>\r\n        }\r\n      </div>\r\n  )\r\n}\r\n","import Home from '../../components/Home/Home'\r\nimport Sidebar from '../../components/Sidebar/Sidebar'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport './Profile.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n    const username=useParams()\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n        <Home username={username}/>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordAgain = useRef()\r\n  const username = useRef()\r\n  const firstname = useRef()\r\n  const department = useRef()\r\n  const history = useHistory();\r\n  const telephone = useRef()\r\n  const city = useRef()\r\n  const additional_contact = useRef()\r\n  const distribution_group = useRef()\r\n  const link_vacancies = useRef()\r\n  const activity_profile=useRef()\r\n  const place_of_residence=useRef()\r\n  const companyName=useRef()\r\n/*  const grade=useRef()\r\n  const project=useRef()*/\r\n\r\n  const [grade, setGrade] = useState([]);\r\n\r\n  const [project, setProject] = useState([])\r\n\r\n\r\n\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [company, setCompany] = useState([])\r\n\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const [cities, setCities] = useState([])\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const [checkVal, setCheckVal] = useState(false)\r\n  const [vacancies, setVacancies] = useState([])\r\n\r\n  const [filteredVacancies, setFilteredVacancies] = useState([]);\r\n  const [filteredCities, setFilteredCities] = useState([]);\r\n\r\n\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchTermCities, setSearchTermCities] = useState('');\r\n\r\n\r\n  const [vacanciesId, setVacanciesId] = useState([])\r\n  const [citiesId, setCitiesId] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n  const handleUserClick = (vacancy_code,id) => {\r\n    setVacanciesId(id)\r\n    setSearchTerm(vacancy_code)\r\n    setFilteredVacancies([])\r\n  }\r\n\r\n  const handleUserClickCities = (city_name,id) => {\r\n    setCitiesId(id)\r\n    setSearchTermCities(city_name)\r\n    setFilteredCities([])\r\n  }\r\n\r\n  const handleInputChangeVacancies = (e) => {\r\n    const term = e.target.value;\r\n    if(searchTerm.length===0) {\r\n      setVacanciesId([])\r\n    }else{\r\n    }\r\n    setSearchTerm(term);\r\n    const filtered = vacancies.filter(vac =>\r\n        vac.vacancy_code && vac.vacancy_code.toLowerCase().includes(term.toLowerCase())\r\n    );\r\n    if (term === '') {\r\n      setFilteredVacancies([])\r\n    } else {\r\n      setFilteredVacancies(filtered);\r\n    }\r\n  }\r\n\r\n\r\n  const handleInputChangeCities = (e) => {\r\n    const termCities = e.target.value;\r\n    setSearchTermCities(termCities);\r\n    const filtered = cities.filter(city =>\r\n        city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\r\n    );\r\n    if (termCities === '') {\r\n      setFilteredCities([])\r\n    } else {\r\n      setFilteredCities(filtered);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const changeVal = () => {\r\n    setCheckVal(!checkVal)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n      const getDeps = async () => {\r\n        const company = await axios.get('/api/Vacations/?company=company')\r\n\r\n        setCompany(company.data)\r\n\r\n        const getVacancies = await axios.get('/api/Vacations/')\r\n        setVacancies(getVacancies.data)\r\n\r\n\r\n        const city =  await axios.get('/api/Cities/')\r\n        setCities(city.data)\r\n\r\n        const res = await axios.get('/api/department_tree_to_json/');\r\n        const data = res.data[0]['department_tree_to_json'];\r\n        const extractedOptions = extractOptions(data);\r\n        setOptions(extractedOptions);\r\n\r\n      }\r\n\r\n      const extractOptions = (node) => {\r\n        let optionsList = [{ id: node.id, name: node.Name }];\r\n        if (node.Subclasses && node.Subclasses.length > 0) {\r\n          node.Subclasses.forEach(subclass => {\r\n            optionsList = optionsList.concat(extractOptions(subclass));\r\n          });\r\n        }\r\n        return optionsList;\r\n      };\r\n    getDeps()\r\n  }, [])\r\n\r\n\r\n  const onChangeGrade = (e) => {\r\n\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      setGrade(e.target.value);\r\n    }\r\n\r\n  }\r\n  const onChangeProject = (e) => {\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      setProject(e.target.value);\r\n    }\r\n  }\r\n\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Проверка формата ссылки на вакансию\r\n    const regex = /^ИТС-[\\d\\W]+$/;\r\n    if (!regex.test(searchTerm)) {\r\n      setError('Пожалуйста, введите значение в формате ИТС-XX-XXХ-ХХХXXXX');\r\n      return;\r\n    }\r\n\r\n    // Проверка паролей\r\n    if (password.current.value !== passwordAgain.current.value) {\r\n      passwordAgain.current.setCustomValidity('Пароли не совпадают');\r\n      return;\r\n    }\r\n\r\n    // Проверка заполнения поля отдела\r\n    if (department.current.value === '') {\r\n      setError('Не все поля заполнены');\r\n      return;\r\n    }\r\n\r\n    // Проверка остальных полей и отправка данных на бэкэнд\r\n    const name = firstname.current.value + ' ' + username.current.value;\r\n    if (companyName.current.value === '') {\r\n      setError('Не все поля заполнены');\r\n      return;\r\n    }\r\n\r\n    const user = {\r\n      user_name: name,\r\n      email: email.current.value.toUpperCase(),\r\n      department_id: department.current.value,\r\n      password: password.current.value,\r\n      isadmin: checkVal,\r\n      phone_number: telephone.current.value,\r\n      link_vacancies: (vacanciesId.length !== 0 ? vacanciesId : searchTerm.trim().toUpperCase()),\r\n      city_id: (citiesId.length === 0 ? null : citiesId),\r\n      additionalContact: additional_contact.current.value,\r\n      distributionGroup: distribution_group.current.value,\r\n      activityProfile: activity_profile.current.value,\r\n      place_of_residence: place_of_residence.current.value,\r\n      companyName: companyName.current.value,\r\n      grade: grade,\r\n      project: project\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/Register/', user);\r\n      if (res.data.status === \"Username user taken\") {\r\n        setError(\"Пользователь закреплен за такой ИТС\");\r\n      } else {\r\n        if (res.data.status === \"Username taken\") {\r\n          setError(\"Такой email уже существует\");\r\n        } else if (res.data.noITC === \"noITC\") {\r\n          setError(\"Пользователь с данной ИТС уже существует\");\r\n        }\r\n      else if (res.data.ITC === \"THIS IS ALREADY EXISTS\") {\r\n        setError(\"Такая ИТС Уже существует\")}\r\n\r\n        else {\r\n          console.log('log=',user)\r\n          await axios.post('/api/Register/', user);\r\n          history.push('/login');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('Ошибка при регистрации');\r\n    }\r\n  };\r\n\r\n  const formatPhoneNumber = (value) => {\r\n    // Убираем все символы, кроме цифр\r\n    let cleaned = value.replace(/\\D/g, '');\r\n    if (cleaned.startsWith('7')) {\r\n      cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\r\n    }\r\n    // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\r\n    cleaned = cleaned.slice(0, 10);\r\n    // Разделяем на части, добавляя дефисы\r\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\r\n    if (match) {\r\n      return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\r\n    }\r\n    return '+7 ' + cleaned;\r\n  };\r\n\r\n\r\n\r\n\r\n  function handleSubmit(e) {\r\n    if (e.target.value === '') {\r\n      setError('Email должен содержать формат домена VTB')\r\n    }\r\n    if (e.target.value.length > 0) {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n\r\n  function handleClickSubmit() {\r\n    setError('')\r\n    if(inputValue.length<=3)\r\n    {\r\n      setInputValue('')\r\n  }else{\r\n      }\r\n  }\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 1) {\r\n      setInputValue('')\r\n    } else {\r\n      const formattedValue = formatPhoneNumber(value);\r\n      setInputValue(formattedValue);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n      <div className=\"register\">\r\n        <br/>\r\n        <div className=\"registerWrapper\">\r\n          <div className=\"registerCenter\">\r\n            <form className=\"registerBox\" onSubmit={handleClick}>\r\n              {error &&\r\n              <div className='errorRegister'>\r\n                {error}\r\n              </div>\r\n              }\r\n              <input\r\n                  placeholder=\"Имя\"\r\n                  required ref={username}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Фамилия\"\r\n                  required ref={firstname}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n\r\n              <input\r\n                  placeholder=\"Телефон\"\r\n                  type='text'\r\n                  required\r\n                  ref={telephone}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={handleChange}\r\n                  value={inputValue}\r\n              />\r\n              <input\r\n                  placeholder=\"Город\"\r\n                  ref={city}\r\n                  className=\"registerInput\"\r\n                  value={searchTermCities}\r\n                  onChange={handleInputChangeCities}\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <div>\r\n                {filteredCities.length > 0 && (\r\n                    <div className='divSelectRegister'>\r\n                      {filteredCities.map((city, id) => (\r\n                          <div className='selectNameDiv' key={id} value={city.id} onClick={() => handleUserClickCities(city.city_name, city.id)}>\r\n                            {city.city_name}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n              <input\r\n                  placeholder=\"Адрес фактического проживания\"\r\n                  type='text'\r\n                  required ref={place_of_residence}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\r\n                  type='text'\r\n                  required ref={additional_contact}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Группа рассылки\"\r\n                  required ref={distribution_group}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Ссылка на вакансию\"\r\n                  required ref={link_vacancies}\r\n                  className=\"registerInput\"\r\n                  value={searchTerm}\r\n                  onChange={handleInputChangeVacancies}\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <div>\r\n                {filteredVacancies.length > 0 && (\r\n                    <div className='divSelectRegister'>\r\n                      {filteredVacancies.map((vac, id) => (\r\n                          <div className='selectNameDiv' key={id} value={id} onClick={() => handleUserClick(vac.vacancy_code, vac.id)}>\r\n                            {vac.vacancy_code}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n              <input\r\n                  placeholder=\"Профиль деятельности\"\r\n                  required ref={activity_profile}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Грейд\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeGrade}\r\n                  value={grade}\r\n              />\r\n              <select ref={companyName} className='selectDeps' >\r\n                <option value=''>Выберите компанию</option>\r\n                {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n              </select>\r\n              <input\r\n                  placeholder=\"Код проекта(Нет проекта=0)\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeProject}\r\n                  value={project}\r\n              />\r\n              <input\r\n                  placeholder=\"Email в формате IvanoIA@vtb.ru\"\r\n                  type='email'\r\n                  required ref={email}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleSubmit}\r\n                  onInput={handleSubmit}\r\n              />\r\n              <select\r\n                  ref={department}\r\n                  className='selectDeps'\r\n              >\r\n                <option value=''>Выберите подразделение</option>\r\n                {options.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                ))}\r\n              </select>\r\n            <div>\r\n              Начальник отдела?\r\n              <label htmlFor='trueAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={true}\r\n                name='trueAdmin'\r\n                checked={checkVal}\r\n                onChange={changeVal}\r\n                onMouseDown={handleClickSubmit}\r\n              />Да</label>\r\n              <label htmlFor='falseAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={false}\r\n                name='falseAdmin'\r\n                checked={!checkVal}\r\n                onChange={changeVal}\r\n                onMouseDown={handleClickSubmit}\r\n              />Нет</label>\r\n            </div>\r\n            <input\r\n              placeholder=\"Пароль\"\r\n              type='password'\r\n              required ref={password}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n              onMouseDown={handleClickSubmit}\r\n            />\r\n            <input\r\n              placeholder=\"Пароль ещё раз\"\r\n              type='password'\r\n              required ref={passwordAgain}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n              onMouseDown={handleClickSubmit}\r\n            />\r\n            <button className=\"registerButton\" type='submit'>Зарегистрироваться</button>\r\n            <Link to='/login' style={{width:'167%'}}>\r\n              <button className=\"registerLoginButton\">Войти в аккаунт</button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {useHistory} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport './Employee.css'\r\n\r\nexport default function Employee({user}) {\r\n  const history =useHistory()\r\n  const [nominations, setNominations] = useState([])\r\n  const [admin, setAdmin] = useState()\r\n  const [date, setDate] = useState('')\r\n  const [time, setTime] = useState('')\r\n  const [dateStart, setDateStart] = useState()\r\n  const [dateEnd, setDateEnd] = useState()\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {\r\n    0: '',\r\n    1: 'start',\r\n    2: 'end',\r\n    3: 'sick_leave',\r\n    4: 'deleted',\r\n    5: 'vacation',\r\n    6: 'time_off',\r\n    7: 'other'\r\n  }\r\n\r\n  function findStatus(e) {\r\n    for (let i in usersStatuses) {\r\n      if (i == e) {\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n\r\n    const fetchUser = async () => {\r\n      const users = await axios.get('/api/user/' + user.id)\r\n      const res = await axios.get('/api/vacation?id=' + user.id);\r\n      const post = await axios.get('/api/post?type=1&id=' + user.id);\r\n      setNominations(users.data.nomination_status)\r\n\r\n      if (users.data.isadmin !== true) {\r\n        setAdmin('');\r\n      } else {\r\n        setAdmin('*');\r\n      }\r\n\r\n\r\n      if (res.data.length === 0) {\r\n        setDateStart('')\r\n        setDateEnd('')\r\n      } else {\r\n        setDateStart(res.data[0].workdate)\r\n        setDateEnd(res.data[0].worked)\r\n      }\r\n\r\n\r\n\r\n      if (post.data.length === 0) {\r\n        setDate('')\r\n        setTime('')\r\n      } else {\r\n        setDate(post.data[0].workdate)\r\n        setTime(post.data[0].workend)\r\n      }\r\n    }\r\n\r\n      if (user.status === 1 || user.status === 2 || user.status === 3\r\n          || user.status === 5 || user.status === 6 || user.status === 7)\r\n      {\r\n        fetchUser()\r\n    }\r\n\r\n  }, [user.id])\r\n\r\n  const handleClick = () => {\r\n    history.push(`/profile/${user.id}`);\r\n  };\r\n\r\n\r\n  const images = {\r\n    '1': { src: '../images/1.png', title: 'Тучка' },\r\n    '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n    '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n    '4': { src: '../images/4.png', title: 'Портной' },\r\n    '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n    '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n    '7': { src: '../images/7.png', title: 'Крот' },\r\n    '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n    '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n    '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n  };\r\n\r\n\r\n  return (\r\n      <>\r\n        <div onClick={handleClick} className='name'>\r\n        <div className=\"searchBlockContainer\">\r\n            <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className=\"angry-grid\">\r\n                <div id=\"item-0\">\r\n                  <span className='searchName'>{user.user_name}{localUser.isAdmin ? admin : ''}</span>\r\n                </div>\r\n                <div id=\"item-1\">\r\n                  {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n                </div>\r\n                <div id=\"item-2\">\r\n                  {Object.keys(images).map((key, id) => (\r\n                      (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations === key || nominations === parseInt(key)) &&\r\n                      <img\r\n                          key={id}\r\n                          src={images[key].src}\r\n                          title={images[key].title}\r\n                          alt={`Image for ${key}`}\r\n                      />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\n","import {useEffect,useState,useRef} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const [statisticsWork, setStatisticsWork] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [UsersDep, setUsersDeps] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isJob, setIsJob] = useState(true)\r\n    const [modalMain, setModalMain] = useState(false)\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const departId = useParams().username;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //Вывод статистики для админов\r\n        const get_statistics_all_users = async () => {\r\n\r\n            if (localUser.isAdmin === true) {\r\n                const getUsers = {\r\n                    id: localUser._id\r\n                }\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers)\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n\r\n                let all_users = filterUsersFoo(all)\r\n\r\n                if (res.data[0].get_statistics_all_users[0]['all_users'] === null && !!~document.location.href.indexOf('/all_users/')) {\r\n                    alert('Нет не одного пользователя в работе')\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && !!~document.location.href.indexOf('/not_working_today/')) {\r\n                    alert('Сегодня все в работе')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && !!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    alert('Вчера все работали')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && !!~document.location.href.indexOf('/sick_today/')) {\r\n                    alert('Нет болеющих сегодня')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && !!~document.location.href.indexOf('/sick_yesterday')) {\r\n                    alert('Вчера не было сотрудников на больничном')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && !!~document.location.href.indexOf('/vacation_today')) {\r\n                    alert('На сегодня нет сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && !!~document.location.href.indexOf('/vacation_yesterday')) {\r\n                    alert('Вчера не было сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (!!~document.location.href.indexOf('/all_users/')) {\r\n                    setIsJob(isJob)\r\n                    setStatisticsWork(all_users)\r\n                }\r\n                if (!!~document.location.href.indexOf('/not_working_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_working_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['sick_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // функция показывает нажата ли галочка показать дочернии\r\n        const statusChild = async () => {\r\n            const user = await axios.get('/api/user/' + localUser._id)\r\n            setChecked(user.data.see_child)\r\n            setUser(user.data)\r\n        }\r\n\r\n        const fetchUsers = async () => {\r\n            const res = await axios.get('/api/user');\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            const filteredUsers = filterUsersFoo(res.data);\r\n            return filteredUsers.filter(user => user.department_id === departId);\r\n        };\r\n\r\n        const getUsersByDepIsCheckedTrue = async () => {\r\n            const info = { depsId: departId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const depUsers = res.data[0].get_users_by_dep;\r\n            if (depUsers === null) {\r\n                return [];\r\n            } else {\r\n                const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                const filteredUsers = filterUsersFoo(sortedUsers);\r\n                return filteredUsers;\r\n            }\r\n        };\r\n\r\n        const combineUsers = async () => {\r\n            try {\r\n                const users = await fetchUsers();\r\n                let combinedArray = [];\r\n\r\n                if (checked && user.main_department===departId) {\r\n                    setIsJob(false)\r\n                    const us = await getUsersByDepIsCheckedTrue();\r\n                    combinedArray = combinedArray.concat(us);\r\n                } else {\r\n                    combinedArray = users;\r\n                }\r\n\r\n                setUsers(combinedArray);\r\n            } catch (error) {\r\n                console.error('Ошибка при объединении пользователей:', error);\r\n            }\r\n        };\r\n\r\n        // Вызов функции combineUsers для получения и объединения пользователей\r\n        combineUsers();\r\n\r\n\r\n        setIsJob(true)\r\n\r\n        if(departId){\r\n            setUsersDeps([])\r\n        }\r\n        get_statistics_all_users()\r\n        statusChild()\r\n\r\n\r\n    }, [departId,user.main_department])\r\n\r\n\r\n\r\n\r\n    //Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4))\r\n    }\r\n\r\n\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked)\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n    }\r\n\r\n    const handleModalClick = async () => {\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: departId\r\n        }\r\n        const res = await axios.put('/api/user', add)\r\n        setModalMain(false)\r\n    }\r\n\r\n\r\n\r\n    const get_users_by_depIsOpen = async () => {\r\n\r\n        if (isJob) {\r\n            const info = {\r\n                depsId: departId\r\n            }\r\n            const res = await axios.post('/api/get_users_by_dep/', info)\r\n            const dep_users = res.data[0]['get_users_by_dep']\r\n            if (dep_users !== null) {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                let filterUsers = filterUsersFoo(dep_users)\r\n                setUsersDeps(filterUsers)\r\n                setUsers([])\r\n                setIsJob(!isJob)\r\n                setIsOpen(true)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='staff'>\r\n            <>\r\n                {departId && (\r\n                    <>\r\n                        {isJob ?\r\n                            <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                                Показать дочерние\r\n                            </button>\r\n                            :\r\n                            <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\" disabled={checked && user.main_department === departId}>\r\n                                Скрыть дочерние\r\n                            </button>\r\n                        }\r\n                        <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n                        {localUser.isAdmin ? <Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link> : ''}\r\n                    </>\r\n                )}\r\n            </>\r\n\r\n\r\n            <div className=\"employeeWrapper\">\r\n\r\n                {\r\n                    users.map((user, id) => <Employee key={id} user={user} />)\r\n                }\r\n\r\n                {isOpen ?\r\n                    UsersDep.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние</label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\" onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import Staff from '../Staff/Staff'\r\nimport './Feed.css'\r\nimport React from \"react\";\r\n\r\nexport default function Feed() {\r\n  return (\r\n\r\n    <div className='feed'>\r\n      <div>\r\n          <h4 className='h1'>Сервис находится в тестовом режиме  ➜ <a className=\"a4\" href=\"https://sfera.vtb.ru/knowledge/pages?id=110481\" target=\"_blank\">Нашли ошибку? Пиши в комментариях!</a></h4>\r\n      </div>\r\n      <div className=\"feedWrapper\">\r\n\r\n        <Staff/>\r\n      </div>\r\n\r\n        <div className=\"circle-container\">\r\n            <div className=\"circle\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import Feed from \"../../components/Feed/Feed\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport Topbar from \"../../components/Topbar/Topbar\";\r\nimport './Department.css'\r\n\r\nexport default function Department () {\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n        <Feed/>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport './Information.css'\r\n\r\n\r\nexport default function Information() {\r\n  return (\r\n    <>\r\n      <Topbar/>\r\n      <div className='information'>\r\n        <div className=\"informationContainer\">\r\n          <h2 className='infoMainText'>Информация</h2>\r\n          <div className='testInformation'>\r\n          <a className='divLinkInformation' href=\"https://sfera.vtb.ru/knowledge/pages?id=110481\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <h4>Нашли проблему или есть предложения по улучшению пишите в комментариях!</h4></a>\r\n          </div>\r\n          <hr />\r\n          <div className=\"infoContainer\">\r\n            <div className=\"infoDate\">\r\n            </div>\r\n            <div className=\"infoText\">\r\n\r\n              <h3>Кнопка Начать/Закончить</h3>\r\n              <p>После нажатия на кнопку открывается модальное окно. В нем необходимо выбрать <b>\"здоров\"</b> или <b>\"болен\"</b>. Если выбрано <b>\"болен\"</b>, то нужно дополнительно написать причину в комментарии.</p>\r\n              <h3>Статусы</h3>\r\n              <p style={{marginTop: '10px'}}><b style={{color: 'green'}}>Зеленый</b> - пользователь приступил к работе.</p>\r\n              <p><b style={{color: 'red'}}>Красный</b> - пользователь закончил работу.</p>\r\n              <p><b style={{color: 'yellow'}}>Жёлтый</b> - пользователь на больничном.</p>\r\n              {/*<p><b>Белый</b> - пользователь еще не совершал никаких действий.</p>*/}\r\n              <p><b style={{color: 'dodgerblue'}}>Синий</b> - пользователь в отпуске/отгул.</p>\r\n              <p><b style={{color: 'chocolate'}}>Коричневый</b> - пользователь отсутствует по другой причине.</p>\r\n              <p><b style={{opacity: '0.5'}}>Прозрачный</b> - пользователь удален.</p>\r\n              <h3>Главная страница</h3>\r\n              <p>На галвной страницы отражаються все сотрудники вашего департамета/отдела/группы</p>\r\n\r\n              <h3>Моя страница</h3>\r\n              <p>На данной странице пользователь может изменить свой пароль, для этого надо нажать на надпись <b>\"Изменить пароль\"</b>. В модальном окне нужно ввести старый и новый пароль, если операция прошла успешно, модальное окно закроется.</p>\r\n              <p>Ниже на данной странице есть таблица с данными о работе. Можно дополнительно отфильтровать диапазон нужных дат.</p>\r\n              <p>При нажатии на кнопку <b>\"Отпуск/Больничный\"</b> откроется таблица с данными. Доболнительно появится кнопка <b>\"+\"</b>. При нажатии на нее открывается модальное окно, где можно добавить необходимую информацию. {/*Если текущая дата входит в выбранный диапазон, то автоматически меняется <b>статус</b>*/}.</p>\r\n              <h4>Информация для начальников</h4>\r\n              <p>Начальник на странице пользователя дополнительно может изменять информацию, удалять пользователей, сбрасывать пароль,закочить рабочее время сотрудника и добавлять отпуск/больничный.</p>\r\n              <p>Так же начальнику доступна статистика по сотрудникам и информация по отчётам</p>\r\n\r\n              <h3>Дерево</h3>\r\n              <p>Через дерево можно переходить на отделы. При нажатии на стрелочку появляется список служб,отделов или групп.</p>\r\n\r\n              <h3>Страница отдела</h3>\r\n              <p>На странице отдела можно увидеть все сотрудников данного отдела. При нажатии на кнопку <b>\"Сделать главной\"</b> в всплывающем окне можно изменить отображение дочерних департаментов а так же закрепить основной департамент.</p>\r\n\r\n              <h3>Восстановление пользователя</h3>\r\n              <p>Чтобы восстановить пользователя, нужно зайти под его УЗ и нажать кнопку \"Начать\".</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport {Link} from \"react-router-dom\";\r\nimport './Reports.css'\r\n\r\n\r\n\r\nexport default function Reports() {\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <br/>\r\n                    <Link to='/ReportsHistory' className='linkReports'>Отчет по истории</Link>\r\n                    <br/>\r\n                    <Link to='/ReportsNominations' className='linkReports'>Отчет по номинациям</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {Link} from \"react-router-dom\";\nimport '../RepostInfoNominations/RepostInfoNominations.css'\n\nexport default function RepostsInfoNominations({posts}) {\n\n    return (\n        <>\n            <tr className='info'>\n                <td className='infotableend'><Link to={`/profile/${posts.user_id}`} className='name'>{posts.Кто}</Link></td>\n                <td className='infotableend'>{posts.Номинант}</td>\n                <td className='infotablestart'>{posts.nominations_name}</td>\n                <td className='infotableend'>{posts.date}</td>\n            </tr>\n        </>\n    )\n}","import Topbar from '../../components/Topbar/Topbar'\r\nimport '../ReportsNominations/ReportsNominations.css'\r\nimport React, {useRef, useState,useMemo} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport { CSVLink } from 'react-csv';\r\nimport axios from \"axios\";\r\nimport RepostInfoNominations from \"../../components/RepostInfoNominations/RepostInfoNominations\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\n\r\nexport default function ReportsNominations() {\r\n    const [sortConfig, setSortConfig] = useState({ key: 'Кто', direction: 'ascending' });\r\n    const [sortConfig1, setSortConfig1] = useState({ key: 'Номинант', direction: 'ascending' });\r\n    const [sortConfig2, setSortConfig2] = useState({ key: 'nominations_name', direction: 'ascending' });\r\n    const [sortConfig3, setSortConfig3] = useState({ key: 'date', direction: 'ascending' });\r\n\r\n\r\n    const [error, setError] = useState('')\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const username = useParams()\r\n\r\n\r\n\r\n\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\") {\r\n            setError('Введите дату')\r\n        } else {\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')\r\n            }\r\n            if (end < start) {\r\n                setError('Конечная дата меньше начальной')\r\n            } else {\r\n\r\n                const filter = {\r\n                    startDateNomination: historyStartWork.current.value,\r\n                    endDateNomination: historyEndWork.current.value,\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/Reports', filter)\r\n                    setPosts(res.data)\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }\r\n        }\r\n    }\r\n    const handleClickCancel = async () => {\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    const requestSort = (key) => {\r\n        if (historyStartWork.current.value !== '' && historyEndWork.current.value !== '') {\r\n            let direction = 'ascending';\r\n            if (sortConfig.key === key && sortConfig.direction === 'ascending' ||\r\n                sortConfig1.key === key && sortConfig1.direction === 'ascending' ||\r\n                sortConfig2.key === key && sortConfig2.direction === 'ascending' ||\r\n                sortConfig3.key === key && sortConfig3.direction === 'ascending'\r\n            ) {\r\n                direction = 'descending';\r\n            }\r\n            setSortConfig({ key, direction });\r\n            setSortConfig1({ key, direction });\r\n            setSortConfig2({ key, direction });\r\n            setSortConfig3({ key, direction });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const sortedPosts = useMemo(() => {\r\n        const sortablePosts = [...posts];\r\n        if (sortConfig !== null) {\r\n            sortablePosts.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                setisOpen(true)\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        return sortablePosts;\r\n    }, [posts, sortConfig]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <h2 className='ReportsMainText'>Отчет по номинациям</h2>\r\n                    {error && <div className='errorHistoryInfo'>{error}</div>}\r\n                    <hr/>\r\n                    <br/>\r\n                    <div style={{display:'flex'}}>\r\n                        <div>\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Начало работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyStartWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                        <div>\r\n                            —  <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyEndWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                    <div>\r\n                    <button className=\"historyButton\" onClick={handleClick}>Найти</button>\r\n                    </div>\r\n                        <div>\r\n                        <button className=\"historyButton\" onClick={handleClickCancel}>Сбросить</button>\r\n                    </div>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                    {isOpen && <div>\r\n                        <CSVLink data={posts} filename={\"nominations.csv\"}>Download CSV</CSVLink>\r\n                    </div>\r\n                    }\r\n                    <br/>\r\n                    <hr/>\r\n                    <br/>\r\n                    <tr>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('Кто')}>\r\n                            Кто голосовал {sortConfig.key === 'Кто' && (\r\n                            <span className=\"column\">{sortConfig.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('Номинант')}>\r\n                            Номинировал {sortConfig1.key === 'Номинант' && (\r\n                            <span className=\"column1\">{sortConfig1.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('nominations_name')}>\r\n                            Имя номинации {sortConfig2.key === 'nominations_name' && (\r\n                            <span className=\"column2\">{sortConfig2.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('date')}>\r\n                            Дата голосования {sortConfig3.key === 'date' && (\r\n                            <span className=\"column3\">{sortConfig3.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {\r\n                        sortedPosts.map((posts, id) => <RepostInfoNominations key={id} posts={posts} username={username}/>)\r\n                    }\r\n\r\n\r\n{/*{                   <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}\r\n                                currentPage={currentPage}/>}*/}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './RepostsInfo.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function RepostsInfo({posts}) {\r\n\r\n    return (\r\n        <>\r\n        <tr className='info'>\r\n            <td className='number'><Link to={`/profile/${posts.id}`} className='name'>{posts.user_name}</Link></td>\r\n            <td className='infotablestart'>{posts.workstart}</td>\r\n            <td className='infotableend'>{posts.workend}</td>\r\n            <td className='RepostsLong'>{posts.worklong}</td>\r\n            <td className='infotableComment'>{posts.comment}</td>\r\n        </tr>\r\n        </>\r\n    )\r\n}","import Topbar from \"../../components/Topbar/Topbar\";\r\nimport React, {useMemo, useRef, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport RepostsInfo from \"../../components/ReportsInfo/RepostsInfo\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport '../ReportsHistory/ReportsHistory.css'\r\nexport default function ReportsHistory() {\r\n    const [sortConfig, setSortConfig] = useState({ key: 'user_name', direction: 'ascending' });\r\n    const [sortConfig1, setSortConfig1] = useState({ key: 'workstart', direction: 'ascending' });\r\n    const [sortConfig2, setSortConfig2] = useState({ key: 'workend', direction: 'ascending' });\r\n    const [sortConfig3, setSortConfig3] = useState({ key: 'worklong', direction: 'ascending' });\r\n    const [sortConfig4, setSortConfig4] = useState({ key: 'comment', direction: 'ascending' });\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    const username = useParams()\r\n\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\") {\r\n            setError('Введите дату')\r\n        } else {\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')\r\n            }\r\n            if (end < start) {\r\n                setError('Конечная дата меньше начальной')\r\n            } else {\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/Reports', filter)\r\n                    setPosts(res.data)\r\n                    setError('')\r\n                    setIsOpen(true)\r\n                }\r\n                fill()\r\n            }\r\n        }\r\n    }\r\n    const handleClickCancel = async () => {\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    const requestSort = (key) => {\r\n        if (historyStartWork.current.value !== '' && historyEndWork.current.value !== '') {\r\n            let direction = 'ascending';\r\n            if (sortConfig.key === key && sortConfig.direction === 'ascending' ||\r\n                sortConfig1.key === key && sortConfig1.direction === 'ascending' ||\r\n                sortConfig2.key === key && sortConfig2.direction === 'ascending' ||\r\n                sortConfig3.key === key && sortConfig3.direction === 'ascending' ||\r\n                sortConfig4.key === key && sortConfig4.direction === 'ascending'\r\n            ) {\r\n                direction = 'descending';\r\n            }\r\n            setSortConfig({ key, direction });\r\n            setSortConfig1({ key, direction });\r\n            setSortConfig2({ key, direction });\r\n            setSortConfig3({ key, direction });\r\n            setSortConfig4({ key, direction });\r\n        }\r\n    }\r\n\r\n    const sortedPosts = useMemo(() => {\r\n        const sortablePosts = [...posts];\r\n        if (sortConfig !== null) {\r\n            sortablePosts.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortablePosts;\r\n    }, [posts, sortConfig]);\r\n\r\n    const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <h2 className='ReportsMainText'>Отчет по истории</h2>\r\n                    {error && <div className='errorHistoryInfo'>{error}</div>}\r\n                    <hr/>\r\n                    <br/>\r\n                    <div style={{display:'flex'}}>\r\n                        <div >\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Начало работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyStartWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    /></div>\r\n                        <div>\r\n                            —  <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyEndWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                    <div>\r\n                    <button className=\"historyButton\" onClick={handleClick}>Найти</button>\r\n                    </div>\r\n                        <div>\r\n                    <button className=\"historyButton\" onClick={handleClickCancel}>Сбросить</button>\r\n                    </div>\r\n                    </div>\r\n                    <br/>\r\n                    <hr/>\r\n                    <br/>\r\n                    <tr>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('user_name')}>\r\n                            ФИО {sortConfig.key === 'user_name' && (\r\n                            <span className='user_name'>{sortConfig.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('workstart')}>\r\n                            Начало {sortConfig1.key === 'workstart' && (\r\n                            <span className='workstart'>{sortConfig1.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('workend')}>\r\n                            Конец {sortConfig2.key === 'workend' && (\r\n                            <span className=\"workend\">{sortConfig2.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('worklong')}>\r\n                            Длительность {sortConfig3.key === 'worklong' && (\r\n                            <span className=\"worklong\">{sortConfig3.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('comment')}>\r\n                            Комментарий {sortConfig4.key === 'comment' && (\r\n                            <span className=\"comment\">{sortConfig4.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                        currentPosts.map((posts, id) => <RepostsInfo key={id} posts={posts} username={username}/>)\r\n                    }\r\n\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\n\r\n\r\nconst VacanciesItem =({department,vacancies,status})=> {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n    const selectValueStatus = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeDataButton = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValue,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: (userId.length===0 ? old_user : userId),\r\n            search: searchTerm,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:(plannedReleaseDate==='' ? null : plannedReleaseDate)\r\n        }\r\n        console.log('log=',ChangeData)\r\n\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id,department_id,company_id,vacancy_code,project_id,planned_release_date) => {\r\n        if(localUser.isAdmin===true) {\r\n\r\n            if(user_name===null){\r\n                setUser_name([])\r\n            }else {\r\n                setUser_name(user_name)\r\n            }\r\n\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n\r\n            setSelectDep(department_id)\r\n\r\n            setSelectCompany(company_id)\r\n\r\n            setSelectItc(vacancy_code)\r\n\r\n            setProjectItem(project_id)\r\n\r\n            setPlannedReleaseDate(planned_release_date)\r\n        }\r\n    };\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className='departmentName'>{department}</h2>\r\n            <div className=\"vacancies-container\">\r\n                {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)}\r\n                         onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,\r\n                             vac.user_name,vac.user_id,vac.department_id,vac.company_id,vac.vacancy_code,vac.project_id,vac.planned_release_date)}>\r\n\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\"></div>\r\n                            <div id=\"div2\">{vac.user_name}</div>\r\n                            <div id=\"div3\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div4\"></div>\r\n                            <div id=\"div5\">{vac.name}</div>\r\n                            <div id=\"div6\"></div>\r\n                            <div id=\"div7\"></div>\r\n                            <div id=\"div8\">{vac.vacancy_code}</div>\r\n                            <div id=\"div9\"></div>\r\n                            <div id=\"div10\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div11\">{vac.status_name}</div>\r\n                            <div id=\"div12\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div13\">{vac.company_name}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                ))}\r\n\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <div className='MessageItemVacancies'>\r\n                        <span >{message}</span>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <span>Подразделение:</span><br/>\r\n                        <select ref={departRef}\r\n                                value={selectDep}\r\n                                onChange={selectDeps}\r\n                                className='InputVacanciesItemDeps'>\r\n                            {deps.map((dep, name) => <option key={name}\r\n                                                             value={dep.id}>{dep.department_name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Статус:</span><br/>\r\n                        <select ref={statusRef}\r\n                                value={inputValueStatuses}\r\n                                onChange={selectValueStatus}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {status.map((status, name) => <option key={name}\r\n                                                                  value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Грейд:</span><br/>\r\n                        <input type='text'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                               placeholder='Грейд'\r\n                               className='InputVacanciesItem'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <span>Компания:</span><br/>\r\n                        <select ref={companyRef}\r\n                                value={selectCompany}\r\n                                onChange={companySelect}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div>\r\n\r\n                            <span>Имя сотрудника:</span><br/>\r\n                            <div className='inputDiv'>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='Имя сотрудника'\r\n                                    value={searchTerm || user_name}\r\n                                    onChange={handleInputChange}\r\n                                    className='InputVacanciesItem'\r\n                                />\r\n\r\n                                {old_user ?<Link className='ProfileLinkVacancies' style={{paddingLeft:'10px'}} to={`/profile/${old_user}`}>Перейти в профиль</Link>:''}\r\n\r\n\r\n                                {filteredUsers.length > 0 && (\r\n                                    <div className=\"userListContainer\">\r\n                                        {filteredUsers.map((user, index) => (\r\n                                            <div className='selectNameDiv' key={index} value={user.id}\r\n                                                 onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                {user.user_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <span>Дата выхода:</span><br/>\r\n                                <input type='date'\r\n                                       ref={DateReleaseRef}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                       value={plannedReleaseDate || ''}\r\n                                       onChange={DataCurrent}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>ИТС:</span><br/>\r\n                                <input type='text'\r\n                                       ref={ITCRef}\r\n                                       value={selectItc}\r\n                                       onChange={SelectITC}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>Проект:</span><br/>\r\n                                <input type='text'\r\n                                       ref={projectRef}\r\n                                       value={projectItem}\r\n                                       onChange={Project}\r\n                                       placeholder='Проект(Нет проекта=0)'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className='divHistory'>\r\n                            История\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <button className=\"ModalButton\" type=\"submit\" onClick={ChangeDataButton}>\r\n                                Сохранить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>    )\r\n}\r\nexport default VacanciesItem","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nimport './VacanciesAdd.css'\r\nimport axios from \"axios\";\r\n\r\nfunction VacanciesAdd() {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [deps, setDeps] = useState([])\r\n    const [userId, setUserId] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messageITC, setMessageITC] = useState('')\r\n    const [isView, setIsView] = useState(false)\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [checkVal, setCheckVal] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const NameVacationRef=useRef()\r\n    const TeamRef = useRef()\r\n    const StatusRef = useRef()\r\n    const CodeVacations = useRef()\r\n    const Company = useRef()\r\n    const Description = useRef()\r\n    const CodeProject = useRef()\r\n    const Grade = useRef()\r\n\r\n\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n\r\n\r\n    const changeVal = () => {\r\n        setCheckVal(!checkVal)\r\n    }\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const departament = await axios.get('/api/departments/')\r\n            setDeps(departament.data)\r\n\r\n\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            statuses.data.unshift(statuses.data.splice(statuses.data.findIndex(status => status.name === \"Резерв\"), 1)[0]);\r\n            setStatus(statuses.data)\r\n\r\n\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(companies.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n            setVacancies(getVacancies.data)\r\n        }\r\n\r\n\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const clickHandler = async () => {\r\n\r\n        const codeVacation = CodeVacations.current.value.toLowerCase().trim();\r\n\r\n        // Проверяем, есть ли уже вакансия с таким кодом\r\n        const existingVacancy = vacancies.some(({ get_vacancies }) =>\r\n            get_vacancies.some(({ vacancies }) =>\r\n                vacancies.some(vacancy =>\r\n                    vacancy.vacancy_code && vacancy.vacancy_code.toLowerCase() === codeVacation\r\n                )\r\n            )\r\n        );\r\n\r\n        if (existingVacancy) {\r\n            setMessageITC('Такая ИТС уже существует');\r\n            setError('');\r\n            setMessage('');\r\n            return;\r\n        }\r\n\r\n        let userNameToSend = '';\r\n        if (searchTerm !== '') {\r\n            userNameToSend = userId;\r\n        }\r\n        const Vacations = {\r\n            namevacancies: NameVacationRef.current.value,\r\n            description: Description.current.value,\r\n            team_id: TeamRef.current.value,\r\n            status_id: StatusRef.current.value,\r\n            codeVacations: codeVacation.toUpperCase(),\r\n            codeProject: CodeProject.current.value,\r\n            company_id: Company.current.value,\r\n            grade: Grade.current.value,\r\n            is_checked: checkVal,\r\n            userName: userNameToSend\r\n        };\r\n\r\n        if (\r\n            NameVacationRef.current.value === '' ||\r\n            Description.current.value === '' ||\r\n            TeamRef.current.value === '' ||\r\n            StatusRef.current.value === '' ||\r\n            codeVacation === '' ||\r\n            CodeProject.current.value === '' ||\r\n            Grade.current.value === '' ||\r\n            Company.current.value === ''\r\n        ) {\r\n            setError('Заполните поле');\r\n            setIsView(true);\r\n        } else {\r\n            const res = await axios.post('/api/Vacations/', Vacations);\r\n            if (res.status === 200) {\r\n                setError('');\r\n                setMessage('Вакансия добавлена');\r\n                const vacancies_function={\r\n                    departId: localUser.departmentId,\r\n                    user_id: localUser._id\r\n                }\r\n                const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n                setVacancies(getVacancies.data)\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearInput = () => {\r\n        Description.current.value = ''\r\n        NameVacationRef.current.value=''\r\n        CodeVacations.current.value=''\r\n        CodeProject.current.value=''\r\n        Grade.current.value=''\r\n        setSearchTerm('')\r\n        setFilteredUsers([])\r\n        setSearchQuery('')\r\n        setMessage('')\r\n        setError('')\r\n    }\r\n\r\n\r\n\r\n    function handleClickSubmit() {\r\n        setMessageITC('')\r\n        setError('')\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <div className=\"VacationsMainAdd\">\r\n                <h2 style={{textAlign:'center'}}>Добавить вакансию</h2>\r\n                {\r\n                    !error && isView && message && !messageITC &&\r\n                    <div className='error'>Добавленно</div>\r\n                }\r\n                {\r\n                    message && !error && !isView && !messageITC &&\r\n                    <div className='error'>Добавленно</div>\r\n                }\r\n                {\r\n                    error && isView && !messageITC &&\r\n                    <div className='error'>Заполните все поля</div>\r\n                }\r\n                {\r\n                    messageITC && !message &&\r\n                    <div className='error'>{messageITC}</div>\r\n                }\r\n                <div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabelName\">Наименование вакансии</div>\r\n                    <input ref={NameVacationRef} type='text' placeholder='Наименование вакансии' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Описание вакансии</div>\r\n                    <textarea ref={Description} placeholder='Описание вакансии' className='InputVacationAdd' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Подразделение</div>\r\n                    <select ref={TeamRef} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        {deps.map((dep, name) => <option selected={dep.id === localUser.departmentId} key={name}\r\n                                                         value={dep.id}>{dep.department_name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Статус</div>\r\n                    <select ref={StatusRef} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        {status.map((status, id) => <option key={id} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"InputLabel\">Код вакансии</div>\r\n                    <input ref={CodeVacations}\r\n                           value={searchQuery}\r\n                           onChange={handleSearchChange}\r\n                           type='text'\r\n                           placeholder='Код вакансии'\r\n                           className='InputVacation'\r\n                           onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='inputDiv'>\r\n                    <div className=\"InputLabel\">Имя сотрудника</div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Имя сотрудника'\r\n                        className='InputVacation'\r\n                        value={searchTerm}\r\n                        onChange={handleInputChange}\r\n                        onMouseDown={handleClickSubmit}\r\n                    />\r\n                    <div className='divSelect'>\r\n                        {filteredUsers.length > 0 && (\r\n                            <div>\r\n                                {filteredUsers.map((user, index) => (\r\n                                    <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                        {user.user_name}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"InputLabel\">Компания</div>\r\n                    <select ref={Company} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        <option value=''>Компания</option>\r\n                        {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                    </select>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Код проекта</div>\r\n                    <input ref={CodeProject} type='number' placeholder='Код проекта(текущий бюджет=0)' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Грейд</div>\r\n                    <input ref={Grade} type='number' placeholder='Грейд' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div style={{marginTop:'20px'}}>\r\n                    <label style={{paddingRight:'10px'}}>Нужна вакансия после завершения проекта?</label>\r\n                    <label htmlFor='Vacation'>\r\n                        <input\r\n                            type='radio'\r\n                            value={true}\r\n                            id='Vacation'\r\n                            name='VacationTrue'\r\n                            checked={!checkVal}\r\n                            onChange={changeVal}\r\n                        />Да</label>\r\n                    <label htmlFor='Vacation1'>\r\n                        <input\r\n                            type='radio'\r\n                            value={false}\r\n                            id='Vacation'\r\n                            name='VacationFalse'\r\n                            checked={checkVal}\r\n                            onChange={changeVal}\r\n                        />Нет</label>\r\n                </div>\r\n                <div style={{textAlign:'center',paddingTop:\"20px\"}}>\r\n                    <button className=\"filterButton\" onClick={clickHandler}>Сохранить</button>\r\n                    <button className=\"filterButton\" onClick={clearInput}>Сбросить</button>\r\n                    {/*<button className=\"filterButton\" onClick={() => window.location.href = `/department/${depsId.depsId}`} >Выход</button>*/}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesAdd","import React, {useEffect,useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [projectIds, setProjectIds] = useState([]);\r\n    const [filteredVacancies, setFilteredVacancies] = useState([]);\r\n    const [activeFilters, setActiveFilters] = useState({\r\n\r\n        company: [],\r\n        status: [],\r\n        project: [],\r\n        department: null,\r\n        startDate: null,\r\n        endDate: null\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function = {\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function)\r\n            setVacancies(getVacancies.data[0].get_vacancies);\r\n            const fetchedVacancies = getVacancies.data[0].get_vacancies;\r\n            const uniqueProjectIds = new Set();\r\n\r\n            fetchedVacancies.forEach(department => {\r\n                department.vacancies.forEach(vacancy => {\r\n                    if (vacancy.project_id !== undefined && vacancy.project_id !== null) {\r\n                        uniqueProjectIds.add(vacancy.project_id);\r\n                    }\r\n                });\r\n            });\r\n            const sortedProjectIds = Array.from(uniqueProjectIds).sort((a, b) => a - b);\r\n            const sortedUniqueProjectIds = new Set(sortedProjectIds);\r\n            setProjectIds(sortedUniqueProjectIds);\r\n\r\n        }\r\n        VacanciesView()\r\n    }, [departId])\r\n\r\n\r\n    useEffect(() => {\r\n        applyFilters(activeFilters);\r\n    }, [vacancies, activeFilters]);\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true)\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false)\r\n    }\r\n\r\n    const handleClickFilter = (type, value) => {\r\n        setActiveFilters(prevFilters => {\r\n            let newFilters;\r\n            if (type === 'status') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    status: prevFilters.status.includes(value)\r\n                        ? prevFilters.status.filter(status => status !== value)\r\n                        : [...prevFilters.status, value]\r\n                };\r\n            } else if (type === 'company') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    company: prevFilters.company.includes(value)\r\n                        ? prevFilters.company.filter(company => company !== value)\r\n                        : [...prevFilters.company, value]\r\n                };\r\n            } else if (type === 'department') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    department: prevFilters.department === value ? null : value\r\n                };\r\n            } else if (type === 'project') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    project: prevFilters.project.includes(value)\r\n                        ? prevFilters.project.filter(project => project !== value)\r\n                        : [value]\r\n                };\r\n            }\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const handleDateChange = (type, value) => {\r\n        if (type === 'startDate') {\r\n            setStartDate(value);\r\n        } else if (type === 'endDate') {\r\n            setEndDate(value);\r\n        }\r\n    };\r\n\r\n\r\n    const applyFilters = (filters) => {\r\n        let filtered = vacancies;\r\n\r\n        if (filtered) {\r\n            if (filters.department) {\r\n                filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\r\n            }\r\n\r\n            if (filters.company.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.status.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.project.length > 0) {\r\n                console.log('Filtering by project:', filters.project);\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                }));\r\n                console.log('Filtered by project:', filtered);\r\n            }\r\n\r\n            if (filters.startDate || filters.endDate) {\r\n                filtered = filtered.map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => {\r\n                        const vacancyDate = new Date(vacancy.create_date);\r\n                        const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n                        const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n                        return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\r\n                    })\r\n                })).filter(department => department.vacancies.length > 0);\r\n            }\r\n        }\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        setActiveFilters(prevFilters => {\r\n            const newFilters = {\r\n                ...prevFilters,\r\n                startDate: startDate || null,\r\n                endDate: endDate || null\r\n            };\r\n            applyFilters(newFilters);\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const reset = () => {\r\n        setActiveFilters({\r\n            company: [],\r\n            status: [],\r\n            project:[],\r\n            department: null,\r\n            startDate: null,\r\n            endDate: null\r\n        });\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setFilteredVacancies(vacancies);\r\n    };\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (Number(statusId)) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar/>\r\n            <div className=\"mainContainer\">\r\n                <Sidebar/>\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ?\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>:''\r\n                    }\r\n                    {isAddingVacancies ? (\r\n                        <VacanciesAdd/>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"VacationsContainerTop\">\r\n\r\n                                <div>\r\n                                    <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                                    <button className='btnStaff' onClick={clickAdd}>Добавить вакансию</button>\r\n                                </div>\r\n                                <div style={{padding:'20px'}}>\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={(e) => handleDateChange('startDate', e.target.value)}\r\n                                    />\r\n                                    —\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={endDate}\r\n                                        onChange={(e) => handleDateChange('endDate', e.target.value)}\r\n                                    />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                    <div style={{display:'flex'}}>\r\n                                        <div>\r\n                                            <select\r\n                                                className=\"ModalInputUpdateSelect\"\r\n                                                onChange={(e) => handleClickFilter('department', e.target.value)}\r\n                                            >\r\n                                                {vacancies.map((dep, index) => (\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={dep.department_id}\r\n                                                    >\r\n                                                        {dep.department}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div style={{paddingLeft:'20px',paddingTop:'5px'}}>Проект:</div>\r\n                                       <div>\r\n                                               <select\r\n                                                   className='ModalInputUpdateSelect'\r\n                                                   onChange={(e) => handleClickFilter('project', e.target.value)}\r\n\r\n                                               >\r\n                                                   {projectIds.map((projectId, id) => (\r\n                                                       <option\r\n                                                           key={id}\r\n                                                           value={projectId}\r\n                                                       >\r\n                                                           {projectId}\r\n                                                       </option>\r\n                                                   ))}\r\n\r\n                                               </select>\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\r\n                                                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\r\n                                                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                filteredVacancies.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                       department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                            }\r\n\r\n\r\n                            {/*                               {\r\n                                   filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }*/}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView","import './AdminPanel.css'\r\nimport Topbar from '../Topbar/Topbar'\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function  AdminPanel() {\r\n\r\n       return (\r\n               <div className=\"content\">\r\n\r\n                   <div className=\"main-content\">\r\n                       <div className='adminDiv'>\r\n                           <div className=\"tiles-container\">\r\n                               <div className=\"tile\">\r\n                                  <Link to='/' className='linkReports'>Вакансии</Link>\r\n                               </div>\r\n                               <div className=\"tile\">\r\n                                   <Link to='/' className='linkReports'>Назначить роль</Link>\r\n                               </div>\r\n                               <div className=\"tile\">\r\n                                   <Link to='/' className='linkReports'>Справочник</Link>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n           </div>\r\n    )\r\n}\r\n","import Topbar from '../Topbar/Topbar';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nexport default function Layout({ children }) {\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <div className=\"mainContainer\">\r\n                <Sidebar />\r\n                <div className=\"content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import {useContext,useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport Error from \"./pages/Error/Error\";\nimport Login from \"./pages/Login/Login\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Register from \"./pages/Register/Register\";\nimport Department from './pages/Department/Department';\nimport Information from \"./pages/Information/Information\";\nimport Reports from \"./pages/Reports/Reports\";\nimport ReportsNominations from \"./pages/ReportsNominations/ReportsNominations\";\nimport ReportsHistory from \"./pages/ReportsHistory/ReportsHistory\";\nimport Message from \"./components/MessagePost/MessagePost\";\nimport VacanciesView from \"./components/VacanciesView/VacanciesView\"\nimport VacanciesAdd from \"./components/VacanciesAdd/VacanciesAdd\"\nimport AdminPanel from './components/AdminPanel/AdminPanel'\nimport Layout from \"./components/Layout/Layout\";\n\n\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const {user} = useContext(AuthContext)\n  const userStorage = JSON.parse(localStorage.getItem('user'))\n\n  const authUser = user || userStorage\n\n\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {authUser ? <Redirect to={`/department/${authUser.main_department}`} /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/login\">\n            {authUser ? <Redirect to={`/department/${authUser.main_department}`} /> : <Login />}\n          </Route>\n          <Route path=\"/register\">\n            {authUser ? <Redirect to=\"/\" /> : <Register />}\n          </Route>\n          <Route path=\"/profile/:username\">\n            {authUser ? <Layout><Profile authUser={authUser} /></Layout> : <Login />}\n          </Route>\n          <Route path=\"/department/:username\">\n            {authUser ? <Layout><Department /></Layout> : <Login />}\n          </Route>\n          <Route path=\"/information\">\n            {authUser ? <Information /> : <Login />}\n          </Route>\n          <Route path=\"/reports\">\n            {authUser ? <Reports /> : <Login />}\n          </Route>\n          <Route path=\"/reportsnominations\">\n            {authUser ? <ReportsNominations /> : <Login />}\n          </Route>\n          <Route path=\"/reportshistory\">\n            {authUser ? <ReportsHistory /> : <Login />}\n          </Route>\n          <Route path=\"/all_users\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/not_working_today\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/not_worked_yesterday\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/sick_today\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/sick_yesterday\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/vacation_today\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/vacation_yesterday\">\n            {authUser ? <Department /> : <Login />}\n          </Route>\n          <Route path=\"/message\">\n            {authUser ? <Message /> : <Login />}\n          </Route>\n          <Route path=\"/vacanciesview\">\n            {authUser ? <VacanciesView /> : <Login />}\n          </Route>\n          <Route path=\"/vacanciesadd\">\n            {authUser ? <VacanciesAdd /> : <Login />}\n          </Route>\n          <Route path=\"/adminpanel\">\n            {authUser ?  <Layout><AdminPanel /></Layout> : <Login />}\n          </Route>\n          <Route path=\"*\">\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/stable';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/ie9'\nimport 'core-js/stable';\nimport  'react-app-polyfill/ie11' ;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {AuthContextProvider} from './context/AuthContext'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}