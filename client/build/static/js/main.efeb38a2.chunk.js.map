{"version":3,"sources":["context/AuthReducer.js","context/AuthContext.js","pages/Error/Error.jsx","apiCalls.js","pages/Login/Login.jsx","components/InfoPost/InfoPost.jsx","components/Pagination/Pagination.jsx","components/VacationPost/VacationPost.jsx","components/Templates/Modal/Modal.js","components/ProfileInfo/HistoryInfo/HistoryInfo.jsx","components/ProfileInfo/Skills/Skills.jsx","components/VacanciesItem/ModalVacanciesItem/ModalVacanciesItem.jsx","components/Templates/ModalVacancies/ModalVacancies.js","components/ProfileInfo/Editing/Editing.jsx","components/ProfileInfo/DeleteUser/DeleteUser.jsx","components/ProfileInfo/ResetPassword/ResetPassword.jsx","components/ProfileInfo/FinishTime/FinishTime.jsx","components/ProfileInfo/AddNomination/AddNomination.jsx","components/ProfileInfo/СhangePassword/СhangePassword.jsx","components/ProfileInfo/VoteNominations/VoteNominations.jsx","components/ProfileInfo/ProfileInfo.jsx","components/Home/Home.jsx","pages/Profile/Profile.jsx","pages/Register/Register.jsx","components/Employee/Employee.jsx","components/Staff/Staff.jsx","components/Feed/Feed.jsx","pages/Department/Department.jsx","components/Status/Status.jsx","components/SearchBlock/SearchBlock.jsx","components/Topbar/Statistics/Statistics.jsx","components/Topbar/Topbar.jsx","pages/Information/Information.jsx","pages/Reports/Reports.jsx","components/RepostInfoNominations/RepostInfoNominations.jsx","pages/ReportsNominations/ReportsNominations.jsx","components/ReportsInfo/RepostsInfo.jsx","pages/ReportsHistory/ReportsHistory.jsx","components/VacanciesItem/VacanciesItem.jsx","components/Sidebar/Sidebar.jsx","components/VacanciesAdd/VacanciesAdd.jsx","components/VacanciesView/VacanciesView.jsx","components/ProfileInfo/AdminPanel/Role/Role.jsx","components/ProfileInfo/AdminPanel/DictionarySkills/DictionarySkills.jsx","components/ProfileInfo/AdminPanel/AdminPanel.jsx","components/Layout/Layout.jsx","App.js","index.js"],"names":["AuthReducer","state","action","type","user","posts","isFetching","error","payload","INITIAL_STATE","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","localStorage","setItem","JSON","stringify","Provider","value","Error","className","loginCall","userCredential","a","axios","post","res","data","Login","useState","errorMessage","setErrorMessage","serverError","setServerError","useEffect","get","then","response","catch","message","email","useRef","password","useContext","onSubmit","e","preventDefault","current","toUpperCase","placeholder","ref","required","minLength","disabled","CircularProgress","style","color","to","width","InfoPost","workdate","workstart","workend","worklong","healthstart","healthend","commentstart","commentend","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","length","map","number","id","onClick","VacationPost","worked","work","replace","typework_id","Modal","active","setActive","stopPropagation","Close","HistoryInfo","newPosts","setPosts","vacationPosts","setVacationPosts","setIsFetching","setCurrentPage","lastPostIndex","firstPostIndex","currentlyPosts","slice","lastPostIndexVacations","firstPostIndexVacations","currentlyVacations","historyStartWork","historyEndWork","isFilter","setIsFilter","setError","modalError","setModalError","username","useParams","localUser","_id","parse","getItem","isJob","setIsJob","modalActive","setModalActive","modalName","setModalName","modalComment","vacationStart","vacationEnd","fetchUserpost","sort","p1","p2","Date","pageNumber","handleClick","start","end","filter","startdate","enddate","userId","typework","fill","handleClickCancel","fetchUservacation","handleClickAdd","vacation","status","comment","window","location","reload","console","log","handleName","target","display","justifyContent","fontSize","marginLeft","htmlFor","name","onChange","checked","Skills","modalActiveSkills","setModalActiveSkills","skill","searchTermSkills","setSearchTermSkills","skillsAll","setAllSkills","skillId","setSkillId","userSkills","setUserSkills","filteredSkills","setFilteredSkills","selectedNumber","setSelectedNumber","getSkills","getAllSkills","getUserSkills","ButtonAddSkills","addSkills","user_id","skill_id","self_grade","SkillDelete","not_active_skill","is_active","changeGrade","event","undefined","newGradeSelf","newGradeHead","fontWeight","termCities","filtered","toLowerCase","includes","handleSkillsClick","number1","array","defaultValue","head_grade","isAdmin","ModalVacanciesItem","allDateUser","setInputValueVacanciesName","vacancies_name","setInputValueGrade","grade","setSelectDep","vacancies_department_id","setInputValueDescription","description","setInputValueStatuses","vacancies_status_id","setSelectCompany","company_id","setSelectItc","vacancy_code","setProjectItem","project_id","setVacanciesId","vacancy_id","setOld_user","planned_release_date","date","moment","format","setPlannedReleaseDate","setStatus","selectDep","company","setCompany","selectCompany","selectItc","projectItem","setMessage","plannedReleaseDate","vacanciesId","inputValueVacanciesName","old_user","inputValueDescription","inputValueStatuses","inputValueGrade","setUser_name","searchTerm","setSearchTerm","setUserId","filteredUsers","setFilteredUsers","users","setUsers","statusRef","departRef","companyRef","ITCRef","projectRef","DateReleaseRef","Department","statuses","departs","setDeps","deps","ChangeDataButton","ChangeData","namevacanciesId","namevacancies","search","put","dep","department_name","test","user_name","term","index","userName","handleUserClick","ModalVacancies","Editing","selectedValue","setSelectedValue","cityName","setCityName","setUser","nameValue","setNameValue","setEmail","emailChange","setEmailChange","phone","setPhone","phoneChange","setPhoneChange","additional_contact","setAdditional_Contact","additional_contact_change","setAdditional_Contact_Change","distribution_group","setDistribution_Group","distribution_group_change","setDistribution_Group_Change","activity_profile","setActivity_Profile","activity_profile_change","setActivity_Profile_Change","CityPlace","setCityPlace","CityPlace_Change","setCityPlace_Change","surnameValue","setSurnameValue","options","setOptions","localUse","modalDep","phoneNumber","additionalContact","distributionGroup","activityProfile","modalCity","modalCityPlace","citiesId","setCitiesId","searchTermCities","setSearchTermCities","filteredCities","setFilteredCities","cities","setCities","getDeps","extractedOptions","extractOptions","department_id","node","optionsList","Name","Subclasses","forEach","subclass","concat","getNameDeps","fetchUser","city","phone_number","place_of_residence","split","surname","getNameAndSurname","newInfo","departmentId","isadmin","see_child","main_department","city_id","cityPlaceChange","newInfo2","formattedValue","cleaned","startsWith","match","Boolean","join","formatPhoneNumber","city_name","handleUserClickCities","option","DeleteUser","modalActiveDelete","setModalActiveDelete","handleDelete","newPost","healthEnd","href","ResetPassword","modalResetPassword","setModalResetPassword","handleResetPassword","resetPassword","newPassword","FinishTime","modalFinishTime","setModalFinishTime","ResetTime","commentEnd","workEnd","now","alert","AddNomination","modalVote","setModalVote","updateNominationStatus","setCheckedItems","check","setCheck","er","setErr","vote","setVote","fetchVote","rez","prevCheckedItems","nomination_status","secureButton","addNomination","id_nomination","clearSecureButton","voteId","prevState","inputClick","nominations_name","src","alt","ChangePassword","modalActivePass","setModalActivePass","modalOldPass","modalNewPass","modalNewPassAgain","handleChangePassword","passwords","oldPassword","VoteNominations","modalActiveVote","setModalActiveVote","inputValues","setInputValues","selectedInputIndex","setSelectedInputIndex","userVote","setUserVote","votearray","setVotearray","b","localeCompare","mass","element","position","prev","handleInputChangeUsers","cityId","toString","arr","str1","existingIndex","findIndex","item","newArray","votearr","clickVote","voteUser","vote_for_user","nominations_id","ProfileInfo","setTimeZone","hasImage","setHasImage","setAllDateUser","modalVacancies","setModalVacancies","depsName","setDepsName","usersStatuses","hasImageStatus","Object","keys","images","some","key","parseInt","Array","isArray","title","k","findStatus","paddingTop","Create","cursor","paddingLeft","Delete","Settings","border","padding","charAt","newStatus","Home","Profile","Register","passwordAgain","firstname","department","history","useHistory","telephone","link_vacancies","companyName","setGrade","project","setProject","inputValue","setInputValue","checkVal","setCheckVal","vacancies","setVacancies","filteredVacancies","setFilteredVacancies","changeVal","getVacancies","setCustomValidity","trim","noITC","ITC","handleSubmit","handleClickSubmit","onMouseDown","HelpOutline","vac","onInput","Employee","nominations","setNominations","admin","setAdmin","setDate","time","setTime","dateStart","setDateStart","dateEnd","setDateEnd","Staff","setChecked","statisticsWork","setStatisticsWork","UsersDep","setUsersDeps","isOpen","setIsOpen","modalMain","setModalMain","departId","filterUsersFoo","get_statistics_all_users","getUsers","all","all_users","document","indexOf","statusChild","fetchUsers","getUsersByDepIsCheckedTrue","info","depsId","depUsers","get_users_by_dep","sortedUsers","combineUsers","combinedArray","us","clickcheckbox","ischeked","handleModalClick","add","get_users_by_depIsOpen","dep_users","filterUsers","float","Feed","require","Status","places","setplaces","office","setoffice","workplace","setworkplace","setPlace","err","modalActiveReserve","setModalActiveReserve","PlaceRef","DataTime","Offices","is_canceled","offices","officesMap","placeMap","location_res","handlerStart","healthStart","commentStart","workStart","handlerEnd","newstatus","clickReserve","space","wp_id","ww","reservePlace","booking_date","DataClick","clickOffice","clickPlace","clearPlace","canceled","deletePlace","size","height","textAlign","workplace_id","place","SearchBlock","Statistics","countAll_users","setCountAll_users","countWorked_today","setCountWorked_today","countWorked_yesterday","setCountWorked_yesterday","countSickLeave_today","setCountSickLeave_today","countSick_yesterday","setCountSick_yesterday","countVacation_today","setCountVacation_today","countVacation_yesterday","setCountVacation_yesterday","typeworkColors","setTypeworkColors","user_typework","Topbar","searchValue","setSearchValue","allUsers","setAllUsers","findUsers","setFindUsers","isBlock","setIsBlock","setNotificationCount","fetchUserName","onKeyPress","ExitToApp","clear","align","Information","rel","marginTop","opacity","Reports","RepostsInfoNominations","Кто","Номинант","ReportsNominations","direction","sortConfig","setSortConfig","sortConfig1","setSortConfig1","sortConfig2","setSortConfig2","sortConfig3","setSortConfig3","setisOpen","startDateNomination","endDateNomination","requestSort","sortedPosts","useMemo","sortablePosts","filename","RepostsInfo","ReportsHistory","sortConfig4","setSortConfig4","indexOfLastPost","indexOfFirstPost","currentPosts","VacanciesItem","modalVacations","setModalVacations","setSelectedVacanciesName","setSelectedVacanciesStatuses","setSelectedVacanciesDescription","setSelectedVacanciesGrade","getColorByStatusId","statusId","status_id","create_date","status_name","company_name","Sidebar","setDep","openPath","setOpenPath","findPathToNode","tree","path","findNode","currentPath","department_tree_to_json","isNodeOpen","toggleNode","nodeId","nodeLabel","collapsed","departments","departments1","departments2","paddingBottom","VacanciesAdd","searchQuery","setSearchQuery","messageITC","setMessageITC","isView","setIsView","NameVacationRef","TeamRef","StatusRef","CodeVacations","Company","Description","CodeProject","Grade","departament","unshift","splice","companies","vacancies_function","clickHandler","codeVacation","get_vacancies","vacancy","userNameToSend","Vacations","team_id","codeVacations","codeProject","is_checked","selected","paddingRight","VacanciesView","isAddingVacancies","setIsAddingVacancies","startDate","setStartDate","endDate","setEndDate","projectIds","setProjectIds","activeFilters","setActiveFilters","fetchedVacancies","uniqueProjectIds","Set","sortedProjectIds","from","sortedUniqueProjectIds","applyFilters","handleClickFilter","prevFilters","newFilters","handleDateChange","filters","String","vacancyDate","Number","marginRight","projectId","boxShadow","background","Roles","roles","setRoles","searchTermUsers","setSearchTermUsers","fetchData","resRoles","rolesData","get_roles","resUsers","gap","role","DictionarySkills","modalDictionarySkills","setModalDictionarySkills","handleRole","AdminPanel","Layout","App","userStorage","authUser","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efeb38a2.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_START':\r\n      return {\r\n        user: null,\r\n        posts: null,\r\n        isFetching: true,\r\n        error: false,\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        user: action.payload,\r\n        posts: null,\r\n        isFetching: false,\r\n        error: false,\r\n      }\r\n    case 'LOGIN_FAIL':\r\n      return {\r\n        user: null,\r\n        posts: null,\r\n        isFetching: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AuthReducer","import { createContext, useReducer } from \"react\"\r\n\r\nimport AuthReducer from './AuthReducer'\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n  isFetching: false,\r\n  error: false,\r\n}\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE)\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE)\r\n\r\n  if(state.user !== null){\r\n    localStorage.setItem('user', JSON.stringify(state.user))\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user:state.user,\r\n        isFetching:state.isFetching,\r\n        error: state.error,\r\n        dispatch\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import './Error.css'\r\n\r\nexport default function Error() {\r\n  return (\r\n      <div className='errorMessage'>\r\n        <h1 className='errorTitle'>ERROR 404!</h1>\r\n      </div>\r\n  )\r\n}\r\n","import axios from \"axios\"\r\n\r\nconst loginCall = async (userCredential, dispatch) => {\r\n  dispatch({type: \"LOGIN_START\"})\r\n  try {\r\n    const res = await axios.post(\"api/login\", userCredential)\r\n    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data})\r\n  } catch (error) {\r\n    dispatch({type: \"LOGIN_FAIL\", payload: error})\r\n  }\r\n}\r\nexport default loginCall","import {useContext, useRef, useEffect,useState} from 'react';\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport  loginCall  from '../../apiCalls';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport './Login.css'\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [serverError, setServerError] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        axios.get('/api/user')\r\n            .then(response => {\r\n                if (!response) {\r\n                    throw new Error('Сервер недоступен');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setServerError(true);\r\n                setErrorMessage('Ошибка: ' + error.message);\r\n            });\r\n    }, []);\r\n\r\n\r\n  const email = useRef()\r\n  const password = useRef()\r\n\r\n  const {isFetching, error, dispatch } = useContext(AuthContext)\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    loginCall({email:email.current.value.toUpperCase(), password:password.current.value}, dispatch)\r\n  }\r\n\r\n  return (\r\n      <div className=\"login\">\r\n          {!errorMessage && error &&\r\n              <div className='error'>\r\n                  Неправильный логин или пароль\r\n              </div>}\r\n\r\n          {serverError &&\r\n              <div className='error'>\r\n                  Сервер недоступен\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginCenter\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input \r\n              placeholder=\"Email\"\r\n              className=\"loginInput\" \r\n              type='emailLogin'\r\n              ref={email} \r\n              required\r\n            />\r\n            <input \r\n              placeholder=\"Password\" \r\n              type='password' \r\n              className=\"loginInput\" \r\n              ref={password} \r\n              required\r\n              minLength='6'\r\n            />\r\n            <button  className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n\r\n              {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Войти'}\r\n\r\n            </button>\r\n\r\n            {/* <span className=\"loginForgot\">Забыли пароль?</span> */}\r\n            <Link to='/register' style={{width:'167%'}}>\r\n              <button className=\"loginRegisterButton\" disabled={isFetching}>\r\n                {isFetching ? <CircularProgress style={{color:'white'}}/> : 'Создать новый аккаунт'}\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './InfoPost.css'\n\nexport default function InfoPost({post}) {\n\n\n  return (\n      <tr className='info'>\n          <td className='infopostdate'>{post.workdate}</td>\n          <td className='infotable'>{post.workstart}</td>\n          <td className='infotable'>{post.workend}</td>\n          <td className='infotable'>{post.worklong}</td>\n          <td className='infotable'>{post.healthstart === '0'? 'Болен' : 'Здоров'}<br/><br/>{post.healthend === '1' || post.healthend === '-' ? 'Здоров' : post.healthend === '0' ? 'Болен' : ''}</td>\n          <td className='infoComment'>{post.commentstart}<br/><br/>{post.commentend}</td>\n      </tr>\n\n\n\n  )\n}\n\n\n","import './Pagination.css'\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, paginate, currentPage}) {\r\n  const pageNumbers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { pageNumbers.length > 1\r\n        ? <div className=\"pagination\">\r\n\r\n            {\r\n              pageNumbers.map((number, id) => (\r\n                <div key={id} className={currentPage === number ? 'pageItemNow' : `pageItem`} onClick={() => paginate(number)}>\r\n                  {number}\r\n                </div>\r\n              ))\r\n            }\r\n\r\n          </div>\r\n      : <></>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import './VacationPost.css'\n\nexport default function VacationPost({post}) {\n\n\n  return (\n      <tr>\n\n        <td className=\"vacationpost\">{post.workdate}</td>\n        <td className=\"vacationpost\">{post.worked}</td>\n        <td className=\"vacationpost\">{post.work.replace(/(^|\\s)0/g, \"$1\")}</td>\n        <td className=\"vacationpost\">{post.typework_id === '5' ? 'Отпуск' :post.typework_id === '3' ? 'Больничный' :post.typework_id === '7' ? 'Другая причина':post.typework_id === '6' ? 'Отгул':''}</td>\n        <td className=\"vacationpostComment\">{post.commentstart}</td>\n\n      </tr>\n  )\n}\n\n\n\n","import { Close } from '@material-ui/icons'\r\nimport './Modal.css'\r\n\r\n function Modal({active, setActive, children}) {\r\n  return (\r\n    <div className={active ? 'modal active' : 'modal'} >\r\n      <div className={active ? 'modalContent active' : 'modalContent'} onClick={(e) => e.stopPropagation()}>\r\n        <div className='closeModal'><span onClick={() => setActive(false)}><Close/></span></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Modal","import axios from 'axios'\r\nimport { useRef } from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport InfoPost from '../../InfoPost/InfoPost'\r\nimport Pagination from '../../Pagination/Pagination'\r\nimport VacationPost from '../../VacationPost/VacationPost'\r\nimport './HistoryInfo.css'\r\nimport Modal from '../../Templates/Modal/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function HistoryInfo() {\r\n    const [newPosts, setNewPosts] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [vacationPosts, setVacationPosts] = useState([])\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n\r\n\r\n    const lastPostIndexVacations = currentPage * postsPerPage\r\n    const firstPostIndexVacations = lastPostIndexVacations - postsPerPage\r\n    const currentlyVacations = vacationPosts.slice(firstPostIndexVacations, lastPostIndexVacations)\r\n\r\n\r\n\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [modalError, setModalError] = useState('')\r\n    const username=useParams()\r\n\r\n    let localUser = !!username ? {_id:username.username,email:\"\"} : JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n\r\n    const [isJob, setIsJob] = useState(true)\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalName, setModalName] = useState(null)\r\n    const modalComment = useRef()\r\n    const vacationStart = useRef()\r\n    const vacationEnd = useRef()\r\n\r\n    // получение всех постов работы от послелнего к первому\r\n\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n\r\n        fetchUserpost()\r\n    }, [username])\r\n\r\n    const fetchUserpost = async () => {\r\n        const res = await axios.get('/api/post?type=1&id='+localUser._id)\r\n        setPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.workstart) - new Date(p1.workstart)\r\n        }))\r\n        setIsFetching(false)\r\n    }\r\n\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    // фильтер постов по дате\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\" ) {\r\n            setError('Введите дату')\r\n        } else{\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')}\r\n            if (end< start) {\r\n                setError('Конечная дата меньше начальной')}\r\n\r\n            else{\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                    userId: localUser._id,\r\n                    typework:isJob\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/filter',filter)\r\n\r\n                    setVacationPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n\r\n                    setPosts(res.data.sort((p1, p2) => {\r\n                        return new Date(p2.workstart) - new Date(p1.workstart)\r\n                    }))\r\n\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }}\r\n\r\n        /*      let filterPosts = isJob\r\n              ?  posts.filter(post => post.workdate.split('T')[0] >= start)\r\n              : vacationPosts.filter(post => post.start.split('T')[0] >= start)\r\n            if(end){\r\n              filterPosts = isJob\r\n                ? filterPosts.filter(post => post.workdate.split('T')[0] <= end)\r\n                : filterPosts.filter(post => post.end.split('T')[0] <= end)\r\n            }\r\n            setNewPosts(filterPosts)*/\r\n\r\n    }\r\n\r\n\r\n    // сброс фильтра\r\n    const handleClickCancel = async () =>{\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    // получение всех постов об отпуске/больничном от послелнего к первому\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n\r\n        fetchUservacation()\r\n    }, [username])\r\n\r\n    const fetchUservacation = async () => {\r\n        const res = await axios.get('/api/vacation?id='+localUser._id)\r\n        setVacationPosts(res.data.sort((p1, p2) => {\r\n            return new Date(p2.start) - new Date(p1.start)\r\n        }))\r\n        setIsFetching(false)\r\n    }\r\n    // добавление больничного\r\n    const handleClickAdd = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const currentDay = new Date()\r\n\r\n        if(vacationStart.current.value === '' || vacationEnd.current.value === '' || modalName === null || modalComment.current.value === ''){\r\n            setModalError('Вcе поля должны быть заполнены')\r\n            return\r\n        }\r\n\r\n        if(new Date(vacationStart.current.value) > new Date(vacationEnd.current.value) && vacationEnd.current.value !== ''){\r\n            setModalError('Вторая дата меньше первой')\r\n            return\r\n        }\r\n\r\n\r\n\r\n\r\n        const vacation = {\r\n            userId: localUser._id,\r\n            status:modalName,\r\n            comment: modalComment.current.value,\r\n            start: new Date(vacationStart.current.value),\r\n            end: new Date(vacationEnd.current.value)\r\n        }\r\n\r\n        try {\r\n            await axios.post('/api/vacation/',vacation)\r\n            window.location.reload()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // переход на страницу с больничным и обратно\r\n    const handleWorkVacation = () => {\r\n        if(isJob){\r\n            fetchUservacation()}else {\r\n            fetchUserpost()\r\n        }\r\n        setIsJob(!isJob)\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n    const handleName = e => {\r\n        setModalName(e.target.value)\r\n    }\r\n    return (\r\n        <div className='historyInfo'>\r\n            <div className='historyInfoTop'>\r\n                <span className='historyInfoTitle'>История</span>\r\n                <span className='workVacation' onClick={handleWorkVacation}>\r\n          {isJob ? <button className=\"filterButton\" style={{width:'155px'}}>Отпуск/Больничный</button> : <button className=\"filterButton\">Работа</button> }\r\n        </span>\r\n\r\n                {!isJob && (localUser || username === localUser._id)\r\n\r\n                && <div className='addVacation' onClick={() => setModalActive(true)}><span>+</span></div>}\r\n            </div>\r\n            <hr/>\r\n            {error && <div className='errorHistoryInfo'>{error}</div>}\r\n            <div className='historyFilter'>\r\n                <input\r\n                    type='date'\r\n                    placeholder=\"Начало работы\"\r\n                    className=\"ModalInput\"\r\n                    ref={historyStartWork}\r\n                    style={{'marginRight': '10px'}}\r\n                />\r\n                —  <input\r\n                type='date'\r\n                placeholder=\"Конец работы\"\r\n                className=\"ModalInput\"\r\n                ref={historyEndWork}\r\n                style={{'marginRight': '10px'}}\r\n            />\r\n                <button className=\"filterButton\" onClick={handleClick}>Ок</button>\r\n                <button className=\"filterButton\" onClick={handleClickCancel}>Сбросить</button>\r\n            </div>\r\n            <hr/>\r\n            <br/>\r\n            {isJob\r\n                ?\r\n                <tr>\r\n                    <td className=\"historyinfodate\">Дата</td>\r\n                    <td className=\"historyinfopost\">Время начала</td>\r\n                    <td className=\"historyinfopost\">Время окончания</td>\r\n                    <td className=\"historyinfopost\">Длительность</td>\r\n                    <td className=\"historyinfopost\">Состояние здоровья</td>\r\n                    <td className=\"historyinfocomment\">Комментарий</td>\r\n                </tr>\r\n                :\r\n                <tr>\r\n                    <td className=\"historyinfopostdate\">Начало</td>\r\n                    <td className=\"historyinfopost\">Конец</td>\r\n                    <td className=\"historyinfopost\">Длительность</td>\r\n                    <td className=\"historyinfopost\">Причина</td>\r\n                    <td className=\"historycomment\">Комментарий</td>\r\n                </tr>\r\n            }\r\n\r\n            {isJob\r\n                ? ''\r\n                    ? <div className='isFatching'>Загрузка...</div>\r\n                    : isFilter\r\n                        ? newPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n                        : currentlyPosts.map((post, id) => <InfoPost key={id} post={post} username={username}/>)\r\n                : isFetching\r\n                    ? <div className='isFatching'>Загрузка...</div>\r\n                    : isFilter\r\n                        ? newPosts.map((post, id) => <VacationPost key={id} post={post} username={username}/>)\r\n                        : currentlyVacations.map((post, id) => <VacationPost key={id} post={post}/>)\r\n            }\r\n\r\n            {isJob ?\r\n                <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage}/>:\r\n                <Pagination postsPerPage={postsPerPage} totalPosts={vacationPosts.length} paginate={paginate} currentPage={currentPage}/>\r\n            }\r\n\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                {modalError && <div className='errorHistoryInfo'>{modalError}</div>}\r\n                <form className=\"modalLoginBox\" onSubmit={handleClickAdd}>\r\n                    <div style={{display:'flex', justifyContent:'space-between', fontSize: '20px', width:'60%', marginLeft:'20%'}}>\r\n                        <label htmlFor='sickLeave'>\r\n                            <input\r\n                                type='radio'\r\n                                value={3}\r\n                                id='sickLeave'\r\n                                name='sickLeave'\r\n                                onChange={handleName}\r\n                                checked={modalName === '3'}\r\n                            />Больничный</label>\r\n                        <label htmlFor='vacation'>\r\n                            <input\r\n                                type='radio'\r\n                                value={5}\r\n                                id='vacation'\r\n                                name='vacation'\r\n                                onChange={handleName}\r\n                                checked={modalName === '5'}\r\n                            />Отпуск</label>\r\n                        <label htmlFor='time'>\r\n                            <input\r\n                                type='radio'\r\n                                value={6}\r\n                                id='other'\r\n                                name='time'\r\n                                onChange={handleName}\r\n                                checked={modalName === '6'}\r\n                            />Отгул</label>\r\n                        <label htmlFor='anotherReason'>\r\n                            <input\r\n                                type='radio'\r\n                                value={7}\r\n                                id='anotherReason'\r\n                                name='anotherReason'\r\n                                onChange={handleName}\r\n                                checked={modalName === '7'}\r\n                            />Другая причина</label>\r\n\r\n                    </div>\r\n                    <div className='inputVacanciesDiv'>\r\n                        <input\r\n                            type='date'\r\n                            placeholder=\"Начало работы\"\r\n                            className=\"ModalInputInfoVacancies\"\r\n                            ref={vacationStart}\r\n                            style={{'marginRight': '10px'}}\r\n                        />\r\n                        —   <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInputInfoVacancies\"\r\n                        ref={vacationEnd}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                    </div>\r\n                    <textarea\r\n                        placeholder=\"Комментарий\"\r\n                        className=\"textAreaHistory\"\r\n                        ref={modalComment}\r\n                    />\r\n\r\n                    <button className=\"ModalButton\" type=\"submit\" disabled={isFetching}>\r\n                        Изменить\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport './Skills.css'\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Skills = ({ modalActiveSkills, setModalActiveSkills}) => {\r\n\r\n    const skill = useRef()\r\n    const username = useParams()\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [searchTermSkills, setSearchTermSkills] = useState('');\r\n    const [skillsAll, setAllSkills] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [skillId, setSkillId] = useState([])\r\n    const [userSkills, setUserSkills] = useState([])\r\n    const [filteredSkills, setFilteredSkills] = useState([]);\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [selectedNumber2, setSelectedNumber2] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const getSkills = async () => {\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            const userId=res.data.id\r\n\r\n\r\n            const getAllSkills = await axios.get('/api/Skills/')\r\n\r\n            if(getAllSkills.data[0]['get_all_skills_json']===null){\r\n                setAllSkills([])\r\n            }else {\r\n                setAllSkills(getAllSkills.data[0]['get_all_skills_json'])\r\n            }\r\n\r\n            const getUserSkills = await axios.get('/api/Skills/'+userId)\r\n\r\n            if(getUserSkills.data[0]['get_user_skills_json']===null){\r\n                setUserSkills([])\r\n            }else {\r\n                setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n\r\n            }\r\n\r\n        }\r\n        getSkills()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleClick = (number1) => {\r\n            setSelectedNumber(number1)\r\n        console.log(`You clicked number ${number1}`);\r\n    };\r\n    const handleClick2 = (number2) => {\r\n        setSelectedNumber2(number2)\r\n        console.log(`You clicked number ${number2}`);\r\n    };\r\n\r\n\r\n    const handleInputChangeSkills = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermSkills(termCities);\r\n        const filtered = skillsAll.filter(skill =>\r\n            skill.name && skill.name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        if (termCities === '') {\r\n            setFilteredSkills([])\r\n        } else {\r\n            setFilteredSkills(filtered);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSkillsClick = (id,name) => {\r\n        setFilteredSkills([])\r\n        setSkillId(id)\r\n        setSearchTermSkills(name)\r\n    }\r\n\r\n    const ButtonAddSkills = async () => {\r\n        setSelectedNumber(null)\r\n\r\n        if (skillId.length === 0) {\r\n            setError('Выберите умение')\r\n        } else if (selectedNumber == null) {\r\n            setError('Укажите уровень от 1 до 5')\r\n        } else if (skillId.length === 0 && selectedNumber > 0) {\r\n            setError('Выберите умение')\r\n        } else {\r\n\r\n            const addSkills = {\r\n                user_id: username.username,\r\n                skill_id: skillId,\r\n                self_grade: selectedNumber\r\n            }\r\n\r\n            if(skillId.length>0 || selectedNumber !== null || skillId.length === 0 && selectedNumber > 0 )\r\n            {\r\n                setError('')\r\n            }\r\n            const getSkills = await axios.post('/api/Skills/', addSkills)\r\n\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            const userId = res.data.id\r\n            const getUserSkills = await axios.get('/api/Skills/' + userId)\r\n\r\n            if (getUserSkills.data[0]['get_user_skills_json'] === null) {\r\n                setUserSkills([])\r\n            } else {\r\n                setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n            }\r\n        }\r\n    }\r\n\r\n    const SkillDelete= async (e) => {\r\n        const skill_id=e.target.value\r\n        const not_active_skill = {\r\n            is_active:false,\r\n            skill_id:skill_id\r\n        }\r\n        const DeleteSkills = await axios.post('/api/Skills/',not_active_skill)\r\n        const res = await axios.get('/api/user/' + username.username)\r\n        const userId = res.data.id\r\n        const getUserSkills = await axios.get('/api/Skills/' + userId)\r\n\r\n        if (getUserSkills.data[0]['get_user_skills_json'] === null) {\r\n            setUserSkills([])\r\n        } else {\r\n            setUserSkills(getUserSkills.data[0]['get_user_skills_json'])\r\n        }\r\n    }\r\n\r\n    const changeGrade = async (event, id) => {\r\n        const { name, value } = event.target;\r\n        const changeGrade = {\r\n            user_id: username.username,\r\n            skill_id: id\r\n        }\r\n        if (name === 'gradeSelf' && value !== undefined) {\r\n            changeGrade.newGradeSelf = value;\r\n        } else if (name === 'gradeHead' && value !== undefined) {\r\n            changeGrade.newGradeHead = value;\r\n        }\r\n        await axios.post('/api/Skills/', changeGrade);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Modal active={modalActiveSkills} setActive={setModalActiveSkills}>\r\n                <h1>Навыки:</h1>\r\n                <div className='error'>{error}</div>\r\n                <br/>\r\n\r\n                <div className='modalError'>\r\n\r\n                </div>\r\n\r\n                <hr/>\r\n                <br/>\r\n                <div className='flex'>\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Выберите умение:</label>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"inputContainer\">\r\n                            <input\r\n                                placeholder=\"Начните вводить умение\"\r\n                                ref={skill}\r\n                                className=\"registerInput\"\r\n                                value={searchTermSkills}\r\n                                onChange={handleInputChangeSkills}\r\n                            />\r\n                            <div>\r\n                                {filteredSkills.length > 0 && (\r\n                                    <div className=\"dropdown\">\r\n                                        {filteredSkills.map((skill, id) => (\r\n                                            <div className='selectNameDiv' key={id} value={id} onClick={() => handleSkillsClick(skill.id,skill.name)}>\r\n                                                {skill.name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{width: '50px'}}></div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Оценка сотрудника:</label>\r\n                        </div>\r\n                        <div>\r\n                            <div className='MainContainer'>\r\n                                {[1, 2, 3, 4, 5].map((number1) => (\r\n                                    <div className={`WrapperContainer ${selectedNumber === number1 ? 'selected' : ''}`}\r\n                                        key={number1}\r\n                                        onClick={() => handleClick(number1)}\r\n                                    >\r\n                                        {number1}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n{/*                    <div style={{width: '50px'}}></div>\r\n                    <div>\r\n                        <div>\r\n                            <label style={{fontWeight: \"bold\"}}>Оценка руководителя:</label>\r\n                        </div>\r\n                        <div>\r\n                            <div className='MainContainer'>\r\n                                {[1, 2, 3, 4, 5].map((number2) => (\r\n                                    <div className={`WrapperContainer ${selectedNumber2 === number2 ? 'selected' : ''}`}\r\n                                         key={number2}\r\n                                         onClick={() => handleClick2(number2)}\r\n                                    >\r\n                                        {number2}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>*/}\r\n\r\n                </div>\r\n                <br/>\r\n                <button className=\"ModalButton\" type=\"submit\" onClick={ButtonAddSkills}>\r\n                    Добавить умение\r\n                </button>\r\n                <br/>\r\n                <br/>\r\n                <div className='divreserve'>\r\n                    <table className=\"skills-table\">\r\n                        <thead>\r\n                        <tr className=\"skills-header\">\r\n                            <th>Навык</th>\r\n                            <th>Оценка сотрудника</th>\r\n                            <th>Оценка руководителя</th>\r\n                            <th></th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {userSkills.map((array, id) => (\r\n                            <tr className=\"skill-item\" key={id}>\r\n                                <td>\r\n                                    {array.name}\r\n                                </td>\r\n                                <td>\r\n\r\n                                    <select\r\n                                        name='gradeSelf'\r\n                                        defaultValue={array.self_grade}\r\n                                        onChange={(event) => changeGrade(event, array.id)}\r\n                                    >\r\n                                        {[1, 2, 3, 4, 5].map(number => (\r\n                                            <option key={number} value={number}>{number}</option>\r\n                                        ))}\r\n                                    </select>\r\n                               </td>\r\n                                <td>\r\n                                    <select\r\n                                    name='gradeHead'\r\n                                    defaultValue={array.head_grade}\r\n                                    disabled={!localUser.isAdmin}\r\n                                    onChange={(event) => changeGrade(event, array.id)}\r\n                                >\r\n                                    {array.head_grade === null && !localUser.isAdmin ? <option>Нет оценки</option> : ''}\r\n                                    {array.head_grade === null ? <option>Нет оценки</option> : ''}\r\n                                    {[1, 2, 3, 4, 5].map(number => (\r\n                                        <option key={number} value={number}>{number}</option>\r\n                                    ))}\r\n                                </select>\r\n                                </td>\r\n                                <td><button value={array.id} className='SkillButton' onClick={SkillDelete}>Удалить</button></td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <br/><br/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;","import React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst ModalVacanciesItem =({allDateUser})=> {\r\n\r\n\r\n    useEffect(() => {\r\n        if (allDateUser) {\r\n            setInputValueVacanciesName(allDateUser.vacancies_name)\r\n            setInputValueGrade(allDateUser.grade)\r\n            setSelectDep(allDateUser.vacancies_department_id)\r\n            setInputValueDescription(allDateUser.description)\r\n            setInputValueStatuses(allDateUser.vacancies_status_id)\r\n            setSelectCompany(allDateUser.company_id)\r\n            setSelectItc(allDateUser.vacancy_code)\r\n            setProjectItem(allDateUser.project_id)\r\n            setVacanciesId(allDateUser.vacancy_id)\r\n            setOld_user(allDateUser.id)\r\n\r\n\r\n            if(allDateUser.planned_release_date!==null)\r\n            {\r\n                const date = moment(allDateUser.planned_release_date).format('YYYY-MM-DD')\r\n                setPlannedReleaseDate(date)\r\n            }\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n    }, [allDateUser]);\r\n\r\n\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [inputValueVacanciesName, setInputValueVacanciesName] = useState('')\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            setStatus(statuses.data)\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n    const [deps, setDeps] = useState([])\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValueVacanciesName(e.target.value)\r\n    }\r\n\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n\r\n    const selectValue = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n\r\n    }\r\n\r\n    const ChangeDataButton = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValueVacanciesName,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: (userId.length===0 ? old_user : userId),\r\n            search: userId,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:DateReleaseRef.current.value.length===0 ? null :DateReleaseRef.current.value\r\n        }\r\n\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        console.log('old=',userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className='MessageItemVacancies'>\r\n                    <span >{message}</span>\r\n                </div>\r\n                <div>\r\n                    <input type='text' className=\"ModalInputVacancies\"\r\n                           value={inputValueVacanciesName}\r\n                           onChange={handleNameInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Подразделение:</span><br/>\r\n                    <select ref={departRef}\r\n                            value={selectDep}\r\n                            onChange={selectDeps}\r\n                            className='InputVacanciesItemDeps'>\r\n                        {deps.map((dep, name) => <option key={name}\r\n                                                         value={dep.id}>{dep.department_name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Статус:</span><br/>\r\n                    <select ref={statusRef}\r\n                            value={inputValueStatuses}\r\n                            onChange={selectValue}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {status.map((status, name) => <option key={name}\r\n                                                              value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Грейд:</span><br/>\r\n                    <input type='text'\r\n                           value={inputValueGrade}\r\n                           onChange={handleGradeInputChange}\r\n                           placeholder='Грейд'\r\n                           className='InputVacanciesItem'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span>Компания:</span><br/>\r\n                    <select ref={companyRef}\r\n                            value={selectCompany}\r\n                            onChange={companySelect}\r\n                            className='InputVacanciesItemSelect'>\r\n                        {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div>\r\n\r\n                        <span>Имя сотрудника:</span><br/>\r\n                        <div className='inputDiv'>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Имя сотрудника'\r\n                                value={searchTerm || (allDateUser && allDateUser.user_name)}\r\n                                onChange={handleInputChange}\r\n                                className='InputVacanciesItem'\r\n                            />\r\n\r\n                            {filteredUsers.length > 0 && (\r\n                                <div className=\"userListContainer\">\r\n                                    {filteredUsers.map((user, index) => (\r\n                                        <div className='selectNameDiv' key={index} value={user.id}\r\n                                             onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                            {user.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <span>Дата выхода:</span><br/>\r\n                            <input type='date'\r\n                                   ref={DateReleaseRef}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                                   value={plannedReleaseDate}\r\n                                   onChange={DataCurrent}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>ИТС:</span><br/>\r\n                            <input type='text'\r\n                                   ref={ITCRef}\r\n                                   value={selectItc}\r\n                                   onChange={SelectITC}\r\n                                   placeholder='ИТС'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span>Проект:</span><br/>\r\n                            <input type='text'\r\n                                   ref={projectRef}\r\n                                   value={projectItem}\r\n                                   onChange={Project}\r\n                                   placeholder='Проект(Нет проекта=0)'\r\n                                   className='InputVacanciesItem'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='divHistory'>\r\n                        История\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <button className=\"ModalButton\" type=\"submit\" onClick={ChangeDataButton}>\r\n                            Сохранить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ModalVacanciesItem;","import { Close } from '@material-ui/icons'\r\nimport './ModalVacancies.css'\r\n\r\nfunction ModalVacancies({active, setActive, children}) {\r\n  return (\r\n    <div className={active ? 'modal1 active' : 'modal1'}>\r\n      <div className={active ? 'modalContent1 active' : 'modalContent1'} onClick={(e) => e.stopPropagation()}>\r\n        <div className='closeModal1'><span onClick={() => setActive(false)}><Close/></span></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ModalVacancies","import React, { useEffect, useRef, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Editing({modalActive,setModalActive}) {\r\n    const username = useParams()\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    const [cityName, setCityName] = useState([])\r\n\r\n    const [user, setUser] = useState([])\r\n\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n\r\n\r\n    const [email, setEmail] = useState([])\r\n    const [emailChange, setEmailChange] = useState([])\r\n\r\n\r\n    const [phone, setPhone] = useState([])\r\n    const [phoneChange, setPhoneChange] = useState([])\r\n\r\n\r\n    const [additional_contact, setAdditional_Contact] = useState([])\r\n    const [additional_contact_change, setAdditional_Contact_Change] = useState([])\r\n\r\n\r\n    const [distribution_group, setDistribution_Group] = useState([])\r\n    const [distribution_group_change, setDistribution_Group_Change] = useState([])\r\n\r\n\r\n    const [activity_profile, setActivity_Profile] = useState([])\r\n    const [activity_profile_change, setActivity_Profile_Change] = useState([])\r\n\r\n    const [CityPlace, setCityPlace] = useState([])\r\n    const [CityPlace_Change, setCityPlace_Change] = useState([])\r\n\r\n\r\n    const [surnameValue, setSurnameValue] = useState([])\r\n\r\n\r\n    const [options, setOptions] = useState([]);\r\n\r\n\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const modalDep = useRef()\r\n    const phoneNumber = useRef()\r\n    const additionalContact = useRef()\r\n    const distributionGroup = useRef()\r\n    const activityProfile = useRef()\r\n    const modalCity = useRef()\r\n    const modalCityPlace = useRef()\r\n\r\n\r\n    const [citiesId, setCitiesId] = useState([])\r\n    const [searchTermCities, setSearchTermCities] = useState('');\r\n    const [filteredCities, setFilteredCities] = useState([]);\r\n    const [cities, setCities] = useState([])\r\n\r\n\r\n    const handleUserClickCities = (city_name, id) => {\r\n        setCitiesId(id)\r\n        setSearchTermCities(city_name)\r\n        setFilteredCities([])\r\n    }\r\n\r\n\r\n    const handleInputChangeCities = (e) => {\r\n        const termCities = e.target.value;\r\n        setSearchTermCities(termCities);\r\n\r\n        if (termCities === '') {\r\n            setCitiesId('');\r\n            setFilteredCities([]);\r\n            setCityName('');\r\n            return;\r\n        }\r\n\r\n        const filtered = cities.filter(city =>\r\n            city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        setFilteredCities(filtered);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getNameAndSurname = () => {\r\n            if (user.user_name) {\r\n                const [name, surname] = user.user_name.split(\" \");\r\n                setSurnameValue(surname || \"\");\r\n                setNameValue(name);\r\n            }\r\n        }\r\n\r\n        const getDeps = async () => {\r\n\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n            const data = res.data[0]['department_tree_to_json'];\r\n            const extractedOptions = extractOptions(data);\r\n            setOptions(extractedOptions);\r\n            setSelectedValue(user.department_id);\r\n        }\r\n        const extractOptions = (node) => {\r\n            let optionsList = [{ id: node.id, name: node.Name }];\r\n            if (node.Subclasses && node.Subclasses.length > 0) {\r\n                node.Subclasses.forEach(subclass => {\r\n                    optionsList = optionsList.concat(extractOptions(subclass));\r\n                });\r\n            }\r\n            return optionsList;\r\n\r\n        };\r\n\r\n        const getNameDeps = async () => {\r\n            const deps = {\r\n                user: username.username\r\n            }\r\n            const res = await axios.post('/api/departments/', deps)\r\n            setCityName(res.data[0]['city_name'])\r\n        }\r\n\r\n        const fetchUser = async () => {\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            setUser(res.data)\r\n\r\n\r\n            const city = await axios.get('/api/Cities/')\r\n            setCities(city.data)\r\n        }\r\n        // Номинации\r\n\r\n        if (user && user.email && email) {\r\n            setEmail(user.email);\r\n        }\r\n        if (user && user.phone_number && phone) {\r\n            setPhone(user.phone_number);\r\n        }\r\n\r\n        if (user && user.additional_contact && additional_contact) {\r\n            setAdditional_Contact(user.additional_contact);\r\n        }\r\n\r\n        if (user && user.distribution_group && distribution_group) {\r\n            setDistribution_Group(user.distribution_group);\r\n        }\r\n        if (user && user.activity_profile && activity_profile) {\r\n            setActivity_Profile(user.activity_profile);\r\n        }\r\n        if (user && user.place_of_residence && CityPlace) {\r\n            setCityPlace(user.place_of_residence);\r\n        }\r\n\r\n        getNameAndSurname();\r\n        fetchUser()\r\n        getDeps()\r\n        getNameDeps()\r\n    }, [\r\n        user.user_name,\r\n        user.email,\r\n        user.phone_number,\r\n        user.additional_contact,\r\n        user.distribution_group,\r\n        user.activity_profile,\r\n        user.place_of_residence,\r\n        username.username\r\n    ])\r\n\r\n    const handleEmailChange = (e) => {\r\n\r\n        if (e.target.value) {\r\n            setEmail('')\r\n            setEmailChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setEmail('')\r\n            setEmailChange('')\r\n        }\r\n\r\n    }\r\n    const formatPhoneNumber = (value) => {\r\n        // Убираем все символы, кроме цифр\r\n        let cleaned = value.replace(/\\D/g, '');\r\n        if (cleaned.startsWith('7')) {\r\n            cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\r\n        }\r\n        // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\r\n        cleaned = cleaned.slice(0, 10);\r\n        // Разделяем на части, добавляя дефисы\r\n        const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\r\n        if (match) {\r\n            return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\r\n        }\r\n        return '+7 ' + cleaned;\r\n    };\r\n    const handlePhoneChange = (e) => {\r\n        if (e.target.value) {\r\n            setPhone('')\r\n            setPhoneChange(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setPhone('')\r\n            setPhoneChange('')\r\n        }\r\n        const value = e.target.value;\r\n        if (value.length < 1) {\r\n            setPhoneChange('')\r\n        } else {\r\n            const formattedValue = formatPhoneNumber(value);\r\n            setPhoneChange(formattedValue);\r\n        }\r\n    }\r\n\r\n    const additional_Contact = (e) => {\r\n        if (e.target.value) {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setAdditional_Contact('')\r\n            setAdditional_Contact_Change('')\r\n        }\r\n    }\r\n\r\n    const distribution_Group = (e) => {\r\n        if (e.target.value) {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setDistribution_Group('')\r\n            setDistribution_Group_Change('')\r\n        }\r\n    }\r\n\r\n    const activity_Profile = (e) => {\r\n        if (e.target.value) {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setActivity_Profile('')\r\n            setActivity_Profile_Change('')\r\n        }\r\n    }\r\n\r\n    const cityPlace = (e) => {\r\n        if (e.target.value) {\r\n            setCityPlace('')\r\n            setCityPlace_Change(e.target.value)\r\n        }\r\n        if (e.target.value === '') {\r\n            setCityPlace('')\r\n            setCityPlace_Change('')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setNameValue(e.target.value);\r\n    }\r\n\r\n    const handleSurnameChange = (e) => {\r\n        setSurnameValue(e.target.value)\r\n    }\r\n\r\n\r\n    // изменение данных пользователя\r\n    const handleClick = async (e) => {\r\n\r\n        const name = user.user_name\r\n        const part = name.split(' ')\r\n        e.preventDefault()\r\n        const newInfo = {\r\n            departmentId: modalDep.current.value || user.department_id,\r\n            email: (email ? email : emailChange.toUpperCase()),\r\n            username: nameValue + ' ' + surnameValue,\r\n            _id: user.id,\r\n            isAdmin: user.isadmin,\r\n            see_child: user.see_child,\r\n            status: user.status,\r\n            main_department: user.main_department,\r\n            phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n            additional_contact: additionalContact.current.value,\r\n            distribution_group: distributionGroup.current.value,\r\n            activity_profile: activityProfile.current.value,\r\n            city_id: citiesId,\r\n            cityPlaceChange:modalCityPlace.current.value\r\n        }\r\n\r\n        if (localUse._id !== username.username) {\r\n            const newInfo2 = {\r\n                departmentId: modalDep.current.value || user.department_id,\r\n                email: (email ? email : emailChange.toUpperCase()),\r\n                username: nameValue + ' ' + surnameValue,\r\n                phone_number: (phoneNumber.current.value === '' ? '' : phoneNumber.current.value),\r\n                additional_contact: additionalContact.current.value,\r\n                distribution_group: distributionGroup.current.value,\r\n                activity_profile: activityProfile.current.value,\r\n                city_id: citiesId,\r\n                _id: user.id,\r\n                cityPlaceChange:modalCityPlace.current.value\r\n            }\r\n\r\n            await axios.put('/api/user/', newInfo2)\r\n            window.location.reload()\r\n        } else {\r\n            await axios.put('/api/user/', newInfo)\r\n            delete newInfo.phone_number\r\n            delete newInfo.additional_contact\r\n            delete newInfo.distribution_group\r\n            delete newInfo.activity_profile\r\n            delete newInfo.city_id\r\n            delete newInfo.cityPlaceChange\r\n            localStorage.setItem('user', JSON.stringify({...newInfo}))\r\n            setModalActive(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedValue(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n                <Modal active={modalActive} setActive={setModalActive}>\r\n                    <h1>Изменение информации:</h1>\r\n                    <hr/>\r\n                    {error && <div className='modalError'>{error}</div>}\r\n                    <form className=\"modalLoginBox\" onSubmit={handleClick}>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Фамилия\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleNameChange}\r\n                                value={nameValue}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Имя\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleSurnameChange}\r\n                                value={surnameValue}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                                className=\"ModalInputUpdate\"\r\n                                onChange={handleEmailChange}\r\n                                value={email || emailChange}\r\n                                minLength={6}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Телефон\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={phoneNumber}\r\n                                onChange={handlePhoneChange}\r\n                                value={phone || phoneChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={additionalContact}\r\n                                onChange={additional_Contact}\r\n                                value={additional_contact || additional_contact_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Группа рассылки\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={distributionGroup}\r\n                                onChange={distribution_Group}\r\n                                value={distribution_group || distribution_group_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Профиль деятельности\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={activityProfile}\r\n                                onChange={activity_Profile}\r\n                                value={activity_profile || activity_profile_change}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                placeholder=\"Город\"\r\n                                type='text'\r\n                                className=\"ModalInputUpdate\"\r\n                                ref={modalCity}\r\n                                value={searchTermCities || cityName}\r\n                                onChange={handleInputChangeCities}\r\n                            />\r\n                            <div>\r\n                                {filteredCities.length > 0 && (\r\n                                    <div className='divSelectRegister'>\r\n                                        {filteredCities.map((city, id) => (\r\n                                            <div className='selectNameDiv' key={id} value={city.id}\r\n                                                 onClick={() => handleUserClickCities(city.city_name, city.id)}>\r\n                                                {city.city_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                <input\r\n                                    placeholder=\"Адрес фактического проживания\"\r\n                                    type='text'\r\n                                    className=\"ModalInputUpdate\"\r\n                                    ref={modalCityPlace}\r\n                                    onChange={cityPlace}\r\n                                    value={CityPlace || CityPlace_Change}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <select\r\n                                value={selectedValue} // Привязываем значение к selectedValue\r\n                                onChange={handleChange}\r\n                                ref={modalDep}\r\n                                className=\"ModalInputUpdateSelect\"\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <option key={option.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"ModalButton\" type=\"submit\">\r\n                            Изменить\r\n                        </button>\r\n                    </form>\r\n                </Modal>\r\n\r\n        )\r\n}\r\n\r\nexport default Editing;","import React from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction DeleteUser({modalActiveDelete,setModalActiveDelete,username,user}) {\r\n    const handleDelete = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const newPost = {\r\n            userId: username.username,\r\n            healthEnd: 1,\r\n            status: 4\r\n        }\r\n        try {\r\n            await axios.put('/api/deluser/', newPost)\r\n\r\n            setModalActiveDelete(false)\r\n            window.location.href = `/profile/${user.id}`\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n        return (\r\n                <Modal active={modalActiveDelete} setActive={setModalActiveDelete}>\r\n                    <h1>Изменение информации:</h1>\r\n                    <hr/>\r\n                    <form className=\"modalLoginBox\" onSubmit={handleDelete}>\r\n                        <h2>Пользователь будет удален</h2>\r\n                        <button className=\"ModalButtonDelete\" type=\"submit\">\r\n                            Удалить\r\n                        </button>\r\n                    </form>\r\n                </Modal>\r\n        );\r\n\r\n}\r\n\r\nexport default DeleteUser;","import React from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ResetPassword({modalResetPassword,setModalResetPassword,username}) {\r\n    const handleResetPassword = async () => {\r\n        const resetPassword = {\r\n            userId: username,\r\n            newPassword: 'qwerty123'\r\n        }\r\n            await axios.put('/api/resetPassword/', resetPassword)\r\n            setModalResetPassword(false)\r\n    }\r\n\r\n    return (\r\n            <Modal active={modalResetPassword} setActive={setModalResetPassword}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                    <h2>Новый пароль будет: qwerty123</h2>\r\n                    <button className=\"ModalButtonRePasswordUser\" type=\"submit\" onClick={handleResetPassword}>\r\n                        Сбросить\r\n                    </button>\r\n            </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction FinishTime({modalFinishTime,setModalFinishTime,user,status}) {\r\n\r\n        const ResetTime = async () => {\r\n            if (status === 1) {\r\n                const status = {\r\n                    status: 2,\r\n                    typework_id: 1,\r\n                    userId: user,\r\n                    healthEnd: '-',\r\n                    commentEnd: '-',\r\n                    workEnd: new Date(Date.now())\r\n                }\r\n                await axios.put(\"/api/post/\", status)\r\n            } else {\r\n                alert(\"Пользователь не в работе\")\r\n        }\r\n        setModalFinishTime(false)\r\n\r\n    }\r\n    return (\r\n        <Modal active={modalFinishTime} setActive={setModalFinishTime}>\r\n            <h1>Изменение информации:</h1>\r\n            <hr/>\r\n            <form className=\"modalLoginBox\" onSubmit={ResetTime}>\r\n                <h2>Вы хотите завершить отметку времени пользователя?</h2>\r\n                <button className=\"ModalButtonDelete\" type=\"submit\">\r\n                    Закончить\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default FinishTime;","import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddNomination({modalVote,setModalVote,username,updateNominationStatus}) {\r\n\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [check, setCheck] = useState();\r\n    const [er, setErr] = useState('')\r\n    const [user, setUser] = useState([])\r\n    const [vote, setVote] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchVote = async () => {\r\n            const rez = await axios.get('/api/vote/')\r\n            const res = await axios.get('/api/user/' + username.username)\r\n            setUser(res.data)\r\n            setVote(rez.data)\r\n\r\n                // Инициализация состояния чекбоксов на основе текущего статуса номинации пользователя\r\n                setCheckedItems((prevCheckedItems) => ({\r\n                    ...prevCheckedItems,\r\n                    [user.nomination_status]: true\r\n                }));\r\n\r\n        }\r\n\r\n        fetchVote()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const secureButton = async () => {\r\n\r\n        const res = await axios.get('/api/user/' + username.username)\r\n\r\n        const addNomination = {\r\n            userId: username.username,\r\n            id_nomination: check\r\n        }\r\n\r\n        if (check === undefined) {\r\n            setErr('Выберите номинацию')\r\n        } else {\r\n            await axios.post('/api/vote/', addNomination)\r\n            setModalVote(false)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n\r\n    const clearSecureButton = async () => {\r\n        const res = await axios.get('/api/user/' + username.username)\r\n        const addNomination = {\r\n            userId: username.username,\r\n            id_nomination: null\r\n        }\r\n\r\n        await axios.post('/api/vote/', addNomination)\r\n        setModalVote(false)\r\n        window.location.reload()\r\n\r\n    }\r\n\r\n\r\n\r\n    const inputClick = (event, voteId) => {\r\n        const {id, checked} = event.target\r\n        if (checked) {\r\n            setCheckedItems(checked)\r\n        } else {\r\n            setCheckedItems(null)\r\n        }\r\n        setCheck(event.target.value)\r\n\r\n        setCheckedItems(prevState => ({\r\n            ...prevState,\r\n            [id]: checked,\r\n        }))\r\n        updateNominationStatus(id)\r\n        setUser(prevState => ({\r\n                ...prevState,\r\n                nomination_status: checked ? voteId : null\r\n            }\r\n        ))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Modal active={modalVote} setActive={setModalVote}>\r\n            <h1>Закрепить номинацию:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr/>\r\n            <div>\r\n                <div className='voteContainer'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id} className=\"voteItem\">\r\n                            <label key={id} htmlFor={vote.id} className=\"inputVote\">\r\n\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id={vote.id}\r\n                                    value={vote.id}\r\n                                    onChange={(e) => inputClick(e, vote.id)}\r\n                                    checked={user.nomination_status === vote.id}\r\n                                />\r\n\r\n                                {vote.nominations_name}{' '}\r\n\r\n                                <img src={`../images/${vote.id}.png`} alt={`Image for ${vote.nominations_name}`} className='images'/>\r\n\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\"  onClick={secureButton}>Закрепить</button>\r\n            <button className=\"button\" type=\"submit\"  onClick={clearSecureButton}>Снять номинацию</button>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNomination;","import React, { useRef, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ChangePassword({modalActivePass,setModalActivePass}) {\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n    const [er, setErr] = useState('')\r\n    const modalOldPass = useRef()\r\n    const modalNewPass = useRef()\r\n    const modalNewPassAgain = useRef()\r\n\r\n    const handleChangePassword = async (e) => {\r\n        e.preventDefault()\r\n        if (modalNewPass.current.value !== modalNewPassAgain.current.value) {\r\n            setErr('Новые пароли не совпадают')\r\n            return\r\n        }\r\n        const passwords = {\r\n            userId: localUse._id,\r\n            password: localUse.password,\r\n            oldPassword: modalOldPass.current.value,\r\n            newPassword: modalNewPass.current.value\r\n        }\r\n        try {\r\n            await axios.put('/api/newPassword/', passwords)\r\n            setModalActivePass(false)\r\n            /*      localStorage.clear()\r\n                  window.location.reload()\r\n                  window.location.href = '/'*/\r\n        } catch (er) {\r\n            setErr('Старые пароли не совпадают')\r\n        }\r\n    }\r\n    return (\r\n        <Modal active={modalActivePass} setActive={setModalActivePass}>\r\n            <h1>Изменение информации:</h1>\r\n            <hr/>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <form className=\"modalLoginBox\" onSubmit={handleChangePassword}>\r\n                <input\r\n                    placeholder=\"Старый пароль\"\r\n                    type='password'\r\n                    className=\"inputChangePassword\"\r\n                    ref={modalOldPass}\r\n                />\r\n                <input\r\n                    placeholder=\"Новый пароль\"\r\n                    type='password'\r\n                    className=\"inputChangePassword\"\r\n                    ref={modalNewPass}\r\n                    minLength='6'\r\n                />\r\n                <input\r\n                    placeholder=\"Новый пароль ещё раз\"\r\n                    type='password'\r\n                    className=\"inputChangePassword\"\r\n                    ref={modalNewPassAgain}\r\n                    minLength='6'\r\n                />\r\n                <button className=\"ModalButtonChangePassword\" type=\"submit\" >\r\n                    Изменить\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default ChangePassword;","import React, { useEffect, useState } from 'react';\r\nimport Modal from \"../../Templates/Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport './VoteNominations.css'\r\n\r\nfunction VoteNominations({modalActiveVote,setModalActiveVote,username}) {\r\n    const [searchTermCities, setSearchTermCities] = useState('');\r\n    const localUse = JSON.parse(localStorage.getItem('user'))\r\n    const [er, setErr] = useState('')\r\n    const [vote, setVote] = useState([])\r\n    const [inputValues, setInputValues] = useState('');\r\n    const [selectedInputIndex, setSelectedInputIndex] = useState(null);\r\n    const [userVote, setUserVote] = useState([])\r\n    const [filteredCities, setFilteredCities] = useState([]);\r\n    const [votearray, setVotearray] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n    const fetchVote = async () => {\r\n        const res = await axios.get('/api/vote/')\r\n        setVote(res.data)\r\n        const user = await axios.get('/api/user/')\r\n        const sort = user.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n        const mass = sort.filter(element => element.id !== username.username && element.status !== 4)\r\n        setUserVote(mass)\r\n    }\r\n        fetchVote()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleInputChangeUsers = (e, id) => {\r\n        const index = id + 1\r\n        const {value} = e.target;\r\n        setInputValues(prev => ({...prev, [index]: value}));\r\n        setSelectedInputIndex(index);\r\n\r\n        const termCities = e.target.value;\r\n        setSearchTermCities(termCities);\r\n        const filtered = userVote.filter(city =>\r\n            city.user_name && city.user_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        if (termCities === '') {\r\n            setFilteredCities([])\r\n        } else {\r\n            setFilteredCities(filtered);\r\n        }\r\n    }\r\n\r\n    const clickVote = (e, id, user_name) => {\r\n        setFilteredCities([])\r\n        console.log('index=', id, user_name)\r\n        setInputValues(prev => ({...prev, [selectedInputIndex]: user_name}));\r\n        e.preventDefault();\r\n        const data = id.toString();\r\n        const arr = data.split(\"_\");\r\n        if (arr[0] === '' || arr[1] === '') {\r\n            return;\r\n        } else {\r\n            const str = arr[1].toString();\r\n            const str1 = arr[0].toString();\r\n\r\n            const existingIndex = votearray.findIndex(item => item.split(\"_\")[0] === str1);\r\n            if (existingIndex !== -1) {\r\n                const newArray = [...votearray];\r\n                newArray[existingIndex] = data;\r\n                console.log('Массив с обновленным элементом:', newArray);\r\n                setVotearray(newArray);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const votearr = [...votearray];\r\n        votearr.push(data);\r\n\r\n        const newArray = votearr.filter(element => element !== \"\");\r\n        console.log('newArray=', newArray);\r\n        setVotearray(newArray);\r\n\r\n    };\r\n\r\n    const button = () => {\r\n        if (votearray.length === 0) {\r\n            setErr('Выберите участников номинации')\r\n        } else {\r\n            votearray.forEach(async (vote) => {\r\n\r\n\r\n                    const arr = vote.split(\"_\")\r\n\r\n                    const voteUser = {\r\n                        user_id: localUse._id,\r\n                        vote_for_user: arr[1],\r\n                        nominations_id: arr[0]\r\n                    }\r\n                    await axios.post('/api/vote/', voteUser)\r\n                }\r\n            )\r\n            setModalActiveVote(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal active={modalActiveVote} setActive={setModalActiveVote}>\r\n            <h1>Номинации:</h1>\r\n            {er && <div className='modalError'>{er}</div>}\r\n            <hr/>\r\n            <div className='div'>\r\n                <div>\r\n                    {\r\n                        vote.map((vote, id) =>\r\n\r\n                            <label key={id} htmlFor={vote.id}>\r\n                                <h3 className='inputVote'>{vote.nominations_name}</h3>\r\n                                {vote.description}\r\n                            </label>\r\n                        )}\r\n                </div>\r\n                <div className='di'>\r\n                    {vote.map((vote, id) => (\r\n                        <div key={id + 1} style={{position: 'relative'}}>\r\n                            <input\r\n                                onChange={(e) => handleInputChangeUsers(e, id)}\r\n                                value={inputValues[id + 1] || ''}\r\n                                className='select'\r\n                            />\r\n                            {selectedInputIndex === id + 1 && filteredCities.length > 0 && (\r\n                                <div className='divVoteNomination'>\r\n                                    {filteredCities.slice(0, 15).map((city, cityId) => (\r\n                                        <div\r\n                                            className='selectNameDiv'\r\n                                            key={cityId}\r\n                                            onClick={(e) => clickVote(e, selectedInputIndex + \"_\" + city.id, city.user_name)}>\r\n                                            {city.user_name}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n            <button className=\"button\" type=\"submit\" onClick={button}>Проголосовать</button>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default VoteNominations;","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { Create, Delete, Settings, Message } from '@material-ui/icons'\n\nimport Skills from '../ProfileInfo/Skills/Skills'\n\nimport ModalVacanciesItem from \"../VacanciesItem/ModalVacanciesItem/ModalVacanciesItem\";\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\nimport Editing from \"./Editing/Editing\"\n\nimport './ProfileInfo.css'\nimport DeleteUser from \"./DeleteUser/DeleteUser\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport FinishTime from \"./FinishTime/FinishTime\";\nimport AddNomination from \"./AddNomination/AddNomination\";\nimport ChangePassword from \"./СhangePassword/СhangePassword\";\nimport VoteNominations from \"./VoteNominations/VoteNominations\";\n\nexport default function ProfileInfo() {\n\n    const [timeZone, setTimeZone] = useState([])\n    const [hasImage, setHasImage] = useState(false);\n    const [allDateUser, setAllDateUser] = useState()\n\n    const [modalVacancies, setModalVacancies] = useState(false)\n\n    const [depsName, setDepsName] = useState([])\n\n    const [cityName, setCityName] = useState([])\n\n    const [user, setUser] = useState([])\n\n    const [isFetching, setIsFetching] = useState(false)\n\n    const [modalActive, setModalActive] = useState(false)\n\n    const [modalActivePass, setModalActivePass] = useState(false)\n\n    const [modalActiveVote, setModalActiveVote] = useState(false)\n\n    const [modalVote, setModalVote] = useState(false)\n\n    const [modalResetPassword, setModalResetPassword] = useState(false)\n\n    const [modalFinishTime, setModalFinishTime] = useState(false)\n\n    const [modalActiveDelete, setModalActiveDelete] = useState(false)\n\n    const [modalActiveSkills, setModalActiveSkills] = useState(false)\n\n    const username = useParams()\n\n\n    let localUser = !!username ? {_id: username.username, email: \"\"} : JSON.parse(localStorage.getItem('user'))\n    const localUse = JSON.parse(localStorage.getItem('user'))\n\n\n    const usersStatuses = {\n        0: '',\n        1: 'start',\n        2: 'end',\n        3: 'sick_leave',\n        4: 'deleted',\n        5: 'vacation',\n        6: 'time_off',\n        7: 'other'\n    }\n\n    function findStatus(k) {\n        for (let i in usersStatuses) {\n            if (i == k) {\n                return usersStatuses[i]\n            }\n        }\n    }\n\n    useEffect(() => {\n\n        const hasImageStatus = Object.keys(images).some(key =>\n            user.nomination_status === key || user.nomination_status === parseInt(key)\n        );\n        setHasImage(hasImageStatus);\n\n        const getNameDeps = async () => {\n            const deps = {\n                user: username.username\n            }\n            const res = await axios.post('/api/departments/', deps)\n            setTimeZone(res.data[0]['timezone'])\n            setDepsName(res.data[0]['department_name'])\n            setCityName(res.data[0]['city_name'])\n        }\n\n        const fetchUser = async () => {\n            localUser._id = !!localUser._id ? localUser._id : localUser.id\n            localUser._id = !!username ? username.username : localUser._id\n            const res = await axios.get('/api/user/' + username.username)\n            setUser(res.data)\n            setIsFetching(false)\n\n        }\n        fetchUser()\n        getNameDeps()\n    }, [\n        user.user_name,\n        user.email,\n        user.phone_number,\n        user.additional_contact,\n        user.distribution_group,\n        user.activity_profile,\n        user.place_of_residence,\n        username.username,\n    ])\n\n\n    localUser = (!!user && !Array.isArray(user)) ? user : localUser\n    localUser.username = !!localUser.user_name ? localUser.user_name : localUser.username\n    const name = localUser.email.toLowerCase()\n\n\n    const images = {\n        '1': {src: '../images/1.png', title: 'Тучка'},\n        '2': {src: '../images/2.png', title: 'Аркадий Паровозов'},\n        '3': {src: '../images/3.png', title: 'И так сойдет'},\n        '4': {src: '../images/4.png', title: 'Портной'},\n        '5': {src: '../images/5.png', title: 'Мама обезьянка'},\n        '6': {src: '../images/6.png', title: 'Кот Матроскин'},\n        '7': {src: '../images/7.png', title: 'Крот'},\n        '8': {src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)'},\n        '9': {src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)'},\n        '10': {src: '../images/10.png', title: 'Симка и нолик'}\n    };\n\n\n\n    const getChangeVacancies = () => {\n        if (localUse.isAdmin) {\n            setModalVacancies(true)\n            setAllDateUser(user)\n        }\n    }\n    const updateNominationStatus = (newStatus) => {\n        setUser(prevState => ({\n            ...prevState,\n            nomination_status: newStatus\n        }));\n    };\n\n    return (\n\n        <div className='profileInfo'>\n\n            {Object.keys(images).map((key, id) => (\n                (user.nomination_status === key || user.nomination_status === parseInt(key)) &&\n                <img\n                    key={id}\n                    src={images[key].src}\n                    title={images[key].title}\n                    alt={`Image for ${key}`}\n                    className='imagesProfile'\n                />\n            ))}\n\n            {isFetching ? <div className='isFatching'>Загрузка...</div> :\n                <div className={'employeePI ' + (findStatus(user.status))}>\n                    <div className='ProfileName' style={{ paddingTop: hasImage ? '10px' : '0px' }}>\n\n                        {user.user_name}\n\n                        {localUse.isAdmin || localUse._id === username.username\n                            ?\n                            <>\n                                <Create style={{cursor: 'pointer', fontSize: '20px', paddingLeft: '5px'}}\n                                        onClick={() => setModalActive(true)}/>\n                                <Editing modalActive={modalActive} setModalActive={setModalActive}/>\n                            </>\n                            : ''}\n\n                        {localUse.isAdmin ?\n                            <>\n                                <Delete style={{cursor: 'pointer', fontSize: '20px'}}\n                                        onClick={() => setModalActiveDelete(true)}/>\n                                <DeleteUser modalActiveDelete={modalActiveDelete}\n                                            setModalActiveDelete={setModalActiveDelete} username={username.username}\n                                            user={user.id}/>\n                            </>\n                            : ''}\n\n\n                        {localUse.isAdmin === true && localUse._id === user.id ?\n                            <Link to={`/AdminPanel`}>\n                                <Settings\n                                    style={{cursor: 'pointer', fontSize: '20px', paddingTop: '5px', color: 'black'}}/>\n                            </Link>\n                            : ''}\n                    </div>\n\n\n                    <div>\n                        <label style={{cursor: 'pointer'}} onClick={getChangeVacancies}\n                               className='ProfileLinkVacancies'>{user.vacancy_code}</label>\n                    </div>\n\n\n{/*                    {\n                        <Message style={{cursor: 'pointer', fontSize: 'large'}} />\n                    }*/}\n\n\n                    <div style={{border: '3px dashed black', padding: '10px'}}>\n                        <div className='ProfileInfoCard'>Email: {name.charAt(0).toUpperCase() + name.slice(1)}</div>\n                        <div className='ProfileInfoCard'>Телефон: {user.phone_number}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Доп.Контакт: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.additional_contact : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Группа рассылки: {user.distribution_group}</div>\n                        <div className='ProfileInfoCard'>Профиль деятельности: {user.activity_profile}</div>\n                        <div className='ProfileInfoCard'>Город проживания: {cityName}</div>\n                        <div className='ProfileInfoCard'>\n                            {localUse.isAdmin !== false || localUse._id === username.username ? 'Адрес фактического проживания: ' : ''}\n                            {localUse.isAdmin !== false || localUse._id === username.username ? user.place_of_residence : ''}\n                        </div>\n                        <div className='ProfileInfoCard'>Подразделение: {depsName}</div>\n                    </div>\n\n                    {\n                        localUse.isAdmin || localUse._id === username.username ? <>\n                            <div className='changePass' onClick={() => setModalActivePass(true)}>Изменить пароль</div>\n                            <ChangePassword modalActivePass={modalActivePass} setModalActivePass={setModalActivePass}/>\n                        </> : ''\n\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalResetPassword(true)}>Сбросить\n                                    пароль\n                                </div>\n                                <ResetPassword modalResetPassword={modalResetPassword}\n                                               setModalResetPassword={setModalResetPassword}\n                                               username={username.username}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className='changePass' onClick={() => setModalFinishTime(true)}>Закончить</div>\n                                <FinishTime modalFinishTime={modalFinishTime} setModalFinishTime={setModalFinishTime}\n                                            user={user.id} status={user.status}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse._id === user.id ?<>\n                            <div className='changePass'\n                                 onClick={() => setModalActiveVote(true)}>Проголосовать</div>\n                            <VoteNominations modalActiveVote={modalActiveVote} setModalActiveVote={setModalActiveVote} username={username}/>\n                            </>\n                            : ''\n                    }\n\n                    {\n                        localUse.isAdmin ?\n                            <>\n                                <div className=\"changePass\" onClick={() => setModalVote(true)}>Закрепить номинацию</div>\n                                <AddNomination modalVote={modalVote} setModalVote={setModalVote} username={username}\n                                               updateNominationStatus={updateNominationStatus}/>\n                            </> : ''\n                    }\n                    <div className=\"changePass\" onClick={() => setModalActiveSkills(true)}>Навыки</div>\n                    <Skills modalActiveSkills={modalActiveSkills} setModalActiveSkills={setModalActiveSkills}/>\n                </div>\n            }\n            <ModalVacancies active={modalVacancies} setActive={setModalVacancies}>\n                <ModalVacanciesItem allDateUser={allDateUser}/>\n            </ModalVacancies>\n            <Skills/>\n        </div>\n    )\n}\n","import HistoryInfo from '../ProfileInfo/HistoryInfo/HistoryInfo'\r\nimport ProfileInfo from '../ProfileInfo/ProfileInfo'\r\nimport './Home.css'\r\n\r\n\r\n\r\nexport default function Home(username) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  return (\r\n\r\n          <div className=\"homeWrapper\">\r\n\r\n              <ProfileInfo/>\r\n\r\n              {(localUser._id!==username.username.username && localUser.isAdmin) || localUser._id===username.username.username ?\r\n              <HistoryInfo/> :''\r\n              }\r\n\r\n          </div>\r\n  )\r\n}\r\n","import Home from '../../components/Home/Home'\r\n\r\nimport './Profile.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n    const username=useParams()\r\n  return (\r\n    <>\r\n        <Home username={username}/>\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport { HelpOutline } from '@material-ui/icons'\r\n\r\nimport \"./Register.css\";\r\nimport Modal from \"../../components/Templates/Modal/Modal\";\r\n\r\nexport default function Register() {\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordAgain = useRef()\r\n  const username = useRef()\r\n  const firstname = useRef()\r\n  const department = useRef()\r\n  const history = useHistory();\r\n  const telephone = useRef()\r\n  const city = useRef()\r\n  const additional_contact = useRef()\r\n  const distribution_group = useRef()\r\n  const link_vacancies = useRef()\r\n  const activity_profile=useRef()\r\n  const place_of_residence=useRef()\r\n  const companyName=useRef()\r\n  const [active, setActive] = useState(false)\r\n\r\n  const [grade, setGrade] = useState([]);\r\n\r\n  const [project, setProject] = useState([])\r\n\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [company, setCompany] = useState([])\r\n\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const [cities, setCities] = useState([])\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const [checkVal, setCheckVal] = useState(false)\r\n  const [vacancies, setVacancies] = useState([])\r\n\r\n  const [filteredVacancies, setFilteredVacancies] = useState([]);\r\n  const [filteredCities, setFilteredCities] = useState([]);\r\n\r\n\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchTermCities, setSearchTermCities] = useState('');\r\n\r\n\r\n  const [vacanciesId, setVacanciesId] = useState([])\r\n  const [citiesId, setCitiesId] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n  const handleUserClick = (vacancy_code,id) => {\r\n    setVacanciesId(id)\r\n    setSearchTerm(vacancy_code)\r\n    setFilteredVacancies([])\r\n  }\r\n\r\n  const handleUserClickCities = (city_name,id) => {\r\n    setCitiesId(id)\r\n    setSearchTermCities(city_name)\r\n    setFilteredCities([])\r\n  }\r\n\r\n  const handleInputChangeVacancies = (e) => {\r\n    const term = e.target.value;\r\n    if(searchTerm.length===0) {\r\n      setVacanciesId([])\r\n    }else{\r\n    }\r\n    setSearchTerm(term);\r\n    const filtered = vacancies.filter(vac =>\r\n        vac.vacancy_code && vac.vacancy_code.toLowerCase().includes(term.toLowerCase())\r\n    );\r\n    if (term === '') {\r\n      setFilteredVacancies([])\r\n    } else {\r\n      setFilteredVacancies(filtered);\r\n    }\r\n  }\r\n\r\n\r\n  const handleInputChangeCities = (e) => {\r\n    const termCities = e.target.value;\r\n    setSearchTermCities(termCities);\r\n    const filtered = cities.filter(city =>\r\n        city.city_name && city.city_name.toLowerCase().includes(termCities.toLowerCase())\r\n    );\r\n    if (termCities === '') {\r\n      setFilteredCities([])\r\n    } else {\r\n      setFilteredCities(filtered);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const changeVal = () => {\r\n    setCheckVal(!checkVal)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n      const getDeps = async () => {\r\n        const company = await axios.get('/api/Vacations/?company=company')\r\n\r\n        setCompany(company.data)\r\n\r\n        const getVacancies = await axios.get('/api/Vacations/')\r\n        setVacancies(getVacancies.data)\r\n\r\n\r\n        const city =  await axios.get('/api/Cities/')\r\n        setCities(city.data)\r\n\r\n        const res = await axios.get('/api/department_tree_to_json/');\r\n        const data = res.data[0]['department_tree_to_json'];\r\n        const extractedOptions = extractOptions(data);\r\n        setOptions(extractedOptions);\r\n\r\n      }\r\n\r\n      const extractOptions = (node) => {\r\n        let optionsList = [{ id: node.id, name: node.Name }];\r\n        if (node.Subclasses && node.Subclasses.length > 0) {\r\n          node.Subclasses.forEach(subclass => {\r\n            optionsList = optionsList.concat(extractOptions(subclass));\r\n          });\r\n        }\r\n        return optionsList;\r\n      };\r\n    getDeps()\r\n  }, [])\r\n\r\n\r\n  const onChangeGrade = (e) => {\r\n\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      setGrade(e.target.value);\r\n    }\r\n\r\n  }\r\n  const onChangeProject = (e) => {\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      setProject(e.target.value);\r\n    }\r\n  }\r\n\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Проверка формата ссылки на вакансию\r\n    const regex = /^ИТС-[\\d\\W]+$/;\r\n    if (!regex.test(searchTerm)) {\r\n      setError('Пожалуйста, введите значение в формате ИТС-XX-XXХ-ХХХXXXX');\r\n      return;\r\n    }\r\n\r\n    // Проверка паролей\r\n    if (password.current.value !== passwordAgain.current.value) {\r\n      passwordAgain.current.setCustomValidity('Пароли не совпадают');\r\n      setError('Пароли не совпадают')\r\n      return;\r\n    }\r\n\r\n    // Проверка заполнения поля отдела\r\n    if (department.current.value === '') {\r\n      setError('Не все поля заполнены');\r\n      return;\r\n    }\r\n\r\n    // Проверка остальных полей и отправка данных на бэкэнд\r\n    const name = firstname.current.value + ' ' + username.current.value;\r\n    if (companyName.current.value === '') {\r\n      setError('Не все поля заполнены');\r\n      return;\r\n    }\r\n\r\n    const user = {\r\n      user_name: name,\r\n      email: email.current.value.toUpperCase(),\r\n      department_id: department.current.value,\r\n      password: password.current.value,\r\n      isadmin: checkVal,\r\n      phone_number: telephone.current.value,\r\n      link_vacancies: (vacanciesId.length !== 0 ? vacanciesId : searchTerm.trim().toUpperCase()),\r\n      city_id: (citiesId.length === 0 ? null : citiesId),\r\n      additionalContact: additional_contact.current.value,\r\n      distributionGroup: distribution_group.current.value,\r\n      activityProfile: activity_profile.current.value,\r\n      place_of_residence: place_of_residence.current.value,\r\n      companyName: companyName.current.value,\r\n      grade: grade,\r\n      project: project\r\n    };\r\n    console.log('log=',user)\r\n    try {\r\n      const res = await axios.post('/api/Register/', user);\r\n      if (res.data.status === \"Username user taken\") {\r\n        setError(\"Пользователь закреплен за выбранной ИТС\");\r\n      } else {\r\n        if (res.data.status === \"Username taken\") {\r\n          setError(\"Такой email уже существует\");\r\n        } else if (res.data.noITC === \"noITC\") {\r\n          setError(\"Пользователь с данной ИТС уже существует\");\r\n        }\r\n      else if (res.data.ITC === \"THIS IS ALREADY EXISTS\") {\r\n        setError(\"Такая ИТС Уже существует\")}\r\n\r\n        else {\r\n          await axios.post('/api/Register/', user);\r\n          history.push('/login');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('Ошибка при регистрации');\r\n    }\r\n  };\r\n\r\n  const formatPhoneNumber = (value) => {\r\n    // Убираем все символы, кроме цифр\r\n    let cleaned = value.replace(/\\D/g, '');\r\n    if (cleaned.startsWith('7')) {\r\n      cleaned = cleaned.slice(1); // Удаляем ведущую 7, если она уже присутствует после +\r\n    }\r\n    // Ограничиваем длину очищенного значения до 10 цифр (XXX-XXX-XX-XX без кода страны)\r\n    cleaned = cleaned.slice(0, 10);\r\n    // Разделяем на части, добавляя дефисы\r\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})$/);\r\n    if (match) {\r\n      return '+7 ' + [match[1], match[2], match[3], match[4]].filter(Boolean).join('-');\r\n    }\r\n    return '+7 ' + cleaned;\r\n  };\r\n\r\n\r\n\r\n\r\n  function handleSubmit(e) {\r\n    if (e.target.value === '') {\r\n      setError('Email должен содержать формат домена VTB')\r\n    }\r\n    if (e.target.value.length > 0) {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n\r\n  function handleClickSubmit() {\r\n    setError('')\r\n    if(inputValue.length<=3)\r\n    {\r\n      setInputValue('')\r\n  }else{\r\n      }\r\n  }\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 1) {\r\n      setInputValue('')\r\n    } else {\r\n      const formattedValue = formatPhoneNumber(value);\r\n      setInputValue(formattedValue);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n      <div className=\"register\">\r\n{/*        <div className=\"registerWrapper\">\r\n            <form className=\"registerBox\" onSubmit={handleClick}>\r\n              {error &&\r\n              <div className='errorRegister'>\r\n                {error}\r\n              </div>\r\n              }\r\n              <input\r\n                  placeholder=\"Имя\"\r\n                  required ref={username}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Фамилия\"\r\n                  required ref={firstname}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Телефон\"\r\n                  type='text'\r\n                  required\r\n                  ref={telephone}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={handleChange}\r\n                  value={inputValue}\r\n              />\r\n              <div className=\"inputContainer\">\r\n              <input\r\n                  placeholder=\"Город\"\r\n                  ref={city}\r\n                  className=\"registerInput\"\r\n                  value={searchTermCities}\r\n                  onChange={handleInputChangeCities}\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n                {filteredCities.length > 0 && (\r\n                    <div className=\"dropdown\">\r\n                      {filteredCities.slice(0, 10).map((city, id) => (\r\n                          <div className='selectNameDiv' key={id} value={city.id} onClick={() => handleUserClickCities(city.city_name, city.id)}>\r\n                            {city.city_name}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n              <input\r\n                  placeholder=\"Адрес фактического проживания\"\r\n                  type='text'\r\n                  required ref={place_of_residence}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\r\n                  type='text'\r\n                  required ref={additional_contact}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Группа рассылки\"\r\n                  required ref={distribution_group}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <div className=\"inputContainer\">\r\n                <input\r\n                    placeholder=\"Ссылка на вакансию\"\r\n                    required\r\n                    ref={link_vacancies}\r\n                    className=\"registerInput\"\r\n                    value={searchTerm}\r\n                    onChange={handleInputChangeVacancies}\r\n                    onMouseDown={handleClickSubmit}\r\n                />\r\n                {filteredVacancies.length > 0 && (\r\n                    <div className=\"dropdown\">\r\n                      {filteredVacancies.map((vac, id) => (\r\n                          <div\r\n                              className=\"selectNameDiv\"\r\n                              key={id}\r\n                              value={id}\r\n                              onClick={() => handleUserClick(vac.vacancy_code, vac.id)}\r\n                          >\r\n                            {vac.vacancy_code}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n              <input\r\n                  placeholder=\"Профиль деятельности\"\r\n                  required ref={activity_profile}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n              <input\r\n                  placeholder=\"Грейд\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeGrade}\r\n                  value={grade}\r\n              />\r\n              <select ref={companyName} className='selectDeps' >\r\n                <option value=''>Выберите компанию</option>\r\n                {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n              </select>\r\n              <input\r\n                  placeholder=\"Код проекта(Нет проекта=0)\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeProject}\r\n                  value={project}\r\n              />\r\n              <input\r\n                  placeholder=\"Email в формате IvanoIA@vtb.ru\"\r\n                  type='email'\r\n                  required ref={email}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleSubmit}\r\n                  onInput={handleSubmit}\r\n              />\r\n              <select\r\n                  ref={department}\r\n                  className='selectDeps'\r\n              >\r\n                <option value=''>Выберите подразделение</option>\r\n                {options.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                ))}\r\n              </select>\r\n            <div>\r\n              Начальник отдела?\r\n              <label htmlFor='trueAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={true}\r\n                name='trueAdmin'\r\n                checked={checkVal}\r\n                onChange={changeVal}\r\n                onMouseDown={handleClickSubmit}\r\n              />Да</label>\r\n              <label htmlFor='falseAdmin'>\r\n              <input\r\n                type='radio'\r\n                value={false}\r\n                name='falseAdmin'\r\n                checked={!checkVal}\r\n                onChange={changeVal}\r\n                onMouseDown={handleClickSubmit}\r\n              />Нет</label>\r\n            </div>\r\n            <input\r\n              placeholder=\"Пароль\"\r\n              type='password'\r\n              required ref={password}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n              onMouseDown={handleClickSubmit}\r\n            />\r\n            <input\r\n              placeholder=\"Пароль ещё раз\"\r\n              type='password'\r\n              required ref={passwordAgain}\r\n              className=\"registerInput\"\r\n              minLength='6'\r\n              onMouseDown={handleClickSubmit}\r\n            />\r\n              <div style={{width:'100%'}}>\r\n            <button className=\"registerButton\" type='submit'>Зарегистрироваться</button>\r\n              </div>\r\n              <div style={{width:'100%'}}>\r\n            <Link to='/login'>\r\n              <button className=\"registerLoginButton\">Войти в аккаунт</button>\r\n            </Link>\r\n              </div>\r\n          </form>\r\n\r\n\r\n      </div>*/}\r\n\r\n\r\n\r\n      <div className='registerBox'>\r\n       <table border=\"0\" className='tableRegister'>\r\n         {error &&\r\n         <div className='errorRegister'>\r\n           {error}\r\n         </div>\r\n         }\r\n          <thead>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td><input\r\n                placeholder=\"Имя\"\r\n                required ref={username}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n            />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td><input\r\n                placeholder=\"Фамилия\"\r\n                required ref={firstname}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n            />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td><input\r\n                placeholder=\"Телефон\"\r\n                type='text'\r\n                required\r\n                ref={telephone}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n                onChange={handleChange}\r\n                value={inputValue}\r\n            />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div className=\"inputContainer\">\r\n                <input\r\n                    placeholder=\"Город\"\r\n                    ref={city}\r\n                    className=\"registerInput\"\r\n                    value={searchTermCities}\r\n                    onChange={handleInputChangeCities}\r\n                    onMouseDown={handleClickSubmit}\r\n                />\r\n                {filteredCities.length > 0 && (\r\n                    <div className=\"dropdown\">\r\n                      {filteredCities.slice(0, 10).map((city, id) => (\r\n                          <div className='selectNameDiv' key={id} value={city.id} onClick={() => handleUserClickCities(city.city_name, city.id)}>\r\n                            {city.city_name}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td><input\r\n                placeholder=\"Адрес фактического проживания\"\r\n                type='text'\r\n                required ref={place_of_residence}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n            />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td><input\r\n                placeholder=\"Доп контакт(Номер телефона,ФИО,статус человека)\"\r\n                type='text'\r\n                required ref={additional_contact}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n            /></td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Группа рассылки\"\r\n                  required ref={distribution_group}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n            </td>\r\n            <td><HelpOutline onClick={()=>setActive(true)} style={{cursor:'pointer'}}/></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div className=\"inputContainer\">\r\n                <input\r\n                    placeholder=\"Ссылка на вакансию\"\r\n                    required\r\n                    ref={link_vacancies}\r\n                    className=\"registerInput\"\r\n                    value={searchTerm}\r\n                    onChange={handleInputChangeVacancies}\r\n                    onMouseDown={handleClickSubmit}\r\n                />\r\n                {filteredVacancies.length > 0 && (\r\n                    <div className=\"dropdown\">\r\n                      {filteredVacancies.map((vac, id) => (\r\n                          <div\r\n                              className=\"selectNameDiv\"\r\n                              key={id}\r\n                              value={id}\r\n                              onClick={() => handleUserClick(vac.vacancy_code, vac.id)}\r\n                          >\r\n                            {vac.vacancy_code}\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                )}\r\n              </div>\r\n            </td>\r\n            <td><HelpOutline onClick={()=>setActive(true)} style={{cursor:'pointer'}}/></td>\r\n                <Modal active={active} setActive={setActive}>\r\n                  <div>\r\n                    <center>Информацию можно получить у своего руководителя</center>\r\n                  </div>\r\n                </Modal>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                placeholder=\"Профиль деятельности\"\r\n                required ref={activity_profile}\r\n                className=\"registerInput\"\r\n                onMouseDown={handleClickSubmit}\r\n            />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Грейд\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeGrade}\r\n                  value={grade}\r\n              />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n           <tr>\r\n            <td>\r\n              <select ref={companyName} className='selectDeps' >\r\n                <option value=''>Выберите компанию</option>\r\n                {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n              </select>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n            <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Код проекта(Нет проекта=0)\"\r\n                  type='text'\r\n                  required\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleClickSubmit}\r\n                  onChange={onChangeProject}\r\n                  value={project}\r\n              />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Email в формате IvanoIA@vtb.ru\"\r\n                  type='email'\r\n                  required ref={email}\r\n                  className=\"registerInput\"\r\n                  onMouseDown={handleSubmit}\r\n                  onInput={handleSubmit}\r\n              />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ width: '100%' }}>\r\n              <select\r\n                  ref={department}\r\n                  className='selectDeps'\r\n              >\r\n                <option value=''>Выберите подразделение</option>\r\n                {options.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                ))}\r\n              </select>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div>\r\n                Начальник отдела?\r\n                <label htmlFor='trueAdmin'>\r\n                  <input\r\n                      type='radio'\r\n                      value={true}\r\n                      name='trueAdmin'\r\n                      checked={checkVal}\r\n                      onChange={changeVal}\r\n                      onMouseDown={handleClickSubmit}\r\n                  />Да</label>\r\n                <label htmlFor='falseAdmin'>\r\n                  <input\r\n                      type='radio'\r\n                      value={false}\r\n                      name='falseAdmin'\r\n                      checked={!checkVal}\r\n                      onChange={changeVal}\r\n                      onMouseDown={handleClickSubmit}\r\n                  />Нет</label>\r\n              </div>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Пароль\"\r\n                  type='password'\r\n                  required ref={password}\r\n                  className=\"registerInput\"\r\n                  minLength='6'\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                  placeholder=\"Пароль ещё раз\"\r\n                  type='password'\r\n                  required ref={passwordAgain}\r\n                  className=\"registerInput\"\r\n                  minLength='6'\r\n                  onMouseDown={handleClickSubmit}\r\n              />\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div style={{width:'100%'}}>\r\n                <button className=\"registerButton\" type='submit' onClick={handleClick}>Зарегистрироваться</button>\r\n              </div>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div style={{width:'100%'}}>\r\n                <Link to='/login'>\r\n                  <button className=\"registerLoginButton\">Войти в аккаунт</button>\r\n                </Link>\r\n              </div>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {useHistory} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport './Employee.css'\r\n\r\nexport default function Employee({user}) {\r\n  const history =useHistory()\r\n  const [nominations, setNominations] = useState([])\r\n  const [admin, setAdmin] = useState()\r\n  const [date, setDate] = useState('')\r\n  const [time, setTime] = useState('')\r\n  const [dateStart, setDateStart] = useState()\r\n  const [dateEnd, setDateEnd] = useState()\r\n\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const usersStatuses = {\r\n    0: '',\r\n    1: 'start',\r\n    2: 'end',\r\n    3: 'sick_leave',\r\n    4: 'deleted',\r\n    5: 'vacation',\r\n    6: 'time_off',\r\n    7: 'other'\r\n  }\r\n\r\n  function findStatus(e) {\r\n    for (let i in usersStatuses) {\r\n      if (i == e) {\r\n        return usersStatuses[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n  useEffect(() => {\r\n\r\n    const fetchUser = async () => {\r\n      const users = await axios.get('/api/user/' + user.id)\r\n      const res = await axios.get('/api/vacation?id=' + user.id);\r\n      const post = await axios.get('/api/post?type=1&id=' + user.id);\r\n      setNominations(users.data.nomination_status)\r\n\r\n      if (users.data.isadmin !== true) {\r\n        setAdmin('');\r\n      } else {\r\n        setAdmin('*');\r\n      }\r\n\r\n\r\n      if (res.data.length === 0) {\r\n        setDateStart('')\r\n        setDateEnd('')\r\n      } else {\r\n        setDateStart(res.data[0].workdate)\r\n        setDateEnd(res.data[0].worked)\r\n      }\r\n\r\n\r\n\r\n      if (post.data.length === 0) {\r\n        setDate('')\r\n        setTime('')\r\n      } else {\r\n        setDate(post.data[0].workdate)\r\n        setTime(post.data[0].workend)\r\n      }\r\n    }\r\n\r\n      if (user.status === 1 || user.status === 2 || user.status === 3\r\n          || user.status === 5 || user.status === 6 || user.status === 7)\r\n      {\r\n        fetchUser()\r\n    }\r\n\r\n  }, [user.id])\r\n\r\n  const handleClick = () => {\r\n    history.push(`/profile/${user.id}`);\r\n  };\r\n\r\n\r\n  const images = {\r\n    '1': { src: '../images/1.png', title: 'Тучка' },\r\n    '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n    '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n    '4': { src: '../images/4.png', title: 'Портной' },\r\n    '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n    '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n    '7': { src: '../images/7.png', title: 'Крот' },\r\n    '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n    '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n    '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n  };\r\n\r\n\r\n  return (\r\n      <>\r\n        <div onClick={handleClick} className='name'>\r\n        <div className=\"searchBlockContainer\">\r\n            <div className={'employee ' + (findStatus(user.status))}>\r\n              <div className=\"angry-grid\">\r\n                <div id=\"item-0\">\r\n                  <span className='searchName'>{user.user_name}{localUser.isAdmin ? admin : ''}</span>\r\n                </div>\r\n                <div id=\"item-1\">\r\n                  {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                  {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n                </div>\r\n                <div id=\"item-2\">\r\n                  {Object.keys(images).map((key, id) => (\r\n                      (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations === key || nominations === parseInt(key)) &&\r\n                      <img\r\n                          key={id}\r\n                          src={images[key].src}\r\n                          title={images[key].title}\r\n                          alt={`Image for ${key}`}\r\n                      />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\n","import {useEffect,useState,useRef} from 'react'\r\nimport axios from 'axios'\r\nimport Employee from '../Employee/Employee'\r\nimport './Staff.css'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Modal from '../Templates/Modal/Modal'\r\n\r\n\r\n\r\nexport default function Staff() {\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const [statisticsWork, setStatisticsWork] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [UsersDep, setUsersDeps] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isJob, setIsJob] = useState(true)\r\n    const [modalMain, setModalMain] = useState(false)\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const departId = useParams().username;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //Вывод статистики для админов\r\n        const get_statistics_all_users = async () => {\r\n\r\n            if (localUser.isAdmin === true) {\r\n                const getUsers = {\r\n                    id: localUser._id\r\n                }\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers)\r\n                const all = res.data[0].get_statistics_all_users[0]['all_users'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n\r\n                let all_users = filterUsersFoo(all)\r\n\r\n                if (res.data[0].get_statistics_all_users[0]['all_users'] === null && !!~document.location.href.indexOf('/all_users/')) {\r\n                    alert('Нет не одного пользователя в работе')\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null && !!~document.location.href.indexOf('/not_working_today/')) {\r\n                    alert('Сегодня все в работе')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null && !!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    alert('Вчера все работали')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_today'] === null && !!~document.location.href.indexOf('/sick_today/')) {\r\n                    alert('Нет болеющих сегодня')\r\n                    window.location.href = `/department/${localUser.departmentId}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null && !!~document.location.href.indexOf('/sick_yesterday')) {\r\n                    alert('Вчера не было сотрудников на больничном')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null && !!~document.location.href.indexOf('/vacation_today')) {\r\n                    alert('На сегодня нет сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null && !!~document.location.href.indexOf('/vacation_yesterday')) {\r\n                    alert('Вчера не было сотрудников в отпуске')\r\n                    window.location.href = `/department/${localUser.main_department}`\r\n                }\r\n                if (!!~document.location.href.indexOf('/all_users/')) {\r\n                    setIsJob(isJob)\r\n                    setStatisticsWork(all_users)\r\n                }\r\n                if (!!~document.location.href.indexOf('/not_working_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['not_working_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_working_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/not_worked_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['not_worked_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['not_worked_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['sick_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/sick_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['sick_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['sick_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_today/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['vacation_today'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_today'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n\r\n                if (!!~document.location.href.indexOf('/vacation_yesterday/')) {\r\n                    if (res.data[0].get_statistics_all_users[0]['vacation_yesterday'] === null) {\r\n\r\n                    } else {\r\n                        setIsJob(isJob)\r\n                        const sort = res.data[0].get_statistics_all_users[0]['vacation_yesterday'].sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                        setStatisticsWork(filterUsersFoo(sort))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // функция показывает нажата ли галочка показать дочернии\r\n        const statusChild = async () => {\r\n            const user = await axios.get('/api/user/' + localUser._id)\r\n            setChecked(user.data.see_child)\r\n            setUser(user.data)\r\n        }\r\n\r\n        const fetchUsers = async () => {\r\n            const res = await axios.get('/api/user');\r\n            res.data.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n            const filteredUsers = filterUsersFoo(res.data);\r\n            return filteredUsers.filter(user => user.department_id === departId);\r\n        };\r\n\r\n        const getUsersByDepIsCheckedTrue = async () => {\r\n            const info = { depsId: departId };\r\n            const res = await axios.post('/api/get_users_by_dep/', info);\r\n            const depUsers = res.data[0].get_users_by_dep;\r\n            if (depUsers === null) {\r\n                return [];\r\n            } else {\r\n                const sortedUsers = depUsers.sort((a, b) => a.user_name.localeCompare(b.user_name));\r\n                const filteredUsers = filterUsersFoo(sortedUsers);\r\n                return filteredUsers;\r\n            }\r\n        };\r\n\r\n        const combineUsers = async () => {\r\n            try {\r\n                const users = await fetchUsers();\r\n                let combinedArray = [];\r\n\r\n                if (checked && user.main_department===departId) {\r\n                    setIsJob(false)\r\n                    const us = await getUsersByDepIsCheckedTrue();\r\n                    combinedArray = combinedArray.concat(us);\r\n                } else {\r\n                    combinedArray = users;\r\n                }\r\n\r\n                setUsers(combinedArray);\r\n            } catch (error) {\r\n                console.error('Ошибка при объединении пользователей:', error);\r\n            }\r\n        };\r\n\r\n        // Вызов функции combineUsers для получения и объединения пользователей\r\n        combineUsers();\r\n\r\n\r\n        setIsJob(true)\r\n\r\n        if(departId){\r\n            setUsersDeps([])\r\n        }\r\n        get_statistics_all_users()\r\n        statusChild()\r\n\r\n\r\n    }, [departId,user.main_department])\r\n\r\n\r\n\r\n\r\n    //Сортировка пользователей по статусам\r\n    function filterUsersFoo(users) {\r\n        return users.filter(user => user.status === 1)\r\n            .concat(users.filter(user => user.status === 2))\r\n            .concat(users.filter(user => user.status === 3))\r\n            .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n            .concat(users.filter(user => user.status === 4))\r\n    }\r\n\r\n\r\n    const clickcheckbox = async () => {\r\n        setChecked(!checked)\r\n        const info = {\r\n            userId: localUser._id,\r\n            ischeked: !checked\r\n        };\r\n        await axios.post('/api/statusChild/', info);\r\n\r\n    }\r\n\r\n    const handleModalClick = async () => {\r\n        const add = {\r\n            id: localUser._id,\r\n            depsId: departId\r\n        }\r\n        const res = await axios.put('/api/user', add)\r\n        setModalMain(false)\r\n    }\r\n\r\n\r\n\r\n    const get_users_by_depIsOpen = async () => {\r\n\r\n        if (isJob) {\r\n            const info = {\r\n                depsId: departId\r\n            }\r\n            const res = await axios.post('/api/get_users_by_dep/', info)\r\n            const dep_users = res.data[0]['get_users_by_dep']\r\n            if (dep_users !== null) {\r\n                dep_users.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n                let filterUsers = filterUsersFoo(dep_users)\r\n                setUsersDeps(filterUsers)\r\n                setUsers([])\r\n                setIsJob(!isJob)\r\n                setIsOpen(true)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='staff'>\r\n            <>\r\n                {departId && (\r\n                    <>\r\n                        {isJob ?\r\n                            <button onClick={get_users_by_depIsOpen} className=\"btnStaff\" style={{ width: '155px' }}>\r\n                                Показать дочерние\r\n                            </button>\r\n                            :\r\n                            <button onClick={() => window.location.href = `/department/${departId}`} className=\"btnStaff\" disabled={checked && user.main_department === departId}>\r\n                                Скрыть дочерние\r\n                            </button>\r\n                        }\r\n                        <button onClick={() => setModalMain(true)} className='btnStaff' style={{ float: 'right' }}>Сделать главной</button>\r\n                        {localUser.isAdmin ? <Link to={`/VacanciesView/`}><button className=\"btnStaff\">Показать вакансии</button></Link> : ''}\r\n                    </>\r\n                )}\r\n            </>\r\n\r\n\r\n            <div className=\"employeeWrapper\">\r\n\r\n                {\r\n                    users.map((user, id) => <Employee key={id} user={user} />)\r\n                }\r\n\r\n                {isOpen ?\r\n                    UsersDep.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n\r\n                {!departId\r\n                    ? statisticsWork.map((user, id) => <Employee key={id} user={user} />)\r\n                    :''\r\n\r\n                }\r\n            </div>\r\n            <Modal active={modalMain} setActive={setModalMain}>\r\n                <h1>Изменение информации:</h1>\r\n                <hr/>\r\n                <form className=\"modalLoginBox\">\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            onChange={clickcheckbox}\r\n                            checked={checked}\r\n                        />\r\n                        Добавить дочерние</label>\r\n                    <button className=\"ModalButtonDepartment\" type=\"submit\" onClick={handleModalClick}>\r\n                        Сделать главным департаментом\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import Staff from '../Staff/Staff'\r\nimport './Feed.css'\r\nimport React from \"react\";\r\n\r\nexport default function Feed() {\r\n  return (\r\n\r\n    <div className='feed'>\r\n      <div>\r\n          <h4 className='h1'>Сервис находится в тестовом режиме  ➜ <a className=\"a4\" href=\"https://sfera.vtb.ru/knowledge/pages?id=110481\" target=\"_blank\">Нашли ошибку? Пиши в комментариях!</a></h4>\r\n      </div>\r\n      <div className=\"feedWrapper\">\r\n\r\n        <Staff/>\r\n      </div>\r\n\r\n        <div className=\"circle-container\">\r\n            <div className=\"circle\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import Feed from \"../../components/Feed/Feed\";\r\nimport './Department.css'\r\n\r\nexport default function Department () {\r\n\r\n  return (\r\n    <>\r\n        <Feed/>\r\n    </>\r\n  )\r\n}\r\n","import {useEffect, useRef, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport Modal from '../Templates/Modal/Modal'\r\nimport './Status.css'\r\n\r\nconst moment = require('moment');\r\nconst usersStatuses = {\r\n  0: '',\r\n  1: 'start',\r\n  2: 'end',\r\n  3: 'sick_leave',\r\n  4: 'deleted',\r\n  5: 'vacation',\r\n  6: 'time_off',\r\n  7: 'other'\r\n}\r\n\r\nfunction findStatus(k) {\r\n  for (let i in usersStatuses) {\r\n    if (i == k) {\r\n      return usersStatuses[i]\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Status() {\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const [places, setplaces] = useState([])\r\n  const [office, setoffice] = useState([])\r\n  const [workplace, setworkplace] = useState([])\r\n  const [place, setPlace] = useState([])\r\n  const [err, setErr] = useState('')\r\n  const [user, setUser] = useState([])\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [modalActive, setModalActive] = useState(false)\r\n  const [modalActiveReserve, setModalActiveReserve] = useState(false)\r\n  const [modalName, setModalName] = useState()\r\n  const modalComment = useRef()\r\n  const PlaceRef = useRef()\r\n  const DataTime = useRef()\r\n  const Offices = useRef()\r\n\r\n\r\n  // получение данных пользователя о работе\r\n  useEffect(() => {\r\n\r\n\r\n    const fetchUser = async () => {\r\n\r\n      const res = await axios.get('/api/user/' + localUser._id)\r\n      setUser(res.data)\r\n\r\n      const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n      const filter = work.data.filter(element => element.is_canceled !== true)\r\n      setworkplace(filter)\r\n\r\n      const offices = await axios.get('/api/office_get/')\r\n      const officesMap = offices.data.map(element => element.location)\r\n      setoffice(officesMap)\r\n\r\n\r\n      const date = moment().format('YYYY-MM-DD')\r\n      if (DataTime.current) {\r\n        DataTime.current.value = date;\r\n      }\r\n\r\n      if (\r\n          !Offices.current || Offices.current.value === '' ||\r\n          !PlaceRef.current || PlaceRef.current.value === '' ||\r\n          !DataTime.current || DataTime.current.value === ''\r\n      ) {\r\n        const off = 1;\r\n\r\n        const add = {\r\n          date: date,\r\n          office: off\r\n        };\r\n\r\n        const places = await axios.post('/api/workplaces/', add);\r\n        setplaces(places.data);\r\n      }\r\n      if (Offices.current) {\r\n        if (Offices.current.value === null) {\r\n          Offices.current.value = '';\r\n        } else {\r\n\r\n          const add = {\r\n            date: date,\r\n            office: Offices.current.value\r\n          };\r\n\r\n          const places = await axios.post('/api/workplaces/', add)\r\n          setplaces(places.data)\r\n        }\r\n        if (places && places.length > 0) {\r\n          const placeMap = places.map(element => element.location_res);\r\n          setPlace(placeMap);\r\n        } else {\r\n          setPlace([]); // Установите пустой массив, если нет данных\r\n        }\r\n      }\r\n    }\r\n    fetchUser()\r\n  }, [localUser._id])\r\n\r\n  // начало работы.\r\n  const handlerStart = async () => {\r\n\r\n    if (+modalName === 0 && modalComment.current.value === '') {\r\n      setError('Заполните комментарий')\r\n      return\r\n    }\r\n    if (+modalName !== 0 && +modalName !== 1) {\r\n      setError('Заполните состояние здоровья')\r\n    } else {\r\n\r\n      const newPost = {\r\n        userId: localUser._id,\r\n        typework_id: 1,\r\n        status: 1,\r\n        healthStart: +modalName,\r\n        commentStart: modalComment.current.value || '-',\r\n        workStart: new Date(Date.now())\r\n      }\r\n      try {\r\n        const res = await axios.post(\"/api/post/\", newPost)\r\n        /*await axios.post(\"/api/status/\")*/\r\n        /*await axios.put('/api/user/'+user._id, {status:1, userId: user._id})*/\r\n        localStorage.setItem('user', JSON.stringify({...localUser, status: 1}));\r\n        window.location.reload()\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // конец работы\r\n  const handlerEnd = async () => {\r\n\r\n    if (+modalName === 0 && modalComment.current.value === '') {\r\n      setError('Заполните комментарий');\r\n      return;\r\n    }\r\n\r\n    if (+modalName !== 0 && +modalName !== 1) {\r\n      setError('Заполните состояние здоровья');\r\n    } else {\r\n\r\n      try {\r\n        const res = await axios.get('/api/vacation?id=' + localUser._id);\r\n        const date = moment().format('DD.MM.YY')\r\n        let newstatus;\r\n\r\n        if (res.data.length > 0 && date >= res.data[0]['workdate'] && date <= res.data[0]['worked']) {\r\n          newstatus = res.data[0]['typework_id']\r\n        } else {\r\n          newstatus = 2\r\n        }\r\n\r\n        const newPost = {\r\n          userId: localUser._id,\r\n          typework_id: 1,\r\n          status: newstatus,\r\n          healthEnd: +modalName,\r\n          commentEnd: modalComment.current.value || '-',\r\n          workEnd: new Date(Date.now())\r\n        };\r\n\r\n        await axios.put(\"/api/post/\", newPost);\r\n        /*await axios.put('/api/user/'+user._id, {status:2, userId: user._id})*/\r\n        localStorage.setItem('user', JSON.stringify({...localUser, status: 2}));\r\n        window.location.reload()\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleName = e => {\r\n    setModalName(e.target.value)\r\n  }\r\n\r\n  const clickReserve = async () => {\r\n    setErr('')\r\n    if (PlaceRef.current.value === '' || DataTime.current.value === '') {\r\n\r\n    } else {\r\n      const space = PlaceRef.current.value.toString()\r\n      const wp_id = space.split('(')\r\n      const ww = wp_id[0].split(\"^\")\r\n      if (wp_id[1]) {\r\n        setErr('Место занято')\r\n      } else {\r\n        const reservePlace = {\r\n          user_id: localUser._id,\r\n          wp_id: ww[0],\r\n          office: Offices.current.value,\r\n          booking_date: DataTime.current.value,\r\n          is_canceled: false\r\n        }\r\n        await axios.post(\"/api/workplace_logs/\", reservePlace)\r\n      }\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n    }\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    setworkplace(filter)\r\n\r\n  }\r\n\r\n\r\n  const DataClick = async () => {\r\n    const date = moment().format('YYYY-MM-DD');\r\n    if (DataTime.current.value < date) {\r\n      DataTime.current.value = date\r\n      setErr('Не актуальная дата')\r\n    } else {\r\n      setErr('')\r\n    }\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n  }\r\n\r\n  const clickOffice = async () => {\r\n\r\n    setErr('')\r\n    const date = moment().format('YYYY-MM-DD');\r\n    if (DataTime.current.value === '') {\r\n      DataTime.current.value = date\r\n    } else {\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n      const placeMap = places.data.map(element => element.location_res)\r\n      setPlace(placeMap)\r\n    }\r\n  }\r\n\r\n  const clickPlace = async () => {\r\n    setErr('')\r\n    if (DataTime.current.value === '' || PlaceRef.current.value === '') {\r\n    } else {\r\n      const add = {\r\n        date: DataTime.current.value,\r\n        office: Offices.current.value\r\n      }\r\n      const places = await axios.post('/api/workplaces/', add)\r\n      setplaces(places.data)\r\n      const placeMap = places.data.map(element => element.location_res)\r\n      setPlace(placeMap)\r\n    }\r\n  }\r\n\r\n\r\n  const clearPlace = async () => {\r\n    setErr('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n\r\n    const is_canceled = {\r\n      user_id: localUser._id,\r\n      canceled: true,\r\n      date: date\r\n    }\r\n\r\n    await axios.post('/api/workplace_logs_clear/', is_canceled)\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    setworkplace(filter)\r\n\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n    const placeMap = places.data.map(element => element.location_res)\r\n    setPlace(placeMap)\r\n\r\n  }\r\n\r\n  const deletePlace = async (e) => {\r\n    setErr('')\r\n    e.preventDefault()\r\n\r\n    const is_canceled = {\r\n      user_id: localUser._id,\r\n      id: e.target.value,\r\n      canceled: true\r\n    }\r\n\r\n    await axios.post('/api/workplace_logs_post/', is_canceled)\r\n    const work = await axios.get('/api/workplace_logs_get/' + localUser._id)\r\n    const filter = work.data.filter(element => element.is_canceled !== true)\r\n    const add = {\r\n      date: DataTime.current.value,\r\n      office: Offices.current.value\r\n    }\r\n    const places = await axios.post('/api/workplaces/', add)\r\n    setplaces(places.data)\r\n    setworkplace(filter)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n        <table border=\"0\">\r\n          <tr>\r\n            <td>\r\n              <button type='submit' onClick={() => setModalActive(true)}\r\n                      className={'statusBtn ' + (findStatus(user.status))}>\r\n                {isFetching\r\n                    ? <CircularProgress style={{color: 'white', size: '20px', width: '20px', height: '20px'}}/>\r\n                    : user.status !== 1\r\n                        ? 'Начать'\r\n                        : 'Закончить'\r\n                }\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button type='submit' onClick={() => setModalActiveReserve(true)} className='statusBtn'>\r\n                <h5>Зарезервировать место</h5>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n          <h1>Изменение информации:</h1>\r\n          <hr/>\r\n          {error && <div className='modalError'>{error}</div>}\r\n            <div className='statusCheckbox'>\r\n              <label htmlFor='sickLeave'>\r\n                <input\r\n                    type='radio'\r\n                    value={1}\r\n                    id='sickLeave'\r\n                    name='sickLeave'\r\n                    onChange={handleName}\r\n                    checked={+modalName === 1}\r\n                />Здоров</label>\r\n              <label htmlFor='vacation'>\r\n                <input\r\n                    type='radio'\r\n                    value={0}\r\n                    id='vacation'\r\n                    name='vacation'\r\n                    onChange={handleName}\r\n                    checked={+modalName === 0}\r\n                />Болен</label>\r\n            </div>\r\n          <div>\r\n            <textarea\r\n                placeholder=\"Комментарий\"\r\n                className=\"textArea\"\r\n                ref={modalComment}\r\n            />\r\n            <button className=\"ModalButton\" type=\"submit\" onClick={user.status === 1 ? handlerEnd : handlerStart}>\r\n              {user.status !== 1\r\n                  ? 'Начать'\r\n                  : 'Закончить'\r\n              }\r\n            </button>\r\n          </div>\r\n\r\n        </Modal>\r\n        <Modal active={modalActiveReserve} setActive={setModalActiveReserve}>\r\n          <h1 style={{textAlign: 'center'}}>Зарезервировать рабочее место</h1>\r\n\r\n          <br/>\r\n          {err &&\r\n          <div className='modalError'>\r\n            {err}\r\n          </div>\r\n          }\r\n          <hr/>\r\n          <br/>\r\n          <div className='flex'>\r\n            <div>\r\n              <label style={{fontWeight: \"bold\"}}>Дата: </label><input\r\n                type='date'\r\n                className=\"ModalInputDate\"\r\n                ref={DataTime}\r\n                onChange={DataClick}\r\n            />\r\n            </div>\r\n\r\n            <div style={{width: '50px'}}></div>\r\n\r\n            <div><label style={{fontWeight: \"bold\"}}>Офис: </label>\r\n\r\n              <select ref={Offices} onClick={clickOffice} className='selectwork'>\r\n\r\n                {office.map((work, id) => <option key={id} title={work} value={id + 1}>{work}</option>)}\r\n\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{width: '50px'}}></div>\r\n\r\n            <div><label style={{fontWeight: \"bold\"}}>Место: </label>\r\n\r\n              <select ref={PlaceRef} onClick={clickPlace} className='selectwork'>\r\n\r\n                {places.map((work, id) => <option key={id} title={work.workplace_id}\r\n                                                  value={work.workplace_id + \"^\" + work.location_res}>{work.location_res}</option>)}\r\n\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <button className=\"ModalButton\" onClick={clickReserve} type=\"submit\">\r\n            Зарезервировать место\r\n          </button>\r\n          <br/>\r\n          <br/>\r\n          <hr/>\r\n          <div className='divreserve'>\r\n            {workplace.map((array, id) =>\r\n                <div className='place'>Дата: {array.booking_date} Место: {array.place} Офис:{array.location}\r\n                  <button className='placeButton' key={id} value={array.id} onClick={deletePlace}>Снять резерв</button>\r\n                </div>)}\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <button onClick={clearPlace} className=\"ModalButton\">Отменить все места</button>\r\n          <br/><br/>\r\n        </Modal>\r\n      </>\r\n  )\r\n}\r\n","import {Link} from 'react-router-dom'\r\nimport './SearchBlock.css'\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst usersStatuses = {0: '', 1: 'start', 2: 'end', 3: 'sick_leave', 4: 'deleted' ,5: 'vacation', 6: 'time_off', 7: 'other'}\r\nfunction findStatus(k){\r\n    for(let i in usersStatuses){\r\n        if(i == k){\r\n            return usersStatuses[i]\r\n        }\r\n    }\r\n}\r\n\r\nexport default function SearchBlock({user}) {\r\n    const [nominations, setNominations] = useState([])\r\n    const [admin, setAdmin] = useState()\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [dateStart, setDateStart] = useState()\r\n    const [dateEnd, setDateEnd] = useState()\r\n\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const usersStatuses = {\r\n        0: '',\r\n        1: 'start',\r\n        2: 'end',\r\n        3: 'sick_leave',\r\n        4: 'deleted',\r\n        5: 'vacation',\r\n        6: 'time_off',\r\n        7: 'other'\r\n    }\r\n\r\n    function findStatus(k) {\r\n        for (let i in usersStatuses) {\r\n            if (i == k) {\r\n                return usersStatuses[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    // Проверка, если пользователь в отпуске или на больничном, то вывод даты начала и конца\r\n    useEffect(() => {\r\n\r\n        const fetchUser = async () => {\r\n            const users = await axios.get('/api/user/' + user.id)\r\n            const res = await axios.get('/api/vacation?id=' + user.id);\r\n            const post = await axios.get('/api/post?type=1&id=' + user.id);\r\n            setNominations(users.data.nomination_status)\r\n\r\n            if (users.data.isadmin !== true) {\r\n                setAdmin('');\r\n            } else {\r\n                setAdmin('*');\r\n            }\r\n\r\n\r\n            if (res.data.length === 0) {\r\n                setDateStart('')\r\n                setDateEnd('')\r\n            } else {\r\n                setDateStart(res.data[0].workdate)\r\n                setDateEnd(res.data[0].worked)\r\n            }\r\n\r\n\r\n\r\n            if (post.data.length === 0) {\r\n                setDate('')\r\n                setTime('')\r\n            } else {\r\n                setDate(post.data[0].workdate)\r\n                setTime(post.data[0].workend)\r\n            }\r\n        }\r\n\r\n        if (user.status === 1 || user.status === 2 || user.status === 3\r\n            || user.status === 5 || user.status === 6 || user.status === 7)\r\n        {\r\n            fetchUser()\r\n        }\r\n\r\n    }, [user.id])\r\n\r\n\r\n    const images = {\r\n        '1': { src: '../images/1.png', title: 'Тучка' },\r\n        '2': { src: '../images/2.png', title: 'Аркадий Паровозов' },\r\n        '3': { src: '../images/3.png', title: 'И так сойдет' },\r\n        '4': { src: '../images/4.png', title: 'Портной' },\r\n        '5': { src: '../images/5.png', title: 'Мама обезьянка' },\r\n        '6': { src: '../images/6.png', title: 'Кот Матроскин' },\r\n        '7': { src: '../images/7.png', title: 'Крот' },\r\n        '8': { src: '../images/8.png', title: 'Птица говорун(голосуем только среди дежурных)' },\r\n        '9': { src: '../images/9.png', title: 'Хома(Голосуем среди коллег из внедрения)' },\r\n        '10': { src: '../images/10.png', title: 'Симка и нолик' }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"searchBlockContainer\">\r\n                    <Link to={`/profile/${user.id}`} className='name'\r\n                          onClick={() => window.location.href = `/profile/${user.id}`}>\r\n                        <div className={'employee ' + (findStatus(user.status))}>\r\n                            <div className=\"angry-grid\">\r\n                                <div id=\"item-0\">\r\n                                    <span className='searchName'>{user.user_name}{localUser.isAdmin ? admin:''}</span>\r\n                                </div>\r\n                                <div id=\"item-1\">\r\n\r\n                                    {user.status === 5 && <div className='vacationText'>Отпуск:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 6 && <div className='vacationText'>Отгул:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 7 && <div className='vacationText'>Другая причина:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 3 && <div className='vacationText'>Больничный:{dateStart}-{dateEnd}</div>}\r\n                                    {user.status === 2 && <div className='vacationText'>{date} {time}</div>}\r\n\r\n                                </div>\r\n                                <div id=\"item-2\">\r\n\r\n                                    {Object.keys(images).map((key, id) => (\r\n                                        (user.nomination_status === key || user.nomination_status === parseInt(key) || nominations===key || nominations===parseInt(key)) &&\r\n\r\n                                        <img\r\n                                            key={id}\r\n                                            src={images[key].src}\r\n                                            title={images[key].title}\r\n                                            alt={`Image for ${key}`}\r\n                                        />\r\n\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Statistics () {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [countAll_users, setCountAll_users] = useState(0)\r\n    const [countWorked_today, setCountWorked_today] = useState(0)\r\n    const [countWorked_yesterday, setCountWorked_yesterday] = useState(0)\r\n    const [countSickLeave_today, setCountSickLeave_today] = useState(0)\r\n    const [countSick_yesterday, setCountSick_yesterday] = useState(0)\r\n    const [countVacation_today, setCountVacation_today] = useState(0)\r\n    const [countVacation_yesterday, setCountVacation_yesterday] = useState(0)\r\n    const [typeworkColors, setTypeworkColors] = useState([]);\r\n    useEffect(() => {\r\n        const typework = async () => {\r\n            const res = await axios.get('/api/typework_status/')\r\n            setTypeworkColors(res.data.user_typework.map(item => item.color));\r\n        }\r\n\r\n        const get_statistics_all_users = async () => {\r\n            const getUsers = {\r\n                id: localUser._id\r\n            }\r\n            if (localUser.isAdmin === true) {\r\n                const res = await axios.post('/api/get_statistics_all_users', getUsers)\r\n\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['all_users']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['all_users']=0\r\n                }else{\r\n                    setCountAll_users(res.data[0]['get_statistics_all_users'][0]['all_users'].length)\r\n                }\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['not_working_today']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['not_working_today']=0\r\n                }else{\r\n                    setCountWorked_today(res.data[0]['get_statistics_all_users'][0]['not_working_today'].length)\r\n                }\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday']=0\r\n                }else{\r\n                    setCountWorked_yesterday(res.data[0]['get_statistics_all_users'][0]['not_worked_yesterday'].length)\r\n                }\r\n\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['sick_today']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['sick_today']=0\r\n                }else {\r\n                    setCountSickLeave_today(res.data[0]['get_statistics_all_users'][0]['sick_today'].length)\r\n                }\r\n\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['sick_yesterday']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['sick_yesterday']=0\r\n                }else{\r\n                    setCountSick_yesterday(res.data[0]['get_statistics_all_users'][0]['sick_yesterday'].length)\r\n                }\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['vacation_today']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['vacation_today']=0\r\n                }else{\r\n                    setCountVacation_today(res.data[0]['get_statistics_all_users'][0]['vacation_today'].length)\r\n                }\r\n\r\n                if(res.data[0]['get_statistics_all_users'][0]['vacation_yesterday']===null){\r\n                    res.data[0]['get_statistics_all_users'][0]['vacation_yesterday']=0\r\n                }else{\r\n                    setCountVacation_yesterday(res.data[0]['get_statistics_all_users'][0]['vacation_yesterday'].length)\r\n                }\r\n            }\r\n        }\r\n        typework()\r\n        get_statistics_all_users()\r\n}, [])\r\n\r\n        return (\r\n            <div className=\"topbarCenter\">\r\n                {localUser.isAdmin ?\r\n                    <div className='statistics'>\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[0]}} onClick={() => window.location.href = `/all_users/`}\r\n                              title=\"Всего сотрудников\">{countAll_users}</Link> /\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[1]}} onClick={() => window.location.href = `/not_working_today/`}\r\n                              title=\"Сегодня не работают\">{countWorked_today}</Link> /\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[1]}} onClick={() => window.location.href = `/not_worked_yesterday/`}\r\n                              title=\"Вчера не работали\">{countWorked_yesterday}</Link> /\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[2]}} onClick={() => window.location.href = `/sick_today/`}\r\n                              title=\"Сегодня болеют\">{countSickLeave_today}</Link> /\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[2]}} onClick={() => window.location.href = `/sick_yesterday/`}\r\n                              title=\"Вчера болели\">{countSick_yesterday}</Link> /\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[5]}} onClick={() => window.location.href = `/vacation_today/`}\r\n                              title=\"Сегодня в отпуске\">{countVacation_today}</Link>/\r\n\r\n                        <Link className=\"topbarLinkCount\" style={{color: typeworkColors[5]}} onClick={() => window.location.href = `/vacation_yesterday/`}\r\n                              title=\"Вчера в отпуске\">{countVacation_yesterday}</Link>\r\n                    </div> : ''\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Statistics;","import {ExitToApp} from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Status from '../Status/Status'\r\nimport Modal from \"../Templates/Modal/Modal\";\r\nimport './Topbar.css'\r\nimport MessagePost from '../MessagePost/MessagePost'\r\nimport SearchBlock from \"../SearchBlock/SearchBlock\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\n\r\n\r\nexport default function Topbar() {\r\n  const [user, setUser] = useState([])\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n  const [allUsers, setAllUsers] = useState([])\r\n  const [findUsers, setFindUsers] = useState([])\r\n  const [isBlock, setIsBlock] = useState(false)\r\n  const localUser = JSON.parse(localStorage.getItem('user'))\r\n  const departId = useParams().username\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get('/api/user/')\r\n      setNotificationCount(res.data)\r\n      res.data.sort((a, b) => a.user_name.localeCompare(b.user_name))\r\n      let filterUsers = filterUser(res.data)\r\n      setAllUsers(filterUsers)\r\n\r\n    }\r\n\r\n    const typework = async () => {\r\n      const res = await axios.get('/api/typework_status/')\r\n    }\r\n\r\n\r\n    const fetchUserName = async () => {\r\n      const res = await axios.get('/api/user/' + localUser._id)\r\n      setUser(res.data)\r\n    }\r\n\r\n\r\n    typework()\r\n    fetchUserName()\r\n    fetchUser()\r\n\r\n  }, [])\r\n\r\n\r\n  function filterUser(users) {\r\n    return users.filter(user => user.status === 1)\r\n        .concat(users.filter(user => user.status === 2))\r\n        .concat(users.filter(user => user.status === 3))\r\n        .concat(users.filter(user => user.status !== 1 && user.status !== 2 && user.status !== 3 && user.status !== 4))\r\n        .concat(users.filter(user => user.status === 4))\r\n  }\r\n\r\n  // выход\r\n  const logOut = () => {\r\n    localStorage.clear()\r\n    window.location.reload()\r\n    window.location.href = '/'\r\n  }\r\n\r\n\r\n\r\n\r\n  //Поиск пользователя\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && e.target.value !== '') {\r\n      setFindUsers(allUsers.filter(user => {\r\n        return user.user_name.toLowerCase().includes(searchValue.toLowerCase())\r\n      }))\r\n      setIsBlock(true)\r\n    }\r\n  }\r\n  //Поиск пользователя\r\n  const handleClick = (e) => {\r\n    if (e.target.value !== '') {\r\n      setFindUsers(allUsers.filter(user => {\r\n        return user.user_name.toLowerCase().includes(searchValue.toLowerCase())\r\n      }))\r\n      setIsBlock(true)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className='topbarContainer'>\r\n          <div className=\"topbarLeft\">\r\n            <Status/>\r\n          </div>\r\n          <Statistics/>\r\n          <div className=\"topbarRight\">\r\n            <div className=\"topbarLinks\">\r\n              <div>\r\n                <Link to={`/department/${user.main_department}`} className=\"topbarLink\">\r\n                  <img src={'../images/VTB.png'} alt='VTB' width='150' height='50'/>\r\n                </Link>\r\n              </div>\r\n              <div className='vr'></div>\r\n\r\n              <div className='topPage'><Link to={`/profile/${user.id}`} className=\"topbarLink\">{localUser.username}</Link>\r\n\r\n              </div>\r\n\r\n              {\r\n                localUser.isAdmin\r\n                    ?<>\r\n                    <div className='vr'></div>\r\n                  <div className='topPage'>\r\n                    <Link to='/Reports' className=\"topbarLink\"><span className='link'>Отчеты</span></Link>\r\n                  </div>\r\n                    </>\r\n                    : ''\r\n              }\r\n\r\n              <div className='vr'></div>\r\n\r\n              <div className='topPage'>\r\n                <Link to='/Information' className=\"topbarLink\">?</Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"search\">\r\n              <input onKeyPress={handleKeyPress} value={searchValue} onChange={(e) => setSearchValue(e.target.value)}\r\n                     type=\"search\" name=\"\" placeholder=\"поиск пользователя\" className=\"input\"/>\r\n              <button onClick={handleClick} value={searchValue} onChange={(e) => setSearchValue(e.target.value)}\r\n                      type=\"submit\" className=\"submit\"/>\r\n            </div>\r\n\r\n{/*            <div className=\"notification\">\r\n              <div onClick={togglePopup} className='image-container'>\r\n                <img src='../images/bell.png' className=\"message\"/>\r\n                {notificationCount.length > 0 && <div className=\"notification-badge\">{notificationCount.length}</div>}\r\n              </div>\r\n              {isOpen && (\r\n                  <div className=\"notification-popup\">\r\n                    {allUsers.map((user, id) => (\r\n                        <MessagePost key={id} user={user} />\r\n                    ))}\r\n                  </div>\r\n              )}\r\n            </div>*/}\r\n            <div className=\"exit\">\r\n              <ExitToApp onClick={logOut}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isBlock\r\n            ? <Modal active={handleClick} setActive={setIsBlock} >\r\n              <h1><p align=\"center\">Поиск</p></h1>\r\n              <h4>Найдено: {findUsers.length}</h4>\r\n              <hr/>\r\n              <form>\r\n                <div>\r\n                  {findUsers.map((user) => <SearchBlock user={user} />)}\r\n                </div>\r\n                <button className=\"button\" type=\"submit\" onClick={() => setIsBlock(false)}>\r\n                  Закрыть\r\n                </button>\r\n              </form>\r\n            </Modal>\r\n            : <></>\r\n        }\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Topbar from '../../components/Topbar/Topbar'\r\nimport './Information.css'\r\n\r\n\r\nexport default function Information() {\r\n  return (\r\n    <>\r\n      <div className='information'>\r\n        <div className=\"informationContainer\">\r\n          <h2 className='infoMainText'>Информация</h2>\r\n          <div className='testInformation'>\r\n          <a className='divLinkInformation' href=\"https://sfera.vtb.ru/knowledge/pages?id=110481\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <h4>Нашли проблему или есть предложения по улучшению пишите в комментариях!</h4></a>\r\n          </div>\r\n          <hr />\r\n          <div className=\"infoContainer\">\r\n\r\n            <div className=\"infoText\">\r\n\r\n              <h3>Кнопка Начать/Закончить</h3>\r\n              <p>После нажатия на кнопку открывается модальное окно. В нем необходимо выбрать <b>\"здоров\"</b> или <b>\"болен\"</b>. Если выбрано <b>\"болен\"</b>, то нужно дополнительно написать причину в комментарии.</p>\r\n              <h3>Статусы</h3>\r\n              <p style={{marginTop: '10px'}}><b style={{color: 'green'}}>Зеленый</b> - пользователь приступил к работе.</p>\r\n              <p><b style={{color: 'red'}}>Красный</b> - пользователь закончил работу.</p>\r\n              <p><b style={{color: 'yellow'}}>Жёлтый</b> - пользователь на больничном.</p>\r\n              {/*<p><b>Белый</b> - пользователь еще не совершал никаких действий.</p>*/}\r\n              <p><b style={{color: 'dodgerblue'}}>Синий</b> - пользователь в отпуске/отгул.</p>\r\n              <p><b style={{color: 'chocolate'}}>Коричневый</b> - пользователь отсутствует по другой причине.</p>\r\n              <p><b style={{opacity: '0.5'}}>Прозрачный</b> - пользователь удален.</p>\r\n              <h3>Главная страница</h3>\r\n              <p>На галвной страницы отражаються все сотрудники вашего департамета/отдела/группы</p>\r\n\r\n              <h3>Моя страница</h3>\r\n              <p>На данной странице пользователь может изменить свой пароль, для этого надо нажать на надпись <b>\"Изменить пароль\"</b>. В модальном окне нужно ввести старый и новый пароль, если операция прошла успешно, модальное окно закроется.</p>\r\n              <p>Ниже на данной странице есть таблица с данными о работе. Можно дополнительно отфильтровать диапазон нужных дат.</p>\r\n              <p>При нажатии на кнопку <b>\"Отпуск/Больничный\"</b> откроется таблица с данными. Доболнительно появится кнопка <b>\"+\"</b>. При нажатии на нее открывается модальное окно, где можно добавить необходимую информацию. {/*Если текущая дата входит в выбранный диапазон, то автоматически меняется <b>статус</b>*/}.</p>\r\n              <h4>Информация для начальников</h4>\r\n              <p>Начальник на странице пользователя дополнительно может изменять информацию, удалять пользователей, сбрасывать пароль,закочить рабочее время сотрудника и добавлять отпуск/больничный.</p>\r\n              <p>Так же начальнику доступна статистика по сотрудникам и информация по отчётам</p>\r\n\r\n              <h3>Дерево</h3>\r\n              <p>Через дерево можно переходить на отделы. При нажатии на стрелочку появляется список служб,отделов или групп.</p>\r\n\r\n              <h3>Страница отдела</h3>\r\n              <p>На странице отдела можно увидеть все сотрудников данного отдела. При нажатии на кнопку <b>\"Сделать главной\"</b> в всплывающем окне можно изменить отображение дочерних департаментов а так же закрепить основной департамент.</p>\r\n\r\n              <h3>Восстановление пользователя</h3>\r\n              <p>Чтобы восстановить пользователя, нужно зайти под его УЗ и нажать кнопку \"Начать\".</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport './Reports.css'\r\n\r\n\r\n\r\n\r\nexport default function Reports() {\r\n    return (\r\n        <>\r\n                <div className=\"ReportsButton\">\r\n                    <Link to='/ReportsHistory' className='linkReports'>Отчет по истории</Link>\r\n                    <br/>\r\n                    <Link to='/ReportsNominations' className='linkReports'>Отчет по номинациям</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {Link} from \"react-router-dom\";\nimport '../RepostInfoNominations/RepostInfoNominations.css'\n\nexport default function RepostsInfoNominations({posts}) {\n\n    return (\n        <>\n            <tr className='info'>\n                <td className='infotableend'><Link to={`/profile/${posts.user_id}`} className='name'>{posts.Кто}</Link></td>\n                <td className='infotableend'>{posts.Номинант}</td>\n                <td className='infotablestart'>{posts.nominations_name}</td>\n                <td className='infotableend'>{posts.date}</td>\n            </tr>\n        </>\n    )\n}","import Topbar from '../../components/Topbar/Topbar'\r\nimport '../ReportsNominations/ReportsNominations.css'\r\nimport React, {useRef, useState,useMemo} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport { CSVLink } from 'react-csv';\r\nimport axios from \"axios\";\r\nimport RepostInfoNominations from \"../../components/RepostInfoNominations/RepostInfoNominations\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\n\r\nexport default function ReportsNominations() {\r\n    const [sortConfig, setSortConfig] = useState({ key: 'Кто', direction: 'ascending' });\r\n    const [sortConfig1, setSortConfig1] = useState({ key: 'Номинант', direction: 'ascending' });\r\n    const [sortConfig2, setSortConfig2] = useState({ key: 'nominations_name', direction: 'ascending' });\r\n    const [sortConfig3, setSortConfig3] = useState({ key: 'date', direction: 'ascending' });\r\n\r\n\r\n    const [error, setError] = useState('')\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const username = useParams()\r\n\r\n\r\n\r\n\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\") {\r\n            setError('Введите дату')\r\n        } else {\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')\r\n            }\r\n            if (end < start) {\r\n                setError('Конечная дата меньше начальной')\r\n            } else {\r\n\r\n                const filter = {\r\n                    startDateNomination: historyStartWork.current.value,\r\n                    endDateNomination: historyEndWork.current.value,\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/Reports', filter)\r\n                    setPosts(res.data)\r\n                    setError('')\r\n                }\r\n                fill()\r\n            }\r\n        }\r\n    }\r\n    const handleClickCancel = async () => {\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    const requestSort = (key) => {\r\n        if (historyStartWork.current.value !== '' && historyEndWork.current.value !== '') {\r\n            let direction = 'ascending';\r\n            if (sortConfig.key === key && sortConfig.direction === 'ascending' ||\r\n                sortConfig1.key === key && sortConfig1.direction === 'ascending' ||\r\n                sortConfig2.key === key && sortConfig2.direction === 'ascending' ||\r\n                sortConfig3.key === key && sortConfig3.direction === 'ascending'\r\n            ) {\r\n                direction = 'descending';\r\n            }\r\n            setSortConfig({ key, direction });\r\n            setSortConfig1({ key, direction });\r\n            setSortConfig2({ key, direction });\r\n            setSortConfig3({ key, direction });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const sortedPosts = useMemo(() => {\r\n        const sortablePosts = [...posts];\r\n        if (sortConfig !== null) {\r\n            sortablePosts.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                setisOpen(true)\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        return sortablePosts;\r\n    }, [posts, sortConfig]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <h2 className='ReportsMainText'>Отчет по номинациям</h2>\r\n                    {error && <div className='errorHistoryInfo'>{error}</div>}\r\n                    <hr/>\r\n                    <br/>\r\n                    <div style={{display:'flex'}}>\r\n                        <div>\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Начало работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyStartWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                        <div>\r\n                            —  <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyEndWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                    <div>\r\n                    <button className=\"historyButton\" onClick={handleClick}>Найти</button>\r\n                    </div>\r\n                        <div>\r\n                        <button className=\"historyButton\" onClick={handleClickCancel}>Сбросить</button>\r\n                    </div>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                    {isOpen && <div>\r\n                        <CSVLink data={posts} filename={\"nominations.csv\"}>Download CSV</CSVLink>\r\n                    </div>\r\n                    }\r\n                    <br/>\r\n                    <hr/>\r\n                    <br/>\r\n                    <tr>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('Кто')}>\r\n                            Кто голосовал {sortConfig.key === 'Кто' && (\r\n                            <span className=\"column\">{sortConfig.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('Номинант')}>\r\n                            Номинировал {sortConfig1.key === 'Номинант' && (\r\n                            <span className=\"column1\">{sortConfig1.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('nominations_name')}>\r\n                            Имя номинации {sortConfig2.key === 'nominations_name' && (\r\n                            <span className=\"column2\">{sortConfig2.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('date')}>\r\n                            Дата голосования {sortConfig3.key === 'date' && (\r\n                            <span className=\"column3\">{sortConfig3.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {\r\n                        sortedPosts.map((posts, id) => <RepostInfoNominations key={id} posts={posts} username={username}/>)\r\n                    }\r\n\r\n\r\n{/*{                   <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}\r\n                                currentPage={currentPage}/>}*/}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './RepostsInfo.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function RepostsInfo({posts}) {\r\n\r\n    return (\r\n        <>\r\n        <tr className='info'>\r\n            <td className='number'><Link to={`/profile/${posts.id}`} className='name'>{posts.user_name}</Link></td>\r\n            <td className='infotablestart'>{posts.workstart}</td>\r\n            <td className='infotableend'>{posts.workend}</td>\r\n            <td className='RepostsLong'>{posts.worklong}</td>\r\n            <td className='infotableComment'>{posts.comment}</td>\r\n        </tr>\r\n        </>\r\n    )\r\n}","\r\nimport React, {useMemo, useRef, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport RepostsInfo from \"../../components/ReportsInfo/RepostsInfo\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport '../ReportsHistory/ReportsHistory.css'\r\nexport default function ReportsHistory() {\r\n    const [sortConfig, setSortConfig] = useState({ key: 'user_name', direction: 'ascending' });\r\n    const [sortConfig1, setSortConfig1] = useState({ key: 'workstart', direction: 'ascending' });\r\n    const [sortConfig2, setSortConfig2] = useState({ key: 'workend', direction: 'ascending' });\r\n    const [sortConfig3, setSortConfig3] = useState({ key: 'worklong', direction: 'ascending' });\r\n    const [sortConfig4, setSortConfig4] = useState({ key: 'comment', direction: 'ascending' });\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(30)\r\n\r\n    const lastPostIndex = currentPage * postsPerPage\r\n    const firstPostIndex = lastPostIndex - postsPerPage\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const historyStartWork = useRef(null)\r\n    const historyEndWork = useRef(null)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const currentlyPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    const username = useParams()\r\n\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n\r\n    const handleClick = async () => {\r\n        const start = historyStartWork.current.value\r\n        const end = historyEndWork.current.value\r\n        if (start === \"\" || end === \"\") {\r\n            setError('Введите дату')\r\n        } else {\r\n            if (start !== '' || end !== '') {\r\n                setError('Выберите дату')\r\n            }\r\n            if (end < start) {\r\n                setError('Конечная дата меньше начальной')\r\n            } else {\r\n\r\n                const filter = {\r\n                    startdate: historyStartWork.current.value,\r\n                    enddate: historyEndWork.current.value,\r\n                }\r\n                setError('')\r\n\r\n                const fill = async () => {\r\n                    const res = await axios.post('/api/post/Reports', filter)\r\n                    setPosts(res.data)\r\n                    setError('')\r\n                    setIsOpen(true)\r\n                }\r\n                fill()\r\n            }\r\n        }\r\n    }\r\n    const handleClickCancel = async () => {\r\n        setError('')\r\n        setIsFilter(false)\r\n        historyStartWork.current.value = ''\r\n        historyEndWork.current.value = ''\r\n    }\r\n\r\n\r\n    const requestSort = (key) => {\r\n        if (historyStartWork.current.value !== '' && historyEndWork.current.value !== '') {\r\n            let direction = 'ascending';\r\n            if (sortConfig.key === key && sortConfig.direction === 'ascending' ||\r\n                sortConfig1.key === key && sortConfig1.direction === 'ascending' ||\r\n                sortConfig2.key === key && sortConfig2.direction === 'ascending' ||\r\n                sortConfig3.key === key && sortConfig3.direction === 'ascending' ||\r\n                sortConfig4.key === key && sortConfig4.direction === 'ascending'\r\n            ) {\r\n                direction = 'descending';\r\n            }\r\n            setSortConfig({ key, direction });\r\n            setSortConfig1({ key, direction });\r\n            setSortConfig2({ key, direction });\r\n            setSortConfig3({ key, direction });\r\n            setSortConfig4({ key, direction });\r\n        }\r\n    }\r\n\r\n    const sortedPosts = useMemo(() => {\r\n        const sortablePosts = [...posts];\r\n        if (sortConfig !== null) {\r\n            sortablePosts.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortablePosts;\r\n    }, [posts, sortConfig]);\r\n\r\n    const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='Reports'>\r\n                <div className=\"ReportsContainer\">\r\n                    <h2 className='ReportsMainText'>Отчет по истории</h2>\r\n                    {error && <div className='errorHistoryInfo'>{error}</div>}\r\n                    <hr/>\r\n                    <br/>\r\n                    <div style={{display:'flex'}}>\r\n                        <div >\r\n                    <input\r\n                        type='date'\r\n                        placeholder=\"Начало работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyStartWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    /></div>\r\n                        <div>\r\n                            —  <input\r\n                        type='date'\r\n                        placeholder=\"Конец работы\"\r\n                        className=\"ModalInput\"\r\n                        ref={historyEndWork}\r\n                        style={{'marginRight': '10px'}}\r\n                    />\r\n                        </div>\r\n                    <div>\r\n                    <button className=\"historyButton\" onClick={handleClick}>Найти</button>\r\n                    </div>\r\n                        <div>\r\n                    <button className=\"historyButton\" onClick={handleClickCancel}>Сбросить</button>\r\n                    </div>\r\n                    </div>\r\n                    <br/>\r\n                    <hr/>\r\n                    <br/>\r\n                    <tr>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('user_name')}>\r\n                            ФИО {sortConfig.key === 'user_name' && (\r\n                            <span className='user_name'>{sortConfig.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('workstart')}>\r\n                            Начало {sortConfig1.key === 'workstart' && (\r\n                            <span className='workstart'>{sortConfig1.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('workend')}>\r\n                            Конец {sortConfig2.key === 'workend' && (\r\n                            <span className=\"workend\">{sortConfig2.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('worklong')}>\r\n                            Длительность {sortConfig3.key === 'worklong' && (\r\n                            <span className=\"worklong\">{sortConfig3.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                        <td className=\"historyinfoNumber\" onClick={() => requestSort('comment')}>\r\n                            Комментарий {sortConfig4.key === 'comment' && (\r\n                            <span className=\"comment\">{sortConfig4.direction === 'ascending' ? '▼' : '▲'}</span>\r\n                        )}\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                        currentPosts.map((posts, id) => <RepostsInfo key={id} posts={posts} username={username}/>)\r\n                    }\r\n\r\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}\r\n                                currentPage={currentPage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import \"./VcanciesItem.css\"\r\nimport moment from \"moment\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\";\r\n\r\n\r\nconst VacanciesItem =({department,vacancies,status})=> {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [selectDep, setSelectDep] = useState(\"\")\r\n\r\n    const [company, setCompany] = useState([])\r\n    const [selectCompany, setSelectCompany] = useState([])\r\n\r\n\r\n    const [selectItc, setSelectItc] = useState([])\r\n\r\n    const [projectItem, setProjectItem] = useState([])\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const [plannedReleaseDate, setPlannedReleaseDate] = useState([])\r\n\r\n    const [vacanciesId, setVacanciesId] = useState(\"\")\r\n\r\n    const [modalVacations, setModalVacations] = useState(false)\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const [old_user, setOld_user] = useState(\"\")\r\n\r\n    const [inputValueDescription, setInputValueDescription] = useState(\"\")\r\n\r\n    const [inputValueStatuses, setInputValueStatuses] = useState(\"\")\r\n\r\n    const [inputValueGrade, setInputValueGrade] = useState(\"\")\r\n\r\n    const [user_name, setUser_name] = useState('')\r\n\r\n    const date = moment().format('YYYY-MM-DD');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [userId, setUserId] = useState([])\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [selectedVacanciesName, setSelectedVacanciesName] = useState('');\r\n    const [selectedVacanciesStatuses, setSelectedVacanciesStatuses] = useState('');\r\n    const [selectedVacanciesDescription, setSelectedVacanciesDescription] = useState('');\r\n    const [selectedVacanciesGrade, setSelectedVacanciesGrade] = useState('');\r\n\r\n    const statusRef = useRef()\r\n    const departRef = useRef()\r\n    const companyRef = useRef()\r\n    const ITCRef = useRef()\r\n    const projectRef = useRef()\r\n    const DateReleaseRef = useRef()\r\n\r\n    const searchRef = useRef()\r\n\r\n    const [startDate, setStartDate] = useState(''); // начальная дата фильтра\r\n    const [endDate, setEndDate] = useState(''); // конечная дата фильтра\r\n\r\n    const [deps, setDeps] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const Department = async () => {\r\n\r\n            const departs = await axios.get('/api/departments/')\r\n            setDeps(departs.data)\r\n            const company = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(company.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n        }\r\n\r\n        Department()\r\n    }, [])\r\n\r\n\r\n\r\n    const handleNameInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // Обработчик изменения значения для поля ввода с grade\r\n    const handleDescriptionInputChange = (e) => {\r\n        setInputValueDescription(e.target.value);\r\n    }\r\n\r\n    const handleGradeInputChange = (e) => {\r\n        // Проверяем, является ли введенное значение числом (включая пустое значение)\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setInputValueGrade(e.target.value);\r\n        }\r\n    };\r\n\r\n    const selectValueStatus = () => {\r\n        setInputValueStatuses(statusRef.current.value)\r\n    }\r\n\r\n    const selectDeps = () => {\r\n        setSelectDep(departRef.current.value)\r\n    }\r\n\r\n    const companySelect = () => {\r\n        setSelectCompany(companyRef.current.value)\r\n    }\r\n\r\n    const SelectITC = () => {\r\n        setSelectItc(ITCRef.current.value)\r\n    }\r\n\r\n    const Project = (e) => {\r\n        if (/^\\d*$/.test(e.target.value)) {\r\n            setProjectItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const DataCurrent = () => {\r\n        setPlannedReleaseDate(DateReleaseRef.current.value)\r\n    }\r\n\r\n\r\n\r\n    const ChangeDataButton = async () => {\r\n\r\n        const ChangeData = {\r\n            namevacanciesId: vacanciesId,\r\n            namevacancies: inputValue,\r\n            description: inputValueDescription,\r\n            grade: inputValueGrade,\r\n            statuses: statusRef.current.value,\r\n            users: (userId.length===0 ? old_user : userId),\r\n            search: searchTerm,\r\n            old_user: old_user,\r\n            deps: selectDep,\r\n            company_id: selectCompany,\r\n            vacancy_code: selectItc,\r\n            project_id: projectItem,\r\n            planned_release_date:(plannedReleaseDate==='' ? null : plannedReleaseDate)\r\n        }\r\n        console.log('log=',ChangeData)\r\n\r\n        if (statusRef.current.value === '3' && old_user===null && userId.length<1) {\r\n            setMessage('Сотрудник не назначен')\r\n        }\r\n\r\n        else {\r\n            const res = await axios.put('/api/Vacations/', ChangeData)\r\n            setMessage('Сохранено')\r\n            window.location.reload()\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        if(term==='') {\r\n            setSearchTerm(null)\r\n        }\r\n        else {\r\n            setSearchTerm(term);\r\n        }\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        )\r\n\r\n        if (term === '') {\r\n            setUser_name('')\r\n        } else {\r\n            setFilteredUsers(filtered); // всегда устанавливаем filteredUsers\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (name, grade,id,description,status_id,user_name,user_id,department_id,company_id,vacancy_code,project_id,planned_release_date) => {\r\n        if(localUser.isAdmin===true) {\r\n\r\n            if(user_name===null){\r\n                setUser_name([])\r\n            }else {\r\n                setUser_name(user_name)\r\n            }\r\n\r\n            setFilteredUsers([])\r\n            setMessage([])\r\n            setModalVacations(true);\r\n            setVacanciesId(id)\r\n            setSelectedVacanciesName(name);\r\n            setInputValue(name); // Установка начального значения для name\r\n\r\n\r\n            setSelectedVacanciesDescription(description)\r\n            setInputValueDescription(description)\r\n\r\n            setSelectedVacanciesGrade(grade);\r\n            setInputValueGrade(grade); // Установка начального значения для grade\r\n\r\n            setSelectedVacanciesStatuses(status_id)\r\n            setInputValueStatuses(status_id)\r\n\r\n            setOld_user(user_id)\r\n\r\n            setSelectDep(department_id)\r\n\r\n            setSelectCompany(company_id)\r\n\r\n            setSelectItc(vacancy_code)\r\n\r\n            setProjectItem(project_id)\r\n\r\n            setPlannedReleaseDate(planned_release_date)\r\n        }\r\n    };\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n\r\n    }\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (statusId) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className='departmentName'>{department}</h2>\r\n            <div className=\"vacancies-container\">\r\n                {vacancies.map(vac => (\r\n                    <div key={vac.id} className={\"angry-grid1\"+getColorByStatusId(vac.status_id)}\r\n                         onClick={() => handleClick(vac.name, vac.grade,vac.id,vac.description,vac.status_id,\r\n                             vac.user_name,vac.user_id,vac.department_id,vac.company_id,vac.vacancy_code,vac.project_id,vac.planned_release_date)}>\r\n\r\n                        <div id=\"cssportal-grid\">\r\n                            <div id=\"div1\"></div>\r\n                            <div id=\"div2\">{vac.user_name}</div>\r\n                            <div id=\"div3\">{date === vac.create_date ? 'NEW' : ''}</div>\r\n                            <div id=\"div4\"></div>\r\n                            <div id=\"div5\">{vac.name}</div>\r\n                            <div id=\"div6\"></div>\r\n                            <div id=\"div7\"></div>\r\n                            <div id=\"div8\">{vac.vacancy_code}</div>\r\n                            <div id=\"div9\"></div>\r\n                            <div id=\"div10\">Грейд: {vac.grade}</div>\r\n                            <div id=\"div11\">{vac.status_name}</div>\r\n                            <div id=\"div12\">Проект: {vac.project_id}</div>\r\n                            <div id=\"div13\">{vac.company_name}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                ))}\r\n\r\n\r\n                <ModalVacancies active={modalVacations} setActive={setModalVacations}>\r\n                    <div className='MessageItemVacancies'>\r\n                        <span >{message}</span>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' className=\"ModalInputVacancies\"\r\n                               value={inputValue}\r\n                               onChange={handleNameInputChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                    <textarea className='textDescription'\r\n                              value={inputValueDescription}\r\n                              onChange={handleDescriptionInputChange}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <span>Подразделение:</span><br/>\r\n                        <select ref={departRef}\r\n                                value={selectDep}\r\n                                onChange={selectDeps}\r\n                                className='InputVacanciesItemDeps'>\r\n                            {deps.map((dep, name) => <option key={name}\r\n                                                             value={dep.id}>{dep.department_name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Статус:</span><br/>\r\n                        <select ref={statusRef}\r\n                                value={inputValueStatuses}\r\n                                onChange={selectValueStatus}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {status.map((status, name) => <option key={name}\r\n                                                                  value={status.id}>{status.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span>Грейд:</span><br/>\r\n                        <input type='text'\r\n                               value={inputValueGrade}\r\n                               onChange={handleGradeInputChange}\r\n                               placeholder='Грейд'\r\n                               className='InputVacanciesItem'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <span>Компания:</span><br/>\r\n                        <select ref={companyRef}\r\n                                value={selectCompany}\r\n                                onChange={companySelect}\r\n                                className='InputVacanciesItemSelect'>\r\n                            {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div>\r\n\r\n                            <span>Имя сотрудника:</span><br/>\r\n                            <div className='inputDiv'>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='Имя сотрудника'\r\n                                    value={searchTerm || user_name}\r\n                                    onChange={handleInputChange}\r\n                                    className='InputVacanciesItem'\r\n                                />\r\n\r\n                                {old_user ?<Link className='ProfileLinkVacancies' style={{paddingLeft:'10px'}} to={`/profile/${old_user}`}>Перейти в профиль</Link>:''}\r\n\r\n\r\n                                {filteredUsers.length > 0 && (\r\n                                    <div className=\"userListContainer\">\r\n                                        {filteredUsers.map((user, index) => (\r\n                                            <div className='selectNameDiv' key={index} value={user.id}\r\n                                                 onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                                {user.user_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <span>Дата выхода:</span><br/>\r\n                                <input type='date'\r\n                                       ref={DateReleaseRef}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                       value={plannedReleaseDate || ''}\r\n                                       onChange={DataCurrent}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>ИТС:</span><br/>\r\n                                <input type='text'\r\n                                       ref={ITCRef}\r\n                                       value={selectItc}\r\n                                       onChange={SelectITC}\r\n                                       placeholder='ИТС'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>Проект:</span><br/>\r\n                                <input type='text'\r\n                                       ref={projectRef}\r\n                                       value={projectItem}\r\n                                       onChange={Project}\r\n                                       placeholder='Проект(Нет проекта=0)'\r\n                                       className='InputVacanciesItem'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className='divHistory'>\r\n                            История\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <button className=\"ModalButton\" type=\"submit\" onClick={ChangeDataButton}>\r\n                                Сохранить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </ModalVacancies>\r\n            </div>\r\n        </>    )\r\n}\r\nexport default VacanciesItem","import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport TreeView from 'react-treeview';\r\nimport 'react-treeview/react-treeview.css'\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n    const username = useParams()\r\n\r\n\r\n\r\n    const [dep, setDep] = useState([]);\r\n    const [openPath, setOpenPath] = useState([]);\r\n    const localUse = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        const findPathToNode = (tree, id) => {\r\n            let path = [];\r\n            const findNode = (node, id, currentPath) => {\r\n                if (node.id === id) {\r\n                    path = [...currentPath, node.id];\r\n                    return true;\r\n                }\r\n                if (node.Subclasses && node.Subclasses.length > 0) {\r\n                    for (let subclass of node.Subclasses) {\r\n                        if (findNode(subclass, id, [...currentPath, node.id])) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            for (let node of tree) {\r\n                if (findNode(node.department_tree_to_json, id, [])) {\r\n                    break;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n        const getDeps = async () => {\r\n            const res = await axios.get('/api/department_tree_to_json/');\r\n\r\n\r\n/*            if(~document.location.href.indexOf('/profile/')){\r\n                const res = await axios.get('/api/user/' + username.username)\r\n                setUser(res.data)\r\n\r\n            }*/\r\n\r\n\r\n            if (res.data[0].department_tree_to_json.length === 0) {\r\n                setDep([]);\r\n            } else {\r\n                setDep(res.data);\r\n                const path = findPathToNode(res.data, parseInt(localUse.departmentId)); // переменная для развертывания департамента\r\n                console.log('Path to node:', path); // Отладочный вывод\r\n                setOpenPath(path);\r\n            }\r\n        };\r\n        getDeps();\r\n    }, []);\r\n\r\n    const isNodeOpen = (id) => openPath.includes(id);\r\n\r\n    const toggleNode = (id) => {\r\n        if (isNodeOpen(id)) {\r\n            setOpenPath(openPath.filter(nodeId => nodeId !== id));\r\n        } else {\r\n            setOpenPath([...openPath, id]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebarWrapper\">\r\n                {dep.length >= 1 ? (\r\n                    <div className=\"tree\">\r\n                        <div className=\"treeWrapper\">\r\n                            {dep.map((node, i) => (\r\n                                <TreeView\r\n                                    nodeLabel={(\r\n                                        <Link to={`/department/${node.department_tree_to_json.id}`} className='level1'>\r\n                                            <span className=\"node\">{node.department_tree_to_json.Name}</span>\r\n                                        </Link>\r\n                                    )}\r\n                                    key={node.department_tree_to_json.Name + '|' + i}\r\n                                    collapsed={!isNodeOpen(node.department_tree_to_json.id)}\r\n                                    onClick={() => toggleNode(node.department_tree_to_json.id)}\r\n                                >\r\n                                    {node.department_tree_to_json.Subclasses.map((departments) => (\r\n                                        <TreeView\r\n                                            nodeLabel={(\r\n                                                <Link to={`/department/${departments.id}`} className='depsUser' key={departments.id}>\r\n                                                    <span className=\"node\">{departments.Name}</span>\r\n                                                </Link>\r\n                                            )}\r\n                                            key={departments.id}\r\n                                            collapsed={!isNodeOpen(departments.id)}\r\n                                            onClick={() => toggleNode(departments.id)}\r\n                                        >\r\n                                            {!!departments.Subclasses && departments.Subclasses.map((departments1) => (\r\n                                                <TreeView\r\n                                                    nodeLabel={(\r\n                                                        <Link to={`/department/${departments1.id}`} className='depsUser' key={departments1.id}>\r\n                                                            <span className=\"node\">{departments1.Name}</span>\r\n                                                        </Link>\r\n                                                    )}\r\n                                                    key={departments1.id}\r\n                                                    collapsed={!isNodeOpen(departments1.id)}\r\n                                                    onClick={() => toggleNode(departments1.id)}\r\n                                                >\r\n                                                    {!!departments1.Subclasses && departments1.Subclasses.map((departments2) => (\r\n                                                        <Link to={`/department/${departments2.id}`} className='depsUser' key={departments2.id}>\r\n                                                            <div style={{ paddingBottom: '8px' }}>{departments2.Name}</div>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </TreeView>\r\n                                            ))}\r\n                                        </TreeView>\r\n                                    ))}\r\n                                </TreeView>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nimport './VacanciesAdd.css'\r\nimport axios from \"axios\";\r\n\r\nfunction VacanciesAdd() {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [deps, setDeps] = useState([])\r\n    const [userId, setUserId] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messageITC, setMessageITC] = useState('')\r\n    const [isView, setIsView] = useState(false)\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [checkVal, setCheckVal] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const NameVacationRef=useRef()\r\n    const TeamRef = useRef()\r\n    const StatusRef = useRef()\r\n    const CodeVacations = useRef()\r\n    const Company = useRef()\r\n    const Description = useRef()\r\n    const CodeProject = useRef()\r\n    const Grade = useRef()\r\n\r\n\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n\r\n\r\n    const changeVal = () => {\r\n        setCheckVal(!checkVal)\r\n    }\r\n    useEffect(() => {\r\n        const getDeps = async () => {\r\n            const departament = await axios.get('/api/departments/')\r\n            setDeps(departament.data)\r\n\r\n\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            statuses.data.unshift(statuses.data.splice(statuses.data.findIndex(status => status.name === \"Резерв\"), 1)[0]);\r\n            setStatus(statuses.data)\r\n\r\n\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(companies.data)\r\n            const user = await axios.get('/api/user')\r\n            setUsers(user.data)\r\n\r\n            const vacancies_function={\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n            const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n            setVacancies(getVacancies.data)\r\n        }\r\n\r\n\r\n        getDeps()\r\n    }, [])\r\n\r\n\r\n    const handleUserClick = (userName,userId) => {\r\n        setUserId(userId)\r\n        setSearchTerm(userName)\r\n        setFilteredUsers([])\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const term = e.target.value;\r\n        setSearchTerm(term);\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n        if (term === '') {\r\n            setFilteredUsers([])\r\n        } else {\r\n            setFilteredUsers(filtered);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const clickHandler = async () => {\r\n\r\n        const codeVacation = CodeVacations.current.value.toLowerCase().trim();\r\n\r\n        // Проверяем, есть ли уже вакансия с таким кодом\r\n        const existingVacancy = vacancies.some(({ get_vacancies }) =>\r\n            get_vacancies.some(({ vacancies }) =>\r\n                vacancies.some(vacancy =>\r\n                    vacancy.vacancy_code && vacancy.vacancy_code.toLowerCase() === codeVacation\r\n                )\r\n            )\r\n        );\r\n\r\n        if (existingVacancy) {\r\n            setMessageITC('Такая ИТС уже существует');\r\n            setError('');\r\n            setMessage('');\r\n            return;\r\n        }\r\n\r\n        let userNameToSend = '';\r\n        if (searchTerm !== '') {\r\n            userNameToSend = userId;\r\n        }\r\n        const Vacations = {\r\n            namevacancies: NameVacationRef.current.value,\r\n            description: Description.current.value,\r\n            team_id: TeamRef.current.value,\r\n            status_id: StatusRef.current.value,\r\n            codeVacations: codeVacation.toUpperCase(),\r\n            codeProject: CodeProject.current.value,\r\n            company_id: Company.current.value,\r\n            grade: Grade.current.value,\r\n            is_checked: checkVal,\r\n            userName: userNameToSend\r\n        };\r\n\r\n        if (\r\n            NameVacationRef.current.value === '' ||\r\n            Description.current.value === '' ||\r\n            TeamRef.current.value === '' ||\r\n            StatusRef.current.value === '' ||\r\n            codeVacation === '' ||\r\n            CodeProject.current.value === '' ||\r\n            Grade.current.value === '' ||\r\n            Company.current.value === ''\r\n        ) {\r\n            setError('Заполните поле');\r\n            setIsView(true);\r\n        } else {\r\n            const res = await axios.post('/api/Vacations/', Vacations);\r\n            if (res.status === 200) {\r\n                setError('');\r\n                setMessage('Вакансия добавлена');\r\n                const vacancies_function={\r\n                    departId: localUser.departmentId,\r\n                    user_id: localUser._id\r\n                }\r\n                const getVacancies = await axios.post('/api/Vacations_function/',vacancies_function)\r\n                setVacancies(getVacancies.data)\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearInput = () => {\r\n        Description.current.value = ''\r\n        NameVacationRef.current.value=''\r\n        CodeVacations.current.value=''\r\n        CodeProject.current.value=''\r\n        Grade.current.value=''\r\n        setSearchTerm('')\r\n        setFilteredUsers([])\r\n        setSearchQuery('')\r\n        setMessage('')\r\n        setError('')\r\n    }\r\n\r\n\r\n\r\n    function handleClickSubmit() {\r\n        setMessageITC('')\r\n        setError('')\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <div className=\"VacationsMainAdd\">\r\n                <h2 style={{textAlign:'center'}}>Добавить вакансию</h2>\r\n                {\r\n                    !error && isView && message && !messageITC &&\r\n                    <div className='error'>Добавленно</div>\r\n                }\r\n                {\r\n                    message && !error && !isView && !messageITC &&\r\n                    <div className='error'>Добавленно</div>\r\n                }\r\n                {\r\n                    error && isView && !messageITC &&\r\n                    <div className='error'>Заполните все поля</div>\r\n                }\r\n                {\r\n                    messageITC && !message &&\r\n                    <div className='error'>{messageITC}</div>\r\n                }\r\n                <div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabelName\">Наименование вакансии</div>\r\n                    <input ref={NameVacationRef} type='text' placeholder='Наименование вакансии' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Описание вакансии</div>\r\n                    <textarea ref={Description} placeholder='Описание вакансии' className='InputVacationAdd' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Подразделение</div>\r\n                    <select ref={TeamRef} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        {deps.map((dep, name) => <option selected={dep.id === localUser.departmentId} key={name}\r\n                                                         value={dep.id}>{dep.department_name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Статус</div>\r\n                    <select ref={StatusRef} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        {status.map((status, id) => <option key={id} value={status.id}>{status.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"InputLabel\">Код вакансии</div>\r\n                    <input ref={CodeVacations}\r\n                           value={searchQuery}\r\n                           onChange={handleSearchChange}\r\n                           type='text'\r\n                           placeholder='Код вакансии'\r\n                           className='InputVacation'\r\n                           onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='inputDiv'>\r\n                    <div className=\"InputLabel\">Имя сотрудника</div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Имя сотрудника'\r\n                        className='InputVacation'\r\n                        value={searchTerm}\r\n                        onChange={handleInputChange}\r\n                        onMouseDown={handleClickSubmit}\r\n                    />\r\n                    <div className='divSelect'>\r\n                        {filteredUsers.length > 0 && (\r\n                            <div>\r\n                                {filteredUsers.map((user, index) => (\r\n                                    <div className='selectNameDiv' key={index} value={user.id} onClick={() => handleUserClick(user.user_name, user.id)}>\r\n                                        {user.user_name}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"InputLabel\">Компания</div>\r\n                    <select ref={Company} className='InputVacation' onMouseDown={handleClickSubmit}>\r\n                        <option value=''>Компания</option>\r\n                        {company.map((company, name) => <option key={name} value={company.id}>{company.name}</option>)}\r\n                    </select>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Код проекта</div>\r\n                    <input ref={CodeProject} type='number' placeholder='Код проекта(текущий бюджет=0)' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"InputLabel\">Грейд</div>\r\n                    <input ref={Grade} type='number' placeholder='Грейд' className='InputVacation' onMouseDown={handleClickSubmit}/>\r\n                </div>\r\n                <div style={{marginTop:'20px'}}>\r\n                    <label style={{paddingRight:'10px'}}>Нужна вакансия после завершения проекта?</label>\r\n                    <label htmlFor='Vacation'>\r\n                        <input\r\n                            type='radio'\r\n                            value={true}\r\n                            id='Vacation'\r\n                            name='VacationTrue'\r\n                            checked={!checkVal}\r\n                            onChange={changeVal}\r\n                        />Да</label>\r\n                    <label htmlFor='Vacation1'>\r\n                        <input\r\n                            type='radio'\r\n                            value={false}\r\n                            id='Vacation'\r\n                            name='VacationFalse'\r\n                            checked={checkVal}\r\n                            onChange={changeVal}\r\n                        />Нет</label>\r\n                </div>\r\n                <div style={{textAlign:'center',paddingTop:\"20px\"}}>\r\n                    <button className=\"filterButton\" onClick={clickHandler}>Сохранить</button>\r\n                    <button className=\"filterButton\" onClick={clearInput}>Сбросить</button>\r\n                    {/*<button className=\"filterButton\" onClick={() => window.location.href = `/department/${depsId.depsId}`} >Выход</button>*/}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default VacanciesAdd","import React, {useEffect,useState} from 'react'\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport ModalVacancies from \"../Templates/ModalVacancies/ModalVacancies\"\r\nimport axios from \"axios\";\r\nimport './VacanciesView.css'\r\nimport VacanciesItem from \"../VacanciesItem/VacanciesItem\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport VacanciesAdd from \"../VacanciesAdd/VacanciesAdd\";\r\n\r\n\r\nfunction VacanciesView(departId) {\r\n    const localUser = JSON.parse(localStorage.getItem('user'))\r\n    const [vacancies, setVacancies] = useState([])\r\n    const [isAddingVacancies, setIsAddingVacancies] = useState(false)\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [status, setStatus] = useState([])\r\n    const [company, setCompany] = useState([])\r\n    const [projectIds, setProjectIds] = useState([]);\r\n    const [filteredVacancies, setFilteredVacancies] = useState([]);\r\n    const [activeFilters, setActiveFilters] = useState({\r\n\r\n        company: [],\r\n        status: [],\r\n        project: [],\r\n        department: null,\r\n        startDate: null,\r\n        endDate: null\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const VacanciesView = async () => {\r\n\r\n            const statuses = await axios.get('/api/Vacations/?status=status')\r\n            const companies = await axios.get('/api/Vacations/?company=company')\r\n            setCompany(companies.data)\r\n            setStatus(statuses.data)\r\n\r\n            const vacancies_function = {\r\n                departId: localUser.departmentId,\r\n                user_id: localUser._id\r\n            }\r\n\r\n            const getVacancies = await axios.post('/api/Vacations_function/', vacancies_function)\r\n            setVacancies(getVacancies.data[0].get_vacancies);\r\n            const fetchedVacancies = getVacancies.data[0].get_vacancies;\r\n            const uniqueProjectIds = new Set();\r\n\r\n            fetchedVacancies.forEach(department => {\r\n                department.vacancies.forEach(vacancy => {\r\n                    if (vacancy.project_id !== undefined && vacancy.project_id !== null) {\r\n                        uniqueProjectIds.add(vacancy.project_id);\r\n                    }\r\n                });\r\n            });\r\n            const sortedProjectIds = Array.from(uniqueProjectIds).sort((a, b) => a - b);\r\n            const sortedUniqueProjectIds = new Set(sortedProjectIds);\r\n            setProjectIds(sortedUniqueProjectIds);\r\n\r\n        }\r\n        VacanciesView()\r\n    }, [departId])\r\n\r\n\r\n    useEffect(() => {\r\n        applyFilters(activeFilters);\r\n    }, [vacancies, activeFilters]);\r\n\r\n    const clickAdd = () => {\r\n        setIsAddingVacancies(true)\r\n    }\r\n\r\n    const clickBackButton = () => {\r\n        setIsAddingVacancies(false)\r\n    }\r\n\r\n    const handleClickFilter = (type, value) => {\r\n        setActiveFilters(prevFilters => {\r\n            let newFilters;\r\n            if (type === 'status') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    status: prevFilters.status.includes(value)\r\n                        ? prevFilters.status.filter(status => status !== value)\r\n                        : [...prevFilters.status, value]\r\n                };\r\n            } else if (type === 'company') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    company: prevFilters.company.includes(value)\r\n                        ? prevFilters.company.filter(company => company !== value)\r\n                        : [...prevFilters.company, value]\r\n                };\r\n            } else if (type === 'department') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    department: prevFilters.department === value ? null : value\r\n                };\r\n            } else if (type === 'project') {\r\n                newFilters = {\r\n                    ...prevFilters,\r\n                    project: prevFilters.project.includes(value)\r\n                        ? prevFilters.project.filter(project => project !== value)\r\n                        : [value]\r\n                };\r\n            }\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const handleDateChange = (type, value) => {\r\n        if (type === 'startDate') {\r\n            setStartDate(value);\r\n        } else if (type === 'endDate') {\r\n            setEndDate(value);\r\n        }\r\n    };\r\n\r\n\r\n    const applyFilters = (filters) => {\r\n        let filtered = vacancies;\r\n\r\n        if (filtered) {\r\n            if (filters.department) {\r\n                filtered = filtered.filter(department => department.department_id === parseInt(filters.department));\r\n            }\r\n\r\n            if (filters.company.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.company.includes(vacancy.company_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.company.includes(vacancy.company_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.status.length > 0) {\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.status.includes(vacancy.status_name))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.status.includes(vacancy.status_name))\r\n                }));\r\n            }\r\n\r\n            if (filters.project.length > 0) {\r\n                console.log('Filtering by project:', filters.project);\r\n                filtered = filtered.filter(department =>\r\n                    department.vacancies.some(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                ).map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => filters.project.includes(String(vacancy.project_id)))\r\n                }));\r\n                console.log('Filtered by project:', filtered);\r\n            }\r\n\r\n            if (filters.startDate || filters.endDate) {\r\n                filtered = filtered.map(department => ({\r\n                    ...department,\r\n                    vacancies: department.vacancies.filter(vacancy => {\r\n                        const vacancyDate = new Date(vacancy.create_date);\r\n                        const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n                        const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n                        return (!startDate || vacancyDate >= startDate) && (!endDate || vacancyDate <= endDate);\r\n                    })\r\n                })).filter(department => department.vacancies.length > 0);\r\n            }\r\n        }\r\n\r\n        setFilteredVacancies(filtered);\r\n    };\r\n\r\n\r\n    const handleCombinedFilter = () => {\r\n        setActiveFilters(prevFilters => {\r\n            const newFilters = {\r\n                ...prevFilters,\r\n                startDate: startDate || null,\r\n                endDate: endDate || null\r\n            };\r\n            applyFilters(newFilters);\r\n            return newFilters;\r\n        });\r\n    };\r\n\r\n    const reset = () => {\r\n        setActiveFilters({\r\n            company: [],\r\n            status: [],\r\n            project:[],\r\n            department: null,\r\n            startDate: null,\r\n            endDate: null\r\n        });\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setFilteredVacancies(vacancies);\r\n    };\r\n\r\n\r\n    const getColorByStatusId = (statusId) => {\r\n        switch (Number(statusId)) {\r\n            case 20:\r\n                return 'Reserve'; //  Резерв Установите Белый цвет для статуса 1\r\n            case 30:\r\n                return 'Selection'; // Подбор Установите желтый цвет для статуса 2\r\n            case 50:\r\n                return 'Securely'; // Обеспеченно Установите зелёный цвет для статуса 3\r\n            case 10:\r\n                return 'Liquidated'; // Ликвидированно Установите белый прозрачный цвет для статуса 4\r\n            case 40:\r\n                return 'Finalist'; //  Финалист Установите красный цвет для статуса 5\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n                <div className='Vacations'>\r\n                    {isAddingVacancies ?\r\n                        <button className='btnStaff' onClick={clickBackButton}>Назад</button>:''\r\n                    }\r\n                    {isAddingVacancies ? (\r\n                        <VacanciesAdd/>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"VacationsContainerTop\">\r\n\r\n                                <div>\r\n                                    <button className='btnStaff' onClick={() => window.location.href = `/department/${localUser.departmentId}`}>Назад</button>\r\n                                    <button className='btnStaff' onClick={clickAdd}>Добавить вакансию</button>\r\n                                </div>\r\n                                <div style={{padding:'20px'}}>\r\n                                <h2>Вакансии</h2>\r\n                                <div>\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={startDate}\r\n                                        onChange={(e) => handleDateChange('startDate', e.target.value)}\r\n                                    />\r\n                                    —\r\n                                    <input\r\n                                        type='date'\r\n                                        placeholder=\"Выберите дату\"\r\n                                        className=\"ModalInput\"\r\n                                        style={{marginRight: '10px'}}\r\n                                        value={endDate}\r\n                                        onChange={(e) => handleDateChange('endDate', e.target.value)}\r\n                                    />\r\n                                    <button className=\"filterButton\" onClick={handleCombinedFilter}>Поиск</button>\r\n                                    <button className=\"filterButton\" onClick={reset}>Сбросить</button>\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                    <div style={{display:'flex'}}>\r\n                                        <div>\r\n                                            <select\r\n                                                className=\"ModalInputUpdateSelect\"\r\n                                                onChange={(e) => handleClickFilter('department', e.target.value)}\r\n                                            >\r\n                                                {vacancies.map((dep, index) => (\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={dep.department_id}\r\n                                                    >\r\n                                                        {dep.department}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div style={{paddingLeft:'20px',paddingTop:'5px'}}>Проект:</div>\r\n                                       <div>\r\n                                               <select\r\n                                                   className='ModalInputUpdateSelect'\r\n                                                   onChange={(e) => handleClickFilter('project', e.target.value)}\r\n\r\n                                               >\r\n                                                   {projectIds.map((projectId, id) => (\r\n                                                       <option\r\n                                                           key={id}\r\n                                                           value={projectId}\r\n                                                       >\r\n                                                           {projectId}\r\n                                                       </option>\r\n                                                   ))}\r\n\r\n                                               </select>\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                    <div>\r\n                                        {company.map((company, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className='filtersButton'\r\n                                                onClick={() => handleClickFilter('company', company.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.company.includes(company.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.company.includes(company.name) ? 'gray' : '#1775ee',\r\n                                                    opacity: activeFilters.company.includes(company.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {company.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div>\r\n                                        {status.map((status, id) => (\r\n                                            <button\r\n                                                key={id}\r\n                                                className={'filtersButton' + getColorByStatusId(status.id)}\r\n                                                onClick={() => handleClickFilter('status', status.name)}\r\n                                                style={{\r\n                                                    boxShadow: activeFilters.status.includes(status.name) ? \"0 0 1px rgba(0,0,0,.5) inset, 0 2px 3px rgba(0,0,0,.5) inset, 0 1px 1px rgba(255,255,255,.1)\" : \"\",\r\n                                                    background: activeFilters.status.includes(status.name) ? 'gray' : '',\r\n                                                    opacity: activeFilters.status.includes(status.name) ? '1' : ''\r\n                                                }}\r\n                                            >\r\n                                                {status.name}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                filteredVacancies.map(vac => (\r\n                                    <div className='VacationsContainer' key={vac.id}>\r\n                                        <VacanciesItem vac={vac} key={vac.department} status={status}\r\n                                                       department={vac.department} vacancies={vac.vacancies}/>\r\n                                    </div>\r\n                                ))\r\n\r\n                            }\r\n\r\n\r\n                            {/*                               {\r\n                                   filteredData.map(vac => (\r\n                                        <div className='VacationsContainer' key={vac.id}>\r\n                                            <VacanciesItem vac={vac} key={vac.department} status={status} department={vac.department} vacancies={vac.vacancies}/>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                }*/}\r\n                        </>\r\n                    )}\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacanciesView","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Role from './Role.css'\r\nfunction Roles() {\r\n    const [roles, setRoles] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [searchTermUsers, setSearchTermUsers] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const resRoles = await axios.get('/api/roles/');\r\n                const rolesData = resRoles.data[0].get_roles;\r\n                setRoles(rolesData);\r\n\r\n                const resUsers = await axios.get('/api/user/');\r\n                setUsers(resUsers.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleInputChangeUsers = (e) => {\r\n        const termCities = e.target.value;\r\n\r\n        if(termCities.length===0){\r\n            setUserId('')\r\n        }\r\n        setSearchTermUsers(termCities);\r\n\r\n        if (termCities === '') {\r\n            setFilteredUsers([]);\r\n            return;\r\n        }\r\n\r\n        const filtered = users.filter(user =>\r\n            user.user_name && user.user_name.toLowerCase().includes(termCities.toLowerCase())\r\n        );\r\n        setFilteredUsers(filtered);\r\n    };\r\n\r\n    const handleUserClickCities = (user_name, id) => {\r\n            setSearchTermUsers(user_name)\r\n            setFilteredUsers([])\r\n            setUserId(id)\r\n    }\r\n\r\n    const addRole = () => {\r\n    setUserId('')\r\n    setSearchTermUsers('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"ReportsButton\">\r\n            <div style={{ display: 'flex', gap: '200px' }}>\r\n                <div className='RoleWrapper'>\r\n                    <label>Имя сотрудника</label>\r\n                    <div className='inputRole'>\r\n                        <input className=\"ModalInputUpdate\" type=\"text\"\r\n                               value={searchTermUsers}\r\n                               onChange={handleInputChangeUsers} />\r\n\r\n                        {filteredUsers.length > 0 && (\r\n                            <div className='divInputRole1'>\r\n                                {filteredUsers.map((user, id) => (\r\n                                    <div className='selectNameDiv' key={id} onClick={() => handleUserClickCities(user.user_name, user.id)}>\r\n                                        {user.user_name}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>Роль</label>\r\n                    <select className=\"ModalInputUpdate\">\r\n                        {roles.map((role, index) => (\r\n                            <option key={index} value={role.id}>\r\n                                {role.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: '30px'}}>\r\n                {userId ?\r\n                    <button onClick={addRole} className=\"AddRole\">\r\n                        Добавить\r\n                    </button>\r\n                    :''\r\n                }\r\n            </div>\r\n            <div>\r\n                <table className=\"skills-table\">\r\n                    <thead>\r\n                    <tr className=\"skills-header\">\r\n                        <th>Имя</th>\r\n                        <th>Роль</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tr className=\"skill-item\">\r\n                        <td>\r\n\r\n                        </td>\r\n                        <td>\r\n                            <select>\r\n                                <option>\r\n\r\n                                </option>\r\n                            </select>\r\n                        </td>\r\n                        <td><button className='SkillButton'>Удалить</button></td>\r\n                    </tr>\r\n                    <tbody>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport Modal from \"../../../Templates/Modal/Modal\";\r\n\r\n\r\n\r\nfunction DictionarySkills({modalDictionarySkills,setModalDictionarySkills}) {\r\n    const handleRole = async () => {\r\n\r\n        setModalDictionarySkills(false)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal active={modalDictionarySkills} setActive={setModalDictionarySkills}>\r\n                <h1>Справочник</h1>\r\n                <hr/>\r\n                <h2>Справочник</h2>\r\n                <button className=\"ModalButtonDelete\" type=\"submit\" onClick={handleRole}>\r\n                    Добавить\r\n                </button>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DictionarySkills;","import './AdminPanel.css'\r\nimport React, { useState } from \"react\";\r\nimport Role from \"./Role/Role\";\r\nimport DictionarySkills from \"./DictionarySkills/DictionarySkills\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function  AdminPanel() {\r\n\r\n    const [modalDictionarySkills, setModalDictionarySkills] = useState(false)\r\n       return (\r\n               <div className=\"content\">\r\n                   <div className=\"main-content\">\r\n                       <div className='adminDiv'>\r\n                           <div className=\"tiles-container\">\r\n                               <div className=\"tile\">\r\n                                   <Link to='/Role' className='linkReports'>Назначить роль</Link>\r\n                               </div>\r\n                               <div className=\"tile\">\r\n                                   <button className='linkReports' onClick={() => setModalDictionarySkills(true)}>Справочник</button>\r\n                                   <DictionarySkills modalDictionarySkills={modalDictionarySkills} setModalDictionarySkills={setModalDictionarySkills}/>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n           </div>\r\n    )\r\n}\r\n","import Topbar from '../Topbar/Topbar';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport './Layout.css'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Layout({children}) {\r\n    const username = useParams().username\r\n\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <div className=\"MainContainers\">\r\n                <Sidebar username={username}/>\r\n                <div className=\"mainContent\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import { useContext, useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect, useParams\n} from \"react-router-dom\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport Error from \"./pages/Error/Error\";\nimport Login from \"./pages/Login/Login\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Register from \"./pages/Register/Register\";\nimport Department from './pages/Department/Department';\nimport Information from \"./pages/Information/Information\";\nimport Reports from \"./pages/Reports/Reports\";\nimport ReportsNominations from \"./pages/ReportsNominations/ReportsNominations\";\nimport ReportsHistory from \"./pages/ReportsHistory/ReportsHistory\";\nimport Message from \"./components/MessagePost/MessagePost\";\nimport VacanciesView from \"./components/VacanciesView/VacanciesView\"\nimport VacanciesAdd from \"./components/VacanciesAdd/VacanciesAdd\"\nimport AdminPanel from './components/ProfileInfo/AdminPanel/AdminPanel'\nimport Layout from \"./components/Layout/Layout\";\nimport axios from \"axios\";\nimport Role from \"./components/ProfileInfo/AdminPanel/Role/Role\";\n\n\n\nfunction App() {\n  const [users, setUser] = useState([])\n\n  const userStorage = JSON.parse(localStorage.getItem('user'))\n  useEffect(() => {\n    const fetchUserName = async () => {\n      if(userStorage!==null) {\n        const res = await axios.get('/api/user/' + userStorage._id)\n        setUser(res.data)\n      }\n    }\n\n\n    fetchUserName()\n  },[])\n\n\n\n  const {user} = useContext(AuthContext)\n  const authUser = user || userStorage\n\n\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {authUser ? <Redirect to={`/department/${authUser.main_department}`} /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/login\">\n            {authUser ? <Redirect to={`/department/${authUser.main_department}`} /> : <Login />}\n          </Route>\n          <Route path=\"/register\">\n            {authUser ? <Redirect to=\"/\" /> : <Register />}\n          </Route>\n\n\n            <Route path=\"/profile/:username\">\n              {authUser ? <Layout><Profile authUser={authUser} /></Layout>: <Login />}\n            </Route>\n            <Route path=\"/department/:username\">\n              {authUser ? <Layout><Department /></Layout> : <Login />}\n            </Route>\n            <Route path=\"/all_users\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/not_working_today\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/not_worked_yesterday\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/sick_today\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/sick_yesterday\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/vacation_today\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> :<Error />}\n            </Route>\n            <Route path=\"/vacation_yesterday\">\n              {authUser && userStorage.isAdmin ? <Layout><Department /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/vacanciesview\">\n              {authUser && userStorage.isAdmin ? <Layout><VacanciesView /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/adminpanel\">\n              {authUser && userStorage.isAdmin ? <Layout><AdminPanel /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/reports\">\n              {authUser && userStorage.isAdmin  ? <Layout><Reports /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/information\">\n              {authUser ? <Layout><Information /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/reportsnominations\">\n              {authUser && userStorage.isAdmin ? <Layout><ReportsNominations /></Layout> : <Error />}\n            </Route>\n            <Route path=\"/reportshistory\">\n              {authUser && userStorage.isAdmin ? <Layout><ReportsHistory /></Layout> : <Error />}\n            </Route>\n          <Route path=\"/vacanciesadd\">\n            {authUser && userStorage.isAdmin ? <Layout><VacanciesAdd /></Layout> : <Error />}\n          </Route>\n          <Route path=\"/role\">\n            {authUser && userStorage.isAdmin ? <Layout><Role /></Layout> : <Error />}\n          </Route>\n          <Route path=\"*\">\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/stable';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/ie9'\nimport 'core-js/stable';\nimport  'react-app-polyfill/ie11' ;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {AuthContextProvider} from './context/AuthContext'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}